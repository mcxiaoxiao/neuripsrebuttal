nohup: ignoring input
Question:How many car models are produced by each maker? List the count and the maker full name.
Question:Non
Question:Which models are the most popular?
Question:Non
Question:Which companies have three or more models?
Question:Non
Question:please list the singers | did you mean list their names? | yes
Question:Non
Question:can you also  give number of concerts for each singer
Question:Non
Question:Hi!  Can you tell me how many unique template IDs there are?
Question:Non
Question:How many of those 12 template IDs are used by more than one document?
Question:Non
Question:Great!  Can you show me the corresponding document that used each of those template IDs on the list you just provided me?
Question:Non
Question:Find the first name of the students who permanently live in the country Haiti.
Question:Non
Question:Please also find the first name of the students who have the cell phone number 09700166582
Question:Non
Question:Can you show me the last name and address for him? | Do you want his current address or the permanent address? | current address please
Question:Non
Question:Ok. Can you also give me his email address?
Question:Non
Question:what is the name of the stadium that does not have a concert in year 2014?
Question:Non
Question:what is the capacity of Balmoor?
Question:Non
Question:what is the theme of Balmoor?
Question:Non
Question:how many female dogs have gone through treatment
Question:Non
Question:what are their ages
Question:Non
Question:what is the highest weight of age 2
Question:Non
Question:How many teachers are there?
Question:Non
Question:How many courses do you have?
Question:Non
Question:Can you tell me the names of teachers and the number of courses they teach?
Question:Non
Question:Sure. Can you tell me the age of each teacher?
Question:Non
Question:What is the Latin commander of Battle of Serres?
Question:Non
Question:What is the result of 31st January 1206?
Question:Non
Question:Who is the Bulgarian commander on June 1205?
Question:Non
Question:What is the name of battle who has Latin commander is Baldwin 1?
Question:Non
Question:how many TV Channels there
Question:Non
Question:what is the language of sky music
Question:Non
Question:what is the title of id 2.0
Question:Non
Question:what is the highest horsepower on the table?
Question:Non
Question:how many cars data on the table?
Question:Non
Question:how many cylinders on the table?
Question:Non
Question:Which district has the largest number of products?
Question:Non
Question:What is the manager's name of that shop?
Question:Non
Question:How many products did he produce at that shop?
Question:Non
Question:Where is the location of that district?
Question:Non
Question:What is the shop ID number?
Question:Non
Question:I want to know the average population of all cities please
Question:Non
Question:And which districts have cities with populations greater than the average?
Question:Non
Question:Within these districts, how many cities does each have with a population greater than the average?
Question:Non
Question:Can you list all nations whose government is US territory?
Question:Non
Question:Hmm, I also want to know their GNP and population.
Question:Non
Question:Please find out the average GNP and total population of those nations.
Question:Non
Question:give me the total surface area of the continent
 Asia
Question:Non
Question:what is the local name | Did you mean to ask for all local names? | yes
Question:Non
Question:What is Aruba's code?
Question:Non
Question:How many shops do we have data for?
Question:Non
Question:Can you give me their names?
Question:Non
Question:And how many employees were hired by each shop?
Question:Non
Question:what are the singers name on this list?
Question:Non
Question:Joe Sharp song "You" was released in what year?
Question:Non
Question:how many number of concert has Joe Sharp held?
Question:Non
Question:ok. what country is Joe sharp from?
Question:Non
Question:Can you list all the continents?
Question:Non
Question:Okay, now can you list the number of countries belonging to each continent, including the continent id as well?
Question:Non
Question:which models are lighter than 3500?
Question:Non
Question:what is the weight of  BMW?
Question:Non
Question:what is the name of the id 2? | Are you asking about the car or the carmaker? | carmaker?
Question:Non
Question:Hi. How many countries are listed in total?
Question:Non
Question:Of the 239 countries, how many different forms of government are there among them?
Question:Non
Question:What are the 35 different forms of government from the 239 countries listed?
Question:Non
Question:Of the 239 countries, how many of them have a Republic government form?
Question:Non
Question:What are the names of the 122 countries that have a Republic government form?
Question:Non
Question:Since Latvia is a country with a Republic government form, which languages are spoken there?
Question:Non
Question:how many airline's there
Question:Non
Question:what is the name of the usa airline | What did you mean by "the name of the USA airline?" | united sates of america
Question:Non
Question:what is the abbreviation of us airways
Question:Non
Question:how many  singer there
Question:Non
Question:what is the Citizenship of Alice Walton
Question:Non
Question:how many sales from song id 3
Question:Non
Question:delta airline is from which country?
Question:Non
Question:what is the destination airport of flight no 44?
Question:Non
Question:which airline has most number of flights?
Question:Non
Question:How many courses in this table? | Do you mean the number of the courses with different course ids? | Yes.
Question:Non
Question:What's the name of the course with least number of students of enrollments?
Question:Non
Question:how many concert are presented on the table
Question:Non
Question:show the stadium name and the number of concerts in each stadium
Question:Non
Question:what is the capacity of Stark's Park
Question:Non
Question:list out the concert names
Question:Non
Question:How many different treatments are there?
Question:Non
Question:which one is the most expensive?
Question:Non
Question:And how about the price of the most recent treatment?
Question:Non
Question:Find all airlines that have fewer than 200 flights.
Question:Non
Question:what country is their destination of the first three?
Question:Non
Question:Hello!  Which nationalities are shared by more than one person?
Question:Non
Question:Okay.  Thanks for that!  Can you show me all of the people IDs that have Russia as the nationality?
Question:Non
Question:Excellent!  Can you  update this list to show the names of all of the associated individuals?
Question:Non
Question:What's the average age of all losers of all matches?
Question:Non
Question:What's the average age of all winners of all matches?
Question:Non
Question:What are the average minutes of all matches?
Question:Non
Question:What was the longest match in minutes?
Question:Non
Question:What was the shortest match in minutes?
Question:Non
Question:how many flights are landing in the city of aberdeen or abilene
Question:Non
Question:what are the name of the museums?
Question:Non
Question:Which titles were directed by Ben Jones or Brandon Vietti?
Question:Non
Question:What are their original air dates?
Question:Non
Question:Who are the writers of these cartoons?
Question:Non
Question:Can I get all the documents with 'w' in them | Do you want documents with 'w' in the name or description? | Description pls
Question:Non
Question:Ok can I get just their names
Question:Non
Question:I need the template ids too oops
Question:Non
Question:What is the average age of the losers from all matches?
Question:Non
Question:What about the average age of the winners from all matches?
Question:Non
Question:How many winners are left handed?
Question:Non
Question:What are the names of the winner and loser from the longest match?
Question:Non
Question:Show me all the dogs | do you want to show all the attributes of the dogs? | just show me the names of the dogs
Question:Non
Question:Nice! Tell me which of these dogs are the rarest breed
Question:Non
Question:What are the genders of these dogs?
Question:Non
Question:Ok sure. Tell me who treated these dogs | Sorry, could you specify your question, There are all attributes of the dog treatments, which one do you want to show? | Alright! just show me the treatment dates of these dogs
Question:Non
Question:How many students have a cat pet?
Question:Non
Question:And what about students that don't have a cat pet?
Question:Non
Question:And what are their ids?
Question:Non
Question:What is the name of the visitor who visited both a museum opened before 2009 and a museum opened after 2011?
Question:Non
Question:What museum did he visit before 2009?
Question:Non
Question:What is Fernando Gago's membership level?
Question:Non
Question:How old is Fernando Gago?
Question:Non
Question:what is the source airport for United Airlines?
Question:Non
Question:What are the flight numbers for United Airlines?
Question:Non
Question:Where is flight 28 going to?
Question:Non
Question:What about flight 29?
Question:Non
Question:hi, what are the names of the players?
Question:Non
Question:* I have left the chat *
Question:Non
Question:How many United Airlines flights go to the city called Aberdeen?
Question:Non
Question:What other cities does United Airlines go to?
Question:Non
Question:Show the name of the teacher for the math course please?
Question:Non
Question:What grades do they teach? | The   grades  of courses that the teachers for the math teach are 1 and 3 | What dates do those courses start?
Question:Non
Question:What is the birth date of the poker player with the lowest earnings?
Question:Non
Question:What is the name of the poker player with the lowest earnings?
Question:Non
Question:What is the nationality of the poker player with the lowest earnings?
Question:Non
Question:how many poker players are on the table
Question:Non
Question:how many have height higher than 200
Question:Non
Question:what is the average earnings of poker players with height higher than 200
Question:Non
Question:Can you show me a list of all of the students IDs for students who have dogs as their pet type?
Question:Non
Question:Which of those two students have a cat as their pet in addition also having a dog?
Question:Non
Question:Thanks! Can you please list the first name and ages of the two students who have dogs as pets?
Question:Non
Question:how many country there
Question:Non
Question:what is the Country Code of Herat | Do you mean the country code of city Herat? | yes sir
Question:Non
Question:what is the Population of Qandahar
Question:Non
Question:find id of the tv channels that are from countries with more than two tv channels
Question:Non
Question:What is the package option for that channel?
Question:Non
Question:List all series names in alphabetical order
Question:Non
Question:Hello, how many dogs have gone through treatments?
Question:Non
Question:What is the age of the youngest dog to go through treatment?
Question:Non
Question:What about the oldest?
Question:Non
Question:How about the average age?
Question:Non
Question:LIST THE NATIONS WHICH DO NOT USE ENGLISH
Question:Non
Question:WHAT IS THE POPULATION OF THE PEOPLE LIVING IN THE NATIONS NOT USING ENGLISH | did you mean you want the Population of the country  DO NOT USE ENGLISH | YES, THE TOTAL NUMBER OF PEOPLE LIVING IN THE NATIONS THAT DO NOT USE ENGLISH
Question:Non
Question:What is the weight of make id 1? | Did you mean to ask for the weight of the car with make id 1? | Yes
Question:Non
Question:Which year launch the car model  buick? | Did you want to ask for the year on which the car model buick was launched? | Yes
Question:Non
Question:Find the horsepower of model plymouth.
Question:Non
Question:For the cars with 4 cylinders, which model has the largest horspower?
Question:Non
Question:How many different cars on this list were produced in 1974?
Question:Non
Question:Can you list just the car IDs produced in 1974 with 8 cylinders?
Question:Non
Question:I'd like to see Shop names.
Question:Non
Question:Which of these are hiring?
Question:Non
Question:Which shop is hiring the highest number of employees? | do you want the name of the shop ? | Yes
Question:Non
Question:how many singers are on the table?
Question:Non
Question:how many singers have songs with sales more than 300000?
Question:Non
Question:show distinct names of singers that have songs with sales more than 300000
Question:Non
Question:who all are the contest | Did you mean  to ask for the names of all contestants? | yes.
Question:Non
Question:can you send the total contestant number?
Question:Non
Question:who is the first contestant? | Did you mean to ask for the name of the contestant with contestant number 1? | yes can tell me?
Question:Non
Question:who is the 2 contestant?
Question:Non
Question:hi, list out all airport name
Question:Non
Question:show me the total no of flight number
Question:Non
Question:how many country name are there
Question:Non
Question:How many dog breeds are there?
Question:Non
Question:What is the biggest of those dog breeds?
Question:Non
Question:How big is the bulldog?
Question:Non
Question:What is the name of the breed with the most dogs?
Question:Non
Question:List the name of the conductor with the most years of work.
Question:Non
Question:How many years did Robert Craft work?
Question:Non
Question:List the name of the conductor with the least years of work
Question:Non
Question:which professional has done  the most treatments?
Question:Non
Question:what about the least treatments?
Question:Non
Question:How many professionals have at most 3 treatments?
Question:Non
Question:The given codes of country is not speak in English please tell | Did you mean the codes of countries that do not speak English? | Thanks! Which countries do not speak English please tell country names
Question:Non
Question:Thanks! Whose government forms Republic | Did you want the names of countries that do not speak English and whose government forms are not Republic? | Thanks! yes
Question:Non
Question:Can you tell me what the total number of votes are for the states of "NY" and "CA"?
Question:Non
Question:Thank you!  Can you provide me with a list of all of the different contestant numbers?
Question:Non
Question:Okay.  How many vote IDs correspond to contestant number 5?
Question:Non
Question:List all the nationalities in the table with no duplicate records
Question:Non
Question:List all the nationalities in the table
Question:Non
Question:Count the number of records where nationality is Russia
Question:Non
Question:Count the number of records where nationality is Bulgaria
Question:Non
Question:list the makers who designed more than 3 car models
Question:Non
Question:what is the id of these makers
Question:Non
Question:make a list so that the full name and id of the makers who designed more than 3 car models appear in the same table
Question:Non
Question:What is the average horsepower?
Question:Non
Question:Which car has the largest horsepower?
Question:Non
Question:What is the accelerate of car 39?
Question:Non
Question:Which cars have an accelerate larger than 19.0?
Question:Non
Question:When was the Auditions concert?
Question:Non
Question:When was the Super bootcamp concert?
Question:Non
Question:When was the Home Visits concert?
Question:Non
Question:How many concerts were there total in 2014 or 2015?
Question:Non
Question:And how many concerts were there just in 2014?
Question:Non
Question:And how many were there in 2015?
Question:Non
Question:what are the names of the tourneys?
Question:Non
Question:How many graduates of the school are there?
Question:Non
Question:Ok. Who graduated the earliest? | What attributes of this student who graduated the earliest would you like to know? | Please tell me the first name, middle name, and last name.
Question:Non
Question:Can you show the SourceAirport FlightNo 28?
Question:Non
Question:Can you show the City of Airportcode APG?
Question:Non
Question:Can Show the names of airports which do not have any flight in and out?
Question:Non
Question:when is the first transcript released?
Question:Non
Question:Find the names of the 3 youngest winners across all matches
Question:Non
Question:What are points of the 3 youngest winners?
Question:Non
Question:Give me the age of the 3 youngest winners across all matches
Question:Non
Question:How many friends in this table?
Question:Non
Question:Find average grade of the students? | Do you want me to find the average grade of entries in the Highschooler table? | Yes?
Question:Non
Question:Show names of all high school students?
Question:Non
Question:How many poker players are there ?
Question:Non
Question:How many of them earning more than 300000
Question:Non
Question:May i get the name detail of both players
Question:Non
Question:How many museums do you have?
Question:Non
Question:What is the number of staff members in each museum?
Question:Non
Question:Can you tell me the id and the name of the museum, which has the most staff members?
Question:Non
Question:Hello!  Can you tell me how many students in total there are on this list?
Question:Non
Question:Excellent!  Can you show me a list of all 15 students and list their first names, middle names, and last names?
Question:Non
Question:Thanks!  Can you update this list to include the "date first registered" information associated with each student?
Question:Non
Question:How many students are there?
Question:Non
Question:How old is the student whose last name is 'Smith’?
Question:Non
Question:Can you plsease include their pets' id too?
Question:Non
Question:Hello!  Can you show me a list of all of the student IDs for students who have pets?
Question:Non
Question:Great!  Can you show me the name (first and last), major and age of those two students?
Question:Non
Question:Great!  Now can you filter this list to show me which student(s) have a pet other than a cat?
Question:Non
Question:how many dogs on the table
Question:Non
Question:what is the age of Kacey
Question:Non
Question:which dog is highest weight on table | Do you want the name of the dog with the highest weight? | exactly
Question:Non
Question:what is the size code of BUL | Did you mean the  size codes of dogs with a breed code BUL? | exactly
Question:Non
Question:What are the names of the nations with the 3 lowest populations?
Question:Non
Question:Which nation has the largest surface area?
Question:Non
Question:What is the total population of Antarctica?
Question:Non
Question:what is the average of friend id?
Question:Non
Question:what is the average of grades?
Question:Non
Question:what is the highest grade?
Question:Non
Question:how many students are enrolled in a bachelor degree program?
Question:Non
Question:what are their student IDs?
Question:Non
Question:Who are the students with student id 9?
Question:Non
Question:what about id 7?
Question:Non
Question:what are the degrees of the students in the bachelor program?
Question:Non
Question:what are the different degree descriptions available?
Question:Non
Question:what were the student ids in the bachelor program again?
Question:Non
Question:what are those students first name, middle name, and last names?
Question:Non
Question:How many makes are there for Chevrolet?
Question:Non
Question:How many models are in the list?
Question:Non
Question:Can you tell me which model has the most makes of cars?
Question:Non
Question:Can you show me the names of teachers with the course id for the courses they teach?
Question:Non
Question:Show me the teacher id with the number of courses they teach.
Question:Non
Question:I want to know the names of the teachers below age 30.
Question:Non
Question:When are the auditions? | Would you like to know the dates of all performances with the type audition? | Yes that's exactly it
Question:Non
Question:Can you show the birth date of player id 200002?
Question:Non
Question:What is the first name of player id 200001?
Question:Non
Question:Can you show the codes of countries that have more than 50 players?
Question:Non
Question:which region is the city kabul located
Question:Non
Question:which region is the city herat located
Question:Non
Question:which region is the city quandahar
Question:Non
Question:What year has the most number of matches, please?
Question:Non
Question:What year has the least number of matches, please?
Question:Non
Question:How many matches were there that year?
Question:Non
Question:What about in 2016?
Question:Non
Question:How many of those were played on a hard surface?
Question:Non
Question:How many models does each car maker make? | Here is the result table of the full name of car makers and the number of models they made. For example, the car maker "American Motor Company" made 1 model. | What are all the ids of car makers?
Question:Non
Question:And what is their country ids?
Question:Non
Question:What is the average percent?
Question:Non
Question:Which code of country has the highest dutch speaking population?
Question:Non
Question:The difference of the overall percent | Do you mean average percent? | yes
Question:Non
Question:What is the membership level of Gonzalo Higuaín ?
Question:Non
Question:whose membership level is 5?
Question:Non
Question:how many numbers of persons whose membership level is greater than 5?
Question:Non
Question:What is the age of membership level 8?
Question:Non
Question:how many persons who have membership level greater than 4?
Question:Non
Question:please sort the names of persons whose age from old to young according to the membership level?
Question:Non
Question:Which country speaks the largest number of languages?
Question:Non
Question:How many languages are spoken in Canada?
Question:Non
Question:What are the names of those languages?
Question:Non
Question:How many countries is Chinese spoken in?
Question:Non
Question:Which countries are in North America?
Question:Non
Question:What are the official languages of these countries?
Question:Non
Question:What is the life expectancy in Canada?
Question:Non
Question:How many students have more than one pet?
Question:Non
Question:What are their names?
Question:Non
Question:What gender is Kim Tracy?
Question:Non
Question:HOw many regions are there in ASia?
Question:Non
Question:What about in Europe?
Question:Non
Question:What is the surface area of all 10 of them?
Question:Non
Question:Hello!  How many template IDs have the description of "Presentation"?
Question:Non
Question:Thank you!  Can you please provide me with the list of the template ids with the template type description of "Presentation"?
Question:Non
Question:Can you provide me with the template type code for these three Temple ids?
Question:Non
Question:How many times at most can a course enrollment result show in different transcripts?
Question:Non
Question:What are the course enrollment ids for those, please?
Question:Non
Question:What is the least number of times of a course enrollment result shows in different transcripts?
Question:Non
Question:What are the course enrollment ids for those, please?
Question:Non
Question:What is the average student course id?
Question:Non
Question:What are the names of the properties with more that one room?
Question:Non
Question:What are the names of the properties that are either houses or apartments with more than one room?
Question:Non
Question:How many rooms do each of those have?
Question:Non
Question:What is the average agreed selling price of all houses with more than one room?
Question:Non
Question:How many airports are there?
Question:Non
Question:How many have departing flights?
Question:Non
Question:How many will arrive in ASY?
Question:Non
Question:Of those flights, how many come from APG and ABR?
Question:Non
Question:how many car makers are their in germany
Question:Non
Question:what are their names
Question:Non
Question:how many cars are their in usa | do you mean car makers? | yes
Question:Non
Question:what are their names
Question:Non
Question:Can you show the names of owners and the states they live in? | Do you want the first and last names of owners and the states they live in? | Yes please.
Question:Non
Question:Hmm, I want to know the first and last names of owners and also their emails.
Question:Non
Question:Can you list the first and last name with emails of owners living in the state whose name contains the substring "North"?
Question:Non
Question:Which cities do more than one employee under age 30 come from?
Question:Non
Question:Which cities do more than one employee over age 30 come from?
Question:Non
Question:What are the names and ages of all employees over age 30?
Question:Non
Question:What are the names and ages of all employees under age 30?
Question:Non
Question:What cities are all employees under age 29 from?
Question:Non
Question:How many dog owner's are there?
Question:Non
Question:What is the age of the youngest dog?
Question:Non
Question:What is the name of the dog who is 1 year old?
Question:Non
Question:Of the 15 owners, what is the name of the owner who owns Evangeline?
Question:Non
Question:Can you list all the singer ids that aren't present in the song table?
Question:Non
Question:What are the names of the singers who were born in either 1948 or 1949?
Question:Non
Question:What is their citizenship?
Question:Non
Question:Of the singers that were born in 1948 or 1949, which had the highest net worth?
Question:Non
Question:Did she have a net worth that was over 30 million?
Question:Non
Question:What was the lowest net worth of any singer who was born between 1948 and 1949?
Question:Non
Question:How many battles did not lose any ship with tonnage 225?
Question:Non
Question:How many battles did lose a ship with tonnage 225?
Question:Non
Question:How many ships have a tonnage of 225?
Question:Non
Question:Who won in the battle when the ship with a tonnage of 225 was sunk?
Question:Non
Question:tell me the FullName of the maker amc
Question:Non
Question:Tell me CountryName for Countryid  1, 2, and 3.
Question:Non
Question:Tell me the model id made by amc...
Question:Non
Question:What are the id and names of the countries which have more than 3 car makers or produce the 'fiat' model ?
Question:Non
Question:What is the money rank of the poker player with the highest earnings?
Question:Non
Question:What is the highest earner's people ID?
Question:Non
Question:What was their best finish?
Question:Non
Question:And what is the highest earning?
Question:Non
Question:How many orchestras are there?
Question:Non
Question:How many of them are there have no performance? | Did you mean to ask for the number of orchestras that have no performance? | Yes
Question:Non
Question:Can you show me its id and its name please?
Question:Non
Question:Find the name and location of the stadiums which some concerts happened in the years of both 2014 and 2015.
Question:Non
Question:Which year did the concert Super bootcamp happen in?
Question:Non
Question:And the concert named Auditions?
Question:Non
Question:What stadium did it happen in?
Question:Non
Question:What are the names and locations of stadiums which had some concerts in either 2014 or 2015?
Question:Non
Question:how many flights does United Airlines operate in USA? | What do you mean by operate in USA? | how many flights does United Airlines have?
Question:Non
Question:and how many destination airports do these flights have?
Question:Non
Question:how many of those flights go to airport "ASY"?
Question:Non
Question:what are the degree_program_id in the Table Name: Student_Enrolment?
Question:Non
Question:what are the semester_id in the Table Name: Student_Enrolment?
Question:Non
Question:what are the semester_name in the Table Name: Semesters?
Question:Non
Question:what is the semester which most student registered in? show both the name and the id.
Question:Non
Question:What is the average life expectancy for each government form?
Question:Non
Question:Can you show me only those government forms whose average life expectancy is greater than 72?
Question:Non
Question:What is the population of each of those?
Question:Non
Question:Which TV channels do not play any cartoons by Ben Jones?  List the ids.
Question:Non
Question:And which channels play Ben Jones's cartoons?
Question:Non
Question:What cartoon titles do channels play?
Question:Non
Question:Can you show me document ids?
Question:Non
Question:Can you show the number of paragraphs in each document?
Question:Non
Question:Can you order it by document id?
Question:Non
Question:Can you show me a list of owner ids and zip codes? | can  you  give more infor  about  this question? | I want you to extract just the owner ids and zip codes from the table. Does it make sense?
Question:Non
Question:Hmm, can you put the owner ids, dog ids and the cost of treatment in a table?
Question:Non
Question:Which owner name and id has paid the largest amount of money in total for their dogs? | Did  you mean  the  full name? | Just the first name will be fine.
Question:Non
Question:To make sure, can you also show me the last name of Jaclyn?
Question:Non
Question:As a last thing, can you also tell me the owner id and zip code of Jaclyn Stoltenberg, who has paid the largest amount of money in total for their dogs?
Question:Non
Question:Howdy!  Can you show me a list of all flight numbers?
Question:Non
Question:Excellent!  Can you update this list to include a column with the destination airport code for each of these?
Question:Non
Question:Nice!  Can you tell the quantity of flights that had Aberdeen or Abilene as their destination cities?
Question:Non
Question:Okay!  Can you tell me the airport city that has the most flights landing in it?
Question:Non
Question:How many flights are arriving in the city called Aberdeen?
Question:Non
Question:How many flights are there departing Aberdeen?
Question:Non
Question:WHAT ARE THE AFRICAN COUNTRIES THAT HAVE POPULATION LESS THAN ANY COUNTRY IN ASIA
Question:Non
Question:FROM WHICH CONTINENT IS ARUBA
Question:Non
Question:WHAT IS THE LOCAL NAME OF ANGOLA
Question:Non
Question:SURFACE AREA  OF AFGHANISTAN
Question:Non
Question:WHAT IS THE CODE OF ARUBA
Question:Non
Question:kindly give me the names that might be used for professionals or owners but cannot be use for dog names
Question:Non
Question:What email can i use to contact Taryn | Would you like the email address of professionals with name Taryn? | Yes
Question:Non
Question:In what state can i find Jayson
Question:Non
Question:What are the names of the makers who produced some cars in the year 1970?
Question:Non
Question:What are the models and makes of the cars produced that year?
Question:Non
Question:What is the full name of the maker that produced the heaviest car in the year 1970?
Question:Non
Question:List the cartoons that are directed by Ben Jones. | Here are the titles of cartoons that are directed by Ben Jones | List all tv channels with their id's.....
Question:Non
Question:Is there any other tv channel other than italian language ?
Question:Non
Question:Find the id of tv channels that do not play any cartoon directed by Ben Jones.
Question:Non
Question:What is the average number of products of all stores?
Question:Non
Question:what are the names of stores whose number of products is bigger than 6685?
Question:Non
Question:how many stores in total?
Question:Non
Question:How many flights in this table?
Question:Non
Question:Which city has least number of departing flights?
Question:Non
Question:Find the flight number of APG?
Question:Non
Question:Find the airport names of DYS?
Question:Non
Question:Fin the city of ABR?
Question:Non
Question:What are the countries where either English or Dutch is the official language?
Question:Non
Question:What is the official language in Belgium?
Question:Non
Question:What are the countries where arabic language is spoken
Question:Non
Question:Please tell me all the languages spoken in Egypt.
Question:Non
Question:Can you tell me the number of countries where Arabic is the official language.
Question:Non
Question:Can you please give me the names of these countries?
Question:Non
Question:What are the populations of every country in Africa?
Question:Non
Question:What are the names and populations of every country in Asia?
Question:Non
Question:What are the names of the Asian countries that have a larger population than that of any country in Africa?
Question:Non
Question:What are the populations of those countries?
Question:Non
Question:What are the government forms of those countries?
Question:Non
Question:What is the name of the country with the shortest life expectancy in Asia?
Question:Non
Question:And in Africa? | Do you mean among country in Africa, or among the country in Africa and in Asia. | Among country in Africa
Question:Non
Question:What is the GNP of Afghanistan?
Question:Non
Question:What is the population of Afghanistan?
Question:Non
Question:How much did the winning poker player make?
Question:Non
Question:Can you rank the poker players earnings from highest to lowest?
Question:Non
Question:How many final tables did the poker player with the least amount of earnings make?
Question:Non
Question:What about the poker player with the most earnings how many final table did they make?
Question:Non
Question:Hello there!  Can you please list all the template IDs and which document IDs they are associated with?
Question:Non
Question:Thanks!  Unfortunately, I am seeing only the Template_IDs.  Can you update the list to show the document IDs as well?
Question:Non
Question:Alright!  Can you show me a list of the Template_IDs for each template that is not associated with a Document_ID?
Question:Non
Question:Nice!  Finally, can you update that list to show the associated template type code for each of these?
Question:Non
Question:Tell me how many dogs have gone through any treatments.
Question:Non
Question:Tell me how old the youngest is. | Do you mean the youngest among those that have gone through any treatment? | yes
Question:Non
Question:And how old is the oldest that has gone through any treatment?
Question:Non
Question:How about the average age? | Do you mean the average age of those that have gone through any treatment? | yes
Question:Non
Question:Hi there! How many different semesters does this list have? | Do  you  mean  the type of  semester name？ | Yes!  My apologies for being unclear.  How many different semester name types are on this list?
Question:Non
Question:Awesome!  Much appreciated!  Can you filter this list to show just the semester names which do not have any 
student enrolment ids associated, or in other words semesters which do not have any students enrolled?
Question:Non
Question:Thank you!  Can you update this list to show the associated semester IDs and semester descriptions?
Question:Non
Question:How many female students are on the list?
Question:Non
Question:What is the full names of least aged students on the list?
Question:Non
Question:Find the average age of students who do not have any pet?
Question:Non
Question:What is the city code of student id 1003?
Question:Non
Question:Which country tv channels some cartoon written by todd casey?
Question:Non
Question:What is the title of cartoon written by todd casey?
Question:Non
Question:Who directed the cartoon titled enter the outsiders?
Question:Non
Question:HOW MANY LANGUAGE ARE THERE?
Question:Non
Question:WHAT IS THE POPULATION OF Aruba
Question:Non
Question:WHAT IS Afghanistan GNPOld?
Question:Non
Question:What are the codes of countries that have more than 50 players?
Question:Non
Question:What are the codes of countries that have less than 40 players?
Question:Non
Question:What are the player names from the country code AHO? | Do you want first name and last name? | yes
Question:Non
Question:What are their player IDs?
Question:Non
Question:What hand is player id 206449?
Question:Non
Question:How many other players have that?
Question:Non
Question:Can you please show the names of the battles that had no ships lost in the 'English Channel'?
Question:Non
Question:What are the results of those battles?
Question:Non
Question:Who are the Bulgarian commanders of those battles, please?
Question:Non
Question:What were the dates of those battles?
Question:Non
Question:Who were the latin commanders of those battles?
Question:Non
Question:How many stores are there? | Did you mean to ask for the number of shops? | Yes
Question:Non
Question:What is the most products that one shop has?
Question:Non
Question:What about the minimum number or products that one shop has?
Question:Non
Question:which breed is the top ranked?
Question:Non
Question:what is the total count for bulldog?
Question:Non
Question:What are the names of all students who have cat pets? | Linda is the first name of the student who has a cat pet. | What are the first names of all students who have dog pets?
Question:Non
Question:How many students have any type of pet?
Question:Non
Question:What is the age of Linda's pet?
Question:Non
Question:What are the names who have a membership level higher than 4?
Question:Non
Question:And can you add a column showing their age?
Question:Non
Question:And now sort the list by age with oldest first.
Question:Non
Question:OK...what are their customer IDs?
Question:Non
Question:who are the students enrolled in 2 degree programs in one semester? | did you want to return their first, middle and last names? | yes
Question:Non
Question:what are their student_id?
Question:Non
Question:what is student_id 4 email address
Question:Non
Question:what is Timothy Anna Ward's date first registered?
Question:Non
Question:How many dog owners live in Virginia?
Question:Non
Question:What is their name?
Question:Non
Question:And the name of their dog?
Question:Non
Question:What breed of dog is bessie?
Question:Non
Question:And what size dog is she?
Question:Non
Question:How many record companies are there?
Question:Non
Question:How many orchestras are there?
Question:Non
Question:Can you list the orchestras by the date they were founded for me starting with the oldest? | Do you mean listing the names of the orchestras by the date they were founded starting with the oldest? | yes.
Question:Non
Question:What year was the Royal Danish Orchestra founded?
Question:Non
Question:What record company is shared by the most orchestras?
Question:Non
Question:How many 'United Airlines' flights go to the Airport 'ASY'?
Question:Non
Question:What is the airline ID of United Airlines?
Question:Non
Question:How many airlines with airline id 1 go to the destination airport ASY?
Question:Non
Question:How many Volvo cars are there?
Question:Non
Question:Which Volvo car has the least accelerate? | Do you want its car id? | Yes
Question:Non
Question:How many cylinders does that car have?
Question:Non
Question:How many students are there?
Question:Non
Question:What about friends?
Question:Non
Question:What are the names of all the highschoolers who have friends ?
Question:Non
Question:Which semester did bachelor students enroll? List the id.
Question:Non
Question:What is the degree summary description of student with id 14?
Question:Non
Question:Which model saves the most gasoline? That is to say, have the maximum miles per gallon?
Question:Non
Question:Which model has the highest horsepower?
Question:Non
Question:what is the age of George Chuter?
Question:Non
Question:what is the age of lee mears?
Question:Non
Question:find the name of the employee who got the highest one time bonus?
Question:Non
Question:What are the names of non poker players?
Question:Non
Question:What are the names of people who play poker?
Question:Non
Question:how many players are presented on the table
Question:Non
Question:list out the players first name
Question:Non
Question:what is the country code of Mirjana
Question:Non
Question:what is the birth date of Justine
Question:Non
Question:what models are produced by the make General Motors?
Question:Non
Question:what models have a weight greater than 3500
Question:Non
Question:could you list the models from the previous two questions with no duplicates please
Question:Non
Question:can you list the models that weight greater than 3500 or have the maker General Motors, but not both
Question:Non
Question:Which height of Aleksey Ostapenko?
Question:Non
Question:Who the person is born on August 16, 1982?
Question:Non
Question:What are the people id of nationality Russia?
Question:Non
Question:What are the nationalities that are shared by at least two people?
Question:Non
Question:What is the population of Afghanistan?
Question:Non
Question:And for Aruba?
Question:Non
Question:What languages are spoken in Aruba?
Question:Non
Question:Is there an official language for the country? | For which country? Aruba? | Yes.
Question:Non
Question:What about for Afghanistan?
Question:Non
Question:How many other countries speak Dari?
Question:Non
Question:LIST THE DOG NAMES WITH TREATMENT COST
Question:Non
Question:ARRANGE THE COST OF TREATMENT IN DESCENDING ORDER | The result table of the treatment cost is listed in descending order of the cost of treatment. | FIND THE DOG NAMES WHICH COST LESS THAN 1000 FOR TREATMENT
Question:Non
Question:What age of Gonzalo Higuaín?
Question:Non
Question:How many tickets of customer id 5?
Question:Non
Question:How many spent of Arjen Robben?
Question:Non
Question:Find the name and age of the visitor who bought the most tickets at once.
Question:Non
Question:What are the regions that use English, please?
Question:Non
Question:What are the regions that use Dutch, please?
Question:Non
Question:What are the life expectancies of those regions?
Question:Non
Question:What are the names of the 3 youngest winners across all matches?
Question:Non
Question:What are their ranks? | do you want to show their names as well? | yes, please
Question:Non
Question:What is the loser name for each of those matches?
Question:Non
Question:List the names of all the professionals.
Question:Non
Question:List the names of all professionals that live in a city containing the substring West.
Question:Non
Question:List the role of the professional named Taryn. | The role code of the professional with first name Taryn is Employee | List the role, street, city, and state of the professional with first name Taryn.
Question:Non
Question:List the names of all the professionals and their state.
Question:Non
Question:List the names of all professionals with the state Indiana.
Question:Non
Question:How many death events are there?
Question:Non
Question:Which event has the most deaths? | What information do you need? all the information of this event or some specific information, like the note? | Which death event has the highest number killed?
Question:Non
Question:Yes, please list them
Question:Non
Question:What are the death situations caused by the ship with tonnage 't' ?
Question:Non
Question:What are the injury situations caused by the ship with tonnage 't' ?
Question:Non
Question:Tell me the total number of death and injury situations caused by the ship with tonnage 't'..
Question:Non
Question:Can you list the number of car makers on each continent?
Question:Non
Question:What about the number of car makers in the country USA?
Question:Non
Question:How about in the country Germany?
Question:Non
Question:What about France?
Question:Non
Question:What is the total number of countries?
Question:Non
Question:How many cities are there?
Question:Non
Question:Can you tell me the region where the city of Kabul is?
Question:Non
Question:Yes. How many cities are the in the region?
Question:Non
Question:How many documents have template type code BK?
Question:Non
Question:And their names?
Question:Non
Question:How many documents do not have template type code BK?
Question:Non
Question:What are the codes of the countries that do not speak English?
Question:Non
Question:What are the codes of the countries that do not speak English whose government forms are not Republic?
Question:Non
Question:What language do each of those speak, please?
Question:Non
Question:Which of those countries is on the continent North America?
Question:Non
Question:which professionals live in state of indiana? | What information do you want to know about these professionals? | I would like to know all the information about professionals?
Question:Non
Question:ok, I need to know the cell number of taryn
Question:Non
Question:how many templates there
Question:Non
Question:what is the date effective of template id 1
Question:Non
Question:what is the template type code of template id 4
Question:Non
Question:what is the version number of template id 0
Question:Non
Question:Can you tell me which countries a singer above age 40 are from please?
Question:Non
Question:Can you tell me which countries a singer below age 30 are from please?
Question:Non
Question:Can you tell me which countries a singer above age 40 and below age 30 are from please?
Question:Non
Question:WHAT IS THE ACCELERATE OF THE CAR MAKE AMC HORNET SPORTABOUT(SW)
Question:Non
Question:CAN YOU WHICH CAR MODEL IS MOST RECENT RELEASED
Question:Non
Question:what are all of the template ids?
Question:Non
Question:which of those is not used in a document
Question:Non
Question:are those still effective? | Do you mean the effective-to date of those templates? | yes
Question:Non
Question:how many are used in documents? | 12 templates are used in a document. | and how many templates are not used?
Question:Non
Question:what were those IDs again?
Question:Non
Question:show the name and theme for all concerts and the number of singers in each concert.
Question:Non
Question:what year was super bootcamp?
Question:Non
Question:what is the Stadium ID for Super bootcamp?
Question:Non
Question:What is the population in Asian continent?
Question:Non
Question:Which language has 9.5%?
Question:Non
Question:What is the life expectancy rate in Angola?
Question:Non
Question:What is the GNP rate of Aruba? | did you mean the GNP or GNP old? | GNP
Question:Non
Question:What is the GNP old of Afghanistan?
Question:Non
Question:What are the names of the singers whose song release year is greater than the average song release year
Question:Non
Question:What is the average song release year?
Question:Non
Question:List the songs in increasing release years | Do you want the names of the songs ordered by their release year? | Yes I do
Question:Non
Question:List all song names by singers above the average age
Question:Non
Question:Please answer the question.what is the orchestra of conductor? | Do you want all the orchestras of all conductors? | yes
Question:Non
Question:what is the name of all conductors?
Question:Non
Question:What is the age of Colin Davis?
Question:Non
Question:how many students there
Question:Non
Question:what is the first name of student id 3
Question:Non
Question:what is email address of student id 2
Question:Non
Question:how many student enrolment there
Question:Non
Question:What are the templates ever used by any document?
Question:Non
Question:What are the template type descriptions for these templates?
Question:Non
Question:Can I get the distinct template type descriptions for these templates?
Question:Non
Question:Which country has the largest area? | Russian Federation is the name of the country with the largest area. | And what is the population of this country?
Question:Non
Question:Who is it's leader?
Question:Non
Question:Yes, on which continent is this country located?
Question:Non
Question:Name players whose earnings are more than 300000. | Do you mean the names of the poker players whose earnings is more than 300000? | yes names
Question:Non
Question:how many poker players?
Question:Non
Question:how many students live in North Carolina?
Question:Non
Question:What are their first and last names?
Question:Non
Question:Which of those do not have degree program id?
Question:Non
Question:What are all the area codes?
Question:Non
Question:What area codes voted for the contestant 'Tabatha Gehling'?
Question:Non
Question:What area codes voted for the contestant 'Kelly Clauss'?
Question:Non
Question:What area codes voted for both the contestant 'Kelly Clauss' and 'Tabatha Gehling'?
Question:Non
Question:how many shop are presented on the table
Question:Non
Question:list out the shop names
Question:Non
Question:what is the location of FC Haka
Question:Non
Question:what is the number of products in HJK
Question:Non
Question:Hello!  Can you list all of the deparatment names and department IDs?
Question:Non
Question:Cool!  Can you show me all of the degree summary names associated with this department?
Question:Non
Question:What are the ids of the professionals?
Question:Non
Question:What is the role of each of the professionals?
Question:Non
Question:Could I please have their email address and which of them did not perform any operate any treatment on dogs.
Question:Non
Question:Can you tell me the ID of the american motor company ?
Question:Non
Question:Can you tell me the model id of the maker amc ?
Question:Non
Question:Who is maker for the ID number 2 ? | Did you mean Id or ModelId? | I mean id
Question:Non
Question:How many car models were produced by the maker with the full name American Motor Company ?
Question:Non
Question:list the name of the teachers and the courses assigned for them to teach
Question:Non
Question:arrange this list with the teachers name in ascending order
Question:Non
Question:include teachers id in tha same list
Question:Non
Question:can you show countries name?
Question:Non
Question:what is the countries government form?
Question:Non
Question:can you show me the countries' surface area?
Question:Non
Question:IN WHAT LANGUAGE SKY MUSIC AVAILABLE?
Question:Non
Question:WHAT IS THE PACKAGE OPTION OF ALL CHANNELS?
Question:Non
Question:what is the content of all the channels?
Question:Non
Question:Can you please tell me the language used on the least number of TV Channels?
Question:Non
Question:What language is used on the most number of TV channels?
Question:Non
Question:What is the most common content of those TV channels?
Question:Non
Question:What is the least common content?
Question:Non
Question:Can you please tell me the series name of those TV Channels?
Question:Non
Question:Which first names are used for professionals or owners?
Question:Non
Question:Which first names are used for professionals or owners, but are not used as dog names?
Question:Non
Question:Which first names are used for professionals or owners, and are used as dog names?
Question:Non
Question:Can you tell me the last names of students who have pets?
Question:Non
Question:Hmm, I want to know the last names of students who have cats.
Question:Non
Question:Please find out the last name of the student who has a cat that is age 3.
Question:Non
Question:Can you show me orchestra names and the major record formats?
Question:Non
Question:I want a list of orchestra names in ascending order.
Question:Non
Question:Hmm, please show me the record formats of orchestras in ascending order of count.
Question:Non
Question:how many museum id in the list?
Question:Non
Question:find the staff count in the museum with an id 3?
Question:Non
Question:which year open the capital plaza museum?
Question:Non
Question:List the names of all visitors who visited some museums more than once, please.
Question:Non
Question:Can you list their IDs and ages too?
Question:Non
Question:What are the names and level of membership for all visitors over the age of 20?
Question:Non
Question:What are the names and ages of all the customers who spent over 100?
Question:Non
Question:How many government forms are in the table?
Question:Non
Question:How many of those have an average life expectancy that is longer than 72?
Question:Non
Question:What is the population of each of those government forms?
Question:Non
Question:What is the life expectancy for each of these?
Question:Non
Question:Which government forms and their populations are those for? | Sorry, I cannot understand this question. Can you elaborate? | Which government forms have an average life expectancy over 72, and what are their populations?
Question:Non
Question:Whats the level of membership customer id 1 has?
Question:Non
Question:What is the name of customer id 1?
Question:Non
Question:What is the age of customer id 1?
Question:Non
Question:Hi, What Airline has the largest number of flights?
Question:Non
Question:What is the Airline with the fewest number of flights?
Question:Non
Question:What is the abbreviation of AirTran Airways?
Question:Non
Question:Ah, and what is the country of AirTran Airways?
Question:Non
Question:Hi there!  Can you show me a list of all of the battle ids and the corresponding battle names?
Question:Non
Question:Great!  Can you filter this list to show just the battle IDs and battle names of the battles that had more than 10 deaths associated with them?
Question:Non
Question:Wonderful!  Can you update this list to include the date of each of these three battles?
Question:Non
Question:Hey can you tell me the average age for cats?
Question:Non
Question:What about for dogs?
Question:Non
Question:Thanks! Now what's the maximum age for dogs?
Question:Non
Question:And the maximum age for cats and dogs?
Question:Non
Question:So what's the maximum age for just cats?
Question:Non
Question:What are the full name of amc? | Did you mean the full name of the car maker amc? | Yes
Question:Non
Question:What kind of car is produced in Germany? | Did you mean the car models produced in Germany? | Yes
Question:Non
Question:What are the model id of BMW?
Question:Non
Question:What are the id and names of the countries which have more than 3 cars makers or produce the 'flat' model?
Question:Non
Question:What is the phone number of the professional who has done the most treatment.
Question:Non
Question:What are the professional id of the professionals who have done at least two types of treatments?
Question:Non
Question:How many professionals have done only one treatment?
Question:Non
Question:WHAT IS THE DOCUMENT ID WITH 1 TO 2 PARAGRAPH?
Question:Non
Question:WHAT IS THE DOCUMENT TEXT | Did you mean the 	Paragraph Text? | YES
Question:Non
Question:Who is the youngest teacher?
Question:Non
Question:What is his hometown?
Question:Non
Question:What is the age of Vicente Carretero?
Question:Non
Question:That are available
Question:Non
Question:What are the city codes for all available students
Question:Non
Question:Can i have the weight of the pets that were raised by female student
Question:Non
Question:What are the cars with the lowest horsepower? | Do you mean the id of the car with the lowest horsepower? | Yes please.
Question:Non
Question:What is the average horsepower of all the cars?
Question:Non
Question:Can you list the car ids of all the cars with lower than the average horsepower?
Question:Non
Question:Could you add the model and make of each of those into the table please?
Question:Non
Question:Hi what is the latest transcript?
Question:Non
Question:what is the date of transcript number 5?
Question:Non
Question:Show me the date and id of the transcript with at least 2 course results.
Question:Non
Question:Show me other details of those transcripts | Do you mean other details of those transcripts with at least 2 course results? | Yes!
Question:Non
Question:Show me transcript dates of those transcripts
Question:Non
Question:Hello!  Can you see all of the ids of the high school students?
Question:Non
Question:Please list the emails of all the professionals who live in the state of Hawaii?
Question:Non
Question:Please list the emails of all the professionals who live in the state of Wisconsin?
Question:Non
Question:Could you tell me the first names of all employees with the role code " Employee"?
Question:Non
Question:Can you list the semester names and their enrollments?
Question:Non
Question:Which semester has the most enrollments?
Question:Non
Question:Can you list the student enrollment ids and the degree program ids?
Question:Non
Question:Hmm, which semesters do not have any student enrolled? I want the semester names.
Question:Non
Question:What are all of the countries where English isn't the official language?
Question:Non
Question:What is the average life expectancy in each of those countries?
Question:Non
Question:* I have left the chat *
Question:Non
Question:Find Flight from CVO to SNA
Question:Non
Question:Flight from CVO to DFW
Question:Non
Question:Which airlines have flight from CVO?
Question:Non
Question:What is the TV Channel of TV series "A love of a lifetime"?
Question:Non
Question:How may viewers does "A love of a lifetime" have?
Question:Non
Question:How about the rating of "A love of a lifetime?"
Question:Non
Question:And when was "A love of a lifetime" aired?
Question:Non
Question:What is the player id for the youngest player?
Question:Non
Question:What about the oldest?
Question:Non
Question:What is their first name and country code?
Question:Non
Question:What're the names of the teachers who teach two or more courses?
Question:Non
Question:What is her age and hometown?
Question:Non
Question:What grade does the oldest teacher teach?
Question:Non
Question:List the number of tickets bought in all visits | the total number of tickets bought in all visits is 63. | what is the maximum number of tickets bought in all visits
Question:Non
Question:what is the average number of tickets bought in all visits
Question:Non
Question:how many ships are there?
Question:Non
Question:what are their names?
Question:Non
Question:What is the name of the youngest singer?
Question:Non
Question:What's the name of the song by Tribal King?
Question:Non
Question:What was the release year of that song?
Question:Non
Question:Can you please list all the names of the countries that are in the continent of Europe?
Question:Non
Question:Can you please only show those countries with a population of 80000 in the table?
Question:Non
Question:who is the singers name? | did you mean List the names of all singers | yes tell me singers name?
Question:Non
Question:What is the full name of the department that has the substring computer in its name?
Question:Non
Question:What's the description of that department?
Question:Non
Question:What is that department's id?
Question:Non
Question:What about for history? | What do you mean exactly? | What are the other details for the department named history?
Question:Non
Question:how many cylinders in the cars_data table
Question:Non
Question:i want to highest weight in the cars_data table
Question:Non
Question:how many year in the cars_data table
Question:Non
Question:what is the highest accelerate in the cars_data table
Question:Non
Question:i want to highest edispl in the cars_data table
Question:Non
Question:what is the age of Joe sharp
Question:Non
Question:How many US Singers?
Question:Non
Question:How many Male Singers?
Question:Non
Question:Which models are manufactured by the maker with the name "General Motors"?
Question:Non
Question:How about models that weight more than 3500?
Question:Non
Question:What is the make and model of the car with the largest horsepower?
Question:Non
Question:How many cars manufactured by General Motors get more than 15 mpg?
Question:Non
Question:What is the make and model of the car manufactured by General Motors that gets the highest mpg?
Question:Non
Question:How many students in this table?
Question:Non
Question:To find average grade of these students?
Question:Non
Question:Find top grade of the student?
Question:Non
Question:Find the lowest  grade of the student?
Question:Non
Question:What countries produced cars?
Question:Non
Question:What country does not have a car maker?
Question:Non
Question:Can you show me a list of student IDs and their friends IDs?
Question:Non
Question:Can you show me a list of all student IDs? | Did you mean the id of all High schoolers? | Yes
Question:Non
Question:Can you tell me the total number of student IDs?
Question:Non
Question:Can you tell me the total number of Friend IDs?
Question:Non
Question:Can you tell me which Student ID is not on the list of Friend IDs? | by student id, do you mean the student id in the table friend or all high schoolers' ids. | All high schoolers' ids
Question:Non
Question:Can you tell me the name and the grade of student ID 1510?
Question:Non
Question:Hello!  Can you please provide me with a list of all of the cities in this database?
Question:Non
Question:Great!  Can you update this list to show only the cities with more than one employee under the age of 30?
Question:Non
Question:Yay!  Thank you!  Can you update this list to include the ages of all residents of Bath?
Question:Non
Question:How many students in the "Student" table are over the age of 20?
Question:Non
Question:How many of those students own pets?
Question:Non
Question:Tell me the loser_name whose age is 24.626967830300003
Question:Non
Question:Tell me the total number of matches played by Petra Kvitova...
Question:Non
Question:Who has high loser_rank_points higher than 3500 ? | What attributes of the people  with loser_rank_points higher than 3500 would you like to know? | based on loser_id
Question:Non
Question:Find the name and rank points of the winner who won the most times...
Question:Non
Question:What are the names of all of the high schoolers?
Question:Non
Question:What is the value of the greatest number of likes for each high schooler? | what  did  you mean  the value? | Sorry, the amount of the greatest number of likes.
Question:Non
Question:What is the name of the high schooler who has the greatest number of likes?
Question:Non
Question:What is the feature type name of the feature AirCon?
Question:Non
Question:What is the full feature description of the feature name AirCon?
Question:Non
Question:How many different feature IDs are there?
Question:Non
Question:What sort of feature type code is associated with AirCon?
Question:Non
Question:Can you list the transcript date that appears least often?
Question:Non
Question:How many times does the transcript date 1975-05-06 12:04:47	show up in the table?
Question:Non
Question:Which transcript date shows up the most number of times?
Question:Non
Question:What is the destination airport of  United Airlines?
Question:Non
Question:How many airlines have flights departing from APG?
Question:Non
Question:What is the flight number of Delta Airlines | Did you mean to ask for the flight numbers of all flights on Delta Airlines? | yes flight numbers of all flights on Delta Airlines
Question:Non
Question:how many car models are produced in the USA?
Question:Non
Question:which companies produce those models?
Question:Non
Question:how many Models has Ford produced?
Question:Non
Question:Show the names of students who have at least 2 likes.
Question:Non
Question:How about 1 like?
Question:Non
Question:What are their IDs?
Question:Non
Question:what is the dest airport of airline 1
Question:Non
Question:what is the country of united airlines
Question:Non
Question:what is the source airport of ASY | What is ASY? | dest airport
Question:Non
Question:what is the country of us airways
Question:Non
Question:what is the airline of country usa
Question:Non
Question:what is the average of grades?
Question:Non
Question:what is the name of higshoolers that starting with 'A'?
Question:Non
Question:what is the best grade ? | Did you mean to ask for the highest grade? | yes
Question:Non
Question:Can you list all the names of the poker players ordered by the final tables in ascending order please?
Question:Non
Question:What are the nationalities of the poker players ordered by the final tables in ascending order?
Question:Non
Question:What is the name of the poker player with the highest earnings?
Question:Non
Question:What about the poker player with the lowest earnings?
Question:Non
Question:What was his best finish?
Question:Non
Question:What are the release dates for transcripts?
Question:Non
Question:What is the most recent date for release of transcripts?
Question:Non
Question:What is the last transcript release date?
Question:Non
Question:which is the most recently aired cartoon?
Question:Non
Question:find the channel of the most recently aired cartoon.
Question:Non
Question:Find the production code and channel of the most recently aired cartoon.
Question:Non
Question:What is the version number of template id 3?
Question:Non
Question:What is the document name of template id 25?
Question:Non
Question:Show all template types codes that are not used by any document?
Question:Non
Question:What is the version number of template id 4?
Question:Non
Question:Can you list all the flight numbers that have a source airport value of AHD?
Question:Non
Question:Can you list the names of all the unique airlines that belong to those flight numbers?
Question:Non
Question:How many stadiums can accommodate more than 1000 people in average.?
Question:Non
Question:sorry , What is the name of the stadium with the lowest attendance in average.?
Question:Non
Question:What about the one with highest average attendance?
Question:Non
Question:Which African countries have a smaller population than that of any Asian country?
Question:Non
Question:Which Asian countries have a smaller population than that of any African country?
Question:Non
Question:Which Asian country has the highest life expectancy?
Question:Non
Question:Hello!  Can you tell me how many dogs have not gone through any treatment?
Question:Non
Question:Thank you for that!  Can you tell me how many of these dogs were abandoned?
Question:Non
Question:Can you provide me with a list of all dog Ids for all of the abandoned dogs, as well as their associated treatment type code?
Question:Non
Question:how old is George Chuter?
Question:Non
Question:how much bonus was Employee with ID 1 awarded? | The employee with employee id 1 got a total amount of 5900.0 bonus. | What city is Lee Mears from?
Question:Non
Question:Find the program which most number of students are enrolled in. List both the id and the summary.
Question:Non
Question:for id program 9, which degree summary is the most common | Could you please clarify your question? Since one program has only one degree summary. | which program has the most students
Question:Non
Question:How many students are in program 9
Question:Non
Question:how many master are in program 9
Question:Non
Question:which program has the least students
Question:Non
Question:how many students does id 3 have
Question:Non
Question:whats is total cost of treatment?
Question:Non
Question:could you please find who's provide lowest cost of treatment? | you want first name or last name or both? | both
Question:Non
Question:ok, can you show lowest cost treatment's dog id?
Question:Non
Question:Show me continent IDs of each continent
Question:Non
Question:Show me continent names and the number of countries they have
Question:Non
Question:Which continent has the highest number of countries?
Question:Non
Question:Hello!  How are you?  First, I'll start with a straightforward request...  Can you show me all document IDs and their corresponding document names and number of paragraphs?
Question:Non
Question:Okay...  I'll ask something different.  Can you show me a list of all of the paragraph text values?
Question:Non
Question:Thanks!  Can you filter this list to show the Paragraph_Texts which have something other than "NULL" as the Other Details?
Question:Non
Question:Hello!  Can you provide me with a list of all cartoons written by Todd Casey?
Question:Non
Question:Can you update the list to show only those Titles which are cartoons?
Question:Non
Question:Can you update this list to include the corresponding television channel?
Question:Non
Question:Can you tell me the total amount spent on tickets by visitors with membership level 1?
Question:Non
Question:Can you tell me how many visitors there are at membership level 1?
Question:Non
Question:How many membership levels are there?
Question:Non
Question:Can you show me the names of each visitor with membership level 1?
Question:Non
Question:I'd like to know how much was spent on tickets at each membership level, can you show me?
Question:Non
Question:what is the first name of player id 200001?
Question:Non
Question:When is birth date for Martina ? | There are a lot of Martina. Do you mean the Marina with id 200001? | Martina with id 200001
Question:Non
Question:what is the country code for player id 200003?
Question:Non
Question:what is the last name of Justine of player id 200003?
Question:Non
Question:How many ids are in document 'Welcome to NY'? | Do you mean how many paragraphs are associated with document 'Welcome to NY'? | yes
Question:Non
Question:What are their texts?
Question:Non
Question:What are their id numbers?
Question:Non
Question:find the total ranking point for each player and their first name
Question:Non
Question:which player got first rank and their name | Do you want the first name or last name? | first name
Question:Non
Question:What African country has the largest population?
Question:Non
Question:And what is the population of Nigeria?
Question:Non
Question:What Asian country has the largest population?
Question:Non
Question:What is China's population?
Question:Non
Question:How many Asian countries have a population greater than that of Nigeria?
Question:Non
Question:Can you list those countries?
Question:Non
Question:Which unique cities are in Asian countries?
Question:Non
Question:Which of those cities have a population over 200,000?
Question:Non
Question:What is the average population of all cities in China?
Question:Non
Question:What is the average population of all cities that speak the Dutch language?
Question:Non
Question:How many visitors are ther?
Question:Non
Question:How many of them have membership levels higher than 4?
Question:Non
Question:Can you please list their names?
Question:Non
Question:Can you rank them by their membership level from high to low?
Question:Non
Question:Could you list the average ranking for each player with their first name?
Question:Non
Question:Could you add in their last names please?
Question:Non
Question:What are the full names of all left-handed players (hand value "L")?
Question:Non
Question:Could you just show their last names, please?
Question:Non
Question:Would you also add in their rankings? | Do you mean their average rankings? | Yes, please.
Question:Non
Question:What is the average grade of all students who have some friends, please?
Question:Non
Question:Are there any students that have no friends?
Question:Non
Question:What are their grades?
Question:Non
Question:What are their names?
Question:Non
Question:What are the names of the students with friends?
Question:Non
Question:How many students are there?
Question:Non
Question:How many students have grade 9
Question:Non
Question:What is his grade?
Question:Non
Question:show the stadium names without any concern
Question:Non
Question:football stadium | If you meant which football stadium has held the highest number of audience, that would be this one. | yes
Question:Non
Question:What is the most common citizenship of singers, please?
Question:Non
Question:What about the least common?
Question:Non
Question:What are the names of all the singers from Australia, please?
Question:Non
Question:To which nationality does the people_id 1 belongs to ?
Question:Non
Question:Tell me the birthday date of Teodor Salparov ?
Question:Non
Question:Tell me the earnings of the people id 5?
Question:Non
Question:What is the money rank of the tallest poker player ?
Question:Non
Question:Which program had the least number of students enrolled?
Question:Non
Question:What is the degree ID for architecto?
Question:Non
Question:Which programs has the student by the first name Timmothy enrolled?
Question:Non
Question:Which date did he register and also which date did he leave?
Question:Non
Question:What is the middle name of the student with email address johns.unique@example.net?
Question:Non
Question:Hi. What are the different types of pets?
Question:Non
Question:Between the cats and dogs, how many of them are dogs?
Question:Non
Question:What are the ages of the 2 dogs?
Question:Non
Question:How much does the youngest dog, the 1 year old, weigh?
Question:Non
Question:Could you tell me the last names of all the students who live in the state of North Carolina?
Question:Non
Question:What about their first names?
Question:Non
Question:What are the last names of the students who live in North Carolina but have not registered in any degree program?
Question:Non
Question:What are their first names?
Question:Non
Question:find the name of loser and winner who played in the match with the greatest number of minutes
Question:Non
Question:what were the player's scores?
Question:Non
Question:What are all the car models available?
Question:Non
Question:Which of those distinct models are produced after 1980?
Question:Non
Question:which grade has the 
most high schoolers
Question:Non
Question:what are the name of high schoolers in grade 9
Question:Non
Question:what grade is tiffany
Question:Non
Question:how many high schoolers in grade 9
Question:Non
Question:what grade is gabriel | Did you mean the Gabriel with ID 1689? | yes
Question:Non
Question:What ID is Tiffany?
Question:Non
Question:Which high schooler has ID of 1510?
Question:Non
Question:Show  me the first and last name whose id number 1 | Do you mean the owner id is 1 or dog id is 1? | owner id please.
Question:Non
Question:name the dog which  aged 6?
Question:Non
Question:name the dog having age more than 5
Question:Non
Question:which dogs are owned by someone who lives in virginia? List the name.
Question:Non
Question:Which cause has the least enrollment? | Do you want the course id or course name? | the course name
Question:Non
Question:What is the course ID of Math?
Question:Non
Question:How many students enrolled a course with the id of 14
Question:Non
Question:how many country code in the city table | Do  you  want  to  know  the distinct country code? | how many language in the countrylanguage table
Question:Non
Question:what the highest percentage in the countrylanguage table
Question:Non
Question:Show the names of all of the high schoolers.
Question:Non
Question:Which of the high schoolers are friends with Kyle?
Question:Non
Question:What is Kyle's ID?
Question:Non
Question:Who has the ID 1709?
Question:Non
Question:Who else is Jordan friends with?
Question:Non
Question:Who is friends with Gabriel?
Question:Non
Question:Hi! which countries are in europe?
Question:Non
Question:How many car manufacturers are in each of those countries?
Question:Non
Question:which of those has at least 3?
Question:Non
Question:how many do each of those have?
Question:Non
Question:how many total car manufacturers does europe have?
Question:Non
Question:what about america?
Question:Non
Question:what are those?
Question:Non
Question:Hello there!  Can you tell me the total number of visitors who did not visit any museum that was opened after 2010?
Question:Non
Question:Can you please provide me with the names and membership levels of these three members?
Question:Non
Question:Hi! How many owners temporarily do not have dogs?
Question:Non
Question:What are their full names?
Question:Non
Question:Which cartoon aired first?
Question:Non
Question:What was the last cartoon to air?
Question:Non
Question:What channel was it on?
Question:Non
Question:What is the production code?
Question:Non
Question:which singers were born before 1945?
Question:Non
Question:how about after 1955?
Question:Non
Question:which singers born before 1945 and after 1955 have the same citizenship? | Did you mean the singers born before 1945 OR after 1955? | what is the citizenship of the singers born before 1945?
Question:Non
Question:and after 1955?
Question:Non
Question:Which singers with a citizenship of United States were born before 1945?
Question:Non
Question:and after 1955
Question:Non
Question:Which singers with a citizenship of France were born before 1945?
Question:Non
Question:and after 1955?
Question:Non
Question:Which singers with a citizenship of Chile were born before 1945 or after 1955?
Question:Non
Question:how many country there
Question:Non
Question:how many country languages there
Question:Non
Question:what is the surface area of code AFG
Question:Non
Question:Hi, what is the population of the Caribbean?
Question:Non
Question:What continents have an average life expectancy shorter than 72?
Question:Non
Question:Can you give me the total population for each of those continents?
Question:Non
Question:What is the average life expectancy of those continents?
Question:Non
Question:Find the average life expectancy and total population for each continent where the average life expectancy is shorter than 72?
Question:Non
Question:Which street does  Nora Haley live?
Question:Non
Question:What is her home phone number?
Question:Non
Question:What is the email address of Jaclyn? | Do you mean the owner with first name Jaclyn? | Yes Jaclyn Stoltenberg
Question:Non
Question:What is the first name of DuBuque?
Question:Non
Question:What is the document id with least number of paragraphs?
Question:Non
Question:and the document with the most number of paragraphs?
Question:Non
Question:how many paragraphs are in that document with id of 2394?
Question:Non
Question:What are the paragraph texts of those three paragraphs?
Question:Non
Question:can you tell me the email id of the owner id ? | Do you mean all owner id and all email address? | owner id 1
Question:Non
Question:what is the weight of dog id 1 ?
Question:Non
Question:Can you tell me age of dog id 1 ?
Question:Non
Question:Which owner has paid for the most treatments on his or her dogs ? List the owner id and last name.
Question:Non
Question:How many matches played in 2013?
Question:Non
Question:How many matches played in 2016?
Question:Non
Question:What is the loser id  of petra kvitota? | Do  you mean 	loser  id | Yes
Question:Non
Question:which countries tv channels are not playing any cartoon written todd casey
Question:Non
Question:who directed the cartoon the rise of blue beetle  written by Michael Jelenic	?
Question:Non
Question:whats the package option for TV channels in itally?
Question:Non
Question:Show the name and the release year of the song by the youngest singer
Question:Non
Question:Ok. Can you show me the name and the release year of the song by the oldest singer
Question:Non
Question:Can you also show me the name of the youngest singer
Question:Non
Question:And what is the name of the oldest singer and his age
Question:Non
Question:and what country was he from?
Question:Non
Question:give me the names of the singers from United States
Question:Non
Question:hi, what number of students have a dog as a pet?
Question:Non
Question:and what about the number that have a cat as a pet?
Question:Non
Question:Great. Can you tell me the first names of these 3 students?
Question:Non
Question:Which states have professionals living there?
Question:Non
Question:May I have a list of states that has both owners and professionals living there?
Question:Non
Question:List the first name of professionals
Question:Non
Question:List the first name of professionals along with the description
Question:Non
Question:List the first name of professionals along with the description of the treatment they have done?
Question:Non
Question:how many course id numbers
Question:Non
Question:what are the courses
Question:Non
Question:great, how many teachers available to conduct the course
Question:Non
Question:which teacher takes math class
Question:Non
Question:Can you list how many car makers are on each continent please? | Do you want the name of the continent and the count of car makers on each of them? | Yes please, in a table if possible?
Question:Non
Question:Can you list the full name and country of every car maker from asia? | Do you want the full name and country name of the car makers from asia? | Yes please
Question:Non
Question:What about from Europe?
Question:Non
Question:How about America?
Question:Non
Question:How many car makers are there total?
Question:Non
Question:Hi there! Can you tell me how many different professional IDs are on this list?
Question:Non
Question:Great!  Could you update this list to include both the first names and treatment type codes for each of these professionals IDs? | Do you want the ids, first name for all professionals, along with the type codes of the treatment they have done? | Yes please!
Question:Non
Question:Excellent!  Can you filter this list to show me just the entries for the 5 most recent treatments?
Question:Non
Question:Show the names of all the battles.
Question:Non
Question:Show the names of all the battles and their Bulgarian commanders.
Question:Non
Question:Show the names of all the battles with no ships lost in the English Channel.
Question:Non
Question:Show the names and results of all battles with no ships lost in the English channel.
Question:Non
Question:Show the names,results, and Bulgarian commanders of all battles with no ships lost in the English channel.
Question:Non
Question:What are the dates of all the battles with the result of Bulgarian victory.
Question:Non
Question:how many Likes there
Question:Non
Question:how many friends there
Question:Non
Question:what is the  friend id of  1689 | Do you mean the id of students with friend id 1689? | yes sir
Question:Non
Question:Show me the documents
Question:Non
Question:Show me the documents using template
Question:Non
Question:How many of them are using the template with code 'PPT'?
Question:Non
0it [00:00, ?it/s]293it [00:00, 25764.29it/s]
Question:whats the average acceleration
Question:Non
Question:whats the average horse power
Question:Non
Question:for the cars with 4 cylinders which model has the largest horsepower
Question:Non
Question:what are the official unique official language spoken in the country | In which country? | what are the unique official languages spoken that are found before 1930
Question:Non
Question:what is the total number of unique official languages spoken in the countries that are founded before 1930
Question:Non
当前idx1
eval_err_num:1
____________________
SELECT T2.FullName, COUNT(*) AS ModelCount FROM car_makers AS T1 JOIN model_list AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id ORDER BY ModelCount DESC
SELECT Count ( * )  ,  T2.FullName  FROM MODEL_LIST AS T1 JOIN CAR_MAKERS AS T2 ON T1.Maker   =   T2.Id GROUP BY T2.id
连接数据库../datasets/cosql_dataset/database/car_1/car_1.sqlite
执行第一个查询
执行出错: no such column: T2.FullName
eval_exec:False
exact_score:0
medium pred: SELECT T2.FullName, COUNT(*) AS ModelCount FROM car_makers AS T1 JOIN model_list AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id ORDER BY ModelCount DESC
medium gold: SELECT Count ( * )  ,  T2.FullName  FROM MODEL_LIST AS T1 JOIN CAR_MAKERS AS T2 ON T1.Maker   =   T2.Id GROUP BY T2.id

当前idx2
____________________
SELECT T2.Model FROM car_makers AS T1 JOIN model_list AS T2 ON T1.Id  =  T2.Maker ORDER BY COUNT(*) DESC LIMIT 1
SELECT T1.model FROM MODEL_LIST AS T1 JOIN CAR_MAKERS AS T2 ON T1.Maker   =   T2.Id GROUP BY T2.id order by count ( * )  desc limit 1
连接数据库../datasets/cosql_dataset/database/car_1/car_1.sqlite
执行第一个查询
执行出错: misuse of aggregate: COUNT()
eval_exec:False
exact_score:0
extra pred: SELECT T2.Model FROM car_makers AS T1 JOIN model_list AS T2 ON T1.Id  =  T2.Maker ORDER BY COUNT(*) DESC LIMIT 1
extra gold: SELECT T1.model FROM MODEL_LIST AS T1 JOIN CAR_MAKERS AS T2 ON T1.Maker   =   T2.Id GROUP BY T2.id order by count ( * )  desc limit 1

当前idx3
eval_err_num:2
____________________
SELECT T2.FullName FROM car_makers AS T1 JOIN model_list AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id HAVING COUNT(*)  >=  3
SELECT Count ( * )  ,  T2.FullName ,  T2.id FROM MODEL_LIST AS T1 JOIN CAR_MAKERS AS T2 ON T1.Maker   =   T2.Id GROUP BY T2.id having count ( * )   > =  3
连接数据库../datasets/cosql_dataset/database/car_1/car_1.sqlite
执行第一个查询
执行出错: no such column: T2.FullName
eval_exec:False
exact_score:0
medium pred: SELECT T2.FullName FROM car_makers AS T1 JOIN model_list AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id HAVING COUNT(*)  >=  3
medium gold: SELECT Count ( * )  ,  T2.FullName ,  T2.id FROM MODEL_LIST AS T1 JOIN CAR_MAKERS AS T2 ON T1.Maker   =   T2.Id GROUP BY T2.id having count ( * )   > =  3

当前idx1
____________________
SELECT Name FROM singer
SELECT name FROM singer
连接数据库../datasets/cosql_dataset/database/concert_singer/concert_singer.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
eval_err_num:3
____________________
SELECT T1.Name, COUNT(*) AS num_concerts FROM singer AS T1 JOIN singer_in_concert AS T2 ON T1.Singer_ID  =  T2.Singer_ID GROUP BY T1.Singer_ID
SELECT T2.name ,  count ( * )  FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id   =   T2.singer_id GROUP BY T2.singer_id
连接数据库../datasets/cosql_dataset/database/concert_singer/concert_singer.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT T1.Name, COUNT(*) AS num_concerts FROM singer AS T1 JOIN singer_in_concert AS T2 ON T1.Singer_ID  =  T2.Singer_ID GROUP BY T1.Singer_ID
medium gold: SELECT T2.name ,  count ( * )  FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id   =   T2.singer_id GROUP BY T2.singer_id

当前idx1
____________________
SELECT count(DISTINCT Template_ID) FROM Templates
SELECT count ( distinct template_id )  FROM Documents
连接数据库../datasets/cosql_dataset/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:False
easy pred: SELECT count(DISTINCT Template_ID) FROM Templates
easy gold: SELECT count ( distinct template_id )  FROM Documents

当前idx2
____________________
SELECT count(*) FROM (SELECT Template_ID FROM Templates GROUP BY Template_ID HAVING count(*)  >  1)
SELECT count ( template_id )  FROM Documents GROUP BY template_id HAVING count ( * )   >  1
连接数据库../datasets/cosql_dataset/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
easy pred: SELECT count(*) FROM (SELECT Template_ID FROM Templates GROUP BY Template_ID HAVING count(*)  >  1)
easy gold: SELECT count ( template_id )  FROM Documents GROUP BY template_id HAVING count ( * )   >  1

当前idx3
eval_err_num:4
____________________
SELECT Document_ID FROM Templates WHERE Template_ID IN (SELECT Template_ID FROM Templates GROUP BY Template_ID HAVING count(*)  >  1)
SELECT document_id FROM Documents GROUP BY template_id HAVING count ( * )   >  1
连接数据库../datasets/cosql_dataset/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite
执行第一个查询
执行出错: no such column: Document_ID
eval_exec:False
exact_score:0
easy pred: SELECT Document_ID FROM Templates WHERE Template_ID IN (SELECT Template_ID FROM Templates GROUP BY Template_ID HAVING count(*)  >  1)
easy gold: SELECT document_id FROM Documents GROUP BY template_id HAVING count ( * )   >  1

当前idx1
eval_err_num:5
____________________
SELECT first_name FROM Students WHERE country = "Haiti"
SELECT T1.first_name FROM Students AS T1 JOIN Addresses AS T2 ON T1.permanent_address_id   =   T2.address_id WHERE T2.country   =   'Haiti'
连接数据库../datasets/cosql_dataset/database/student_transcripts_tracking/student_transcripts_tracking.sqlite
执行第一个查询
执行出错: no such column: country
eval_exec:False
exact_score:0
medium pred: SELECT first_name FROM Students WHERE country = "Haiti"
medium gold: SELECT T1.first_name FROM Students AS T1 JOIN Addresses AS T2 ON T1.permanent_address_id   =   T2.address_id WHERE T2.country   =   'Haiti'

当前idx2
____________________
SELECT first_name FROM Students WHERE cell_mobile_number = "09700166582"
SELECT first_name FROM Students WHERE cell_mobile_number  =  '09700166582'
连接数据库../datasets/cosql_dataset/database/student_transcripts_tracking/student_transcripts_tracking.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx3
eval_err_num:6
____________________
SELECT last_name, line_1 FROM Students WHERE cell_mobile_number = "09700166582"
SELECT T1.last_name, * FROM Students as T1 join addresses as T2 on T1.current_address_id  =  T2.address_id WHERE T1.cell_mobile_number  =  '09700166582'
连接数据库../datasets/cosql_dataset/database/student_transcripts_tracking/student_transcripts_tracking.sqlite
执行第一个查询
执行出错: no such column: line_1
eval_exec:False
exact_score:0
medium pred: SELECT last_name, line_1 FROM Students WHERE cell_mobile_number = "09700166582"
medium gold: SELECT T1.last_name, * FROM Students as T1 join addresses as T2 on T1.current_address_id  =  T2.address_id WHERE T1.cell_mobile_number  =  '09700166582'

当前idx4
____________________
SELECT email_address FROM Students WHERE cell_mobile_number = "09700166582"
SELECT email_address FROM Students where cell_mobile_number  =  '09700166582'
连接数据库../datasets/cosql_dataset/database/student_transcripts_tracking/student_transcripts_tracking.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx1
____________________
SELECT Stadium_ID FROM stadium WHERE Stadium_ID NOT IN (SELECT Stadium_ID FROM concert WHERE Year = 2014)
SELECT name FROM stadium EXCEPT SELECT T2.name FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id   =   T2.stadium_id WHERE T1.year   =   2014
连接数据库../datasets/cosql_dataset/database/concert_singer/concert_singer.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
hard pred: SELECT Stadium_ID FROM stadium WHERE Stadium_ID NOT IN (SELECT Stadium_ID FROM concert WHERE Year = 2014)
hard gold: SELECT name FROM stadium EXCEPT SELECT T2.name FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id   =   T2.stadium_id WHERE T1.year   =   2014

当前idx2
____________________
SELECT Capacity FROM stadium WHERE Name = "Balmoor"
select Capacity from stadium where name  =  'Balmoor'
连接数据库../datasets/cosql_dataset/database/concert_singer/concert_singer.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx3
____________________
SELECT Theme FROM concert WHERE Stadium_ID = (SELECT Stadium_ID FROM stadium WHERE Name = "Balmoor")
select T2.Theme from stadium as T1 join concert as T2 on T1.Stadium_ID  =  T2.Stadium_ID where T1.Name  =  'Balmoor'
连接数据库../datasets/cosql_dataset/database/concert_singer/concert_singer.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:0
medium pred: SELECT Theme FROM concert WHERE Stadium_ID = (SELECT Stadium_ID FROM stadium WHERE Name = "Balmoor")
medium gold: select T2.Theme from stadium as T1 join concert as T2 on T1.Stadium_ID  =  T2.Stadium_ID where T1.Name  =  'Balmoor'

当前idx1
____________________
SELECT count(*) FROM dogs WHERE gender = 'F'
SELECT count ( * )  FROM Dogs WHERE dog_id IN  (  SELECT dog_id FROM Treatments  ) 
连接数据库../datasets/cosql_dataset/database/dog_kennels/dog_kennels.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
hard pred: SELECT count(*) FROM dogs WHERE gender = 'F'
hard gold: SELECT count ( * )  FROM Dogs WHERE dog_id IN  (  SELECT dog_id FROM Treatments  ) 

当前idx2
____________________
SELECT age FROM dogs WHERE gender = 'F'
SELECT age FROM Dogs WHERE dog_id IN  (  SELECT dog_id FROM Treatments  ) 
连接数据库../datasets/cosql_dataset/database/dog_kennels/dog_kennels.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
hard pred: SELECT age FROM dogs WHERE gender = 'F'
hard gold: SELECT age FROM Dogs WHERE dog_id IN  (  SELECT dog_id FROM Treatments  ) 

当前idx3
____________________
SELECT weight FROM dogs WHERE age = '2' ORDER BY weight DESC LIMIT 1
SELECT weight FROM Dogs WHERE age = 2 ORDER BY weight DESC LIMIT 1
连接数据库../datasets/cosql_dataset/database/dog_kennels/dog_kennels.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx1
____________________
SELECT count(*) FROM teacher
SELECT COUNT ( * )  FROM teacher
连接数据库../datasets/cosql_dataset/database/course_teach/course_teach.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT count(*) FROM course
SELECT COUNT ( * )  FROM course_arrange
连接数据库../datasets/cosql_dataset/database/course_teach/course_teach.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:False
easy pred: SELECT count(*) FROM course
easy gold: SELECT COUNT ( * )  FROM course_arrange

当前idx3
____________________
SELECT T1.name, count(*) FROM teacher AS T1 JOIN course_arrange AS T2 ON T1.teacher_id  =  T2.teacher_id GROUP BY T1.teacher_id
SELECT T2.Name , COUNT ( * )  FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID  =  T2.Teacher_ID GROUP BY T2.Name
连接数据库../datasets/cosql_dataset/database/course_teach/course_teach.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT T1.name, count(*) FROM teacher AS T1 JOIN course_arrange AS T2 ON T1.teacher_id  =  T2.teacher_id GROUP BY T1.teacher_id
medium gold: SELECT T2.Name , COUNT ( * )  FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID  =  T2.Teacher_ID GROUP BY T2.Name

当前idx4
____________________
SELECT T1.name, T1.age FROM teacher AS T1 JOIN course_arrange AS T2 ON T1.teacher_id  =  T2.teacher_id GROUP BY T1.teacher_id
SELECT Name , age FROM teacher
连接数据库../datasets/cosql_dataset/database/course_teach/course_teach.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT T1.name, T1.age FROM teacher AS T1 JOIN course_arrange AS T2 ON T1.teacher_id  =  T2.teacher_id GROUP BY T1.teacher_id
medium gold: SELECT Name , age FROM teacher

当前idx1
____________________
SELECT Latin_commander FROM battle WHERE name = "Battle of Serres"
SELECT latin_commander FROM battle WHERE name  =  "Battle of Serres"
连接数据库../datasets/cosql_dataset/database/battle_death/battle_death.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT result FROM battle WHERE date = "1206-01-31"
SELECT result FROM battle WHERE date  =  "31 January 1206"
连接数据库../datasets/cosql_dataset/database/battle_death/battle_death.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:True
当前idx3
____________________
SELECT Bulgarian_commander FROM battle WHERE date = "1205-06-01"
SELECT bulgarian_commander FROM battle WHERE date  =  "June 1205"
连接数据库../datasets/cosql_dataset/database/battle_death/battle_death.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:True
当前idx4
____________________
SELECT name FROM battle WHERE Latin_commander = "Baldwin 1"
SELECT name FROM battle WHERE latin_commander  =  "Baldwin I"
连接数据库../datasets/cosql_dataset/database/battle_death/battle_death.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:True
当前idx1
____________________
SELECT count(*) FROM TV_Channel
SELECT count ( * )  FROM TV_Channel
连接数据库../datasets/cosql_dataset/database/tvshow/tvshow.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT Language FROM TV_Channel WHERE series_name = "Sky Music"
SELECT language FROM TV_Channel where series_name = 'Sky Music'
连接数据库../datasets/cosql_dataset/database/tvshow/tvshow.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx3
____________________
SELECT Title FROM Cartoon WHERE id = 2.0
SELECT title FROM Cartoon where id = 2.0
连接数据库../datasets/cosql_dataset/database/tvshow/tvshow.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx1
____________________
SELECT max(Horsepower) FROM cars_data
SELECT Horsepower FROM CARS_DATA ORDER BY Horsepower DESC LIMIT 1
连接数据库../datasets/cosql_dataset/database/car_1/car_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:0
medium pred: SELECT max(Horsepower) FROM cars_data
medium gold: SELECT Horsepower FROM CARS_DATA ORDER BY Horsepower DESC LIMIT 1

当前idx2
____________________
SELECT count(*) FROM cars_data
SELECT count ( * )  FROM CARS_DATA
连接数据库../datasets/cosql_dataset/database/car_1/car_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx3
____________________
SELECT count(*) FROM cars_data
SELECT sum ( cylinders )  FROM CARS_DATA
连接数据库../datasets/cosql_dataset/database/car_1/car_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
easy pred: SELECT count(*) FROM cars_data
easy gold: SELECT sum ( cylinders )  FROM CARS_DATA

当前idx1
____________________
SELECT District FROM shop ORDER BY Number_products DESC LIMIT 1
SELECT district FROM shop ORDER BY number_products DESC LIMIT 1
连接数据库../datasets/cosql_dataset/database/employee_hire_evaluation/employee_hire_evaluation.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT Manager_name FROM shop ORDER BY Number_products DESC LIMIT 1
SELECT manager_name FROM shop ORDER BY number_products DESC LIMIT 1
连接数据库../datasets/cosql_dataset/database/employee_hire_evaluation/employee_hire_evaluation.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx3
____________________
SELECT Number_products FROM shop ORDER BY Number_products DESC LIMIT 1
SELECT number_products FROM shop ORDER BY number_products DESC LIMIT 1
连接数据库../datasets/cosql_dataset/database/employee_hire_evaluation/employee_hire_evaluation.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx4
____________________
SELECT Location FROM shop ORDER BY Number_products DESC LIMIT 1
SELECT location FROM shop ORDER BY number_products DESC LIMIT 1
连接数据库../datasets/cosql_dataset/database/employee_hire_evaluation/employee_hire_evaluation.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx>4
____________________
SELECT Shop_ID FROM shop ORDER BY Number_products DESC LIMIT 1
SELECT shop_ID FROM shop ORDER BY number_products DESC LIMIT 1
连接数据库../datasets/cosql_dataset/database/employee_hire_evaluation/employee_hire_evaluation.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx1
____________________
SELECT avg(Population) FROM city
SELECT avg ( Population )  FROM city
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT District FROM city WHERE Population > (SELECT avg(Population) FROM city)
SELECT District FROM city WHERE Population  >   ( SELECT avg ( Population )  FROM city ) 
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx3
____________________
SELECT District, count(*) FROM city WHERE Population > (SELECT avg(Population) FROM city) GROUP BY District
SELECT count ( * )  ,  District FROM city WHERE Population  >   ( SELECT avg ( Population )  FROM city )  GROUP BY District
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx1
____________________
SELECT Name FROM country WHERE GovernmentForm = "US Territory"
SELECT Name FROM country WHERE GovernmentForm   =   "US Territory"
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT Name, GNP, Population FROM country WHERE GovernmentForm = "US Territory"
SELECT GNP, population FROM country WHERE GovernmentForm   =   "US Territory"
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT Name, GNP, Population FROM country WHERE GovernmentForm = "US Territory"
medium gold: SELECT GNP, population FROM country WHERE GovernmentForm   =   "US Territory"

当前idx3
____________________
SELECT avg(GNP), sum(Population) FROM country WHERE GovernmentForm = "US Territory"
SELECT avg ( GNP )  ,  sum ( population )  FROM country WHERE GovernmentForm   =   "US Territory"
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx1
____________________
SELECT SUM(SurfaceArea) FROM country WHERE Continent = "Asia"
SELECT sum ( SurfaceArea )  FROM country WHERE Continent  =  "Asia"
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT LocalName FROM country WHERE Continent = "Asia"
SELECT LocalName FROM country
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
easy pred: SELECT LocalName FROM country WHERE Continent = "Asia"
easy gold: SELECT LocalName FROM country

当前idx3
____________________
SELECT Code FROM country WHERE Name = "Aruba"
SELECT Code FROM country WHERE Name  =  "Aruba"
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx1
____________________
SELECT count(*) FROM shop
SELECT count ( * )  FROM shop
连接数据库../datasets/cosql_dataset/database/employee_hire_evaluation/employee_hire_evaluation.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT name FROM shop
SELECT * FROM shop
连接数据库../datasets/cosql_dataset/database/employee_hire_evaluation/employee_hire_evaluation.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
easy pred: SELECT name FROM shop
easy gold: SELECT * FROM shop

当前idx3
____________________
SELECT T1.name, count(*) FROM shop AS T1 JOIN hiring AS T2 ON T1.shop_id  =  T2.shop_id GROUP BY T1.name
SELECT count ( * )  FROM hiring AS t1 JOIN shop AS t2 ON t1.shop_id   =   t2.shop_id GROUP BY t2.name
连接数据库../datasets/cosql_dataset/database/employee_hire_evaluation/employee_hire_evaluation.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT T1.name, count(*) FROM shop AS T1 JOIN hiring AS T2 ON T1.shop_id  =  T2.shop_id GROUP BY T1.name
medium gold: SELECT count ( * )  FROM hiring AS t1 JOIN shop AS t2 ON t1.shop_id   =   t2.shop_id GROUP BY t2.name

当前idx1
____________________
SELECT T1.Name FROM singer AS T1 JOIN singer_in_concert AS T2 ON T1.Singer_ID  =  T2.Singer_ID JOIN concert AS T3 ON T2.concert_ID  =  T3.concert_ID WHERE T3.concert_Name  =  "The Beatles"
SELECT name from singer
连接数据库../datasets/cosql_dataset/database/concert_singer/concert_singer.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
easy pred: SELECT T1.Name FROM singer AS T1 JOIN singer_in_concert AS T2 ON T1.Singer_ID  =  T2.Singer_ID JOIN concert AS T3 ON T2.concert_ID  =  T3.concert_ID WHERE T3.concert_Name  =  "The Beatles"
easy gold: SELECT name from singer

当前idx2
____________________
SELECT T1.Song_release_year FROM singer AS T1 JOIN singer_in_concert AS T2 ON T1.Singer_ID  =  T2.Singer_ID JOIN concert AS T3 ON T2.concert_ID  =  T3.concert_ID WHERE T1.Name  =  "Joe Sharp" AND T3.concert_Name  =  "The Beatles"
SELECT song_release_year from singer where Name  =  "Joe Sharp" and Song_Name  =  "You"
连接数据库../datasets/cosql_dataset/database/concert_singer/concert_singer.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT T1.Song_release_year FROM singer AS T1 JOIN singer_in_concert AS T2 ON T1.Singer_ID  =  T2.Singer_ID JOIN concert AS T3 ON T2.concert_ID  =  T3.concert_ID WHERE T1.Name  =  "Joe Sharp" AND T3.concert_Name  =  "The Beatles"
medium gold: SELECT song_release_year from singer where Name  =  "Joe Sharp" and Song_Name  =  "You"

当前idx3
____________________
SELECT COUNT(*) FROM singer AS T1 JOIN singer_in_concert AS T2 ON T1.Singer_ID  =  T2.Singer_ID JOIN concert AS T3 ON T2.concert_ID  =  T3.concert_ID WHERE T1.Name  =  "Joe Sharp"
SELECT count ( * )  FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id   =   T2.singer_id where T2.name  =  "Joe Sharp" GROUP BY T2.singer_id
连接数据库../datasets/cosql_dataset/database/concert_singer/concert_singer.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
hard pred: SELECT COUNT(*) FROM singer AS T1 JOIN singer_in_concert AS T2 ON T1.Singer_ID  =  T2.Singer_ID JOIN concert AS T3 ON T2.concert_ID  =  T3.concert_ID WHERE T1.Name  =  "Joe Sharp"
hard gold: SELECT count ( * )  FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id   =   T2.singer_id where T2.name  =  "Joe Sharp" GROUP BY T2.singer_id

当前idx4
____________________
SELECT T1.Country FROM singer AS T1 JOIN singer_in_concert AS T2 ON T1.Singer_ID  =  T2.Singer_ID JOIN concert AS T3 ON T2.concert_ID  =  T3.concert_ID WHERE T1.Name  =  "Joe Sharp"
SELECT country from singer where name  =  "Joe Sharp"
连接数据库../datasets/cosql_dataset/database/concert_singer/concert_singer.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:False
easy pred: SELECT T1.Country FROM singer AS T1 JOIN singer_in_concert AS T2 ON T1.Singer_ID  =  T2.Singer_ID JOIN concert AS T3 ON T2.concert_ID  =  T3.concert_ID WHERE T1.Name  =  "Joe Sharp"
easy gold: SELECT country from singer where name  =  "Joe Sharp"

当前idx1
____________________
SELECT Continent FROM continents
SELECT Continent FROM CONTINENTS
连接数据库../datasets/cosql_dataset/database/car_1/car_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
eval_err_num:7
____________________
SELECT ContId, Continent, COUNT(*) AS number_of_countries FROM continents JOIN countries ON ContId = CountryId GROUP BY ContId, Continent
SELECT T1.ContId ,  T1.Continent ,  count ( * )  FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId   =   T2.Continent GROUP BY T1.ContId
连接数据库../datasets/cosql_dataset/database/car_1/car_1.sqlite
执行第一个查询
执行出错: ambiguous column name: Continent
eval_exec:False
exact_score:0
medium pred: SELECT ContId, Continent, COUNT(*) AS number_of_countries FROM continents JOIN countries ON ContId = CountryId GROUP BY ContId, Continent
medium gold: SELECT T1.ContId ,  T1.Continent ,  count ( * )  FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId   =   T2.Continent GROUP BY T1.ContId

当前idx1
____________________
SELECT T1.Model FROM car_names AS T1 JOIN cars_data AS T2 ON T1.MakeId  =  T2.Id WHERE T2.Weight  <  3500
SELECT DISTINCT T1.model FROM MODEL_LIST AS T1 JOIN CAR_NAMES AS T2 ON T1.Model   =   T2.Model JOIN CARS_DATA AS T3 ON T2.MakeId   =   T3.Id JOIN CAR_MAKERS AS T4 ON T1.Maker   =   T4.Id WHERE T3.weight  <  3500
连接数据库../datasets/cosql_dataset/database/car_1/car_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:False
extra pred: SELECT T1.Model FROM car_names AS T1 JOIN cars_data AS T2 ON T1.MakeId  =  T2.Id WHERE T2.Weight  <  3500
extra gold: SELECT DISTINCT T1.model FROM MODEL_LIST AS T1 JOIN CAR_NAMES AS T2 ON T1.Model   =   T2.Model JOIN CARS_DATA AS T3 ON T2.MakeId   =   T3.Id JOIN CAR_MAKERS AS T4 ON T1.Maker   =   T4.Id WHERE T3.weight  <  3500

当前idx2
____________________
SELECT T2.Weight FROM car_names AS T1 JOIN cars_data AS T2 ON T1.MakeId  =  T2.Id WHERE T1.Make  =  "BMW"
SELECT DISTINCT T3.Weight FROM MODEL_LIST AS T1 JOIN CAR_NAMES AS T2 ON T1.Model   =   T2.Model JOIN CARS_DATA AS T3 ON T2.MakeId   =   T3.Id JOIN CAR_MAKERS AS T4 ON T1.Maker   =   T4.Id WHERE T1.Model = "bmw"
连接数据库../datasets/cosql_dataset/database/car_1/car_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
extra pred: SELECT T2.Weight FROM car_names AS T1 JOIN cars_data AS T2 ON T1.MakeId  =  T2.Id WHERE T1.Make  =  "BMW"
extra gold: SELECT DISTINCT T3.Weight FROM MODEL_LIST AS T1 JOIN CAR_NAMES AS T2 ON T1.Model   =   T2.Model JOIN CARS_DATA AS T3 ON T2.MakeId   =   T3.Id JOIN CAR_MAKERS AS T4 ON T1.Maker   =   T4.Id WHERE T1.Model = "bmw"

当前idx3
eval_err_num:8
____________________
SELECT T1.Maker FROM car_names AS T1 JOIN cars_data AS T2 ON T1.MakeId  =  T2.Id WHERE T1.MakeId  =  2
SELECT Model FROM car_names WHERE MakeId = 2
连接数据库../datasets/cosql_dataset/database/car_1/car_1.sqlite
执行第一个查询
执行出错: no such column: T1.Maker
eval_exec:False
exact_score:0
easy pred: SELECT T1.Maker FROM car_names AS T1 JOIN cars_data AS T2 ON T1.MakeId  =  T2.Id WHERE T1.MakeId  =  2
easy gold: SELECT Model FROM car_names WHERE MakeId = 2

当前idx1
____________________
SELECT count(*) FROM country
SELECT count ( * )  from country
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT count(distinct GovernmentForm) FROM country
SELECT count ( distinct GovernmentForm )  from country
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx3
____________________
SELECT GovernmentForm FROM country GROUP BY GovernmentForm ORDER BY count(*) DESC LIMIT 35
SELECT distinct GovernmentForm from country
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
easy pred: SELECT GovernmentForm FROM country GROUP BY GovernmentForm ORDER BY count(*) DESC LIMIT 35
easy gold: SELECT distinct GovernmentForm from country

当前idx4
____________________
SELECT count(*) FROM country WHERE GovernmentForm = "Republic"
SELECT count ( * )  from country where GovernmentForm  =  "Republic"
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx>4
____________________
SELECT Name FROM country WHERE GovernmentForm = "Republic"
SELECT name from country where GovernmentForm  =  "Republic"
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx>4
____________________
SELECT Language FROM countrylanguage WHERE CountryCode = "LVA"
SELECT T2.language from country as T1 join countrylanguage as T2 on T1.Code  =  T2.CountryCode where  T1.name  =  "Latvia"
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:0
medium pred: SELECT Language FROM countrylanguage WHERE CountryCode = "LVA"
medium gold: SELECT T2.language from country as T1 join countrylanguage as T2 on T1.Code  =  T2.CountryCode where  T1.name  =  "Latvia"

当前idx1
____________________
SELECT count(*) FROM airlines
SELECT count ( * )  FROM AIRLINES
连接数据库../datasets/cosql_dataset/database/flight_2/flight_2.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT Airline FROM airlines WHERE Country = "united states of america"
SELECT Airline FROM AIRLINES WHERE Airline = "United Airlines"
连接数据库../datasets/cosql_dataset/database/flight_2/flight_2.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
easy pred: SELECT Airline FROM airlines WHERE Country = "united states of america"
easy gold: SELECT Airline FROM AIRLINES WHERE Airline = "United Airlines"

当前idx3
____________________
SELECT Abbreviation FROM airlines WHERE Airline = "us airways"
SELECT Abbreviation FROM AIRLINES WHERE Airline = "US Airways"
连接数据库../datasets/cosql_dataset/database/flight_2/flight_2.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:True
当前idx1
____________________
SELECT count(*) FROM singer
SELECT count ( * )  from singer
连接数据库../datasets/cosql_dataset/database/singer/singer.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT Citizenship FROM singer WHERE Name = "Alice Walton"
SELECT citizenship from singer where name  =  "Alice Walton"
连接数据库../datasets/cosql_dataset/database/singer/singer.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx3
____________________
SELECT Sales FROM song WHERE Song_ID = 3
SELECT Sales from song where song_id  =  3
连接数据库../datasets/cosql_dataset/database/singer/singer.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx1
____________________
SELECT Country FROM airlines WHERE Airline = "Delta Air Lines"
SELECT country FROM AIRLINES where Airline  =  'Delta Airlines'
连接数据库../datasets/cosql_dataset/database/flight_2/flight_2.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:True
当前idx2
____________________
SELECT DestAirport FROM flights WHERE FlightNo = 44
SELECT DestAirport FROM flights where FlightNo  =  44
连接数据库../datasets/cosql_dataset/database/flight_2/flight_2.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx3
____________________
SELECT Airline FROM flights GROUP BY Airline ORDER BY COUNT(*) DESC LIMIT 1
SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid   =   T2.Airline GROUP BY T1.Airline ORDER BY count ( * )  DESC LIMIT 1
连接数据库../datasets/cosql_dataset/database/flight_2/flight_2.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
extra pred: SELECT Airline FROM flights GROUP BY Airline ORDER BY COUNT(*) DESC LIMIT 1
extra gold: SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid   =   T2.Airline GROUP BY T1.Airline ORDER BY count ( * )  DESC LIMIT 1

当前idx1
____________________
SELECT count(distinct course_id) FROM Courses
SELECT  count ( distinct course_id )  from courses
连接数据库../datasets/cosql_dataset/database/student_transcripts_tracking/student_transcripts_tracking.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
eval_err_num:9
____________________
SELECT course_name FROM Courses ORDER BY count_students ASC LIMIT 1
SELECT  T1.course_name FROM Courses AS T1 JOIN Student_Enrolment_Courses AS T2 ON T1.course_id   =   T2.course_id GROUP BY T1.course_name ORDER BY count ( * )  LIMIT 1
连接数据库../datasets/cosql_dataset/database/student_transcripts_tracking/student_transcripts_tracking.sqlite
执行第一个查询
执行出错: no such column: count_students
eval_exec:False
exact_score:0
extra pred: SELECT course_name FROM Courses ORDER BY count_students ASC LIMIT 1
extra gold: SELECT  T1.course_name FROM Courses AS T1 JOIN Student_Enrolment_Courses AS T2 ON T1.course_id   =   T2.course_id GROUP BY T1.course_name ORDER BY count ( * )  LIMIT 1

当前idx1
____________________
SELECT count(*) FROM concert
SELECT  count ( * )  FROM concert
连接数据库../datasets/cosql_dataset/database/concert_singer/concert_singer.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
eval_err_num:10
____________________
SELECT T1.Name, COUNT(*) AS num_concerts FROM stadium AS T1 JOIN concert AS T2 ON T1.Stadium_ID  =  T2.Stadium_ID GROUP BY T1.Name
SELECT T2.name , count ( * )  FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id GROUP BY T1.stadium_id
连接数据库../datasets/cosql_dataset/database/concert_singer/concert_singer.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT T1.Name, COUNT(*) AS num_concerts FROM stadium AS T1 JOIN concert AS T2 ON T1.Stadium_ID  =  T2.Stadium_ID GROUP BY T1.Name
medium gold: SELECT T2.name , count ( * )  FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id GROUP BY T1.stadium_id

当前idx3
eval_err_num:11
____________________
SELECT capacity FROM stadium WHERE Name = "Stark's Park"
SELECT capacity from stadium where name  =  "Stark s Park"
连接数据库../datasets/cosql_dataset/database/concert_singer/concert_singer.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
easy pred: SELECT capacity FROM stadium WHERE Name = "Stark's Park"
easy gold: SELECT capacity from stadium where name  =  "Stark s Park"

当前idx4
____________________
SELECT concert_Name FROM concert
SELECT concert_name from concert
连接数据库../datasets/cosql_dataset/database/concert_singer/concert_singer.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx1
____________________
SELECT count(distinct treatment_id) FROM treatments
select count ( * )  from  ( SELECT distinct treatment_type_code from treatments ) 
连接数据库../datasets/cosql_dataset/database/dog_kennels/dog_kennels.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
easy pred: SELECT count(distinct treatment_id) FROM treatments
easy gold: select count ( * )  from  ( SELECT distinct treatment_type_code from treatments ) 

当前idx2
____________________
SELECT treatment_id, cost_of_treatment FROM treatments ORDER BY cost_of_treatment DESC LIMIT 1
SELECT * FROM Treatments ORDER BY cost_of_treatment DESC LIMIT 1
连接数据库../datasets/cosql_dataset/database/dog_kennels/dog_kennels.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT treatment_id, cost_of_treatment FROM treatments ORDER BY cost_of_treatment DESC LIMIT 1
medium gold: SELECT * FROM Treatments ORDER BY cost_of_treatment DESC LIMIT 1

当前idx3
____________________
SELECT cost_of_treatment FROM treatments ORDER BY date_of_treatment DESC LIMIT 1
SELECT cost_of_treatment FROM Treatments ORDER BY date_of_treatment DESC LIMIT 1
连接数据库../datasets/cosql_dataset/database/dog_kennels/dog_kennels.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx1
____________________
SELECT T1.Airline FROM airlines AS T1 JOIN flights AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline HAVING COUNT(*)  <  200
SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid   =   T2.Airline GROUP BY T1.Airline HAVING count ( * )   <  200
连接数据库../datasets/cosql_dataset/database/flight_2/flight_2.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT T1.Country FROM airlines AS T1 JOIN flights AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline HAVING COUNT(*)  <  200 LIMIT 3
SELECT T1.Airline, T2.DestAirport FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid   =   T2.Airline GROUP BY T1.Airline HAVING count ( * )   <  200 limit 3
连接数据库../datasets/cosql_dataset/database/flight_2/flight_2.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
hard pred: SELECT T1.Country FROM airlines AS T1 JOIN flights AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline HAVING COUNT(*)  <  200 LIMIT 3
hard gold: SELECT T1.Airline, T2.DestAirport FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid   =   T2.Airline GROUP BY T1.Airline HAVING count ( * )   <  200 limit 3

当前idx1
____________________
SELECT Nationality FROM people GROUP BY Nationality HAVING COUNT(*)  >  1
SELECT Nationality FROM people GROUP BY Nationality HAVING COUNT ( * )   >  1
连接数据库../datasets/cosql_dataset/database/poker_player/poker_player.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT People_ID FROM people WHERE Nationality = "Russia"
SELECT People_ID FROM people WHERE Nationality  =  'Russia'
连接数据库../datasets/cosql_dataset/database/poker_player/poker_player.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx3
____________________
SELECT People_ID, Name FROM people WHERE Nationality = "Russia"
SELECT People_ID, name FROM people WHERE Nationality  =  'Russia'
连接数据库../datasets/cosql_dataset/database/poker_player/poker_player.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx1
____________________
SELECT avg(loser_age) FROM matches
SELECT avg ( loser_age )  FROM matches
连接数据库../datasets/cosql_dataset/database/wta_1/wta_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT avg(winner_age) FROM matches
SELECT avg ( winner_age )  FROM matches
连接数据库../datasets/cosql_dataset/database/wta_1/wta_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx3
____________________
SELECT avg(minutes) FROM matches
SELECT avg ( minutes )  FROM matches
连接数据库../datasets/cosql_dataset/database/wta_1/wta_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx4
____________________
SELECT max(minutes) FROM matches
SELECT max ( minutes )  FROM matches
连接数据库../datasets/cosql_dataset/database/wta_1/wta_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx>4
____________________
SELECT min(minutes) FROM matches
SELECT min ( minutes )  FROM matches
连接数据库../datasets/cosql_dataset/database/wta_1/wta_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx1
____________________
SELECT COUNT(*) FROM airports AS T1 JOIN flights AS T2 ON T1.AirportCode  =  T2.DestAirport WHERE T1.City  =  'Aberdeen' OR T1.City  =  'Abilene'
SELECT count ( * )  FROM Flights AS T1 JOIN Airports AS T2 ON T1.DestAirport   =   T2.AirportCode WHERE T2.city  like  "%Aberdeen%" OR T2.city  like  "%Abilene%"
连接数据库../datasets/cosql_dataset/database/flight_2/flight_2.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:0
extra pred: SELECT COUNT(*) FROM airports AS T1 JOIN flights AS T2 ON T1.AirportCode  =  T2.DestAirport WHERE T1.City  =  'Aberdeen' OR T1.City  =  'Abilene'
extra gold: SELECT count ( * )  FROM Flights AS T1 JOIN Airports AS T2 ON T1.DestAirport   =   T2.AirportCode WHERE T2.city  like  "%Aberdeen%" OR T2.city  like  "%Abilene%"

当前idx1
____________________
SELECT Name FROM museum
SELECT name from museum
连接数据库../datasets/cosql_dataset/database/museum_visit/museum_visit.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx1
____________________
SELECT Title FROM Cartoon WHERE Directed_by = "Ben Jones" OR Directed_by = "Brandon Vietti"
SELECT Title FROM Cartoon WHERE Directed_by  =  "Ben Jones" OR Directed_by  =  "Brandon Vietti"
连接数据库../datasets/cosql_dataset/database/tvshow/tvshow.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT Original_air_date FROM Cartoon WHERE Directed_by = "Ben Jones" OR Directed_by = "Brandon Vietti"
SELECT Title, original_air_date FROM Cartoon WHERE Directed_by  =  "Ben Jones" OR Directed_by  =  "Brandon Vietti"
连接数据库../datasets/cosql_dataset/database/tvshow/tvshow.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
extra pred: SELECT Original_air_date FROM Cartoon WHERE Directed_by = "Ben Jones" OR Directed_by = "Brandon Vietti"
extra gold: SELECT Title, original_air_date FROM Cartoon WHERE Directed_by  =  "Ben Jones" OR Directed_by  =  "Brandon Vietti"

当前idx3
____________________
SELECT Written_by FROM Cartoon WHERE Directed_by = "Ben Jones" OR Directed_by = "Brandon Vietti"
SELECT Title, written_by FROM Cartoon WHERE Directed_by  =  "Ben Jones" OR Directed_by  =  "Brandon Vietti"
连接数据库../datasets/cosql_dataset/database/tvshow/tvshow.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
extra pred: SELECT Written_by FROM Cartoon WHERE Directed_by = "Ben Jones" OR Directed_by = "Brandon Vietti"
extra gold: SELECT Title, written_by FROM Cartoon WHERE Directed_by  =  "Ben Jones" OR Directed_by  =  "Brandon Vietti"

当前idx1
____________________
SELECT Document_Name, Document_Description FROM Documents WHERE Document_Name LIKE '%w%' OR Document_Description LIKE '%w%'
SELECT * from Documents WHERE Document_Description LIKE "%w%"
连接数据库../datasets/cosql_dataset/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT Document_Name, Document_Description FROM Documents WHERE Document_Name LIKE '%w%' OR Document_Description LIKE '%w%'
medium gold: SELECT * from Documents WHERE Document_Description LIKE "%w%"

当前idx2
____________________
SELECT Document_Name FROM Documents WHERE Document_Name LIKE '%w%' OR Document_Description LIKE '%w%'
SELECT document_name from Documents WHERE Document_Description LIKE "%w%"
连接数据库../datasets/cosql_dataset/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT Document_Name FROM Documents WHERE Document_Name LIKE '%w%' OR Document_Description LIKE '%w%'
medium gold: SELECT document_name from Documents WHERE Document_Description LIKE "%w%"

当前idx3
____________________
SELECT Document_Name, Template_ID FROM Documents WHERE Document_Name LIKE '%w%' OR Document_Description LIKE '%w%'
SELECT document_name , template_id FROM Documents WHERE Document_Description LIKE "%w%"
连接数据库../datasets/cosql_dataset/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT Document_Name, Template_ID FROM Documents WHERE Document_Name LIKE '%w%' OR Document_Description LIKE '%w%'
medium gold: SELECT document_name , template_id FROM Documents WHERE Document_Description LIKE "%w%"

当前idx1
____________________
SELECT avg(loser_age) FROM matches
SELECT avg ( loser_age )   FROM matches
连接数据库../datasets/cosql_dataset/database/wta_1/wta_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT avg(winner_age) FROM matches
SELECT avg ( winner_age )   FROM matches
连接数据库../datasets/cosql_dataset/database/wta_1/wta_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx3
____________________
SELECT count(*) FROM matches WHERE winner_hand = 'L'
SELECT count ( * )  from matches where winner_hand  =  "L"
连接数据库../datasets/cosql_dataset/database/wta_1/wta_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx4
____________________
SELECT winner_name, loser_name FROM matches ORDER BY minutes DESC LIMIT 1
SELECT winner_name, loser_name from matches where minutes  =   ( select max ( minutes )  from matches ) 
连接数据库../datasets/cosql_dataset/database/wta_1/wta_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:0
extra pred: SELECT winner_name, loser_name FROM matches ORDER BY minutes DESC LIMIT 1
extra gold: SELECT winner_name, loser_name from matches where minutes  =   ( select max ( minutes )  from matches ) 

当前idx1
____________________
SELECT name FROM dogs
SELECT name FROM Dogs
连接数据库../datasets/cosql_dataset/database/dog_kennels/dog_kennels.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT name FROM dogs ORDER BY count(*) DESC LIMIT 1
SELECT name FROM Dogs WHERE breed_code   =    (  SELECT breed_code FROM Dogs GROUP BY breed_code ORDER BY count ( * )  ASC LIMIT 1  ) 
连接数据库../datasets/cosql_dataset/database/dog_kennels/dog_kennels.sqlite
执行第一个查询
执行出错: misuse of aggregate: count()
eval_exec:False
exact_score:0
hard pred: SELECT name FROM dogs ORDER BY count(*) DESC LIMIT 1
hard gold: SELECT name FROM Dogs WHERE breed_code   =    (  SELECT breed_code FROM Dogs GROUP BY breed_code ORDER BY count ( * )  ASC LIMIT 1  ) 

当前idx3
____________________
SELECT gender FROM dogs
SELECT name, gender FROM Dogs WHERE breed_code   =    (  SELECT breed_code FROM Dogs GROUP BY breed_code ORDER BY count ( * )  ASC LIMIT 1  ) 
连接数据库../datasets/cosql_dataset/database/dog_kennels/dog_kennels.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
extra pred: SELECT gender FROM dogs
extra gold: SELECT name, gender FROM Dogs WHERE breed_code   =    (  SELECT breed_code FROM Dogs GROUP BY breed_code ORDER BY count ( * )  ASC LIMIT 1  ) 

当前idx4
____________________
SELECT date_of_treatment FROM treatments
SELECT T1.name ,  T2.date_of_treatment FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id   =   T2.dog_id WHERE T1.breed_code   =    (  SELECT breed_code FROM Dogs GROUP BY breed_code ORDER BY count ( * )  ASC LIMIT 1  ) 
连接数据库../datasets/cosql_dataset/database/dog_kennels/dog_kennels.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
extra pred: SELECT date_of_treatment FROM treatments
extra gold: SELECT T1.name ,  T2.date_of_treatment FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id   =   T2.dog_id WHERE T1.breed_code   =    (  SELECT breed_code FROM Dogs GROUP BY breed_code ORDER BY count ( * )  ASC LIMIT 1  ) 

当前idx1
____________________
SELECT count(*) FROM Student AS T1 JOIN Has_Pet AS T2 ON T1.StuID  =  T2.StuID JOIN Pets AS T3 ON T2.PetID  =  T3.PetID WHERE T3.PetType  =  "cat"
SELECT count ( * )  FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat'
连接数据库../datasets/cosql_dataset/database/pets_1/pets_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
eval_err_num:12
____________________
SELECT count(*) FROM Student AS T1 LEFT JOIN Has_Pet AS T2 ON T1.StuID  =  T2.StuID WHERE T2.StuID IS NULL
select count ( * )  from  ( SELECT stuid FROM student EXCEPT SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid   =   T2.stuid JOIN pets AS T3 ON T3.petid   =   T2.petid WHERE T3.pettype   =   'cat' ) 
连接数据库../datasets/cosql_dataset/database/pets_1/pets_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
easy pred: SELECT count(*) FROM Student AS T1 LEFT JOIN Has_Pet AS T2 ON T1.StuID  =  T2.StuID WHERE T2.StuID IS NULL
easy gold: select count ( * )  from  ( SELECT stuid FROM student EXCEPT SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid   =   T2.stuid JOIN pets AS T3 ON T3.petid   =   T2.petid WHERE T3.pettype   =   'cat' ) 

当前idx3
eval_err_num:13
____________________
SELECT T1.StuID FROM Student AS T1 LEFT JOIN Has_Pet AS T2 ON T1.StuID  =  T2.StuID WHERE T2.StuID IS NULL
SELECT stuid FROM student EXCEPT SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid   =   T2.stuid JOIN pets AS T3 ON T3.petid   =   T2.petid WHERE T3.pettype   =   'cat'
连接数据库../datasets/cosql_dataset/database/pets_1/pets_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
hard pred: SELECT T1.StuID FROM Student AS T1 LEFT JOIN Has_Pet AS T2 ON T1.StuID  =  T2.StuID WHERE T2.StuID IS NULL
hard gold: SELECT stuid FROM student EXCEPT SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid   =   T2.stuid JOIN pets AS T3 ON T3.petid   =   T2.petid WHERE T3.pettype   =   'cat'

当前idx1
____________________
SELECT T1.name FROM visitor AS T1 JOIN visit AS T2 ON T1.id  =  T2.visitor_id JOIN museum AS T3 ON T2.museum_id  =  T3.museum_id WHERE T3.open_year  <  2009 INTERSECT SELECT T1.name FROM visitor AS T1 JOIN visit AS T2 ON T1.id  =  T2.visitor_id JOIN museum AS T3 ON T2.museum_id  =  T3.museum_id WHERE T3.open_year  >  2011
SELECT t1.name FROM visitor AS t1 JOIN visit AS t2 ON t1.id   =   t2.visitor_id JOIN museum AS t3 ON t3.Museum_ID   =   t2.Museum_ID WHERE t3.open_year  <  2009 INTERSECT SELECT t1.name FROM visitor AS t1 JOIN visit AS t2 ON t1.id   =   t2.visitor_id JOIN museum AS t3 ON t3.Museum_ID   =   t2.Museum_ID WHERE t3.open_year  >  2011
连接数据库../datasets/cosql_dataset/database/museum_visit/museum_visit.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT T1.name FROM visitor AS T1 JOIN visit AS T2 ON T1.id  =  T2.visitor_id JOIN museum AS T3 ON T2.museum_id  =  T3.museum_id WHERE T3.open_year  <  2009 INTERSECT SELECT T1.name FROM visitor AS T1 JOIN visit AS T2 ON T1.id  =  T2.visitor_id JOIN museum AS T3 ON T2.museum_id  =  T3.museum_id WHERE T3.open_year  >  2011
SELECT t3.name FROM visitor AS t1 JOIN visit AS t2 ON t1.id   =   t2.visitor_id JOIN museum AS t3 ON t3.Museum_ID   =   t2.Museum_ID WHERE t3.open_year  <  2009 AND t1.name  =   ( SELECT t1.name FROM visitor AS t1 JOIN visit AS t2 ON t1.id   =   t2.visitor_id JOIN museum AS t3 ON t3.Museum_ID   =   t2.Museum_ID WHERE t3.open_year  <  2009 INTERSECT SELECT t1.name FROM visitor AS t1 JOIN visit AS t2 ON t1.id   =   t2.visitor_id JOIN museum AS t3 ON t3.Museum_ID   =   t2.Museum_ID WHERE t3.open_year  >  2011 ) 
连接数据库../datasets/cosql_dataset/database/museum_visit/museum_visit.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
extra pred: SELECT T1.name FROM visitor AS T1 JOIN visit AS T2 ON T1.id  =  T2.visitor_id JOIN museum AS T3 ON T2.museum_id  =  T3.museum_id WHERE T3.open_year  <  2009 INTERSECT SELECT T1.name FROM visitor AS T1 JOIN visit AS T2 ON T1.id  =  T2.visitor_id JOIN museum AS T3 ON T2.museum_id  =  T3.museum_id WHERE T3.open_year  >  2011
extra gold: SELECT t3.name FROM visitor AS t1 JOIN visit AS t2 ON t1.id   =   t2.visitor_id JOIN museum AS t3 ON t3.Museum_ID   =   t2.Museum_ID WHERE t3.open_year  <  2009 AND t1.name  =   ( SELECT t1.name FROM visitor AS t1 JOIN visit AS t2 ON t1.id   =   t2.visitor_id JOIN museum AS t3 ON t3.Museum_ID   =   t2.Museum_ID WHERE t3.open_year  <  2009 INTERSECT SELECT t1.name FROM visitor AS t1 JOIN visit AS t2 ON t1.id   =   t2.visitor_id JOIN museum AS t3 ON t3.Museum_ID   =   t2.Museum_ID WHERE t3.open_year  >  2011 ) 

当前idx3
____________________
SELECT T1.level_of_membership FROM visitor AS T1 JOIN visit AS T2 ON T1.id  =  T2.visitor_id WHERE T1.name  =  "Fernando Gago"
SELECT level_of_membership FROM visitor WHERE name  =  "Fernando Gago"
连接数据库../datasets/cosql_dataset/database/museum_visit/museum_visit.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:False
easy pred: SELECT T1.level_of_membership FROM visitor AS T1 JOIN visit AS T2 ON T1.id  =  T2.visitor_id WHERE T1.name  =  "Fernando Gago"
easy gold: SELECT level_of_membership FROM visitor WHERE name  =  "Fernando Gago"

当前idx4
____________________
SELECT T1.age FROM visitor AS T1 JOIN visit AS T2 ON T1.id  =  T2.visitor_id WHERE T1.name  =  "Fernando Gago"
SELECT age FROM visitor WHERE name  =  "Fernando Gago"
连接数据库../datasets/cosql_dataset/database/museum_visit/museum_visit.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:False
easy pred: SELECT T1.age FROM visitor AS T1 JOIN visit AS T2 ON T1.id  =  T2.visitor_id WHERE T1.name  =  "Fernando Gago"
easy gold: SELECT age FROM visitor WHERE name  =  "Fernando Gago"

当前idx1
eval_err_num:14
____________________
SELECT T2.AirportName FROM airlines AS T1 JOIN flights AS T2 ON T1.uid  =  T2.Airline WHERE T1.Airline = "United Airlines"
SELECT T1.SourceAirport FROM FLIGHTS AS T1 JOIN AIRLINES AS T2 ON T2.uid   =   T1.Airline WHERE T2.Airline   =   "United Airlines"
连接数据库../datasets/cosql_dataset/database/flight_2/flight_2.sqlite
执行第一个查询
执行出错: no such column: T2.AirportName
eval_exec:False
exact_score:0
medium pred: SELECT T2.AirportName FROM airlines AS T1 JOIN flights AS T2 ON T1.uid  =  T2.Airline WHERE T1.Airline = "United Airlines"
medium gold: SELECT T1.SourceAirport FROM FLIGHTS AS T1 JOIN AIRLINES AS T2 ON T2.uid   =   T1.Airline WHERE T2.Airline   =   "United Airlines"

当前idx2
____________________
SELECT T2.FlightNo FROM airlines AS T1 JOIN flights AS T2 ON T1.uid  =  T2.Airline WHERE T1.Airline = "United Airlines"
SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRLINES AS T2 ON T2.uid   =   T1.Airline WHERE T2.Airline   =   "United Airlines"
连接数据库../datasets/cosql_dataset/database/flight_2/flight_2.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx3
____________________
SELECT T2.DestAirport FROM airlines AS T1 JOIN flights AS T2 ON T1.uid  =  T2.Airline WHERE T1.Airline = "United Airlines" AND T2.FlightNo = 28
SELECT DestAirport FROM flights WHERE FlightNo  =  28
连接数据库../datasets/cosql_dataset/database/flight_2/flight_2.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
easy pred: SELECT T2.DestAirport FROM airlines AS T1 JOIN flights AS T2 ON T1.uid  =  T2.Airline WHERE T1.Airline = "United Airlines" AND T2.FlightNo = 28
easy gold: SELECT DestAirport FROM flights WHERE FlightNo  =  28

当前idx4
____________________
SELECT T2.DestAirport FROM airlines AS T1 JOIN flights AS T2 ON T1.uid  =  T2.Airline WHERE T1.Airline = "United Airlines" AND T2.FlightNo = 29
SELECT DestAirport FROM flights WHERE FlightNo  =  29
连接数据库../datasets/cosql_dataset/database/flight_2/flight_2.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
easy pred: SELECT T2.DestAirport FROM airlines AS T1 JOIN flights AS T2 ON T1.uid  =  T2.Airline WHERE T1.Airline = "United Airlines" AND T2.FlightNo = 29
easy gold: SELECT DestAirport FROM flights WHERE FlightNo  =  29

当前idx1
____________________
SELECT first_name, last_name FROM players
SELECT first_name,  last_name FROM players
连接数据库../datasets/cosql_dataset/database/wta_1/wta_1.sqlite
执行第一个查询
执行出错: Could not decode to UTF-8 column 'last_name' with text 'Treyes Albarrac��N'
eval_exec:False
exact_score:True
当前idx2
eval_err_num:15
____________________

SELECT first_name ,  last_name FROM players WHERE hand   =   'L'
连接数据库../datasets/cosql_dataset/database/wta_1/wta_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: 
medium gold: SELECT first_name ,  last_name FROM players WHERE hand   =   'L'

当前idx1
____________________
SELECT COUNT(*) FROM flights AS T1 JOIN airports AS T2 ON T1.DestAirport  =  T2.AirportCode WHERE T2.City  =  'Aberdeen' AND T1.Airline  =  1
SELECT count ( * )  FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport   =   T2.AirportCode JOIN AIRLINES AS T3 ON T3.uid   =   T1.Airline WHERE T2.City   =   "Aberdeen" AND T3.Airline   =   "United Airlines"
连接数据库../datasets/cosql_dataset/database/flight_2/flight_2.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:0
hard pred: SELECT COUNT(*) FROM flights AS T1 JOIN airports AS T2 ON T1.DestAirport  =  T2.AirportCode WHERE T2.City  =  'Aberdeen' AND T1.Airline  =  1
hard gold: SELECT count ( * )  FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport   =   T2.AirportCode JOIN AIRLINES AS T3 ON T3.uid   =   T1.Airline WHERE T2.City   =   "Aberdeen" AND T3.Airline   =   "United Airlines"

当前idx2
____________________
SELECT DISTINCT T2.City FROM flights AS T1 JOIN airports AS T2 ON T1.DestAirport  =  T2.AirportCode WHERE T1.Airline  =  1
SELECT T2.city FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport   =   T2.AirportCode JOIN AIRLINES AS T3 ON T3.uid   =   T1.Airline where T2.city ! =   'Aberdeen' and T3.airline  =  "United Airlines"
连接数据库../datasets/cosql_dataset/database/flight_2/flight_2.sqlite
执行第一个查询
执行第二个查询
执行出错: unrecognized token: "!"
eval_exec:False
exact_score:0
hard pred: SELECT DISTINCT T2.City FROM flights AS T1 JOIN airports AS T2 ON T1.DestAirport  =  T2.AirportCode WHERE T1.Airline  =  1
hard gold: SELECT T2.city FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport   =   T2.AirportCode JOIN AIRLINES AS T3 ON T3.uid   =   T1.Airline where T2.city ! =   'Aberdeen' and T3.airline  =  "United Airlines"

当前idx1
____________________
SELECT T1.Name FROM teacher AS T1 JOIN course_arrange AS T2 ON T1.Teacher_ID  =  T2.Teacher_ID JOIN course AS T3 ON T2.Course_ID  =  T3.Course_ID WHERE T3.Course  =  'math'
SELECT T3.Name FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID   =   T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID   =   T3.Teacher_ID WHERE T2.Course   =   "Math"
连接数据库../datasets/cosql_dataset/database/course_teach/course_teach.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:True
当前idx2
eval_err_num:16
____________________
SELECT T1.Staring_Date FROM teacher AS T1 JOIN course_arrange AS T2 ON T1.Teacher_ID  =  T2.Teacher_ID JOIN course AS T3 ON T2.Course_ID  =  T3.Course_ID WHERE T3.Course  =  'math' AND T2.Grade IN (1,3)
SELECT T2.Staring_Date  FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID   =   T2.Course_ID where T2.Course  =  "Math"
连接数据库../datasets/cosql_dataset/database/course_teach/course_teach.sqlite
执行第一个查询
执行出错: no such column: T1.Staring_Date
eval_exec:False
exact_score:0
medium pred: SELECT T1.Staring_Date FROM teacher AS T1 JOIN course_arrange AS T2 ON T1.Teacher_ID  =  T2.Teacher_ID JOIN course AS T3 ON T2.Course_ID  =  T3.Course_ID WHERE T3.Course  =  'math' AND T2.Grade IN (1,3)
medium gold: SELECT T2.Staring_Date  FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID   =   T2.Course_ID where T2.Course  =  "Math"

当前idx1
____________________
SELECT Birth_Date FROM people JOIN poker_player ON People_ID = Poker_Player_ID ORDER BY Earnings ASC LIMIT 1
SELECT T1.Birth_Date FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID   =   T2.People_ID ORDER BY T2.Earnings ASC LIMIT 1
连接数据库../datasets/cosql_dataset/database/poker_player/poker_player.sqlite
执行第一个查询
执行出错: ambiguous column name: People_ID
eval_exec:False
exact_score:True
当前idx2
____________________
SELECT Name FROM people JOIN poker_player ON People_ID = Poker_Player_ID ORDER BY Earnings ASC LIMIT 1
SELECT name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID   =   T2.People_ID ORDER BY T2.Earnings ASC LIMIT 1
连接数据库../datasets/cosql_dataset/database/poker_player/poker_player.sqlite
执行第一个查询
执行出错: ambiguous column name: People_ID
eval_exec:False
exact_score:True
当前idx3
____________________
SELECT Nationality FROM people JOIN poker_player ON People_ID = Poker_Player_ID ORDER BY Earnings ASC LIMIT 1
SELECT Nationality FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID   =   T2.People_ID ORDER BY T2.Earnings ASC LIMIT 1
连接数据库../datasets/cosql_dataset/database/poker_player/poker_player.sqlite
执行第一个查询
执行出错: ambiguous column name: People_ID
eval_exec:False
exact_score:True
当前idx1
____________________
SELECT count(*) FROM poker_player WHERE Final_Table_Made = 1
SELECT count ( * )  FROM poker_player
连接数据库../datasets/cosql_dataset/database/poker_player/poker_player.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
easy pred: SELECT count(*) FROM poker_player WHERE Final_Table_Made = 1
easy gold: SELECT count ( * )  FROM poker_player

当前idx2
eval_err_num:17
____________________
SELECT count(*) FROM poker_player WHERE Height  >  200
SELECT count ( * )  FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID   =   T2.People_ID WHERE T1.Height  >  200
连接数据库../datasets/cosql_dataset/database/poker_player/poker_player.sqlite
执行第一个查询
执行出错: no such column: Height
eval_exec:False
exact_score:0
medium pred: SELECT count(*) FROM poker_player WHERE Height  >  200
medium gold: SELECT count ( * )  FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID   =   T2.People_ID WHERE T1.Height  >  200

当前idx3
eval_err_num:18
____________________
SELECT avg(Earnings) FROM poker_player WHERE Height  >  200
SELECT avg ( T2.Earnings )  FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID   =   T2.People_ID WHERE T1.Height  >  200
连接数据库../datasets/cosql_dataset/database/poker_player/poker_player.sqlite
执行第一个查询
执行出错: no such column: Height
eval_exec:False
exact_score:0
medium pred: SELECT avg(Earnings) FROM poker_player WHERE Height  >  200
medium gold: SELECT avg ( T2.Earnings )  FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID   =   T2.People_ID WHERE T1.Height  >  200

当前idx1
____________________
SELECT T1.StuID FROM Student AS T1 JOIN Has_Pet AS T2 ON T1.StuID  =  T2.StuID JOIN Pets AS T3 ON T2.PetID  =  T3.PetID WHERE T3.PetType  =  "Dog"
SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'dog'
连接数据库../datasets/cosql_dataset/database/pets_1/pets_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:True
当前idx2
____________________
SELECT T1.StuID FROM Student AS T1 JOIN Has_Pet AS T2 ON T1.StuID  =  T2.StuID JOIN Pets AS T3 ON T2.PetID  =  T3.PetID WHERE T3.PetType  =  "Dog" INTERSECT SELECT T1.StuID FROM Student AS T1 JOIN Has_Pet AS T2 ON T1.StuID  =  T2.StuID JOIN Pets AS T3 ON T2.PetID  =  T3.PetID WHERE T3.PetType  =  "Cat"
SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'dog' intersect SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat'
连接数据库../datasets/cosql_dataset/database/pets_1/pets_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx3
____________________
SELECT T1.Fname, T1.Age FROM Student AS T1 JOIN Has_Pet AS T2 ON T1.StuID  =  T2.StuID JOIN Pets AS T3 ON T2.PetID  =  T3.PetID WHERE T3.PetType  =  "Dog"
SELECT T1.Fname, T1.age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'dog'
连接数据库../datasets/cosql_dataset/database/pets_1/pets_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:True
当前idx1
____________________
SELECT count(*) FROM country
SELECT count ( * )  from country
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT countrycode FROM city WHERE name = "Herat"
SELECT countrycode  from city where name  =  "Herat"
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx3
____________________
SELECT population FROM city WHERE name = "Qandahar"
SELECT population  from city where name  =  "Qandahar"
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx1
____________________
SELECT id FROM TV_Channel GROUP BY Country HAVING COUNT(*)  >  2
select id from tv_channel where country in  ( SELECT country FROM tv_channel GROUP BY country HAVING count ( * )   >  2 ) 
连接数据库../datasets/cosql_dataset/database/tvshow/tvshow.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
hard pred: SELECT id FROM TV_Channel GROUP BY Country HAVING COUNT(*)  >  2
hard gold: select id from tv_channel where country in  ( SELECT country FROM tv_channel GROUP BY country HAVING count ( * )   >  2 ) 

当前idx2
____________________
SELECT Package_Option FROM TV_Channel GROUP BY Country HAVING COUNT(*)  >  2
select package_option from tv_channel where country in  ( SELECT country FROM tv_channel GROUP BY country HAVING count ( * )   >  2 ) 
连接数据库../datasets/cosql_dataset/database/tvshow/tvshow.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
hard pred: SELECT Package_Option FROM TV_Channel GROUP BY Country HAVING COUNT(*)  >  2
hard gold: select package_option from tv_channel where country in  ( SELECT country FROM tv_channel GROUP BY country HAVING count ( * )   >  2 ) 

当前idx3
eval_err_num:19
____________________
SELECT series_name FROM TV_series ORDER BY series_name ASC
SELECT series_name FROM tv_channel order by series_name asc
连接数据库../datasets/cosql_dataset/database/tvshow/tvshow.sqlite
执行第一个查询
执行出错: no such column: series_name
eval_exec:False
exact_score:0
easy pred: SELECT series_name FROM TV_series ORDER BY series_name ASC
easy gold: SELECT series_name FROM tv_channel order by series_name asc

当前idx1
____________________
SELECT count(*) FROM Treatments
SELECT count ( * )  FROM Dogs WHERE dog_id IN  (  SELECT dog_id FROM Treatments  ) 
连接数据库../datasets/cosql_dataset/database/dog_kennels/dog_kennels.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
hard pred: SELECT count(*) FROM Treatments
hard gold: SELECT count ( * )  FROM Dogs WHERE dog_id IN  (  SELECT dog_id FROM Treatments  ) 

当前idx2
____________________
SELECT age FROM Dogs WHERE dog_id IN (SELECT dog_id FROM Treatments) ORDER BY age ASC LIMIT 1
SELECT min ( age )  FROM Dogs WHERE dog_id IN  (  SELECT dog_id FROM Treatments  ) 
连接数据库../datasets/cosql_dataset/database/dog_kennels/dog_kennels.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:0
hard pred: SELECT age FROM Dogs WHERE dog_id IN (SELECT dog_id FROM Treatments) ORDER BY age ASC LIMIT 1
hard gold: SELECT min ( age )  FROM Dogs WHERE dog_id IN  (  SELECT dog_id FROM Treatments  ) 

当前idx3
____________________
SELECT age FROM Dogs WHERE dog_id IN (SELECT dog_id FROM Treatments) ORDER BY age DESC LIMIT 1
SELECT max ( age )  FROM Dogs WHERE dog_id IN  (  SELECT dog_id FROM Treatments  ) 
连接数据库../datasets/cosql_dataset/database/dog_kennels/dog_kennels.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:0
hard pred: SELECT age FROM Dogs WHERE dog_id IN (SELECT dog_id FROM Treatments) ORDER BY age DESC LIMIT 1
hard gold: SELECT max ( age )  FROM Dogs WHERE dog_id IN  (  SELECT dog_id FROM Treatments  ) 

当前idx4
____________________
SELECT avg(age) FROM Dogs WHERE dog_id IN (SELECT dog_id FROM Treatments)
SELECT avg ( age )  FROM Dogs WHERE dog_id IN  (  SELECT dog_id FROM Treatments  ) 
连接数据库../datasets/cosql_dataset/database/dog_kennels/dog_kennels.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx1
eval_err_num:20
____________________
SELECT Name FROM country WHERE Language != "English"
SELECT Name FROM country WHERE Name NOT IN  ( SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code   =   T2.CountryCode WHERE T2.Language   =   "English" ) 
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行出错: no such column: Language
eval_exec:False
exact_score:0
hard pred: SELECT Name FROM country WHERE Language != "English"
hard gold: SELECT Name FROM country WHERE Name NOT IN  ( SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code   =   T2.CountryCode WHERE T2.Language   =   "English" ) 

当前idx2
eval_err_num:21
____________________
SELECT SUM(Population) FROM country WHERE Language != "English"
SELECT Name,sum ( Population )  FROM country WHERE Name NOT IN  ( SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code   =   T2.CountryCode WHERE T2.Language   =   "English" )  group by Name
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行出错: no such column: Language
eval_exec:False
exact_score:0
extra pred: SELECT SUM(Population) FROM country WHERE Language != "English"
extra gold: SELECT Name,sum ( Population )  FROM country WHERE Name NOT IN  ( SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code   =   T2.CountryCode WHERE T2.Language   =   "English" )  group by Name

当前idx1
____________________
SELECT weight FROM cars_data WHERE id = 1
SELECT T2.Weight FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId   =   T2.Id WHERE T1.MakeID  =  1
连接数据库../datasets/cosql_dataset/database/car_1/car_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:False
medium pred: SELECT weight FROM cars_data WHERE id = 1
medium gold: SELECT T2.Weight FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId   =   T2.Id WHERE T1.MakeID  =  1

当前idx2
eval_err_num:22
____________________
SELECT year FROM model_list WHERE model = "buick"
SELECT T2.Year FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId   =   T2.Id WHERE T1.Model  =  "buick"
连接数据库../datasets/cosql_dataset/database/car_1/car_1.sqlite
执行第一个查询
执行出错: no such column: year
eval_exec:False
exact_score:0
medium pred: SELECT year FROM model_list WHERE model = "buick"
medium gold: SELECT T2.Year FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId   =   T2.Id WHERE T1.Model  =  "buick"

当前idx3
____________________
SELECT horsepower FROM cars_data WHERE id = 1
SELECT T2.Horsepower FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId   =   T2.Id WHERE T1.Model  =  "plymouth"
连接数据库../datasets/cosql_dataset/database/car_1/car_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT horsepower FROM cars_data WHERE id = 1
medium gold: SELECT T2.Horsepower FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId   =   T2.Id WHERE T1.Model  =  "plymouth"

当前idx4
eval_err_num:23
____________________
SELECT model FROM cars_data WHERE cylinders = 4 ORDER BY horsepower DESC LIMIT 1
SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.Cylinders  =  4 ORDER BY T2.horsepower DESC LIMIT 1
连接数据库../datasets/cosql_dataset/database/car_1/car_1.sqlite
执行第一个查询
执行出错: no such column: model
eval_exec:False
exact_score:0
extra pred: SELECT model FROM cars_data WHERE cylinders = 4 ORDER BY horsepower DESC LIMIT 1
extra gold: SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.Cylinders  =  4 ORDER BY T2.horsepower DESC LIMIT 1

当前idx1
eval_err_num:24
____________________
SELECT COUNT(DISTINCT Model) FROM car_names WHERE MakeId IN (SELECT Id FROM car_makers WHERE Country = 'USA') AND Model IN (SELECT Model FROM car_names WHERE MakeId IN (SELECT Id FROM car_makers WHERE Country = 'USA') AND Year = 1974)
select count ( * )  from cars_data where year = '1974'
连接数据库../datasets/cosql_dataset/database/car_1/car_1.sqlite
执行第一个查询
执行出错: no such column: Year
eval_exec:False
exact_score:0
easy pred: SELECT COUNT(DISTINCT Model) FROM car_names WHERE MakeId IN (SELECT Id FROM car_makers WHERE Country = 'USA') AND Model IN (SELECT Model FROM car_names WHERE MakeId IN (SELECT Id FROM car_makers WHERE Country = 'USA') AND Year = 1974)
easy gold: select count ( * )  from cars_data where year = '1974'

当前idx2
eval_err_num:25
____________________
SELECT Id FROM car_names WHERE MakeId IN (SELECT Id FROM car_makers WHERE Country = 'USA') AND Model IN (SELECT Model FROM car_names WHERE MakeId IN (SELECT Id FROM car_makers WHERE Country = 'USA') AND Year = 1974 AND Cylinders = 8)
select id  from cars_data where year = '1974' and Cylinders  =  '8'
连接数据库../datasets/cosql_dataset/database/car_1/car_1.sqlite
执行第一个查询
执行出错: no such column: Id
eval_exec:False
exact_score:0
medium pred: SELECT Id FROM car_names WHERE MakeId IN (SELECT Id FROM car_makers WHERE Country = 'USA') AND Model IN (SELECT Model FROM car_names WHERE MakeId IN (SELECT Id FROM car_makers WHERE Country = 'USA') AND Year = 1974 AND Cylinders = 8)
medium gold: select id  from cars_data where year = '1974' and Cylinders  =  '8'

当前idx1
____________________
SELECT Name FROM shop
select name from shop
连接数据库../datasets/cosql_dataset/database/employee_hire_evaluation/employee_hire_evaluation.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT Name FROM shop WHERE Name IN (SELECT T1.Name FROM shop AS T1 JOIN hiring AS T2 ON T1.Shop_ID  =  T2.Shop_ID)
SELECT t2.name FROM hiring AS t1 JOIN shop AS t2 ON t1.shop_id   =   t2.shop_id GROUP BY t1.shop_id
连接数据库../datasets/cosql_dataset/database/employee_hire_evaluation/employee_hire_evaluation.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:0
medium pred: SELECT Name FROM shop WHERE Name IN (SELECT T1.Name FROM shop AS T1 JOIN hiring AS T2 ON T1.Shop_ID  =  T2.Shop_ID)
medium gold: SELECT t2.name FROM hiring AS t1 JOIN shop AS t2 ON t1.shop_id   =   t2.shop_id GROUP BY t1.shop_id

当前idx3
____________________
SELECT T1.Name FROM shop AS T1 JOIN hiring AS T2 ON T1.Shop_ID  =  T2.Shop_ID ORDER BY count(*) DESC LIMIT 1
SELECT t2.name FROM hiring AS t1 JOIN shop AS t2 ON t1.shop_id   =   t2.shop_id GROUP BY t1.shop_id ORDER BY count ( * )  DESC LIMIT 1
连接数据库../datasets/cosql_dataset/database/employee_hire_evaluation/employee_hire_evaluation.sqlite
执行第一个查询
执行出错: misuse of aggregate: count()
eval_exec:False
exact_score:0
extra pred: SELECT T1.Name FROM shop AS T1 JOIN hiring AS T2 ON T1.Shop_ID  =  T2.Shop_ID ORDER BY count(*) DESC LIMIT 1
extra gold: SELECT t2.name FROM hiring AS t1 JOIN shop AS t2 ON t1.shop_id   =   t2.shop_id GROUP BY t1.shop_id ORDER BY count ( * )  DESC LIMIT 1

当前idx1
____________________
SELECT count(*) FROM singer
select count ( distinct Singer_ID )  from Singer
连接数据库../datasets/cosql_dataset/database/singer/singer.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
easy pred: SELECT count(*) FROM singer
easy gold: select count ( distinct Singer_ID )  from Singer

当前idx2
____________________
SELECT count(*) FROM singer WHERE singer_id IN (SELECT singer_id FROM song WHERE sales > 300000)
SELECT count ( DISTINCT T1.Name )  FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID WHERE T2.Sales > 300000
连接数据库../datasets/cosql_dataset/database/singer/singer.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT count(*) FROM singer WHERE singer_id IN (SELECT singer_id FROM song WHERE sales > 300000)
medium gold: SELECT count ( DISTINCT T1.Name )  FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID WHERE T2.Sales > 300000

当前idx3
____________________
SELECT distinct name FROM singer WHERE singer_id IN (SELECT singer_id FROM song WHERE sales > 300000)
SELECT DISTINCT T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID WHERE T2.Sales > 300000
连接数据库../datasets/cosql_dataset/database/singer/singer.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:0
medium pred: SELECT distinct name FROM singer WHERE singer_id IN (SELECT singer_id FROM song WHERE sales > 300000)
medium gold: SELECT DISTINCT T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID WHERE T2.Sales > 300000

当前idx1
____________________
SELECT contestant_name FROM CONTESTANTS
SELECT contestant_name FROM CONTESTANTS
连接数据库../datasets/cosql_dataset/database/voter_1/voter_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT count(*) FROM CONTESTANTS
SELECT COUNT ( contestant_name )  FROM CONTESTANTS
连接数据库../datasets/cosql_dataset/database/voter_1/voter_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
easy pred: SELECT count(*) FROM CONTESTANTS
easy gold: SELECT COUNT ( contestant_name )  FROM CONTESTANTS

当前idx3
____________________
SELECT contestant_name FROM CONTESTANTS WHERE contestant_number = 1
SELECT contestant_name FROM CONTESTANTS WHERE contestant_number  =  1
连接数据库../datasets/cosql_dataset/database/voter_1/voter_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx4
____________________
SELECT contestant_name FROM CONTESTANTS WHERE contestant_number = 2
SELECT contestant_name FROM CONTESTANTS WHERE contestant_number  =  2
连接数据库../datasets/cosql_dataset/database/voter_1/voter_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx1
____________________
SELECT AirportName FROM airports
SELECT airportname FROM airports
连接数据库../datasets/cosql_dataset/database/flight_2/flight_2.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT count(*) FROM flights
SELECT COUNT ( DISTINCT Flightno )  FROM flights
连接数据库../datasets/cosql_dataset/database/flight_2/flight_2.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
easy pred: SELECT count(*) FROM flights
easy gold: SELECT COUNT ( DISTINCT Flightno )  FROM flights

当前idx3
____________________
SELECT count(distinct Country) FROM airports
SELECT COUNT ( DISTINCT country )  FROM airports
连接数据库../datasets/cosql_dataset/database/flight_2/flight_2.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx1
____________________
SELECT count(*) FROM Breeds
SELECT count ( * )  from Breeds
连接数据库../datasets/cosql_dataset/database/dog_kennels/dog_kennels.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
eval_err_num:26
____________________
SELECT breed_name FROM Breeds ORDER BY weight DESC LIMIT 1
SELECT T1.breed_name FROM Breeds AS T1 JOIN Dogs AS T2 ON T1.breed_code   =   T2.breed_code GROUP BY T1.breed_name ORDER BY count ( * )  DESC LIMIT 1
连接数据库../datasets/cosql_dataset/database/dog_kennels/dog_kennels.sqlite
执行第一个查询
执行出错: no such column: weight
eval_exec:False
exact_score:0
extra pred: SELECT breed_name FROM Breeds ORDER BY weight DESC LIMIT 1
extra gold: SELECT T1.breed_name FROM Breeds AS T1 JOIN Dogs AS T2 ON T1.breed_code   =   T2.breed_code GROUP BY T1.breed_name ORDER BY count ( * )  DESC LIMIT 1

当前idx3
eval_err_num:27
____________________
SELECT weight FROM Breeds WHERE breed_name = "Bulldog"
SELECT T2.size_code FROM Breeds AS T1 JOIN Dogs AS T2 ON T1.breed_code   =   T2.breed_code where T1.breed_name = "Bulldog"
连接数据库../datasets/cosql_dataset/database/dog_kennels/dog_kennels.sqlite
执行第一个查询
执行出错: no such column: weight
eval_exec:False
exact_score:0
medium pred: SELECT weight FROM Breeds WHERE breed_name = "Bulldog"
medium gold: SELECT T2.size_code FROM Breeds AS T1 JOIN Dogs AS T2 ON T1.breed_code   =   T2.breed_code where T1.breed_name = "Bulldog"

当前idx4
____________________
SELECT breed_name FROM Breeds ORDER BY count(*) DESC LIMIT 1
SELECT T1.breed_name FROM Breeds AS T1 JOIN Dogs AS T2 ON T1.breed_code   =   T2.breed_code GROUP BY T1.breed_name ORDER BY count ( * )  DESC LIMIT 1
连接数据库../datasets/cosql_dataset/database/dog_kennels/dog_kennels.sqlite
执行第一个查询
执行出错: misuse of aggregate: count()
eval_exec:False
exact_score:0
extra pred: SELECT breed_name FROM Breeds ORDER BY count(*) DESC LIMIT 1
extra gold: SELECT T1.breed_name FROM Breeds AS T1 JOIN Dogs AS T2 ON T1.breed_code   =   T2.breed_code GROUP BY T1.breed_name ORDER BY count ( * )  DESC LIMIT 1

当前idx1
____________________
SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID GROUP BY T1.Conductor_ID ORDER BY count(*) DESC LIMIT 1
SELECT Name FROM conductor ORDER BY Year_of_Work DESC LIMIT 1
连接数据库../datasets/cosql_dataset/database/orchestra/orchestra.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID GROUP BY T1.Conductor_ID ORDER BY count(*) DESC LIMIT 1
medium gold: SELECT Name FROM conductor ORDER BY Year_of_Work DESC LIMIT 1

当前idx2
____________________
SELECT T1.Year_of_Work FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID WHERE T1.Name = "Robert Craft"
SELECT Year_of_Work FROM conductor where name = 'Robert Craft'
连接数据库../datasets/cosql_dataset/database/orchestra/orchestra.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:False
easy pred: SELECT T1.Year_of_Work FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID WHERE T1.Name = "Robert Craft"
easy gold: SELECT Year_of_Work FROM conductor where name = 'Robert Craft'

当前idx3
____________________
SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID GROUP BY T1.Conductor_ID ORDER BY count(*) ASC LIMIT 1
SELECT Name FROM conductor ORDER BY Year_of_Work asc LIMIT 1
连接数据库../datasets/cosql_dataset/database/orchestra/orchestra.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID GROUP BY T1.Conductor_ID ORDER BY count(*) ASC LIMIT 1
medium gold: SELECT Name FROM conductor ORDER BY Year_of_Work asc LIMIT 1

当前idx1
eval_err_num:28
____________________
SELECT T1.first_name, T1.last_name, COUNT(*) AS num_treatments FROM Treatments AS T1 JOIN Professionals AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.first_name, T1.last_name ORDER BY num_treatments DESC LIMIT 1
SELECT * FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id   =   T2.professional_id GROUP BY T1.professional_id order by COUNT ( * )   desc limit 1
连接数据库../datasets/cosql_dataset/database/dog_kennels/dog_kennels.sqlite
执行第一个查询
执行出错: no such column: T1.first_name
eval_exec:False
exact_score:0
extra pred: SELECT T1.first_name, T1.last_name, COUNT(*) AS num_treatments FROM Treatments AS T1 JOIN Professionals AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.first_name, T1.last_name ORDER BY num_treatments DESC LIMIT 1
extra gold: SELECT * FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id   =   T2.professional_id GROUP BY T1.professional_id order by COUNT ( * )   desc limit 1

当前idx2
eval_err_num:29
____________________
SELECT T1.first_name, T1.last_name, COUNT(*) AS num_treatments FROM Treatments AS T1 JOIN Professionals AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.first_name, T1.last_name ORDER BY num_treatments ASC LIMIT 1
SELECT * FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id   =   T2.professional_id GROUP BY T1.professional_id order by COUNT ( * )   limit 1
连接数据库../datasets/cosql_dataset/database/dog_kennels/dog_kennels.sqlite
执行第一个查询
执行出错: no such column: T1.first_name
eval_exec:False
exact_score:0
extra pred: SELECT T1.first_name, T1.last_name, COUNT(*) AS num_treatments FROM Treatments AS T1 JOIN Professionals AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.first_name, T1.last_name ORDER BY num_treatments ASC LIMIT 1
extra gold: SELECT * FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id   =   T2.professional_id GROUP BY T1.professional_id order by COUNT ( * )   limit 1

当前idx3
eval_err_num:30
____________________
SELECT COUNT(*) FROM (SELECT T1.first_name, T1.last_name FROM Treatments AS T1 JOIN Professionals AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.first_name, T1.last_name HAVING COUNT(*)  <=  3)
select count ( * )  from  ( SELECT * FROM Professionals AS T1 JOIN Treatments AS T2 group by T2.professional_id having count ( * )  < =  3 ) 
连接数据库../datasets/cosql_dataset/database/dog_kennels/dog_kennels.sqlite
执行第一个查询
执行出错: no such column: T1.first_name
eval_exec:False
exact_score:0
easy pred: SELECT COUNT(*) FROM (SELECT T1.first_name, T1.last_name FROM Treatments AS T1 JOIN Professionals AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.first_name, T1.last_name HAVING COUNT(*)  <=  3)
easy gold: select count ( * )  from  ( SELECT * FROM Professionals AS T1 JOIN Treatments AS T2 group by T2.professional_id having count ( * )  < =  3 ) 

当前idx1
____________________
SELECT Name FROM country WHERE Code NOT IN (SELECT CountryCode FROM countrylanguage WHERE Language = "English")
select name from country where code not in  ( SELECT CountryCode FROM countrylanguage WHERE LANGUAGE   =   "English" ) 
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT Name FROM country WHERE Code NOT IN (SELECT CountryCode FROM countrylanguage WHERE Language = "English") AND GovernmentForm != "Republic"
select name from country where code in  ( SELECT Code FROM country WHERE GovernmentForm ! =  "Republic" EXCEPT SELECT CountryCode FROM countrylanguage WHERE LANGUAGE   =   "English" ) 
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
执行出错: unrecognized token: "!"
eval_exec:False
exact_score:0
hard pred: SELECT Name FROM country WHERE Code NOT IN (SELECT CountryCode FROM countrylanguage WHERE Language = "English") AND GovernmentForm != "Republic"
hard gold: select name from country where code in  ( SELECT Code FROM country WHERE GovernmentForm ! =  "Republic" EXCEPT SELECT CountryCode FROM countrylanguage WHERE LANGUAGE   =   "English" ) 

当前idx1
eval_err_num:31
____________________
SELECT SUM(vote_id) FROM VOTES WHERE state IN ('NY','CA')
SELECT count ( * )  FROM votes WHERE state   =   'NY' or  state   =   'CA'
连接数据库../datasets/cosql_dataset/database/voter_1/voter_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT SUM(vote_id) FROM VOTES WHERE state IN ('NY','CA')
medium gold: SELECT count ( * )  FROM votes WHERE state   =   'NY' or  state   =   'CA'

当前idx2
____________________
SELECT DISTINCT contestant_number FROM VOTES
SELECT distinct contestant_number FROM votes
连接数据库../datasets/cosql_dataset/database/voter_1/voter_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx3
____________________
SELECT COUNT(*) FROM VOTES WHERE contestant_number = 5
SELECT count ( * )  from votes where contestant_number  =  '5'
连接数据库../datasets/cosql_dataset/database/voter_1/voter_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx1
____________________
SELECT Nationality FROM people GROUP BY Nationality
SELECT distinct Nationality FROM people
连接数据库../datasets/cosql_dataset/database/poker_player/poker_player.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
easy pred: SELECT Nationality FROM people GROUP BY Nationality
easy gold: SELECT distinct Nationality FROM people

当前idx2
____________________
SELECT Nationality FROM people
SELECT Nationality FROM people
连接数据库../datasets/cosql_dataset/database/poker_player/poker_player.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx3
____________________
SELECT count(*) FROM people WHERE Nationality = "Russia"
SELECT count ( * )  FROM people where Nationality  =  'Russia'
连接数据库../datasets/cosql_dataset/database/poker_player/poker_player.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx4
____________________
SELECT count(*) FROM people WHERE Nationality = "Bulgaria"
SELECT count ( * )  FROM people where Nationality  =  'Bulgaria'
连接数据库../datasets/cosql_dataset/database/poker_player/poker_player.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx1
____________________
SELECT T1.Maker FROM car_makers AS T1 JOIN model_list AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Maker HAVING COUNT(*)  >  3
SELECT * FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id   =   T2.Maker GROUP BY T1.Id HAVING count ( * )   >  3
连接数据库../datasets/cosql_dataset/database/car_1/car_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT T1.Maker FROM car_makers AS T1 JOIN model_list AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Maker HAVING COUNT(*)  >  3
medium gold: SELECT * FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id   =   T2.Maker GROUP BY T1.Id HAVING count ( * )   >  3

当前idx2
____________________
SELECT T1.Id FROM car_makers AS T1 JOIN model_list AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id HAVING COUNT(*)  >  3
SELECT T1.id FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id   =   T2.Maker GROUP BY T1.Id HAVING count ( * )   >  3
连接数据库../datasets/cosql_dataset/database/car_1/car_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx3
____________________
SELECT T1.FullName, T1.Id FROM car_makers AS T1 JOIN model_list AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id HAVING COUNT(*)  >  3
SELECT T1.FullName ,  T1.Id FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id   =   T2.Maker GROUP BY T1.Id HAVING count ( * )   >  3
连接数据库../datasets/cosql_dataset/database/car_1/car_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx1
____________________
SELECT avg(Horsepower) FROM cars_data
SELECT avg ( Horsepower )  FROM cars_data
连接数据库../datasets/cosql_dataset/database/car_1/car_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
eval_err_num:32
____________________
SELECT Model, Horsepower FROM cars_data ORDER BY Horsepower DESC LIMIT 1
SELECT Id FROM CARS_DATA ORDER BY Horsepower DESC LIMIT 1
连接数据库../datasets/cosql_dataset/database/car_1/car_1.sqlite
执行第一个查询
执行出错: no such column: Model
eval_exec:False
exact_score:0
medium pred: SELECT Model, Horsepower FROM cars_data ORDER BY Horsepower DESC LIMIT 1
medium gold: SELECT Id FROM CARS_DATA ORDER BY Horsepower DESC LIMIT 1

当前idx3
____________________
SELECT Accelerate FROM cars_data WHERE Id = 39
SELECT accelerate FROM CARS_DATA ORDER BY Horsepower DESC LIMIT 1
连接数据库../datasets/cosql_dataset/database/car_1/car_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:0
medium pred: SELECT Accelerate FROM cars_data WHERE Id = 39
medium gold: SELECT accelerate FROM CARS_DATA ORDER BY Horsepower DESC LIMIT 1

当前idx4
eval_err_num:33
____________________
SELECT Model FROM cars_data WHERE Accelerate > 19.0
SELECT COUNT ( * )  FROM CARS_DATA WHERE Accelerate  >  19.0
连接数据库../datasets/cosql_dataset/database/car_1/car_1.sqlite
执行第一个查询
执行出错: no such column: Model
eval_exec:False
exact_score:0
easy pred: SELECT Model FROM cars_data WHERE Accelerate > 19.0
easy gold: SELECT COUNT ( * )  FROM CARS_DATA WHERE Accelerate  >  19.0

当前idx1
____________________
SELECT YEAR FROM concert WHERE concert_Name = "Auditions"
SELECT year from concert where concert_name  =  "Auditions"
连接数据库../datasets/cosql_dataset/database/concert_singer/concert_singer.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT YEAR FROM concert WHERE concert_Name = "Super bootcamp"
SELECT year from concert where concert_name  =  "Super bootcamp"
连接数据库../datasets/cosql_dataset/database/concert_singer/concert_singer.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx3
____________________
SELECT YEAR FROM concert WHERE concert_Name = "Home Visits"
SELECT year from concert where concert_name  =  "Home Visits"
连接数据库../datasets/cosql_dataset/database/concert_singer/concert_singer.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx4
eval_err_num:34
____________________
SELECT count(*) FROM concert WHERE YEAR IN (2014, 2015)
SELECT count ( * )  FROM concert WHERE YEAR   =   2014 OR YEAR   =   2015
连接数据库../datasets/cosql_dataset/database/concert_singer/concert_singer.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT count(*) FROM concert WHERE YEAR IN (2014, 2015)
medium gold: SELECT count ( * )  FROM concert WHERE YEAR   =   2014 OR YEAR   =   2015

当前idx>4
____________________
SELECT count(*) FROM concert WHERE YEAR = 2014
SELECT count ( * )  FROM concert WHERE YEAR   =   2014
连接数据库../datasets/cosql_dataset/database/concert_singer/concert_singer.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx>4
____________________
SELECT count(*) FROM concert WHERE YEAR = 2015
SELECT count ( * )  FROM concert WHERE YEAR   =   2015
连接数据库../datasets/cosql_dataset/database/concert_singer/concert_singer.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx1
____________________
SELECT tourney_name FROM matches
SELECT distinct tourney_name FROM matches
连接数据库../datasets/cosql_dataset/database/wta_1/wta_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:True
当前idx1
eval_err_num:35
____________________
SELECT count(*) FROM Students WHERE date_left IS NOT NULL
SELECT count ( * )   from students
连接数据库../datasets/cosql_dataset/database/student_transcripts_tracking/student_transcripts_tracking.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
easy pred: SELECT count(*) FROM Students WHERE date_left IS NOT NULL
easy gold: SELECT count ( * )   from students

当前idx2
eval_err_num:36
____________________
SELECT first_name, middle_name, last_name FROM Students WHERE date_left IS NOT NULL ORDER BY date_left ASC LIMIT 1
SELECT first_name ,  middle_name ,  last_name FROM Students ORDER BY date_left ASC LIMIT 1
连接数据库../datasets/cosql_dataset/database/student_transcripts_tracking/student_transcripts_tracking.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT first_name, middle_name, last_name FROM Students WHERE date_left IS NOT NULL ORDER BY date_left ASC LIMIT 1
medium gold: SELECT first_name ,  middle_name ,  last_name FROM Students ORDER BY date_left ASC LIMIT 1

当前idx1
____________________
SELECT SourceAirport FROM flights WHERE FlightNo = 28
SELECT SourceAirport FROM Flights WHERE FlightNo = '28'
连接数据库../datasets/cosql_dataset/database/flight_2/flight_2.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT City FROM airports WHERE AirportCode = "APG"
select city from airports where airportcode = 'APG'
连接数据库../datasets/cosql_dataset/database/flight_2/flight_2.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx3
____________________
SELECT AirportName FROM airports WHERE AirportCode NOT IN (SELECT SourceAirport FROM flights) AND AirportCode NOT IN (SELECT DestAirport FROM flights)
SELECT AirportName FROM Airports WHERE AirportCode NOT IN  ( SELECT SourceAirport FROM Flights UNION SELECT DestAirport FROM Flights ) 
连接数据库../datasets/cosql_dataset/database/flight_2/flight_2.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:0
hard pred: SELECT AirportName FROM airports WHERE AirportCode NOT IN (SELECT SourceAirport FROM flights) AND AirportCode NOT IN (SELECT DestAirport FROM flights)
hard gold: SELECT AirportName FROM Airports WHERE AirportCode NOT IN  ( SELECT SourceAirport FROM Flights UNION SELECT DestAirport FROM Flights ) 

当前idx1
____________________
SELECT transcript_date FROM Transcripts ORDER BY transcript_date ASC LIMIT 1
SELECT * FROM Transcripts ORDER BY transcript_date ASC LIMIT 1
连接数据库../datasets/cosql_dataset/database/student_transcripts_tracking/student_transcripts_tracking.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT transcript_date FROM Transcripts ORDER BY transcript_date ASC LIMIT 1
medium gold: SELECT * FROM Transcripts ORDER BY transcript_date ASC LIMIT 1

当前idx1
____________________
SELECT winner_name FROM matches ORDER BY winner_age ASC LIMIT 3
SELECT DISTINCT winner_name  FROM matches ORDER BY winner_age LIMIT 3
连接数据库../datasets/cosql_dataset/database/wta_1/wta_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:True
当前idx2
____________________
SELECT winner_rank_points FROM matches ORDER BY winner_age ASC LIMIT 3
SELECT loser_rank_points FROM matches ORDER BY winner_age LIMIT 3
连接数据库../datasets/cosql_dataset/database/wta_1/wta_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT winner_rank_points FROM matches ORDER BY winner_age ASC LIMIT 3
medium gold: SELECT loser_rank_points FROM matches ORDER BY winner_age LIMIT 3

当前idx3
____________________
SELECT winner_age FROM matches ORDER BY winner_age ASC LIMIT 3
SELECT winner_age FROM matches ORDER BY winner_age LIMIT 3
连接数据库../datasets/cosql_dataset/database/wta_1/wta_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx1
____________________
SELECT count(*) FROM Friend
SELECT count ( * )  FROM Friend
连接数据库../datasets/cosql_dataset/database/network_1/network_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT avg(grade) FROM Highschooler
SELECT avg ( grade )  FROM Highschooler
连接数据库../datasets/cosql_dataset/database/network_1/network_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx3
____________________
SELECT name FROM Highschooler
SELECT DISTINCT name  FROM Highschooler
连接数据库../datasets/cosql_dataset/database/network_1/network_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:True
当前idx1
____________________
SELECT count(*) FROM poker_player
select count ( * )  from poker_player
连接数据库../datasets/cosql_dataset/database/poker_player/poker_player.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT count(*) FROM poker_player WHERE Earnings > 300000
SELECT count ( * )  FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID   =   T2.People_ID WHERE T2.Earnings  >  300000
连接数据库../datasets/cosql_dataset/database/poker_player/poker_player.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:False
medium pred: SELECT count(*) FROM poker_player WHERE Earnings > 300000
medium gold: SELECT count ( * )  FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID   =   T2.People_ID WHERE T2.Earnings  >  300000

当前idx3
eval_err_num:37
____________________
SELECT T1.Name, T2.Name FROM poker_player AS T1 JOIN people AS T2 ON T1.People_ID  =  T2.People_ID WHERE T1.Earnings > 300000
SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID   =   T2.People_ID WHERE T2.Earnings  >  300000
连接数据库../datasets/cosql_dataset/database/poker_player/poker_player.sqlite
执行第一个查询
执行出错: no such column: T1.Name
eval_exec:False
exact_score:0
medium pred: SELECT T1.Name, T2.Name FROM poker_player AS T1 JOIN people AS T2 ON T1.People_ID  =  T2.People_ID WHERE T1.Earnings > 300000
medium gold: SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID   =   T2.People_ID WHERE T2.Earnings  >  300000

当前idx1
____________________
SELECT count(*) FROM museum
SELECT count ( * )  from museum
连接数据库../datasets/cosql_dataset/database/museum_visit/museum_visit.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT Num_of_Staff FROM museum
SELECT Num_of_Staff from museum
连接数据库../datasets/cosql_dataset/database/museum_visit/museum_visit.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx3
____________________
SELECT Museum_ID, Name FROM museum ORDER BY Num_of_Staff DESC LIMIT 1
SELECT Museum_ID, Name from museum order by Num_of_Staff desc limit 1
连接数据库../datasets/cosql_dataset/database/museum_visit/museum_visit.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx1
____________________
SELECT count(*) FROM Students
SELECT count ( * )  FROM Students
连接数据库../datasets/cosql_dataset/database/student_transcripts_tracking/student_transcripts_tracking.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT first_name, middle_name, last_name FROM Students
SELECT first_name,middle_name,last_name  FROM Students
连接数据库../datasets/cosql_dataset/database/student_transcripts_tracking/student_transcripts_tracking.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx3
____________________
SELECT first_name, middle_name, last_name, date_first_registered FROM Students
SELECT date_first_registered  FROM Students
连接数据库../datasets/cosql_dataset/database/student_transcripts_tracking/student_transcripts_tracking.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
easy pred: SELECT first_name, middle_name, last_name, date_first_registered FROM Students
easy gold: SELECT date_first_registered  FROM Students

当前idx1
____________________
SELECT count(*) FROM Student
SELECT count ( StuID )  FROM student
连接数据库../datasets/cosql_dataset/database/pets_1/pets_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
easy pred: SELECT count(*) FROM Student
easy gold: SELECT count ( StuID )  FROM student

当前idx2
____________________
SELECT age FROM Student WHERE LName = 'Smith'
SELECT Age  FROM student where LName = 'Smith'
连接数据库../datasets/cosql_dataset/database/pets_1/pets_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx3
____________________
SELECT T1.age, T2.PetID FROM Student AS T1 JOIN Has_Pet AS T2 ON T1.StuID = T2.StuID WHERE T1.LName = 'Smith'
SELECT T2.petid ,age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid   =   T2.stuid WHERE T1.Lname   =   'Smith'
连接数据库../datasets/cosql_dataset/database/pets_1/pets_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx1
____________________
SELECT StuID FROM Student WHERE StuID IN (SELECT StuID FROM Has_Pet)
SELECT distinct T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid   =   T2.stuid
连接数据库../datasets/cosql_dataset/database/pets_1/pets_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:0
easy pred: SELECT StuID FROM Student WHERE StuID IN (SELECT StuID FROM Has_Pet)
easy gold: SELECT distinct T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid   =   T2.stuid

当前idx2
____________________
SELECT Fname, Lname, Major, Age FROM Student WHERE StuID IN (SELECT StuID FROM Has_Pet)
SELECT distinct T1.Fname, T1.Lname, T1.major, T1.age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid   =   T2.stuid
连接数据库../datasets/cosql_dataset/database/pets_1/pets_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:0
medium pred: SELECT Fname, Lname, Major, Age FROM Student WHERE StuID IN (SELECT StuID FROM Has_Pet)
medium gold: SELECT distinct T1.Fname, T1.Lname, T1.major, T1.age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid   =   T2.stuid

当前idx3
eval_err_num:38
____________________
SELECT Fname, Lname, Major, Age FROM Student WHERE StuID IN (SELECT StuID FROM Has_Pet) AND PetType != "cat"
SELECT Fname, Lname, major, age FROM student WHERE stuid NOT IN  ( SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat' ) 
连接数据库../datasets/cosql_dataset/database/pets_1/pets_1.sqlite
执行第一个查询
执行出错: no such column: PetType
eval_exec:False
exact_score:0
extra pred: SELECT Fname, Lname, Major, Age FROM Student WHERE StuID IN (SELECT StuID FROM Has_Pet) AND PetType != "cat"
extra gold: SELECT Fname, Lname, major, age FROM student WHERE stuid NOT IN  ( SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat' ) 

当前idx1
____________________
SELECT count(*) FROM dogs
SELECT count ( * )  FROM Dogs
连接数据库../datasets/cosql_dataset/database/dog_kennels/dog_kennels.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT age FROM dogs WHERE name = "Kacey"
SELECT age FROM Dogs where name  =  "Kacey"
连接数据库../datasets/cosql_dataset/database/dog_kennels/dog_kennels.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx3
____________________
SELECT name FROM dogs ORDER BY weight DESC LIMIT 1
SELECT name FROM Dogs order by weight desc limit 1
连接数据库../datasets/cosql_dataset/database/dog_kennels/dog_kennels.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx4
____________________
SELECT size_code FROM dogs WHERE breed_code = "BUL"
SELECT size_code FROM Dogs where breed_code  =  "BUL"
连接数据库../datasets/cosql_dataset/database/dog_kennels/dog_kennels.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx1
____________________
SELECT Name FROM country ORDER BY Population DESC LIMIT 3
SELECT Name FROM country ORDER BY Population ASC LIMIT 3
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT Name FROM country ORDER BY Population DESC LIMIT 3
medium gold: SELECT Name FROM country ORDER BY Population ASC LIMIT 3

当前idx2
____________________
SELECT Name FROM country ORDER BY SurfaceArea DESC LIMIT 1
SELECT Name FROM country ORDER BY surfacearea desc LIMIT 1
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx3
____________________
SELECT SUM(Population) FROM country WHERE Code = "A"
SELECT population from country where name  =  "Antarctica"
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
easy pred: SELECT SUM(Population) FROM country WHERE Code = "A"
easy gold: SELECT population from country where name  =  "Antarctica"

当前idx1
____________________
SELECT avg(friend_id) FROM Friend
SELECT AVG ( friend_id )  FROM friend
连接数据库../datasets/cosql_dataset/database/network_1/network_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT avg(grade) FROM Highschooler
SELECT AVG ( grade )  FROM Highschooler
连接数据库../datasets/cosql_dataset/database/network_1/network_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx3
____________________
SELECT max(grade) FROM Highschooler
SELECT MAX ( grade )  FROM Highschooler
连接数据库../datasets/cosql_dataset/database/network_1/network_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx1
____________________
SELECT count(*) FROM Student_Enrolment WHERE degree_program_id = 1
SELECT count ( * )  FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id   =   T2.student_id JOIN Degree_Programs AS T3 ON T2.degree_program_id   =   T3.degree_program_id WHERE T3.degree_summary_name   =   'Bachelor'
连接数据库../datasets/cosql_dataset/database/student_transcripts_tracking/student_transcripts_tracking.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
hard pred: SELECT count(*) FROM Student_Enrolment WHERE degree_program_id = 1
hard gold: SELECT count ( * )  FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id   =   T2.student_id JOIN Degree_Programs AS T3 ON T2.degree_program_id   =   T3.degree_program_id WHERE T3.degree_summary_name   =   'Bachelor'

当前idx2
____________________
SELECT student_id FROM Student_Enrolment WHERE degree_program_id = 1
SELECT t1.student_id FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id   =   T2.student_id JOIN Degree_Programs AS T3 ON T2.degree_program_id   =   T3.degree_program_id WHERE T3.degree_summary_name   =   'Bachelor'
连接数据库../datasets/cosql_dataset/database/student_transcripts_tracking/student_transcripts_tracking.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
hard pred: SELECT student_id FROM Student_Enrolment WHERE degree_program_id = 1
hard gold: SELECT t1.student_id FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id   =   T2.student_id JOIN Degree_Programs AS T3 ON T2.degree_program_id   =   T3.degree_program_id WHERE T3.degree_summary_name   =   'Bachelor'

当前idx3
____________________
SELECT * FROM Students WHERE student_id = 9
SELECT DISTINCT t1.first_name, t1.middle_name, t1.last_name FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id   =   T2.student_id JOIN Degree_Programs AS T3 ON T2.degree_program_id   =   T3.degree_program_id WHERE t1.student_id  =  9
连接数据库../datasets/cosql_dataset/database/student_transcripts_tracking/student_transcripts_tracking.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
hard pred: SELECT * FROM Students WHERE student_id = 9
hard gold: SELECT DISTINCT t1.first_name, t1.middle_name, t1.last_name FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id   =   T2.student_id JOIN Degree_Programs AS T3 ON T2.degree_program_id   =   T3.degree_program_id WHERE t1.student_id  =  9

当前idx4
____________________
SELECT * FROM Students WHERE student_id = 7
SELECT DISTINCT t1.first_name, t1.middle_name, t1.last_name FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id   =   T2.student_id JOIN Degree_Programs AS T3 ON T2.degree_program_id   =   T3.degree_program_id WHERE t1.student_id  =  7
连接数据库../datasets/cosql_dataset/database/student_transcripts_tracking/student_transcripts_tracking.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
hard pred: SELECT * FROM Students WHERE student_id = 7
hard gold: SELECT DISTINCT t1.first_name, t1.middle_name, t1.last_name FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id   =   T2.student_id JOIN Degree_Programs AS T3 ON T2.degree_program_id   =   T3.degree_program_id WHERE t1.student_id  =  7

当前idx>4
____________________
SELECT degree_program_id FROM Student_Enrolment WHERE student_id = 7
SELECT DISTINCT T1.first_name ,  T1.middle_name ,  T1.last_name, T3.degree_summary_name FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id   =   T2.student_id JOIN Degree_Programs AS T3 ON T2.degree_program_id   =   T3.degree_program_id WHERE T3.degree_summary_name   =   'Bachelor'
连接数据库../datasets/cosql_dataset/database/student_transcripts_tracking/student_transcripts_tracking.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
hard pred: SELECT degree_program_id FROM Student_Enrolment WHERE student_id = 7
hard gold: SELECT DISTINCT T1.first_name ,  T1.middle_name ,  T1.last_name, T3.degree_summary_name FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id   =   T2.student_id JOIN Degree_Programs AS T3 ON T2.degree_program_id   =   T3.degree_program_id WHERE T3.degree_summary_name   =   'Bachelor'

当前idx>4
____________________
SELECT degree_summary_description FROM Degree_Programs
SELECT DISTINCT T3.degree_summary_description FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id   =   T2.student_id JOIN Degree_Programs AS T3 ON T2.degree_program_id   =   T3.degree_program_id
连接数据库../datasets/cosql_dataset/database/student_transcripts_tracking/student_transcripts_tracking.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:False
medium pred: SELECT degree_summary_description FROM Degree_Programs
medium gold: SELECT DISTINCT T3.degree_summary_description FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id   =   T2.student_id JOIN Degree_Programs AS T3 ON T2.degree_program_id   =   T3.degree_program_id

当前idx>4
____________________
SELECT student_id FROM Student_Enrolment WHERE degree_program_id = 1
SELECT DISTINCT T1.student_ID FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id   =   T2.student_id JOIN Degree_Programs AS T3 ON T2.degree_program_id   =   T3.degree_program_id WHERE T3.degree_summary_name   =   'Bachelor'
连接数据库../datasets/cosql_dataset/database/student_transcripts_tracking/student_transcripts_tracking.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
hard pred: SELECT student_id FROM Student_Enrolment WHERE degree_program_id = 1
hard gold: SELECT DISTINCT T1.student_ID FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id   =   T2.student_id JOIN Degree_Programs AS T3 ON T2.degree_program_id   =   T3.degree_program_id WHERE T3.degree_summary_name   =   'Bachelor'

当前idx>4
____________________
SELECT first_name, middle_name, last_name FROM Students WHERE student_id IN (SELECT student_id FROM Student_Enrolment WHERE degree_program_id = 1)
SELECT DISTINCT T1.first_name ,  T1.middle_name ,  T1.last_name FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id   =   T2.student_id JOIN Degree_Programs AS T3 ON T2.degree_program_id   =   T3.degree_program_id WHERE T3.degree_summary_name   =   'Bachelor'
连接数据库../datasets/cosql_dataset/database/student_transcripts_tracking/student_transcripts_tracking.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
hard pred: SELECT first_name, middle_name, last_name FROM Students WHERE student_id IN (SELECT student_id FROM Student_Enrolment WHERE degree_program_id = 1)
hard gold: SELECT DISTINCT T1.first_name ,  T1.middle_name ,  T1.last_name FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id   =   T2.student_id JOIN Degree_Programs AS T3 ON T2.degree_program_id   =   T3.degree_program_id WHERE T3.degree_summary_name   =   'Bachelor'

当前idx1
____________________
SELECT count(*) FROM car_makers WHERE Maker = "Chevrolet"
SELECT count ( DISTINCT Make )  FROM CAR_NAMES WHERE Model  =  'chevrolet'
连接数据库../datasets/cosql_dataset/database/car_1/car_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
easy pred: SELECT count(*) FROM car_makers WHERE Maker = "Chevrolet"
easy gold: SELECT count ( DISTINCT Make )  FROM CAR_NAMES WHERE Model  =  'chevrolet'

当前idx2
____________________
SELECT count(*) FROM model_list
SELECT count ( DISTINCT Model )  FROM CAR_NAMES
连接数据库../datasets/cosql_dataset/database/car_1/car_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
easy pred: SELECT count(*) FROM model_list
easy gold: SELECT count ( DISTINCT Model )  FROM CAR_NAMES

当前idx3
____________________
SELECT Model FROM model_list GROUP BY Model ORDER BY count(*) DESC LIMIT 1
SELECT Model FROM CAR_NAMES GROUP BY Model ORDER BY count ( DISTINCT Make )  DESC LIMIT 1
连接数据库../datasets/cosql_dataset/database/car_1/car_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
hard pred: SELECT Model FROM model_list GROUP BY Model ORDER BY count(*) DESC LIMIT 1
hard gold: SELECT Model FROM CAR_NAMES GROUP BY Model ORDER BY count ( DISTINCT Make )  DESC LIMIT 1

当前idx1
____________________
SELECT T1.Name, T2.Course_ID FROM teacher AS T1 JOIN course_arrange AS T2 ON T1.Teacher_ID  =  T2.Teacher_ID
SELECT T2.Name, T1.course_id FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID   =   T2.Teacher_ID
连接数据库../datasets/cosql_dataset/database/course_teach/course_teach.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT T1.Teacher_ID, COUNT(*) FROM teacher AS T1 JOIN course_arrange AS T2 ON T1.Teacher_ID  =  T2.Teacher_ID GROUP BY T1.Teacher_ID
SELECT T2.Name ,  COUNT ( * )  FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID   =   T2.Teacher_ID GROUP BY T2.Name
连接数据库../datasets/cosql_dataset/database/course_teach/course_teach.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT T1.Teacher_ID, COUNT(*) FROM teacher AS T1 JOIN course_arrange AS T2 ON T1.Teacher_ID  =  T2.Teacher_ID GROUP BY T1.Teacher_ID
medium gold: SELECT T2.Name ,  COUNT ( * )  FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID   =   T2.Teacher_ID GROUP BY T2.Name

当前idx3
____________________
SELECT Name FROM teacher WHERE Age  <  30
SELECT name from teacher where age < 30
连接数据库../datasets/cosql_dataset/database/course_teach/course_teach.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx1
____________________
SELECT date FROM performance WHERE type = "audition"
SELECT date FROM performance WHERE TYPE LIKE "%audition%"
连接数据库../datasets/cosql_dataset/database/orchestra/orchestra.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT date FROM performance WHERE type = "audition"
medium gold: SELECT date FROM performance WHERE TYPE LIKE "%audition%"

当前idx1
____________________
SELECT birth_date FROM players WHERE player_id = 200002
SELECT birth_date FROM players where player_id = 200002
连接数据库../datasets/cosql_dataset/database/wta_1/wta_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT first_name FROM players WHERE player_id = 200001
SELECT first_name FROM players where player_id = 200001
连接数据库../datasets/cosql_dataset/database/wta_1/wta_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx3
____________________
SELECT country_code FROM players GROUP BY country_code HAVING COUNT(*)  >  50
SELECT country_code FROM players GROUP BY country_code HAVING count ( * )  > 50
连接数据库../datasets/cosql_dataset/database/wta_1/wta_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx1
____________________
SELECT Region FROM country WHERE Name = "Afghanistan"
SELECT Region FROM country AS T1 JOIN city AS T2 ON T1.Code   =   T2.CountryCode WHERE T2.Name   =   "Kabul"
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:0
medium pred: SELECT Region FROM country WHERE Name = "Afghanistan"
medium gold: SELECT Region FROM country AS T1 JOIN city AS T2 ON T1.Code   =   T2.CountryCode WHERE T2.Name   =   "Kabul"

当前idx2
____________________
SELECT Region FROM country WHERE Name = "Afghanistan"
SELECT Region FROM country AS T1 JOIN city AS T2 ON T1.Code   =   T2.CountryCode WHERE T2.Name   =   "Herat"
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:0
medium pred: SELECT Region FROM country WHERE Name = "Afghanistan"
medium gold: SELECT Region FROM country AS T1 JOIN city AS T2 ON T1.Code   =   T2.CountryCode WHERE T2.Name   =   "Herat"

当前idx3
____________________
SELECT Region FROM country WHERE Name = "Afghanistan"
SELECT Region FROM country AS T1 JOIN city AS T2 ON T1.Code   =   T2.CountryCode WHERE T2.Name   =   "Qandahar"
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:0
medium pred: SELECT Region FROM country WHERE Name = "Afghanistan"
medium gold: SELECT Region FROM country AS T1 JOIN city AS T2 ON T1.Code   =   T2.CountryCode WHERE T2.Name   =   "Qandahar"

当前idx1
____________________
SELECT YEAR FROM MATCHES GROUP BY YEAR ORDER BY COUNT(*) DESC LIMIT 1
SELECT YEAR FROM matches GROUP BY YEAR ORDER BY count ( * )  DESC LIMIT 1
连接数据库../datasets/cosql_dataset/database/wta_1/wta_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT YEAR FROM MATCHES GROUP BY YEAR ORDER BY COUNT(*) ASC LIMIT 1
SELECT YEAR FROM matches GROUP BY YEAR ORDER BY count ( * )  LIMIT 1
连接数据库../datasets/cosql_dataset/database/wta_1/wta_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx3
____________________
SELECT COUNT(*) FROM MATCHES WHERE YEAR = 2017
SELECT YEAR, count ( * )  FROM matches GROUP BY YEAR ORDER BY count ( * )  LIMIT 1
连接数据库../datasets/cosql_dataset/database/wta_1/wta_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
hard pred: SELECT COUNT(*) FROM MATCHES WHERE YEAR = 2017
hard gold: SELECT YEAR, count ( * )  FROM matches GROUP BY YEAR ORDER BY count ( * )  LIMIT 1

当前idx4
____________________
SELECT COUNT(*) FROM MATCHES WHERE YEAR = 2016
SELECT year, count ( * )  from matches where year  =  2016
连接数据库../datasets/cosql_dataset/database/wta_1/wta_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT COUNT(*) FROM MATCHES WHERE YEAR = 2016
medium gold: SELECT year, count ( * )  from matches where year  =  2016

当前idx>4
____________________
SELECT COUNT(*) FROM MATCHES WHERE YEAR = 2016 AND SURFACE = 'Hard'
SELECT count ( * )  from matches where surface  =  "Hard"
连接数据库../datasets/cosql_dataset/database/wta_1/wta_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
easy pred: SELECT COUNT(*) FROM MATCHES WHERE YEAR = 2016 AND SURFACE = 'Hard'
easy gold: SELECT count ( * )  from matches where surface  =  "Hard"

当前idx1
____________________
SELECT Id FROM car_makers
SELECT  Id  FROM CAR_MAKERS
连接数据库../datasets/cosql_dataset/database/car_1/car_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT Country FROM car_makers
SELECT  Country  FROM CAR_MAKERS
连接数据库../datasets/cosql_dataset/database/car_1/car_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx1
____________________
SELECT avg(percentage) FROM countrylanguage
select avg ( percentage )  from countrylanguage
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT countrycode FROM countrylanguage WHERE language = "Dutch" ORDER BY percentage DESC LIMIT 1
select countrycode from countrylanguage where language  =  "Dutch" order by percentage desc limit 1
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx3
____________________
SELECT avg(percentage) FROM countrylanguage
select avg ( percentage )  from countrylanguage where language  =  "Papiamento"
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
easy pred: SELECT avg(percentage) FROM countrylanguage
easy gold: select avg ( percentage )  from countrylanguage where language  =  "Papiamento"

当前idx1
____________________
SELECT Level_of_membership FROM visitor WHERE Name = "Gonzalo Higuaín"
SELECT Level_of_membership FROM visitor WHERE name  =   "Gonzalo Higuaín "
连接数据库../datasets/cosql_dataset/database/museum_visit/museum_visit.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:True
当前idx2
____________________
SELECT Name FROM visitor WHERE Level_of_membership = 5
SELECT name FROM visitor WHERE Level_of_membership =  5
连接数据库../datasets/cosql_dataset/database/museum_visit/museum_visit.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx3
____________________
SELECT COUNT(*) FROM visitor WHERE Level_of_membership > 5
SELECT count ( * )  FROM visitor WHERE Level_of_membership>5
连接数据库../datasets/cosql_dataset/database/museum_visit/museum_visit.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx4
____________________
SELECT Age FROM visitor WHERE Level_of_membership = 8
SELECT age FROM visitor WHERE Level_of_membership   = 8
连接数据库../datasets/cosql_dataset/database/museum_visit/museum_visit.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx>4
____________________
SELECT COUNT(*) FROM visitor WHERE Level_of_membership > 4
SELECT count ( * )  FROM visitor WHERE Level_of_membership > 4
连接数据库../datasets/cosql_dataset/database/museum_visit/museum_visit.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx>4
____________________
SELECT Name FROM visitor WHERE Level_of_membership > 4 ORDER BY Age DESC
SELECT name ,  Level_of_membership FROM visitor WHERE Level_of_membership  >  4 ORDER BY age DESC
连接数据库../datasets/cosql_dataset/database/museum_visit/museum_visit.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT Name FROM visitor WHERE Level_of_membership > 4 ORDER BY Age DESC
medium gold: SELECT name ,  Level_of_membership FROM visitor WHERE Level_of_membership  >  4 ORDER BY age DESC

当前idx1
____________________
SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Code ORDER BY count(*) DESC LIMIT 1
SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code   =   T2.CountryCode GROUP BY T1.Name ORDER BY COUNT ( * )  DESC LIMIT 1
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
extra pred: SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Code ORDER BY count(*) DESC LIMIT 1
extra gold: SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code   =   T2.CountryCode GROUP BY T1.Name ORDER BY COUNT ( * )  DESC LIMIT 1

当前idx2
____________________
SELECT COUNT(*) FROM countrylanguage WHERE countrycode = "CA"
SELECT count ( * )  FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code   =   T2.CountryCode where T1.name  =  "Canada"
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT COUNT(*) FROM countrylanguage WHERE countrycode = "CA"
medium gold: SELECT count ( * )  FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code   =   T2.CountryCode where T1.name  =  "Canada"

当前idx3
____________________
SELECT Language FROM countrylanguage WHERE countrycode = "CA"
SELECT T2.language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code   =   T2.CountryCode where T1.name  =  "Canada"
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT Language FROM countrylanguage WHERE countrycode = "CA"
medium gold: SELECT T2.language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code   =   T2.CountryCode where T1.name  =  "Canada"

当前idx4
____________________
SELECT COUNT(*) FROM countrylanguage WHERE language = "Chinese"
SELECT count ( distinct CountryCode )  FROM countrylanguage WHERE Language  =  "Chinese"
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
easy pred: SELECT COUNT(*) FROM countrylanguage WHERE language = "Chinese"
easy gold: SELECT count ( distinct CountryCode )  FROM countrylanguage WHERE Language  =  "Chinese"

当前idx>4
____________________
SELECT Name FROM country WHERE Continent = "North America"
SELECT NAME FROM country WHERE Continent  =  "North America"
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx>4
____________________
SELECT Language FROM countrylanguage WHERE countrycode = "CA" OR countrycode = "MX" OR countrycode = "US"
SELECT LANGUAGE FROM countrylanguage WHERE countrycode in  ( SELECT Code FROM country WHERE Continent  =  "North America" )  and IsOfficial  =  "T"
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
extra pred: SELECT Language FROM countrylanguage WHERE countrycode = "CA" OR countrycode = "MX" OR countrycode = "US"
extra gold: SELECT LANGUAGE FROM countrylanguage WHERE countrycode in  ( SELECT Code FROM country WHERE Continent  =  "North America" )  and IsOfficial  =  "T"

当前idx>4
____________________
SELECT LifeExpectancy FROM country WHERE Continent = "North America" AND Name = "Canada"
SELECT LifeExpectancy FROM country WHERE name  =  "Canada"
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:0
easy pred: SELECT LifeExpectancy FROM country WHERE Continent = "North America" AND Name = "Canada"
easy gold: SELECT LifeExpectancy FROM country WHERE name  =  "Canada"

当前idx1
____________________
SELECT count(*) FROM (SELECT StuID FROM Has_Pet GROUP BY StuID HAVING count(*)  >  1)
SELECT count ( * )  FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid   =   T2.stuid GROUP BY T1.stuid HAVING count ( * )   >  1
连接数据库../datasets/cosql_dataset/database/pets_1/pets_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT count(*) FROM (SELECT StuID FROM Has_Pet GROUP BY StuID HAVING count(*)  >  1)
medium gold: SELECT count ( * )  FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid   =   T2.stuid GROUP BY T1.stuid HAVING count ( * )   >  1

当前idx2
____________________
SELECT Fname, Lname FROM Student WHERE StuID IN (SELECT StuID FROM Has_Pet GROUP BY StuID HAVING count(*)  >  1)
SELECT T1.lname, T1.fname  FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid   =   T2.stuid GROUP BY T1.stuid HAVING count ( * )   >  1
连接数据库../datasets/cosql_dataset/database/pets_1/pets_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:0
medium pred: SELECT Fname, Lname FROM Student WHERE StuID IN (SELECT StuID FROM Has_Pet GROUP BY StuID HAVING count(*)  >  1)
medium gold: SELECT T1.lname, T1.fname  FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid   =   T2.stuid GROUP BY T1.stuid HAVING count ( * )   >  1

当前idx3
____________________
SELECT Sex FROM Student WHERE StuID = 1000000000
SELECT T1.lname, T1.fname, T1.sex  FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid   =   T2.stuid GROUP BY T1.stuid HAVING count ( * )   >  1
连接数据库../datasets/cosql_dataset/database/pets_1/pets_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT Sex FROM Student WHERE StuID = 1000000000
medium gold: SELECT T1.lname, T1.fname, T1.sex  FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid   =   T2.stuid GROUP BY T1.stuid HAVING count ( * )   >  1

当前idx1
____________________
SELECT COUNT(*) FROM country WHERE Continent  =  'Asia'
select count ( * )  from  ( SELECT region FROM country WHERE Continent   =   "Asia" group by region ) 
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
easy pred: SELECT COUNT(*) FROM country WHERE Continent  =  'Asia'
easy gold: select count ( * )  from  ( SELECT region FROM country WHERE Continent   =   "Asia" group by region ) 

当前idx2
____________________
SELECT COUNT(*) FROM country WHERE Continent  =  'Europe'
select count ( * )  from  ( SELECT region FROM country WHERE Continent   =   "Europe" group by region ) 
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
easy pred: SELECT COUNT(*) FROM country WHERE Continent  =  'Europe'
easy gold: select count ( * )  from  ( SELECT region FROM country WHERE Continent   =   "Europe" group by region ) 

当前idx3
____________________
SELECT SUM(SurfaceArea) FROM country WHERE Continent  =  'Europe'
SELECT sum ( SurfaceArea )  FROM country WHERE Continent   =   "Asia" OR Continent   =   "Europe"
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT SUM(SurfaceArea) FROM country WHERE Continent  =  'Europe'
medium gold: SELECT sum ( SurfaceArea )  FROM country WHERE Continent   =   "Asia" OR Continent   =   "Europe"

当前idx1
eval_err_num:39
____________________
SELECT count(*) FROM templates WHERE Template_Type_Description = "Presentation"
SELECT count ( * )  FROM Ref_template_types AS T1 JOIN Templates AS T2 ON T1.template_type_code   =  T2.template_type_code WHERE T1.template_type_description   =   "Presentation"
连接数据库../datasets/cosql_dataset/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite
执行第一个查询
执行出错: no such column: Template_Type_Description
eval_exec:False
exact_score:0
medium pred: SELECT count(*) FROM templates WHERE Template_Type_Description = "Presentation"
medium gold: SELECT count ( * )  FROM Ref_template_types AS T1 JOIN Templates AS T2 ON T1.template_type_code   =  T2.template_type_code WHERE T1.template_type_description   =   "Presentation"

当前idx2
eval_err_num:40
____________________
SELECT Template_ID FROM templates WHERE Template_Type_Description = "Presentation"
SELECT T2.template_id FROM Ref_template_types AS T1 JOIN Templates AS T2 ON T1.template_type_code   =  T2.template_type_code WHERE T1.template_type_description   =   "Presentation"
连接数据库../datasets/cosql_dataset/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite
执行第一个查询
执行出错: no such column: Template_Type_Description
eval_exec:False
exact_score:0
medium pred: SELECT Template_ID FROM templates WHERE Template_Type_Description = "Presentation"
medium gold: SELECT T2.template_id FROM Ref_template_types AS T1 JOIN Templates AS T2 ON T1.template_type_code   =  T2.template_type_code WHERE T1.template_type_description   =   "Presentation"

当前idx3
____________________
SELECT Template_Type_Code FROM templates WHERE Template_ID = 1 OR Template_ID = 2 OR Template_ID = 3
SELECT T2.template_id, T2.Template_Type_Code FROM Ref_template_types AS T1 JOIN Templates AS T2 ON T1.template_type_code   =  T2.template_type_code WHERE T1.template_type_description   =   "Presentation"
连接数据库../datasets/cosql_dataset/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT Template_Type_Code FROM templates WHERE Template_ID = 1 OR Template_ID = 2 OR Template_ID = 3
medium gold: SELECT T2.template_id, T2.Template_Type_Code FROM Ref_template_types AS T1 JOIN Templates AS T2 ON T1.template_type_code   =  T2.template_type_code WHERE T1.template_type_description   =   "Presentation"

当前idx1
____________________
SELECT count(*) FROM Transcript_Contents GROUP BY student_course_id HAVING count(*)  >  1
SELECT count ( * )   FROM Transcript_Contents GROUP BY student_course_id ORDER BY count ( * )  DESC LIMIT 1
连接数据库../datasets/cosql_dataset/database/student_transcripts_tracking/student_transcripts_tracking.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
hard pred: SELECT count(*) FROM Transcript_Contents GROUP BY student_course_id HAVING count(*)  >  1
hard gold: SELECT count ( * )   FROM Transcript_Contents GROUP BY student_course_id ORDER BY count ( * )  DESC LIMIT 1

当前idx2
____________________
SELECT student_course_id FROM Transcript_Contents GROUP BY student_course_id HAVING count(*)  >  1
SELECT student_course_id FROM Transcript_Contents GROUP BY student_course_id ORDER BY count ( * )  DESC LIMIT 1
连接数据库../datasets/cosql_dataset/database/student_transcripts_tracking/student_transcripts_tracking.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
hard pred: SELECT student_course_id FROM Transcript_Contents GROUP BY student_course_id HAVING count(*)  >  1
hard gold: SELECT student_course_id FROM Transcript_Contents GROUP BY student_course_id ORDER BY count ( * )  DESC LIMIT 1

当前idx3
____________________
SELECT count(*) FROM Transcript_Contents GROUP BY student_course_id ORDER BY count(*) ASC LIMIT 1
SELECT count ( * )  FROM Transcript_Contents GROUP BY student_course_id ORDER BY count ( * )  LIMIT 1
连接数据库../datasets/cosql_dataset/database/student_transcripts_tracking/student_transcripts_tracking.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx4
____________________
SELECT student_course_id FROM Transcript_Contents GROUP BY student_course_id ORDER BY count(*) ASC LIMIT 1
SELECT  student_course_id FROM Transcript_Contents GROUP BY student_course_id ORDER BY count ( * )  LIMIT 1
连接数据库../datasets/cosql_dataset/database/student_transcripts_tracking/student_transcripts_tracking.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx>4
____________________
SELECT avg(student_course_id) FROM Transcript_Contents
SELECT avg ( student_course_id )  FROM Transcript_Contents
连接数据库../datasets/cosql_dataset/database/student_transcripts_tracking/student_transcripts_tracking.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx1
____________________
SELECT property_name FROM Properties WHERE room_count  >  1
SELECT property_name FROM Properties WHERE room_count  >  1
连接数据库../datasets/cosql_dataset/database/real_estate_properties/real_estate_properties.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
eval_err_num:41
____________________
SELECT property_name FROM Properties WHERE room_count  >  1 AND (apt_feature_1 IS NOT NULL OR hse_feature_1 IS NOT NULL)
SELECT property_name FROM Properties WHERE property_type_code   =   "House" UNION SELECT property_name FROM Properties WHERE property_type_code   =   "Apartment" AND room_count  >  1
连接数据库../datasets/cosql_dataset/database/real_estate_properties/real_estate_properties.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
hard pred: SELECT property_name FROM Properties WHERE room_count  >  1 AND (apt_feature_1 IS NOT NULL OR hse_feature_1 IS NOT NULL)
hard gold: SELECT property_name FROM Properties WHERE property_type_code   =   "House" UNION SELECT property_name FROM Properties WHERE property_type_code   =   "Apartment" AND room_count  >  1

当前idx3
eval_err_num:42
____________________
SELECT property_name, room_count FROM Properties WHERE room_count  >  1 AND (apt_feature_1 IS NOT NULL OR hse_feature_1 IS NOT NULL)
SELECT property_name, room_count FROM Properties WHERE property_type_code   =   "House" UNION SELECT property_name, room_count FROM Properties WHERE property_type_code   =   "Apartment" AND room_count  >  1
连接数据库../datasets/cosql_dataset/database/real_estate_properties/real_estate_properties.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
extra pred: SELECT property_name, room_count FROM Properties WHERE room_count  >  1 AND (apt_feature_1 IS NOT NULL OR hse_feature_1 IS NOT NULL)
extra gold: SELECT property_name, room_count FROM Properties WHERE property_type_code   =   "House" UNION SELECT property_name, room_count FROM Properties WHERE property_type_code   =   "Apartment" AND room_count  >  1

当前idx4
eval_err_num:43
____________________
SELECT avg(agreed_selling_price) FROM Properties WHERE room_count  >  1 AND hse_feature_1 IS NOT NULL
SELECT avg ( agreed_selling_price )  FROM Properties WHERE property_type_code   =   "House" AND room_count  >  1
连接数据库../datasets/cosql_dataset/database/real_estate_properties/real_estate_properties.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT avg(agreed_selling_price) FROM Properties WHERE room_count  >  1 AND hse_feature_1 IS NOT NULL
medium gold: SELECT avg ( agreed_selling_price )  FROM Properties WHERE property_type_code   =   "House" AND room_count  >  1

当前idx1
____________________
SELECT count(*) FROM airports
SELECT count ( * )  from airports
连接数据库../datasets/cosql_dataset/database/flight_2/flight_2.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT count(*) FROM airports AS T1 JOIN flights AS T2 ON T1.AirportCode  =  T2.SourceAirport
SELECT count ( distinct sourceairport )  from flights
连接数据库../datasets/cosql_dataset/database/flight_2/flight_2.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
easy pred: SELECT count(*) FROM airports AS T1 JOIN flights AS T2 ON T1.AirportCode  =  T2.SourceAirport
easy gold: SELECT count ( distinct sourceairport )  from flights

当前idx3
____________________
SELECT count(*) FROM airports AS T1 JOIN flights AS T2 ON T1.AirportCode  =  T2.DestAirport WHERE T1.AirportName  =  "ASY"
SELECT count ( * )  from flights where destairport like "%ASY%"
连接数据库../datasets/cosql_dataset/database/flight_2/flight_2.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT count(*) FROM airports AS T1 JOIN flights AS T2 ON T1.AirportCode  =  T2.DestAirport WHERE T1.AirportName  =  "ASY"
medium gold: SELECT count ( * )  from flights where destairport like "%ASY%"

当前idx4
____________________
SELECT count(*) FROM airports AS T1 JOIN flights AS T2 ON T1.AirportCode  =  T2.SourceAirport WHERE T1.AirportName  =  "ASY" AND T2.Airline IN (SELECT uid FROM airlines WHERE Airline = "APG" OR Airline = "ABR")
SELECT count ( * )  from flights where destairport like "%ASY%" and sourceairport like "%APG%" UNION SELECT count ( * )  from flights where destairport like "%ASY%" and sourceairport like "%ABR%"
连接数据库../datasets/cosql_dataset/database/flight_2/flight_2.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
extra pred: SELECT count(*) FROM airports AS T1 JOIN flights AS T2 ON T1.AirportCode  =  T2.SourceAirport WHERE T1.AirportName  =  "ASY" AND T2.Airline IN (SELECT uid FROM airlines WHERE Airline = "APG" OR Airline = "ABR")
extra gold: SELECT count ( * )  from flights where destairport like "%ASY%" and sourceairport like "%APG%" UNION SELECT count ( * )  from flights where destairport like "%ASY%" and sourceairport like "%ABR%"

当前idx1
____________________
SELECT count(*) FROM car_makers WHERE country = "Germany"
SELECT count ( * )  FROM CAR_MAKERS AS T1 JOIN COUNTRIES AS T2 ON T1.Country   =   T2.CountryId WHERE T2.CountryName   =   'germany'
连接数据库../datasets/cosql_dataset/database/car_1/car_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT count(*) FROM car_makers WHERE country = "Germany"
medium gold: SELECT count ( * )  FROM CAR_MAKERS AS T1 JOIN COUNTRIES AS T2 ON T1.Country   =   T2.CountryId WHERE T2.CountryName   =   'germany'

当前idx2
____________________
SELECT maker FROM car_makers WHERE country = "Germany"
SELECt T1.maker FROM CAR_MAKERS AS T1 JOIN COUNTRIES AS T2 ON T1.Country   =   T2.CountryId WHERE T2.CountryName   =   'germany'
连接数据库../datasets/cosql_dataset/database/car_1/car_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT maker FROM car_makers WHERE country = "Germany"
medium gold: SELECt T1.maker FROM CAR_MAKERS AS T1 JOIN COUNTRIES AS T2 ON T1.Country   =   T2.CountryId WHERE T2.CountryName   =   'germany'

当前idx3
____________________
SELECT count(*) FROM car_makers WHERE country = "USA"
SELECt count ( T1.maker )  FROM CAR_MAKERS AS T1 JOIN COUNTRIES AS T2 ON T1.Country   =   T2.CountryId WHERE T2.CountryName   =   'usa'
连接数据库../datasets/cosql_dataset/database/car_1/car_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT count(*) FROM car_makers WHERE country = "USA"
medium gold: SELECt count ( T1.maker )  FROM CAR_MAKERS AS T1 JOIN COUNTRIES AS T2 ON T1.Country   =   T2.CountryId WHERE T2.CountryName   =   'usa'

当前idx4
____________________
SELECT maker FROM car_makers WHERE country = "USA"
SELECt T1.maker FROM CAR_MAKERS AS T1 JOIN COUNTRIES AS T2 ON T1.Country   =   T2.CountryId WHERE T2.CountryName   =   'usa'
连接数据库../datasets/cosql_dataset/database/car_1/car_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT maker FROM car_makers WHERE country = "USA"
medium gold: SELECt T1.maker FROM CAR_MAKERS AS T1 JOIN COUNTRIES AS T2 ON T1.Country   =   T2.CountryId WHERE T2.CountryName   =   'usa'

当前idx1
____________________
SELECT first_name, last_name, state FROM Owners
SELECT first_name ,  last_name, state FROM Owners
连接数据库../datasets/cosql_dataset/database/dog_kennels/dog_kennels.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT first_name, last_name, email_address FROM Owners
SELECT first_name ,  last_name, email_address FROM Owners
连接数据库../datasets/cosql_dataset/database/dog_kennels/dog_kennels.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx3
____________________
SELECT first_name, last_name, email_address FROM Owners WHERE state LIKE '%North%'
SELECT first_name ,  last_name ,  email_address FROM Owners WHERE state LIKE '%North%'
连接数据库../datasets/cosql_dataset/database/dog_kennels/dog_kennels.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx1
____________________
SELECT city FROM employee WHERE age < 30 GROUP BY city HAVING count(*)  >  1
SELECT city FROM employee WHERE age  <  30 GROUP BY city HAVING count ( * )   >  1
连接数据库../datasets/cosql_dataset/database/employee_hire_evaluation/employee_hire_evaluation.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT city FROM employee WHERE age > 30 GROUP BY city HAVING count(*)  >  1
SELECT city FROM employee WHERE age  >  30 GROUP BY city HAVING count ( * )   >  1
连接数据库../datasets/cosql_dataset/database/employee_hire_evaluation/employee_hire_evaluation.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx3
____________________
SELECT name, age FROM employee WHERE age > 30
SELECT Name, Age FROM employee WHERE age  >  30
连接数据库../datasets/cosql_dataset/database/employee_hire_evaluation/employee_hire_evaluation.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx4
____________________
SELECT name, age FROM employee WHERE age < 30
SELECT Name, Age FROM employee WHERE age  <  30
连接数据库../datasets/cosql_dataset/database/employee_hire_evaluation/employee_hire_evaluation.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx>4
____________________
SELECT city FROM employee WHERE age < 29
SELECT City FROM employee WHERE age  <  29
连接数据库../datasets/cosql_dataset/database/employee_hire_evaluation/employee_hire_evaluation.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx1
____________________
SELECT count(*) FROM Owners
SELECT count ( * )  FROM Owners
连接数据库../datasets/cosql_dataset/database/dog_kennels/dog_kennels.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT age FROM Dogs ORDER BY age ASC LIMIT 1
SELECT age FROM Dogs ORDER BY age ASC LIMIT 1
连接数据库../datasets/cosql_dataset/database/dog_kennels/dog_kennels.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx3
____________________
SELECT name FROM Dogs WHERE age = 1
SELECT name FROM Dogs ORDER BY age ASC LIMIT 1
连接数据库../datasets/cosql_dataset/database/dog_kennels/dog_kennels.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:0
medium pred: SELECT name FROM Dogs WHERE age = 1
medium gold: SELECT name FROM Dogs ORDER BY age ASC LIMIT 1

当前idx4
eval_err_num:44
____________________
SELECT first_name, last_name FROM Owners WHERE dog_id IN (SELECT dog_id FROM Dogs WHERE name = "Evangeline")
SELECT T1.first_name, T1.last_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id   =   T2.owner_id WHERE T2.name  =  "Evangeline"
连接数据库../datasets/cosql_dataset/database/dog_kennels/dog_kennels.sqlite
执行第一个查询
执行出错: no such column: dog_id
eval_exec:False
exact_score:0
medium pred: SELECT first_name, last_name FROM Owners WHERE dog_id IN (SELECT dog_id FROM Dogs WHERE name = "Evangeline")
medium gold: SELECT T1.first_name, T1.last_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id   =   T2.owner_id WHERE T2.name  =  "Evangeline"

当前idx1
____________________
SELECT singer_id FROM singer WHERE singer_id NOT IN (SELECT singer_id FROM song)
SELECT Name FROM singer WHERE Singer_ID NOT IN  ( SELECT Singer_ID FROM song ) 
连接数据库../datasets/cosql_dataset/database/singer/singer.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
hard pred: SELECT singer_id FROM singer WHERE singer_id NOT IN (SELECT singer_id FROM song)
hard gold: SELECT Name FROM singer WHERE Singer_ID NOT IN  ( SELECT Singer_ID FROM song ) 

当前idx1
eval_err_num:45
____________________
SELECT Name FROM singer WHERE Birth_Year IN (1948, 1949)
SELECT Name FROM singer WHERE Birth_Year   =   1948 OR Birth_Year   =   1949
连接数据库../datasets/cosql_dataset/database/singer/singer.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT Name FROM singer WHERE Birth_Year IN (1948, 1949)
medium gold: SELECT Name FROM singer WHERE Birth_Year   =   1948 OR Birth_Year   =   1949

当前idx2
eval_err_num:46
____________________
SELECT Citizenship FROM singer WHERE Birth_Year IN (1948, 1949)
SELECT Citizenship FROM singer WHERE Birth_Year   =   1948 OR Birth_Year   =   1949
连接数据库../datasets/cosql_dataset/database/singer/singer.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT Citizenship FROM singer WHERE Birth_Year IN (1948, 1949)
medium gold: SELECT Citizenship FROM singer WHERE Birth_Year   =   1948 OR Birth_Year   =   1949

当前idx3
eval_err_num:47
____________________
SELECT Name, Net_Worth_Millions FROM singer WHERE Birth_Year IN (1948, 1949) ORDER BY Net_Worth_Millions DESC LIMIT 1
SELECT name FROM singer WHERE Birth_Year   =   1948 OR Birth_Year   =   1949 order by Net_Worth_Millions desc limit 1
连接数据库../datasets/cosql_dataset/database/singer/singer.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
extra pred: SELECT Name, Net_Worth_Millions FROM singer WHERE Birth_Year IN (1948, 1949) ORDER BY Net_Worth_Millions DESC LIMIT 1
extra gold: SELECT name FROM singer WHERE Birth_Year   =   1948 OR Birth_Year   =   1949 order by Net_Worth_Millions desc limit 1

当前idx4
eval_err_num:48
____________________
SELECT Net_Worth_Millions FROM singer WHERE Birth_Year IN (1948, 1949) ORDER BY Net_Worth_Millions DESC LIMIT 1
SELECT name,Net_Worth_Millions FROM singer WHERE Birth_Year   =   1948 OR Birth_Year   =   1949 order by Net_Worth_Millions desc limit 1
连接数据库../datasets/cosql_dataset/database/singer/singer.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
extra pred: SELECT Net_Worth_Millions FROM singer WHERE Birth_Year IN (1948, 1949) ORDER BY Net_Worth_Millions DESC LIMIT 1
extra gold: SELECT name,Net_Worth_Millions FROM singer WHERE Birth_Year   =   1948 OR Birth_Year   =   1949 order by Net_Worth_Millions desc limit 1

当前idx>4
eval_err_num:49
____________________
SELECT Net_Worth_Millions FROM singer WHERE Birth_Year IN (1948, 1949) ORDER BY Net_Worth_Millions ASC LIMIT 1
SELECT name FROM singer WHERE Birth_Year   =   1948 OR Birth_Year   =   1949 order by Net_Worth_Millions limit 1
连接数据库../datasets/cosql_dataset/database/singer/singer.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
extra pred: SELECT Net_Worth_Millions FROM singer WHERE Birth_Year IN (1948, 1949) ORDER BY Net_Worth_Millions ASC LIMIT 1
extra gold: SELECT name FROM singer WHERE Birth_Year   =   1948 OR Birth_Year   =   1949 order by Net_Worth_Millions limit 1

当前idx1
eval_err_num:50
____________________
SELECT count(*) FROM battle WHERE result = 'win' AND (SELECT tonnage FROM ship WHERE id = (SELECT lost_in_battle FROM battle WHERE result = 'lose'))  != 225
SELECT count ( * )  FROM battle WHERE id NOT IN  (  SELECT lost_in_battle FROM ship WHERE tonnage   =   '225'  ) 
连接数据库../datasets/cosql_dataset/database/battle_death/battle_death.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
extra pred: SELECT count(*) FROM battle WHERE result = 'win' AND (SELECT tonnage FROM ship WHERE id = (SELECT lost_in_battle FROM battle WHERE result = 'lose'))  != 225
extra gold: SELECT count ( * )  FROM battle WHERE id NOT IN  (  SELECT lost_in_battle FROM ship WHERE tonnage   =   '225'  ) 

当前idx2
eval_err_num:51
____________________
SELECT count(*) FROM battle WHERE result = 'lose' AND (SELECT tonnage FROM ship WHERE id = (SELECT lost_in_battle FROM battle WHERE result = 'lose'))  = 225
SELECT count ( * )  FROM battle WHERE id IN  (  SELECT lost_in_battle FROM ship WHERE tonnage   =   '225'  ) 
连接数据库../datasets/cosql_dataset/database/battle_death/battle_death.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
hard pred: SELECT count(*) FROM battle WHERE result = 'lose' AND (SELECT tonnage FROM ship WHERE id = (SELECT lost_in_battle FROM battle WHERE result = 'lose'))  = 225
hard gold: SELECT count ( * )  FROM battle WHERE id IN  (  SELECT lost_in_battle FROM ship WHERE tonnage   =   '225'  ) 

当前idx3
____________________
SELECT count(*) FROM ship WHERE tonnage = '225'
SELECT count ( * )  FROM ship WHERE tonnage   =   '225'
连接数据库../datasets/cosql_dataset/database/battle_death/battle_death.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx4
eval_err_num:52
____________________
SELECT name FROM battle WHERE result = 'win' AND (SELECT tonnage FROM ship WHERE id = (SELECT lost_in_battle FROM battle WHERE result = 'lose'))  = 225
SELECT result FROM battle WHERE id IN  (  SELECT lost_in_battle FROM ship WHERE tonnage   =   '225'  ) 
连接数据库../datasets/cosql_dataset/database/battle_death/battle_death.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
hard pred: SELECT name FROM battle WHERE result = 'win' AND (SELECT tonnage FROM ship WHERE id = (SELECT lost_in_battle FROM battle WHERE result = 'lose'))  = 225
hard gold: SELECT result FROM battle WHERE id IN  (  SELECT lost_in_battle FROM ship WHERE tonnage   =   '225'  ) 

当前idx1
____________________
SELECT FullName FROM car_makers WHERE Maker = "AMC"
SELECT Fullname FROM car_makers WHERE maker  =  "amc"
连接数据库../datasets/cosql_dataset/database/car_1/car_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:True
当前idx2
eval_err_num:53
____________________
SELECT CountryName FROM countries WHERE CountryId IN (1, 2, 3)
SELECT countryname FROM countries WHERE countryid = 1 or countryid = 2 or countryid = 3 ) 
连接数据库../datasets/cosql_dataset/database/car_1/car_1.sqlite
执行第一个查询
执行第二个查询
执行出错: near ")": syntax error
eval_exec:False
exact_score:0
hard pred: SELECT CountryName FROM countries WHERE CountryId IN (1, 2, 3)
hard gold: SELECT countryname FROM countries WHERE countryid = 1 or countryid = 2 or countryid = 3 ) 

当前idx3
____________________
SELECT ModelId FROM model_list WHERE Maker = (SELECT Id FROM car_makers WHERE Maker = "AMC")
SELECT modelid FROM model_list WHERE model  =  "amc"
连接数据库../datasets/cosql_dataset/database/car_1/car_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
easy pred: SELECT ModelId FROM model_list WHERE Maker = (SELECT Id FROM car_makers WHERE Maker = "AMC")
easy gold: SELECT modelid FROM model_list WHERE model  =  "amc"

当前idx4
____________________
SELECT CountryId, CountryName FROM countries WHERE CountryId IN (SELECT Country FROM car_makers WHERE Maker = "Fiat") OR CountryId IN (SELECT Country FROM car_makers GROUP BY Country HAVING COUNT(*) > 3)
SELECT T1.countryId ,  T1.CountryName FROM Countries AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId   =   T2.Country GROUP BY T1.countryId HAVING count ( * )   >  3 UNION SELECT T1.countryId ,  T1.CountryName FROM Countries AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId   =   T2.Country JOIN MODEL_LIST AS T3 ON T2.Id   =   T3.Maker WHERE T3.Model   =   'fiat'
连接数据库../datasets/cosql_dataset/database/car_1/car_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
extra pred: SELECT CountryId, CountryName FROM countries WHERE CountryId IN (SELECT Country FROM car_makers WHERE Maker = "Fiat") OR CountryId IN (SELECT Country FROM car_makers GROUP BY Country HAVING COUNT(*) > 3)
extra gold: SELECT T1.countryId ,  T1.CountryName FROM Countries AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId   =   T2.Country GROUP BY T1.countryId HAVING count ( * )   >  3 UNION SELECT T1.countryId ,  T1.CountryName FROM Countries AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId   =   T2.Country JOIN MODEL_LIST AS T3 ON T2.Id   =   T3.Maker WHERE T3.Model   =   'fiat'

当前idx1
____________________
SELECT Money_Rank FROM poker_player ORDER BY Earnings DESC LIMIT 1
SELECT Money_Rank FROM poker_player ORDER BY Earnings DESC LIMIT 1
连接数据库../datasets/cosql_dataset/database/poker_player/poker_player.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT People_ID FROM poker_player ORDER BY Earnings DESC LIMIT 1
SELECT People_ID FROM poker_player ORDER BY Earnings DESC LIMIT 1
连接数据库../datasets/cosql_dataset/database/poker_player/poker_player.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx3
____________________
SELECT Best_Finish FROM poker_player ORDER BY Earnings DESC LIMIT 1
SELECT Best_Finish FROM poker_player ORDER BY Earnings DESC LIMIT 1
连接数据库../datasets/cosql_dataset/database/poker_player/poker_player.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx4
____________________
SELECT Earnings FROM poker_player ORDER BY Earnings DESC LIMIT 1
SELECT Earnings FROM poker_player order by Earnings desc limit 1
连接数据库../datasets/cosql_dataset/database/poker_player/poker_player.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx1
____________________
SELECT count(*) FROM orchestra
SELECT COUNT ( DISTINCT Orchestra )  FROM orchestra
连接数据库../datasets/cosql_dataset/database/orchestra/orchestra.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
easy pred: SELECT count(*) FROM orchestra
easy gold: SELECT COUNT ( DISTINCT Orchestra )  FROM orchestra

当前idx2
____________________
SELECT count(*) FROM orchestra WHERE orchestra_id NOT IN (SELECT orchestra_id FROM performance)
SELECT COUNT ( Orchestra )  FROM orchestra WHERE Orchestra_ID NOT IN  ( SELECT Orchestra_ID FROM performance ) 
连接数据库../datasets/cosql_dataset/database/orchestra/orchestra.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
extra pred: SELECT count(*) FROM orchestra WHERE orchestra_id NOT IN (SELECT orchestra_id FROM performance)
extra gold: SELECT COUNT ( Orchestra )  FROM orchestra WHERE Orchestra_ID NOT IN  ( SELECT Orchestra_ID FROM performance ) 

当前idx3
____________________
SELECT orchestra_id, orchestra FROM orchestra WHERE orchestra_id NOT IN (SELECT orchestra_id FROM performance)
SELECT Orchestra_ID, Orchestra FROM orchestra WHERE Orchestra_ID NOT IN  ( SELECT Orchestra_ID FROM performance ) 
连接数据库../datasets/cosql_dataset/database/orchestra/orchestra.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx1
____________________
SELECT stadium.name, stadium.location FROM stadium JOIN concert ON stadium.stadium_id = concert.stadium_id WHERE concert.year = 2014 OR concert.year = 2015
SELECT T2.name ,  T2.location FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id   =   T2.stadium_id WHERE T1.Year   =   2014 INTERSECT SELECT T2.name ,  T2.location FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id   =   T2.stadium_id WHERE T1.Year   =   2015
连接数据库../datasets/cosql_dataset/database/concert_singer/concert_singer.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
extra pred: SELECT stadium.name, stadium.location FROM stadium JOIN concert ON stadium.stadium_id = concert.stadium_id WHERE concert.year = 2014 OR concert.year = 2015
extra gold: SELECT T2.name ,  T2.location FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id   =   T2.stadium_id WHERE T1.Year   =   2014 INTERSECT SELECT T2.name ,  T2.location FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id   =   T2.stadium_id WHERE T1.Year   =   2015

当前idx2
____________________
SELECT year FROM concert WHERE concert_name = "Super bootcamp"
SELECT year from concert where concert_name like "%Super bootcamp%"
连接数据库../datasets/cosql_dataset/database/concert_singer/concert_singer.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:0
medium pred: SELECT year FROM concert WHERE concert_name = "Super bootcamp"
medium gold: SELECT year from concert where concert_name like "%Super bootcamp%"

当前idx3
____________________
SELECT year FROM concert WHERE concert_name = "Auditions"
SELECT year from concert where concert_name like "%Auditions%"
连接数据库../datasets/cosql_dataset/database/concert_singer/concert_singer.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:0
medium pred: SELECT year FROM concert WHERE concert_name = "Auditions"
medium gold: SELECT year from concert where concert_name like "%Auditions%"

当前idx4
____________________
SELECT stadium_id FROM concert WHERE concert_name = "Auditions"
SELECT T1.name from stadium as T1 join  concert as T2 on T1.stadium_id  =  T2.stadium_id where T2.concert_name like "%Auditions%"
连接数据库../datasets/cosql_dataset/database/concert_singer/concert_singer.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
hard pred: SELECT stadium_id FROM concert WHERE concert_name = "Auditions"
hard gold: SELECT T1.name from stadium as T1 join  concert as T2 on T1.stadium_id  =  T2.stadium_id where T2.concert_name like "%Auditions%"

当前idx>4
____________________
SELECT stadium.name, stadium.location FROM stadium JOIN concert ON stadium.stadium_id = concert.stadium_id WHERE concert.year = 2014 OR concert.year = 2015
SELECT T2.name , T2.location FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.Year  =  2014 or T1.Year  =  2015
连接数据库../datasets/cosql_dataset/database/concert_singer/concert_singer.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx1
____________________
SELECT COUNT(*) FROM flights AS T1 JOIN airlines AS T2 ON T1.Airline  =  T2.uid WHERE T2.Airline  =  1
SELECT count ( * )  FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T2.Airline   =   T1.uid WHERE T1.Airline   =   "United Airlines"
连接数据库../datasets/cosql_dataset/database/flight_2/flight_2.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:True
当前idx2
____________________
SELECT COUNT(DISTINCT T1.DestAirport) FROM flights AS T1 JOIN airlines AS T2 ON T1.Airline  =  T2.uid WHERE T2.Airline  =  1
SELECT count ( distinct T2.DestAirport )  FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T2.Airline   =   T1.uid WHERE T1.Airline   =   "United Airlines"
连接数据库../datasets/cosql_dataset/database/flight_2/flight_2.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:True
当前idx3
____________________
SELECT COUNT(*) FROM flights AS T1 JOIN airlines AS T2 ON T1.Airline  =  T2.uid WHERE T2.Airline  =  1 AND T1.DestAirport  =  "ASY"
SELECT count ( * )  FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T2.Airline   =   T1.uid WHERE T1.Airline   =   "United Airlines" AND T2.DestAirport   =   "ASY"
连接数据库../datasets/cosql_dataset/database/flight_2/flight_2.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx1
____________________
SELECT degree_program_id FROM Student_Enrolment
SELECT degree_program_id from Student_Enrolment
连接数据库../datasets/cosql_dataset/database/student_transcripts_tracking/student_transcripts_tracking.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT semester_id FROM Student_Enrolment
SELECT semester_id from Student_Enrolment
连接数据库../datasets/cosql_dataset/database/student_transcripts_tracking/student_transcripts_tracking.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx3
____________________
SELECT semester_name FROM Semesters
SELECT semester_name from semesters
连接数据库../datasets/cosql_dataset/database/student_transcripts_tracking/student_transcripts_tracking.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx4
____________________
SELECT semester_name, semester_id FROM Semesters ORDER BY count(*) DESC LIMIT 1
SELECT T1.semester_name ,  T1.semester_id FROM Semesters AS T1 JOIN Student_Enrolment AS T2 ON T1.semester_id   =   T2.semester_id GROUP BY T1.semester_id ORDER BY count ( * )  DESC LIMIT 1
连接数据库../datasets/cosql_dataset/database/student_transcripts_tracking/student_transcripts_tracking.sqlite
执行第一个查询
执行出错: misuse of aggregate: count()
eval_exec:False
exact_score:0
extra pred: SELECT semester_name, semester_id FROM Semesters ORDER BY count(*) DESC LIMIT 1
extra gold: SELECT T1.semester_name ,  T1.semester_id FROM Semesters AS T1 JOIN Student_Enrolment AS T2 ON T1.semester_id   =   T2.semester_id GROUP BY T1.semester_id ORDER BY count ( * )  DESC LIMIT 1

当前idx1
____________________
SELECT GovernmentForm, AVG(LifeExpectancy) FROM country GROUP BY GovernmentForm
SELECT GovernmentForm, avg ( LifeExpectancy )  FROM country GROUP BY GovernmentForm
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT GovernmentForm FROM country GROUP BY GovernmentForm HAVING AVG(LifeExpectancy) > 72
SELECT GovernmentForm FROM country GROUP BY GovernmentForm HAVING avg ( LifeExpectancy )   >  72
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx3
____________________
SELECT Population FROM country WHERE GovernmentForm = "Democracy"
SELECT sum ( Population )  ,  GovernmentForm FROM country GROUP BY GovernmentForm HAVING avg ( LifeExpectancy )   >  72
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT Population FROM country WHERE GovernmentForm = "Democracy"
medium gold: SELECT sum ( Population )  ,  GovernmentForm FROM country GROUP BY GovernmentForm HAVING avg ( LifeExpectancy )   >  72

当前idx1
____________________
SELECT id FROM TV_Channel WHERE id NOT IN (SELECT Channel FROM Cartoon WHERE Directed_by = "Ben Jones")
SELECT id FROM TV_Channel EXCEPT SELECT channel FROM cartoon WHERE directed_by   =   'Ben Jones'
连接数据库../datasets/cosql_dataset/database/tvshow/tvshow.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:0
hard pred: SELECT id FROM TV_Channel WHERE id NOT IN (SELECT Channel FROM Cartoon WHERE Directed_by = "Ben Jones")
hard gold: SELECT id FROM TV_Channel EXCEPT SELECT channel FROM cartoon WHERE directed_by   =   'Ben Jones'

当前idx2
____________________
SELECT Channel FROM Cartoon WHERE Directed_by = "Ben Jones"
SELECT id FROM TV_Channel where id in  ( SELECT channel FROM cartoon WHERE directed_by   =   'Ben Jones' ) 
连接数据库../datasets/cosql_dataset/database/tvshow/tvshow.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:0
hard pred: SELECT Channel FROM Cartoon WHERE Directed_by = "Ben Jones"
hard gold: SELECT id FROM TV_Channel where id in  ( SELECT channel FROM cartoon WHERE directed_by   =   'Ben Jones' ) 

当前idx3
____________________
SELECT Title FROM Cartoon
SELECT Title FROM Cartoon where directed_by   =   'Ben Jones'
连接数据库../datasets/cosql_dataset/database/tvshow/tvshow.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
easy pred: SELECT Title FROM Cartoon
easy gold: SELECT Title FROM Cartoon where directed_by   =   'Ben Jones'

当前idx1
____________________
SELECT Document_ID FROM Documents
SELECT document_id FROM Paragraphs
连接数据库../datasets/cosql_dataset/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:False
easy pred: SELECT Document_ID FROM Documents
easy gold: SELECT document_id FROM Paragraphs

当前idx2
eval_err_num:54
____________________
SELECT Document_ID, COUNT(*) AS num_paragraphs FROM Paragraphs GROUP BY Document_ID
SELECT document_id ,  count ( * )  FROM Paragraphs GROUP BY document_id
连接数据库../datasets/cosql_dataset/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT Document_ID, COUNT(*) AS num_paragraphs FROM Paragraphs GROUP BY Document_ID
medium gold: SELECT document_id ,  count ( * )  FROM Paragraphs GROUP BY document_id

当前idx3
eval_err_num:55
____________________
SELECT Document_ID, COUNT(*) AS num_paragraphs FROM Paragraphs GROUP BY Document_ID ORDER BY Document_ID
SELECT document_id ,  count ( * )  FROM Paragraphs GROUP BY document_id ORDER BY document_id
连接数据库../datasets/cosql_dataset/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT Document_ID, COUNT(*) AS num_paragraphs FROM Paragraphs GROUP BY Document_ID ORDER BY Document_ID
medium gold: SELECT document_id ,  count ( * )  FROM Paragraphs GROUP BY document_id ORDER BY document_id

当前idx1
____________________
SELECT owner_id, zip_code FROM Owners
SELECT  
owner_id,zip_code from Owners
连接数据库../datasets/cosql_dataset/database/dog_kennels/dog_kennels.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT T1.owner_id, T1.dog_id, T2.cost_of_treatment FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id  =  T2.dog_id
SELECT T1.owner_id , T2.dog_id ,T3.cost_of_treatment  FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id JOIN Treatments AS T3 ON T2.dog_id  =  T3.dog_id
连接数据库../datasets/cosql_dataset/database/dog_kennels/dog_kennels.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:False
medium pred: SELECT T1.owner_id, T1.dog_id, T2.cost_of_treatment FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id  =  T2.dog_id
medium gold: SELECT T1.owner_id , T2.dog_id ,T3.cost_of_treatment  FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id JOIN Treatments AS T3 ON T2.dog_id  =  T3.dog_id

当前idx3
____________________
SELECT T1.first_name, T1.owner_id FROM Owners AS T1 JOIN Treatments AS T2 ON T1.owner_id  =  T2.professional_id GROUP BY T1.owner_id ORDER BY sum(T2.cost_of_treatment) DESC LIMIT 1
SELECT  T1.first_name,T1.owner_id  FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id JOIN Treatments AS T3 ON T2.dog_id  =  T3.dog_id GROUP BY T1.owner_id ORDER BY sum ( T3.cost_of_treatment )  DESC LIMIT 1
连接数据库../datasets/cosql_dataset/database/dog_kennels/dog_kennels.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:False
extra pred: SELECT T1.first_name, T1.owner_id FROM Owners AS T1 JOIN Treatments AS T2 ON T1.owner_id  =  T2.professional_id GROUP BY T1.owner_id ORDER BY sum(T2.cost_of_treatment) DESC LIMIT 1
extra gold: SELECT  T1.first_name,T1.owner_id  FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id JOIN Treatments AS T3 ON T2.dog_id  =  T3.dog_id GROUP BY T1.owner_id ORDER BY sum ( T3.cost_of_treatment )  DESC LIMIT 1

当前idx4
____________________
SELECT T1.first_name, T1.last_name FROM Owners AS T1 JOIN Treatments AS T2 ON T1.owner_id  =  T2.professional_id GROUP BY T1.owner_id ORDER BY sum(T2.cost_of_treatment) DESC LIMIT 1
SELECT last_name  from Owners where first_name = "Jaclyn"
连接数据库../datasets/cosql_dataset/database/dog_kennels/dog_kennels.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
easy pred: SELECT T1.first_name, T1.last_name FROM Owners AS T1 JOIN Treatments AS T2 ON T1.owner_id  =  T2.professional_id GROUP BY T1.owner_id ORDER BY sum(T2.cost_of_treatment) DESC LIMIT 1
easy gold: SELECT last_name  from Owners where first_name = "Jaclyn"

当前idx>4
____________________
SELECT T1.owner_id, T1.zip_code FROM Owners AS T1 JOIN Treatments AS T2 ON T1.owner_id  =  T2.professional_id GROUP BY T1.owner_id ORDER BY sum(T2.cost_of_treatment) DESC LIMIT 1
SELECT T1.owner_id , T1.zip_code FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id JOIN Treatments AS T3 ON T2.dog_id  =  T3.dog_id GROUP BY T1.owner_id ORDER BY sum ( T3.cost_of_treatment )  DESC LIMIT 1
连接数据库../datasets/cosql_dataset/database/dog_kennels/dog_kennels.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:False
extra pred: SELECT T1.owner_id, T1.zip_code FROM Owners AS T1 JOIN Treatments AS T2 ON T1.owner_id  =  T2.professional_id GROUP BY T1.owner_id ORDER BY sum(T2.cost_of_treatment) DESC LIMIT 1
extra gold: SELECT T1.owner_id , T1.zip_code FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id JOIN Treatments AS T3 ON T2.dog_id  =  T3.dog_id GROUP BY T1.owner_id ORDER BY sum ( T3.cost_of_treatment )  DESC LIMIT 1

当前idx1
____________________
SELECT FlightNo FROM flights
SELECT FlightNo FROM Flights
连接数据库../datasets/cosql_dataset/database/flight_2/flight_2.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT FlightNo, DestAirport FROM flights
SELECT FlightNo,DestAirport FROM Flights
连接数据库../datasets/cosql_dataset/database/flight_2/flight_2.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx3
____________________
SELECT COUNT(*) FROM flights AS T1 JOIN airports AS T2 ON T1.DestAirport = T2.AirportCode WHERE T2.City = "Aberdeen" OR T2.City = "Abilene"
SELECT count ( * )  FROM Flights AS T1 JOIN Airports AS T2 ON T1.DestAirport   =   T2.AirportCode WHERE T2.city   =   "Aberdeen" OR T2.city   =   "Abilene"
连接数据库../datasets/cosql_dataset/database/flight_2/flight_2.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx4
____________________
SELECT T2.City FROM flights AS T1 JOIN airports AS T2 ON T1.DestAirport = T2.AirportCode GROUP BY T2.City ORDER BY COUNT(*) DESC LIMIT 1
SELECT DESTAIRPORT FROM Flights GROUP BY DESTAIRPORT order by count ( * )  desc limit 1
连接数据库../datasets/cosql_dataset/database/flight_2/flight_2.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
hard pred: SELECT T2.City FROM flights AS T1 JOIN airports AS T2 ON T1.DestAirport = T2.AirportCode GROUP BY T2.City ORDER BY COUNT(*) DESC LIMIT 1
hard gold: SELECT DESTAIRPORT FROM Flights GROUP BY DESTAIRPORT order by count ( * )  desc limit 1

当前idx1
____________________
SELECT COUNT(*) FROM flights AS T1 JOIN airports AS T2 ON T1.DestAirport  =  T2.AirportCode WHERE T2.City  =  'Aberdeen'
SELECT count ( * )  FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport   =   T2.AirportCode WHERE T2.City   =   "Aberdeen"
连接数据库../datasets/cosql_dataset/database/flight_2/flight_2.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT COUNT(*) FROM flights AS T1 JOIN airports AS T2 ON T1.SourceAirport  =  T2.AirportCode WHERE T2.City  =  'Aberdeen'
SELECT count ( * )  FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.sourceAirport   =   T2.AirportCode WHERE T2.City   =   "Aberdeen"
连接数据库../datasets/cosql_dataset/database/flight_2/flight_2.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx1
____________________
SELECT name FROM country WHERE population < (SELECT min(population) FROM country WHERE Continent = 'Asia') AND Continent = 'Africa'
SELECT Name FROM country WHERE Continent   =   "Africa"  AND population  <   ( SELECT max ( population )  FROM country WHERE Continent   =   "Asia" ) 
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
extra pred: SELECT name FROM country WHERE population < (SELECT min(population) FROM country WHERE Continent = 'Asia') AND Continent = 'Africa'
extra gold: SELECT Name FROM country WHERE Continent   =   "Africa"  AND population  <   ( SELECT max ( population )  FROM country WHERE Continent   =   "Asia" ) 

当前idx2
____________________
SELECT Continent FROM country WHERE Code = 'AR'
SELECT continent FROM country WHERE name  =  "Aruba"
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
easy pred: SELECT Continent FROM country WHERE Code = 'AR'
easy gold: SELECT continent FROM country WHERE name  =  "Aruba"

当前idx3
____________________
SELECT LocalName FROM country WHERE Code = 'AO'
SELECT localname FROM country WHERE name  =  "Angola"
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
easy pred: SELECT LocalName FROM country WHERE Code = 'AO'
easy gold: SELECT localname FROM country WHERE name  =  "Angola"

当前idx4
____________________
SELECT SurfaceArea FROM country WHERE Code = 'AF'
SELECT SurfaceArea FROM country WHERE name  =  "Afghanistan"
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
easy pred: SELECT SurfaceArea FROM country WHERE Code = 'AF'
easy gold: SELECT SurfaceArea FROM country WHERE name  =  "Afghanistan"

当前idx>4
____________________
SELECT Code FROM country WHERE LocalName = 'Aruba'
SELECT Code FROM country WHERE name  =  "Aruba"
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:0
easy pred: SELECT Code FROM country WHERE LocalName = 'Aruba'
easy gold: SELECT Code FROM country WHERE name  =  "Aruba"

当前idx1
eval_err_num:56
____________________
SELECT name FROM Breeds WHERE name NOT IN (SELECT name FROM Dogs)
SELECT first_name FROM Professionals UNION SELECT first_name FROM Owners EXCEPT SELECT name FROM Dogs
连接数据库../datasets/cosql_dataset/database/dog_kennels/dog_kennels.sqlite
执行第一个查询
执行出错: no such column: name
eval_exec:False
exact_score:0
hard pred: SELECT name FROM Breeds WHERE name NOT IN (SELECT name FROM Dogs)
hard gold: SELECT first_name FROM Professionals UNION SELECT first_name FROM Owners EXCEPT SELECT name FROM Dogs

当前idx2
____________________
SELECT email_address FROM Professionals WHERE first_name = "Taryn"
SELECT email_address FROM Professionals WHERE First_Name  =  "Taryn"
连接数据库../datasets/cosql_dataset/database/dog_kennels/dog_kennels.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx3
____________________
SELECT state FROM Professionals WHERE first_name = "Jayson"
SELECT state FROM Professionals WHERE First_Name  =  "Jayson"
连接数据库../datasets/cosql_dataset/database/dog_kennels/dog_kennels.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx1
eval_err_num:57
____________________
SELECT DISTINCT Maker FROM car_names WHERE YEAR = 1970
SELECT DISTINCT T1.Maker FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id   =   T2.Maker JOIN CAR_NAMES AS T3 ON T2.model   =   T3.model JOIN CARS_DATA AS T4 ON T3.MakeId   =   T4.id WHERE T4.year   =   '1970'
连接数据库../datasets/cosql_dataset/database/car_1/car_1.sqlite
执行第一个查询
执行出错: no such column: Maker
eval_exec:False
exact_score:0
extra pred: SELECT DISTINCT Maker FROM car_names WHERE YEAR = 1970
extra gold: SELECT DISTINCT T1.Maker FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id   =   T2.Maker JOIN CAR_NAMES AS T3 ON T2.model   =   T3.model JOIN CARS_DATA AS T4 ON T3.MakeId   =   T4.id WHERE T4.year   =   '1970'

当前idx2
eval_err_num:58
____________________
SELECT Model, Make FROM car_names WHERE YEAR = 1970
SELECT T3.model, T3.make FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id   =   T2.Maker JOIN CAR_NAMES AS T3 ON T2.model   =   T3.model JOIN CARS_DATA AS T4 ON T3.MakeId   =   T4.id WHERE T4.year   =   '1970'
连接数据库../datasets/cosql_dataset/database/car_1/car_1.sqlite
执行第一个查询
执行出错: no such column: YEAR
eval_exec:False
exact_score:0
extra pred: SELECT Model, Make FROM car_names WHERE YEAR = 1970
extra gold: SELECT T3.model, T3.make FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id   =   T2.Maker JOIN CAR_NAMES AS T3 ON T2.model   =   T3.model JOIN CARS_DATA AS T4 ON T3.MakeId   =   T4.id WHERE T4.year   =   '1970'

当前idx3
eval_err_num:59
____________________
SELECT FullName FROM car_makers WHERE Country IN (SELECT Country FROM car_names WHERE YEAR = 1970 ORDER BY Weight DESC LIMIT 1)
SELECT T1.Fullname FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker JOIN CAR_NAMES AS T3 ON T2.model  =  T3.model JOIN CARS_DATA AS T4 ON T3.MakeId  =  T4.id WHERE T4.year  =  '1970' ORDER BY T4.weight DESC limit 1
连接数据库../datasets/cosql_dataset/database/car_1/car_1.sqlite
执行第一个查询
执行出错: no such column: YEAR
eval_exec:False
exact_score:0
extra pred: SELECT FullName FROM car_makers WHERE Country IN (SELECT Country FROM car_names WHERE YEAR = 1970 ORDER BY Weight DESC LIMIT 1)
extra gold: SELECT T1.Fullname FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker JOIN CAR_NAMES AS T3 ON T2.model  =  T3.model JOIN CARS_DATA AS T4 ON T3.MakeId  =  T4.id WHERE T4.year  =  '1970' ORDER BY T4.weight DESC limit 1

当前idx1
____________________
SELECT T1.id ,  T1.series_name FROM TV_Channel AS T1 JOIN TV_series AS T2 ON T1.id  =  T2.Channel WHERE T2.Episode  =  'Ben Jones'
SELECT channel, id FROM cartoon
连接数据库../datasets/cosql_dataset/database/tvshow/tvshow.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT T1.id ,  T1.series_name FROM TV_Channel AS T1 JOIN TV_series AS T2 ON T1.id  =  T2.Channel WHERE T2.Episode  =  'Ben Jones'
medium gold: SELECT channel, id FROM cartoon

当前idx2
____________________
SELECT T1.id ,  T1.series_name FROM TV_Channel AS T1 JOIN TV_series AS T2 ON T1.id  =  T2.Channel WHERE T2.Episode  =  'Ben Jones' AND T1.Language  !=  'Italian'
SELECT series_name FROM TV_Channel EXCEPT SELECT series_name FROM TV_channel WHERE language  =  'Italian'
连接数据库../datasets/cosql_dataset/database/tvshow/tvshow.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
hard pred: SELECT T1.id ,  T1.series_name FROM TV_Channel AS T1 JOIN TV_series AS T2 ON T1.id  =  T2.Channel WHERE T2.Episode  =  'Ben Jones' AND T1.Language  !=  'Italian'
hard gold: SELECT series_name FROM TV_Channel EXCEPT SELECT series_name FROM TV_channel WHERE language  =  'Italian'

当前idx3
____________________
SELECT T1.id FROM TV_Channel AS T1 JOIN TV_series AS T2 ON T1.id  =  T2.Channel WHERE T2.Episode  !=  'Ben Jones'
SELECT id FROM TV_Channel EXCEPT SELECT channel FROM cartoon WHERE directed_by  =  'Ben Jones'
连接数据库../datasets/cosql_dataset/database/tvshow/tvshow.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
hard pred: SELECT T1.id FROM TV_Channel AS T1 JOIN TV_series AS T2 ON T1.id  =  T2.Channel WHERE T2.Episode  !=  'Ben Jones'
hard gold: SELECT id FROM TV_Channel EXCEPT SELECT channel FROM cartoon WHERE directed_by  =  'Ben Jones'

当前idx1
____________________
SELECT avg(Number_products) FROM shop
select avg ( Number_products )  from shop
连接数据库../datasets/cosql_dataset/database/employee_hire_evaluation/employee_hire_evaluation.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT Name FROM shop WHERE Number_products > 6685
select Name from shop where Number_products > 6685
连接数据库../datasets/cosql_dataset/database/employee_hire_evaluation/employee_hire_evaluation.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx3
____________________
SELECT count(*) FROM shop
select count ( * )  from shop
连接数据库../datasets/cosql_dataset/database/employee_hire_evaluation/employee_hire_evaluation.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx1
____________________
SELECT count(*) FROM flights
SELECT count ( * )  FROM flights
连接数据库../datasets/cosql_dataset/database/flight_2/flight_2.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT T1.City FROM airports AS T1 JOIN flights AS T2 ON T1.AirportCode  =  T2.SourceAirport GROUP BY T1.City ORDER BY count(*) ASC LIMIT 1
SELECT T1.City FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode   =   T2.SourceAirport GROUP BY T1.City ORDER BY count ( * )  ASC LIMIT 1
连接数据库../datasets/cosql_dataset/database/flight_2/flight_2.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx3
____________________
SELECT FlightNo FROM flights WHERE SourceAirport = "APG"
SELECT FlightNo FROM flights WHERE SourceAirport = "APG"
连接数据库../datasets/cosql_dataset/database/flight_2/flight_2.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx4
____________________
SELECT T1.AirportName FROM airports AS T1 JOIN flights AS T2 ON T1.AirportCode  =  T2.SourceAirport WHERE T2.SourceAirport = "DYS"
SELECT AirportName FROM airports WHERE AirportCode = "DYS"
连接数据库../datasets/cosql_dataset/database/flight_2/flight_2.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:False
easy pred: SELECT T1.AirportName FROM airports AS T1 JOIN flights AS T2 ON T1.AirportCode  =  T2.SourceAirport WHERE T2.SourceAirport = "DYS"
easy gold: SELECT AirportName FROM airports WHERE AirportCode = "DYS"

当前idx>4
____________________
SELECT T1.City FROM airports AS T1 JOIN flights AS T2 ON T1.AirportCode  =  T2.SourceAirport WHERE T2.SourceAirport = "ABR"
SELECT CITY FROM airports WHERE AirportCode = "ABR"
连接数据库../datasets/cosql_dataset/database/flight_2/flight_2.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:False
easy pred: SELECT T1.City FROM airports AS T1 JOIN flights AS T2 ON T1.AirportCode  =  T2.SourceAirport WHERE T2.SourceAirport = "ABR"
easy gold: SELECT CITY FROM airports WHERE AirportCode = "ABR"

当前idx1
eval_err_num:60
____________________
SELECT country.name FROM country JOIN countrylanguage ON country.code  =  countrylanguage.countrycode WHERE countrylanguage.isofficial = "T" AND countrylanguage.language IN ("English","Dutch")
SELECT * FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code   =   T2.CountryCode WHERE T2.Language   =   "English" AND IsOfficial   =   "T" UNION SELECT * FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code   =   T2.CountryCode WHERE T2.Language   =   "Dutch" AND IsOfficial   =   "T"
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
extra pred: SELECT country.name FROM country JOIN countrylanguage ON country.code  =  countrylanguage.countrycode WHERE countrylanguage.isofficial = "T" AND countrylanguage.language IN ("English","Dutch")
extra gold: SELECT * FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code   =   T2.CountryCode WHERE T2.Language   =   "English" AND IsOfficial   =   "T" UNION SELECT * FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code   =   T2.CountryCode WHERE T2.Language   =   "Dutch" AND IsOfficial   =   "T"

当前idx2
____________________
SELECT countrylanguage.language FROM country JOIN countrylanguage ON country.code  =  countrylanguage.countrycode WHERE country.name = "Belgium" AND countrylanguage.isofficial = "T"
SELECT T2.language FROM country as T1 join countrylanguage as T2 on T1.code  =  T2.countrycode where T1.name  =  "Belgium" and T2.isofficial  =  "T"
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx3
____________________
SELECT country.name FROM country JOIN countrylanguage ON country.code  =  countrylanguage.countrycode WHERE countrylanguage.language = "Arabic"
SELECT T1.name FROM country as T1 join countrylanguage as T2 on T1.code  =  T2.countrycode where T2.language  =  "Arabic"
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx4
____________________
SELECT countrylanguage.language FROM country JOIN countrylanguage ON country.code  =  countrylanguage.countrycode WHERE country.name = "Egypt"
SELECT T2.language FROM country as T1 join countrylanguage as T2 on T1.code  =  T2.countrycode where T1.name  =  "Egypt"
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx>4
____________________
SELECT COUNT(*) FROM country JOIN countrylanguage ON country.code  =  countrylanguage.countrycode WHERE countrylanguage.language = "Arabic"
SELECT count ( T1.name )  FROM country as T1 join countrylanguage as T2 on T1.code  =  T2.countrycode where T2.Language  =  "Arabic" and T2.isOfficial  =  "T"
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT COUNT(*) FROM country JOIN countrylanguage ON country.code  =  countrylanguage.countrycode WHERE countrylanguage.language = "Arabic"
medium gold: SELECT count ( T1.name )  FROM country as T1 join countrylanguage as T2 on T1.code  =  T2.countrycode where T2.Language  =  "Arabic" and T2.isOfficial  =  "T"

当前idx>4
____________________
SELECT country.name FROM country JOIN countrylanguage ON country.code  =  countrylanguage.countrycode WHERE countrylanguage.language = "Arabic"
SELECT T1.name FROM country as T1 join countrylanguage as T2 on T1.code  =  T2.countrycode where T2.Language  =  "Arabic" and T2.isOfficial  =  "T"
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT country.name FROM country JOIN countrylanguage ON country.code  =  countrylanguage.countrycode WHERE countrylanguage.language = "Arabic"
medium gold: SELECT T1.name FROM country as T1 join countrylanguage as T2 on T1.code  =  T2.countrycode where T2.Language  =  "Arabic" and T2.isOfficial  =  "T"

当前idx1
____________________
SELECT population FROM country WHERE continent = "Africa"
SELECT name,population FROM country WHERE Continent   =   "Africa"
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT population FROM country WHERE continent = "Africa"
medium gold: SELECT name,population FROM country WHERE Continent   =   "Africa"

当前idx2
____________________
SELECT name, population FROM country WHERE continent = "Asia"
SELECT name,population FROM country WHERE Continent   =   "Asia"
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx3
____________________
SELECT name FROM country WHERE population > (SELECT max(population) FROM country WHERE continent = "Africa") AND continent = "Asia"
SELECT Name FROM country WHERE Continent   =   "Asia"  AND population  >   ( SELECT min ( population )  FROM country WHERE Continent   =   "Africa" ) 
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
extra pred: SELECT name FROM country WHERE population > (SELECT max(population) FROM country WHERE continent = "Africa") AND continent = "Asia"
extra gold: SELECT Name FROM country WHERE Continent   =   "Asia"  AND population  >   ( SELECT min ( population )  FROM country WHERE Continent   =   "Africa" ) 

当前idx4
____________________
SELECT population FROM country WHERE population > (SELECT max(population) FROM country WHERE continent = "Africa") AND continent = "Asia"
SELECT Name,population FROM country WHERE Continent   =   "Asia"  AND population  >   ( SELECT min ( population )  FROM country WHERE Continent   =   "Africa" ) 
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
extra pred: SELECT population FROM country WHERE population > (SELECT max(population) FROM country WHERE continent = "Africa") AND continent = "Asia"
extra gold: SELECT Name,population FROM country WHERE Continent   =   "Asia"  AND population  >   ( SELECT min ( population )  FROM country WHERE Continent   =   "Africa" ) 

当前idx>4
____________________
SELECT governmentForm FROM country WHERE population > (SELECT max(population) FROM country WHERE continent = "Africa") AND continent = "Asia"
SELECT Name,GovernmentForm FROM country WHERE Continent   =   "Asia"  AND population  >   ( SELECT min ( population )  FROM country WHERE Continent   =   "Africa" ) 
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
extra pred: SELECT governmentForm FROM country WHERE population > (SELECT max(population) FROM country WHERE continent = "Africa") AND continent = "Asia"
extra gold: SELECT Name,GovernmentForm FROM country WHERE Continent   =   "Asia"  AND population  >   ( SELECT min ( population )  FROM country WHERE Continent   =   "Africa" ) 

当前idx1
____________________
SELECT Name FROM country WHERE Continent  =  "Asia" ORDER BY LifeExpectancy ASC LIMIT 1
SELECT Name FROM country WHERE Continent   =   "Asia" ORDER BY LifeExpectancy LIMIT 1
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT Name FROM country WHERE Continent  =  "Africa" ORDER BY LifeExpectancy ASC LIMIT 1
SELECT Name FROM country WHERE Continent   =   "Africa" ORDER BY LifeExpectancy LIMIT 1
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx3
____________________
SELECT GNP FROM country WHERE Name  =  "Afghanistan"
SELECT GNP FROM country WHERE name = "Afghanistan"
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx4
____________________
SELECT Population FROM country WHERE Name  =  "Afghanistan"
SELECT Population FROM country WHERE name = "Afghanistan"
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx1
____________________
SELECT Earnings FROM poker_player ORDER BY Earnings DESC LIMIT 1
SELECT Earnings FROM poker_player
连接数据库../datasets/cosql_dataset/database/poker_player/poker_player.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
easy pred: SELECT Earnings FROM poker_player ORDER BY Earnings DESC LIMIT 1
easy gold: SELECT Earnings FROM poker_player

当前idx2
eval_err_num:61
____________________
SELECT Earnings, Rank() OVER (ORDER BY Earnings DESC) AS Rank FROM poker_player ORDER BY Rank
SELECT Earnings FROM poker_player order by Earnings desc
连接数据库../datasets/cosql_dataset/database/poker_player/poker_player.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
easy pred: SELECT Earnings, Rank() OVER (ORDER BY Earnings DESC) AS Rank FROM poker_player ORDER BY Rank
easy gold: SELECT Earnings FROM poker_player order by Earnings desc

当前idx3
____________________
SELECT Final_Table_Made FROM poker_player ORDER BY Earnings ASC LIMIT 1
SELECT Final_Table_Made FROM poker_player order by Earnings asc limit 1
连接数据库../datasets/cosql_dataset/database/poker_player/poker_player.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx4
____________________
SELECT Final_Table_Made FROM poker_player ORDER BY Earnings DESC LIMIT 1
SELECT Final_Table_Made FROM poker_player order by Earnings desc limit 1
连接数据库../datasets/cosql_dataset/database/poker_player/poker_player.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx1
____________________
SELECT T1.Template_ID, T2.Document_ID FROM Templates AS T1 JOIN Documents AS T2 ON T1.Template_ID  =  T2.Template_ID
SELECT template_id FROM Documents
连接数据库../datasets/cosql_dataset/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
easy pred: SELECT T1.Template_ID, T2.Document_ID FROM Templates AS T1 JOIN Documents AS T2 ON T1.Template_ID  =  T2.Template_ID
easy gold: SELECT template_id FROM Documents

当前idx2
____________________
SELECT T1.Template_ID, T2.Document_ID FROM Templates AS T1 JOIN Documents AS T2 ON T1.Template_ID  =  T2.Template_ID
SELECT template_id ,Document_ID FROM Documents
连接数据库../datasets/cosql_dataset/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:False
medium pred: SELECT T1.Template_ID, T2.Document_ID FROM Templates AS T1 JOIN Documents AS T2 ON T1.Template_ID  =  T2.Template_ID
medium gold: SELECT template_id ,Document_ID FROM Documents

当前idx3
eval_err_num:62
____________________
SELECT T1.Template_ID FROM Templates AS T1 LEFT JOIN Documents AS T2 ON T1.Template_ID  =  T2.Template_ID WHERE T2.Template_ID IS NULL
SELECT template_id FROM Templates EXCEPT SELECT template_id FROM Documents
连接数据库../datasets/cosql_dataset/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
hard pred: SELECT T1.Template_ID FROM Templates AS T1 LEFT JOIN Documents AS T2 ON T1.Template_ID  =  T2.Template_ID WHERE T2.Template_ID IS NULL
hard gold: SELECT template_id FROM Templates EXCEPT SELECT template_id FROM Documents

当前idx4
eval_err_num:63
____________________
SELECT T1.Template_ID, T1.Template_Type_Code FROM Templates AS T1 LEFT JOIN Documents AS T2 ON T1.Template_ID  =  T2.Template_ID WHERE T2.Template_ID IS NULL
SELECT T1.template_id ,T1.Template_Type_Code FROM Templates as T1 join Documents as T2 on T1.Template_ID = T2.Template_ID
连接数据库../datasets/cosql_dataset/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT T1.Template_ID, T1.Template_Type_Code FROM Templates AS T1 LEFT JOIN Documents AS T2 ON T1.Template_ID  =  T2.Template_ID WHERE T2.Template_ID IS NULL
medium gold: SELECT T1.template_id ,T1.Template_Type_Code FROM Templates as T1 join Documents as T2 on T1.Template_ID = T2.Template_ID

当前idx1
____________________
SELECT count(*) FROM Treatments
SELECT count ( * )  FROM Dogs WHERE dog_id IN  (  SELECT dog_id FROM Treatments  ) 
连接数据库../datasets/cosql_dataset/database/dog_kennels/dog_kennels.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
hard pred: SELECT count(*) FROM Treatments
hard gold: SELECT count ( * )  FROM Dogs WHERE dog_id IN  (  SELECT dog_id FROM Treatments  ) 

当前idx2
____________________
SELECT min(age) FROM Dogs WHERE dog_id IN (SELECT dog_id FROM Treatments)
SELECT min ( age )  FROM Dogs WHERE dog_id IN  (  SELECT dog_id FROM Treatments  ) 
连接数据库../datasets/cosql_dataset/database/dog_kennels/dog_kennels.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx3
____________________
SELECT max(age) FROM Dogs WHERE dog_id IN (SELECT dog_id FROM Treatments)
SELECT max ( age )  FROM Dogs WHERE dog_id IN  (  SELECT dog_id FROM Treatments  ) 
连接数据库../datasets/cosql_dataset/database/dog_kennels/dog_kennels.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx4
____________________
SELECT avg(age) FROM Dogs WHERE dog_id IN (SELECT dog_id FROM Treatments)
SELECT avg ( age )  FROM Dogs WHERE dog_id IN  (  SELECT dog_id FROM Treatments  ) 
连接数据库../datasets/cosql_dataset/database/dog_kennels/dog_kennels.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx1
____________________
SELECT count(distinct semester_name) FROM Semesters
SELECT distinct semester_name FROM Semesters
连接数据库../datasets/cosql_dataset/database/student_transcripts_tracking/student_transcripts_tracking.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
easy pred: SELECT count(distinct semester_name) FROM Semesters
easy gold: SELECT distinct semester_name FROM Semesters

当前idx2
____________________
SELECT semester_name FROM Semesters WHERE semester_id NOT IN (SELECT semester_id FROM Student_Enrolment)
SELECT semester_name FROM Semesters WHERE semester_id NOT IN (  SELECT semester_id FROM Student_Enrolment  ) 
连接数据库../datasets/cosql_dataset/database/student_transcripts_tracking/student_transcripts_tracking.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx3
____________________
SELECT semester_id, semester_description FROM Semesters WHERE semester_id NOT IN (SELECT semester_id FROM Student_Enrolment)
SELECT semester_id,semester_name,semester_description FROM Semesters WHERE semester_id NOT IN (  SELECT semester_id FROM Student_Enrolment  ) 
连接数据库../datasets/cosql_dataset/database/student_transcripts_tracking/student_transcripts_tracking.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
extra pred: SELECT semester_id, semester_description FROM Semesters WHERE semester_id NOT IN (SELECT semester_id FROM Student_Enrolment)
extra gold: SELECT semester_id,semester_name,semester_description FROM Semesters WHERE semester_id NOT IN (  SELECT semester_id FROM Student_Enrolment  ) 

当前idx1
____________________
SELECT count(*) FROM Student WHERE Sex = 'F'
SELECT count ( * ) FROM student WHERE Sex = "F"
连接数据库../datasets/cosql_dataset/database/pets_1/pets_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT Fname, Lname FROM Student ORDER BY age ASC LIMIT 1
SELECT LName,Fname  FROM student order  by  Age  limit 1
连接数据库../datasets/cosql_dataset/database/pets_1/pets_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx3
____________________
SELECT avg(age) FROM Student WHERE StuID NOT IN (SELECT StuID FROM Has_Pet)
SELECT avg ( age )  FROM student WHERE stuid NOT IN  ( SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid ) 
连接数据库../datasets/cosql_dataset/database/pets_1/pets_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:0
extra pred: SELECT avg(age) FROM Student WHERE StuID NOT IN (SELECT StuID FROM Has_Pet)
extra gold: SELECT avg ( age )  FROM student WHERE stuid NOT IN  ( SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid ) 

当前idx4
____________________
SELECT city_code FROM Student WHERE StuID = 1003
SELECT city_code  FROM student WHERE 
StuID = 1003
连接数据库../datasets/cosql_dataset/database/pets_1/pets_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx1
____________________
SELECT Country FROM TV_Channel WHERE id IN (SELECT Channel FROM Cartoon WHERE Written_by = "Todd Casey")
SELECT T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id  =  T2.Channel WHERE T2.written_by   =   'Todd Casey'
连接数据库../datasets/cosql_dataset/database/tvshow/tvshow.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT Country FROM TV_Channel WHERE id IN (SELECT Channel FROM Cartoon WHERE Written_by = "Todd Casey")
medium gold: SELECT T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id  =  T2.Channel WHERE T2.written_by   =   'Todd Casey'

当前idx2
____________________
SELECT Title FROM Cartoon WHERE Written_by = "Todd Casey"
SELECT title FROM cartoon  WHERE written_by   =   'Todd Casey'
连接数据库../datasets/cosql_dataset/database/tvshow/tvshow.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx3
____________________
SELECT Directed_by FROM Cartoon WHERE Title = "Enter the Outsiders"
SELECT directed_by FROM cartoon WHERE title  =  "Enter the Outsiders!"
连接数据库../datasets/cosql_dataset/database/tvshow/tvshow.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:True
当前idx1
____________________
SELECT count(*) FROM countrylanguage
SELECT count ( distinct language )  from countrylanguage
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
easy pred: SELECT count(*) FROM countrylanguage
easy gold: SELECT count ( distinct language )  from countrylanguage

当前idx2
____________________
SELECT population FROM country WHERE name = "Aruba"
SELECT population from country where name  =  "Aruba"
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx3
____________________
SELECT GNPOld FROM country WHERE name = "Afghanistan"
SELECT GNPOLD from country where name  =  "Afghanistan"
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx1
____________________
SELECT country_code FROM players GROUP BY country_code HAVING COUNT(*)  >  50
SELECT country_code FROM players GROUP BY country_code HAVING count ( * )   >  50
连接数据库../datasets/cosql_dataset/database/wta_1/wta_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT country_code FROM players GROUP BY country_code HAVING COUNT(*)  <  40
SELECT country_code FROM players GROUP BY country_code HAVING count ( * )   <  40
连接数据库../datasets/cosql_dataset/database/wta_1/wta_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx3
____________________
SELECT first_name, last_name FROM players WHERE country_code = "AHO"
SELECT first_name,last_name FROM players where country_code = 'AHO'
连接数据库../datasets/cosql_dataset/database/wta_1/wta_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx4
____________________
SELECT player_id FROM players WHERE country_code = "AHO"
SELECT player_id FROM players where country_code = 'AHO'
连接数据库../datasets/cosql_dataset/database/wta_1/wta_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx>4
____________________
SELECT hand FROM players WHERE player_id = 206449
SELECT hand FROM players where player_id = 206449
连接数据库../datasets/cosql_dataset/database/wta_1/wta_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx>4
____________________
SELECT COUNT(*) FROM players WHERE hand = "R"
SELECT count ( * )  FROM players where hand = 'U'
连接数据库../datasets/cosql_dataset/database/wta_1/wta_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:True
当前idx1
____________________
SELECT name FROM battle WHERE id NOT IN (SELECT id FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle WHERE T2.location  =  'English Channel')
SELECT name FROM battle EXCEPT SELECT T1.name FROM battle AS T1 JOIN ship AS T2 ON T1.id   =   T2.lost_in_battle WHERE T2.location   =   'English Channel'
连接数据库../datasets/cosql_dataset/database/battle_death/battle_death.sqlite
执行第一个查询
执行出错: ambiguous column name: id
eval_exec:False
exact_score:0
hard pred: SELECT name FROM battle WHERE id NOT IN (SELECT id FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle WHERE T2.location  =  'English Channel')
hard gold: SELECT name FROM battle EXCEPT SELECT T1.name FROM battle AS T1 JOIN ship AS T2 ON T1.id   =   T2.lost_in_battle WHERE T2.location   =   'English Channel'

当前idx2
____________________
SELECT result FROM battle WHERE id NOT IN (SELECT id FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle WHERE T2.location  =  'English Channel')
SELECT RESULT  FROM battle where name not in  ( SELECT T1.name FROM battle AS T1 JOIN ship AS T2 ON T1.id   =   T2.lost_in_battle WHERE T2.location   =   'English Channel' ) 
连接数据库../datasets/cosql_dataset/database/battle_death/battle_death.sqlite
执行第一个查询
执行出错: ambiguous column name: id
eval_exec:False
exact_score:0
hard pred: SELECT result FROM battle WHERE id NOT IN (SELECT id FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle WHERE T2.location  =  'English Channel')
hard gold: SELECT RESULT  FROM battle where name not in  ( SELECT T1.name FROM battle AS T1 JOIN ship AS T2 ON T1.id   =   T2.lost_in_battle WHERE T2.location   =   'English Channel' ) 

当前idx3
____________________
SELECT bulgarian_commander FROM battle WHERE id NOT IN (SELECT id FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle WHERE T2.location  =  'English Channel')
SELECT bulgarian_commander FROM battle where name not in  ( SELECT T1.name FROM battle AS T1 JOIN ship AS T2 ON T1.id   =   T2.lost_in_battle WHERE T2.location   =   'English Channel' ) 
连接数据库../datasets/cosql_dataset/database/battle_death/battle_death.sqlite
执行第一个查询
执行出错: ambiguous column name: id
eval_exec:False
exact_score:0
hard pred: SELECT bulgarian_commander FROM battle WHERE id NOT IN (SELECT id FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle WHERE T2.location  =  'English Channel')
hard gold: SELECT bulgarian_commander FROM battle where name not in  ( SELECT T1.name FROM battle AS T1 JOIN ship AS T2 ON T1.id   =   T2.lost_in_battle WHERE T2.location   =   'English Channel' ) 

当前idx4
____________________
SELECT date FROM battle WHERE id NOT IN (SELECT id FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle WHERE T2.location  =  'English Channel')
SELECT date FROM battle where name not in  ( SELECT T1.name FROM battle AS T1 JOIN ship AS T2 ON T1.id   =   T2.lost_in_battle WHERE T2.location   =   'English Channel' ) 
连接数据库../datasets/cosql_dataset/database/battle_death/battle_death.sqlite
执行第一个查询
执行出错: ambiguous column name: id
eval_exec:False
exact_score:0
hard pred: SELECT date FROM battle WHERE id NOT IN (SELECT id FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle WHERE T2.location  =  'English Channel')
hard gold: SELECT date FROM battle where name not in  ( SELECT T1.name FROM battle AS T1 JOIN ship AS T2 ON T1.id   =   T2.lost_in_battle WHERE T2.location   =   'English Channel' ) 

当前idx>4
____________________
SELECT latin_commander FROM battle WHERE id NOT IN (SELECT id FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle WHERE T2.location  =  'English Channel')
SELECT  latin_commander  FROM battle where name not in  ( SELECT T1.name FROM battle AS T1 JOIN ship AS T2 ON T1.id   =   T2.lost_in_battle WHERE T2.location   =   'English Channel' ) 
连接数据库../datasets/cosql_dataset/database/battle_death/battle_death.sqlite
执行第一个查询
执行出错: ambiguous column name: id
eval_exec:False
exact_score:0
hard pred: SELECT latin_commander FROM battle WHERE id NOT IN (SELECT id FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle WHERE T2.location  =  'English Channel')
hard gold: SELECT  latin_commander  FROM battle where name not in  ( SELECT T1.name FROM battle AS T1 JOIN ship AS T2 ON T1.id   =   T2.lost_in_battle WHERE T2.location   =   'English Channel' ) 

当前idx1
____________________
SELECT count(*) FROM shop
SELECT COUNT ( * )  FROM shop
连接数据库../datasets/cosql_dataset/database/employee_hire_evaluation/employee_hire_evaluation.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT max(Number_products) FROM shop
SELECT MAX ( Number_products )  FROM shop
连接数据库../datasets/cosql_dataset/database/employee_hire_evaluation/employee_hire_evaluation.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx3
____________________
SELECT min(Number_products) FROM shop
SELECT MIN ( Number_products )  FROM shop
连接数据库../datasets/cosql_dataset/database/employee_hire_evaluation/employee_hire_evaluation.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx1
____________________
SELECT breed_name FROM Breeds ORDER BY breed_code DESC LIMIT 1
SELECT T1.breed_name FROM Breeds AS T1 JOIN Dogs AS T2 ON T1.breed_code   =   T2.breed_code GROUP BY T1.breed_name ORDER BY count ( * )  DESC LIMIT 1
连接数据库../datasets/cosql_dataset/database/dog_kennels/dog_kennels.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
extra pred: SELECT breed_name FROM Breeds ORDER BY breed_code DESC LIMIT 1
extra gold: SELECT T1.breed_name FROM Breeds AS T1 JOIN Dogs AS T2 ON T1.breed_code   =   T2.breed_code GROUP BY T1.breed_name ORDER BY count ( * )  DESC LIMIT 1

当前idx2
____________________
SELECT count(*) FROM Dogs WHERE breed_code = "Bulldog"
SELECT count ( * )  FROM Breeds AS T1 JOIN Dogs AS T2 ON T1.breed_code   =   T2.breed_code where T1.breed_name  =  "Bulldog"
连接数据库../datasets/cosql_dataset/database/dog_kennels/dog_kennels.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT count(*) FROM Dogs WHERE breed_code = "Bulldog"
medium gold: SELECT count ( * )  FROM Breeds AS T1 JOIN Dogs AS T2 ON T1.breed_code   =   T2.breed_code where T1.breed_name  =  "Bulldog"

当前idx1
____________________
SELECT Fname FROM Student WHERE StuID IN (SELECT StuID FROM Has_Pet WHERE PetID IN (SELECT PetID FROM Pets WHERE PetType = "cat"))
SELECT T1.Fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid   =   T2.stuid JOIN pets AS T3 ON T3.petid   =   T2.petid WHERE T3.pettype   =   'dog'
连接数据库../datasets/cosql_dataset/database/pets_1/pets_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
hard pred: SELECT Fname FROM Student WHERE StuID IN (SELECT StuID FROM Has_Pet WHERE PetID IN (SELECT PetID FROM Pets WHERE PetType = "cat"))
hard gold: SELECT T1.Fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid   =   T2.stuid JOIN pets AS T3 ON T3.petid   =   T2.petid WHERE T3.pettype   =   'dog'

当前idx2
____________________
SELECT count(*) FROM Student WHERE StuID IN (SELECT StuID FROM Has_Pet)
SELECT count ( T2.StuId )  FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid   =   T2.stuid JOIN pets AS T3 ON T3.petid   =   T2.petid
连接数据库../datasets/cosql_dataset/database/pets_1/pets_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT count(*) FROM Student WHERE StuID IN (SELECT StuID FROM Has_Pet)
medium gold: SELECT count ( T2.StuId )  FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid   =   T2.stuid JOIN pets AS T3 ON T3.petid   =   T2.petid

当前idx3
____________________
SELECT T1.age FROM Student AS T1 JOIN Has_Pet AS T2 ON T1.StuID = T2.StuID JOIN Pets AS T3 ON T2.PetID = T3.PetID WHERE T3.PetType = "cat"
SELECT T3.pet_age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid   =   T2.stuid JOIN pets AS T3 ON T3.petid   =   T2.petid WHERE T1.Fname  =  "Linda"
连接数据库../datasets/cosql_dataset/database/pets_1/pets_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
hard pred: SELECT T1.age FROM Student AS T1 JOIN Has_Pet AS T2 ON T1.StuID = T2.StuID JOIN Pets AS T3 ON T2.PetID = T3.PetID WHERE T3.PetType = "cat"
hard gold: SELECT T3.pet_age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid   =   T2.stuid JOIN pets AS T3 ON T3.petid   =   T2.petid WHERE T1.Fname  =  "Linda"

当前idx1
____________________
SELECT Name FROM visitor WHERE Level_of_membership  >  4
SELECT name FROM visitor WHERE Level_of_membership  >  4
连接数据库../datasets/cosql_dataset/database/museum_visit/museum_visit.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT Name, Age FROM visitor WHERE Level_of_membership  >  4
SELECT name, age FROM visitor WHERE Level_of_membership  >  4
连接数据库../datasets/cosql_dataset/database/museum_visit/museum_visit.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx3
____________________
SELECT Name, Age FROM visitor WHERE Level_of_membership  >  4 ORDER BY Age ASC
SELECT name ,  age FROM visitor WHERE Level_of_membership  >  4 ORDER BY age DESC
连接数据库../datasets/cosql_dataset/database/museum_visit/museum_visit.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT Name, Age FROM visitor WHERE Level_of_membership  >  4 ORDER BY Age ASC
medium gold: SELECT name ,  age FROM visitor WHERE Level_of_membership  >  4 ORDER BY age DESC

当前idx4
____________________
SELECT ID FROM visitor WHERE Level_of_membership  >  4 ORDER BY Age ASC
SELECT id FROM visitor WHERE Level_of_membership  >  4 ORDER BY age DESC
连接数据库../datasets/cosql_dataset/database/museum_visit/museum_visit.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT ID FROM visitor WHERE Level_of_membership  >  4 ORDER BY Age ASC
medium gold: SELECT id FROM visitor WHERE Level_of_membership  >  4 ORDER BY age DESC

当前idx1
____________________
SELECT T1.first_name, T1.middle_name, T1.last_name FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id JOIN Degree_Programs AS T3 ON T2.degree_program_id  =  T3.degree_program_id JOIN Semesters AS T4 ON T2.semester_id  =  T4.semester_id WHERE T4.semester_id  =  1 GROUP BY T1.student_id HAVING COUNT(T3.degree_program_id)  >=  2
SELECT T1.first_name ,  T1.middle_name ,  T1.last_name ,  T1.student_id FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id   =   T2.student_id GROUP BY T1.student_id HAVING count ( * )    =   2
连接数据库../datasets/cosql_dataset/database/student_transcripts_tracking/student_transcripts_tracking.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT T1.first_name, T1.middle_name, T1.last_name FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id JOIN Degree_Programs AS T3 ON T2.degree_program_id  =  T3.degree_program_id JOIN Semesters AS T4 ON T2.semester_id  =  T4.semester_id WHERE T4.semester_id  =  1 GROUP BY T1.student_id HAVING COUNT(T3.degree_program_id)  >=  2
medium gold: SELECT T1.first_name ,  T1.middle_name ,  T1.last_name ,  T1.student_id FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id   =   T2.student_id GROUP BY T1.student_id HAVING count ( * )    =   2

当前idx2
____________________
SELECT T1.student_id FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id JOIN Degree_Programs AS T3 ON T2.degree_program_id  =  T3.degree_program_id JOIN Semesters AS T4 ON T2.semester_id  =  T4.semester_id WHERE T4.semester_id  =  1 GROUP BY T1.student_id HAVING COUNT(T3.degree_program_id)  >=  2
SELECT T1.student_id FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id   =   T2.student_id GROUP BY T1.student_id HAVING count ( * )    =   2
连接数据库../datasets/cosql_dataset/database/student_transcripts_tracking/student_transcripts_tracking.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT T1.student_id FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id JOIN Degree_Programs AS T3 ON T2.degree_program_id  =  T3.degree_program_id JOIN Semesters AS T4 ON T2.semester_id  =  T4.semester_id WHERE T4.semester_id  =  1 GROUP BY T1.student_id HAVING COUNT(T3.degree_program_id)  >=  2
medium gold: SELECT T1.student_id FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id   =   T2.student_id GROUP BY T1.student_id HAVING count ( * )    =   2

当前idx3
____________________
SELECT email_address FROM Students WHERE student_id = 4
SELECT email_address FROM Students where student_id  =  4
连接数据库../datasets/cosql_dataset/database/student_transcripts_tracking/student_transcripts_tracking.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx4
____________________
SELECT date_first_registered FROM Students WHERE first_name = "Timothy" AND middle_name = "Anna" AND last_name = "Ward"
SELECT date_first_registered FROM Students where first_name  =  'Timmothy' and middle_name  =  'Anna' and last_name  =  'Ward'
连接数据库../datasets/cosql_dataset/database/student_transcripts_tracking/student_transcripts_tracking.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:True
当前idx1
____________________
SELECT count(*) FROM Owners WHERE state = "Virginia"
SELECT count ( * )  FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id   =   T2.owner_id WHERE T1.state   =   'Virginia'
连接数据库../datasets/cosql_dataset/database/dog_kennels/dog_kennels.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:False
medium pred: SELECT count(*) FROM Owners WHERE state = "Virginia"
medium gold: SELECT count ( * )  FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id   =   T2.owner_id WHERE T1.state   =   'Virginia'

当前idx2
____________________
SELECT first_name, last_name FROM Owners WHERE state = "Virginia"
SELECT T1.first_name, T1.last_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id   =   T2.owner_id WHERE T1.state   =   'Virginia'
连接数据库../datasets/cosql_dataset/database/dog_kennels/dog_kennels.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:False
medium pred: SELECT first_name, last_name FROM Owners WHERE state = "Virginia"
medium gold: SELECT T1.first_name, T1.last_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id   =   T2.owner_id WHERE T1.state   =   'Virginia'

当前idx3
____________________
SELECT T1.first_name, T1.last_name, T2.name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id WHERE T1.state = "Virginia"
SELECT T2.name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id   =   T2.owner_id WHERE T1.state   =   'Virginia'
连接数据库../datasets/cosql_dataset/database/dog_kennels/dog_kennels.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT T1.first_name, T1.last_name, T2.name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id WHERE T1.state = "Virginia"
medium gold: SELECT T2.name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id   =   T2.owner_id WHERE T1.state   =   'Virginia'

当前idx4
____________________
SELECT breed_name FROM Breeds WHERE breed_code = (SELECT breed_code FROM Dogs WHERE name = "Bessie")
SELECT T2.breed_code FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id   =   T2.owner_id WHERE T2.name  =  "Bessie"
连接数据库../datasets/cosql_dataset/database/dog_kennels/dog_kennels.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT breed_name FROM Breeds WHERE breed_code = (SELECT breed_code FROM Dogs WHERE name = "Bessie")
medium gold: SELECT T2.breed_code FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id   =   T2.owner_id WHERE T2.name  =  "Bessie"

当前idx>4
____________________
SELECT size_description FROM Sizes WHERE size_code = (SELECT size_code FROM Dogs WHERE name = "Bessie")
SELECT T2.size_code FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id   =   T2.owner_id WHERE T2.name  =  "Bessie"
连接数据库../datasets/cosql_dataset/database/dog_kennels/dog_kennels.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT size_description FROM Sizes WHERE size_code = (SELECT size_code FROM Dogs WHERE name = "Bessie")
medium gold: SELECT T2.size_code FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id   =   T2.owner_id WHERE T2.name  =  "Bessie"

当前idx1
____________________
SELECT count(DISTINCT Record_Company) FROM orchestra
SELECT count ( Record_Company )  FROM orchestra
连接数据库../datasets/cosql_dataset/database/orchestra/orchestra.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:True
当前idx2
____________________
SELECT count(DISTINCT Orchestra_ID) FROM orchestra
SELECT count ( Orchestra_ID )  FROM orchestra
连接数据库../datasets/cosql_dataset/database/orchestra/orchestra.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx3
____________________
SELECT Orchestra FROM orchestra ORDER BY Year_of_Founded ASC
select orchestra from orchestra order by Year_of_Founded
连接数据库../datasets/cosql_dataset/database/orchestra/orchestra.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx4
____________________
SELECT Year_of_Founded FROM orchestra WHERE Orchestra = "Royal Danish Orchestra"
select year_of_founded  from orchestra where orchestra = 'Royal Danish Orchestra'
连接数据库../datasets/cosql_dataset/database/orchestra/orchestra.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx>4
____________________
SELECT Record_Company FROM orchestra GROUP BY Record_Company ORDER BY count(*) DESC LIMIT 1
SELECT Record_Company FROM orchestra GROUP BY Record_Company ORDER BY COUNT ( * )  DESC LIMIT 1
连接数据库../datasets/cosql_dataset/database/orchestra/orchestra.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx1
____________________
SELECT COUNT(*) FROM flights AS T1 JOIN airports AS T2 ON T1.DestAirport  =  T2.AirportCode WHERE T1.Airline  =  1 AND T2.AirportName  =  'ASY'
SELECT count ( * )  FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T2.Airline   =   T1.uid WHERE T1.Airline   =   "United Airlines" AND T2.DestAirport   =   "ASY"
连接数据库../datasets/cosql_dataset/database/flight_2/flight_2.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:0
medium pred: SELECT COUNT(*) FROM flights AS T1 JOIN airports AS T2 ON T1.DestAirport  =  T2.AirportCode WHERE T1.Airline  =  1 AND T2.AirportName  =  'ASY'
medium gold: SELECT count ( * )  FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T2.Airline   =   T1.uid WHERE T1.Airline   =   "United Airlines" AND T2.DestAirport   =   "ASY"

当前idx2
____________________
SELECT uid FROM airlines WHERE Airline = "United Airlines"
select uid from airlines where airline  =  "United Airlines"
连接数据库../datasets/cosql_dataset/database/flight_2/flight_2.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx3
____________________
SELECT COUNT(*) FROM flights AS T1 JOIN airports AS T2 ON T1.DestAirport  =  T2.AirportCode WHERE T1.Airline  =  1 AND T2.AirportName  =  'ASY'
SELECT count ( * )  FROM FLIGHTS WHERE airline  =  1 and DestAirport   =   " ASY"
连接数据库../datasets/cosql_dataset/database/flight_2/flight_2.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT COUNT(*) FROM flights AS T1 JOIN airports AS T2 ON T1.DestAirport  =  T2.AirportCode WHERE T1.Airline  =  1 AND T2.AirportName  =  'ASY'
medium gold: SELECT count ( * )  FROM FLIGHTS WHERE airline  =  1 and DestAirport   =   " ASY"

当前idx1
____________________
SELECT count(*) FROM car_names WHERE Make = "Volvo"
SELECT count ( * )  FROM CAR_names where model  =  "volvo"
连接数据库../datasets/cosql_dataset/database/car_1/car_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
easy pred: SELECT count(*) FROM car_names WHERE Make = "Volvo"
easy gold: SELECT count ( * )  FROM CAR_names where model  =  "volvo"

当前idx2
eval_err_num:64
____________________
SELECT T1.ModelId FROM car_names AS T1 JOIN cars_data AS T2 ON T1.ModelId = T2.Id WHERE T1.Make = "Volvo" ORDER BY T2.Accelerate ASC LIMIT 1
SELECT T1.id FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T2.Model  =  'volvo' ORDER BY T1.accelerate ASC LIMIT 1
连接数据库../datasets/cosql_dataset/database/car_1/car_1.sqlite
执行第一个查询
执行出错: no such column: T1.ModelId
eval_exec:False
exact_score:0
extra pred: SELECT T1.ModelId FROM car_names AS T1 JOIN cars_data AS T2 ON T1.ModelId = T2.Id WHERE T1.Make = "Volvo" ORDER BY T2.Accelerate ASC LIMIT 1
extra gold: SELECT T1.id FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T2.Model  =  'volvo' ORDER BY T1.accelerate ASC LIMIT 1

当前idx3
eval_err_num:65
____________________
SELECT T2.Cylinders FROM car_names AS T1 JOIN cars_data AS T2 ON T1.ModelId = T2.Id WHERE T1.Make = "Volvo" ORDER BY T2.Accelerate ASC LIMIT 1
SELECT T1.cylinders FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T2.Model  =  'volvo' ORDER BY T1.accelerate ASC LIMIT 1
连接数据库../datasets/cosql_dataset/database/car_1/car_1.sqlite
执行第一个查询
执行出错: no such column: T1.ModelId
eval_exec:False
exact_score:0
extra pred: SELECT T2.Cylinders FROM car_names AS T1 JOIN cars_data AS T2 ON T1.ModelId = T2.Id WHERE T1.Make = "Volvo" ORDER BY T2.Accelerate ASC LIMIT 1
extra gold: SELECT T1.cylinders FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T2.Model  =  'volvo' ORDER BY T1.accelerate ASC LIMIT 1

当前idx1
____________________
SELECT count(*) FROM Highschooler
SELECT count ( * )  FROM Highschooler
连接数据库../datasets/cosql_dataset/database/network_1/network_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT count(*) FROM Friend
SELECT count ( * )  FROM Friend
连接数据库../datasets/cosql_dataset/database/network_1/network_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx3
____________________
SELECT name FROM Highschooler WHERE id IN (SELECT student_id FROM Friend)
SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id   =   T2.id
连接数据库../datasets/cosql_dataset/database/network_1/network_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
easy pred: SELECT name FROM Highschooler WHERE id IN (SELECT student_id FROM Friend)
easy gold: SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id   =   T2.id

当前idx1
____________________
SELECT semester_id FROM Student_Enrolment WHERE degree_program_id = 1
SELECT DISTINCT T2.semester_id FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id   =   T2.degree_program_id WHERE degree_summary_name   =   'Master'
连接数据库../datasets/cosql_dataset/database/student_transcripts_tracking/student_transcripts_tracking.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT semester_id FROM Student_Enrolment WHERE degree_program_id = 1
medium gold: SELECT DISTINCT T2.semester_id FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id   =   T2.degree_program_id WHERE degree_summary_name   =   'Master'

当前idx2
eval_err_num:66
____________________
SELECT T1.department_name, T2.department_description FROM Degree_Programs AS T1 JOIN Departments AS T2 ON T1.department_id  =  T2.department_id WHERE T1.department_id  =  (SELECT department_id FROM Student_Enrolment WHERE student_id  =  14)
SELECT T1.degree_summary_description FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id WHERE T2.student_id  =  14
连接数据库../datasets/cosql_dataset/database/student_transcripts_tracking/student_transcripts_tracking.sqlite
执行第一个查询
执行出错: no such column: T1.department_name
eval_exec:False
exact_score:0
medium pred: SELECT T1.department_name, T2.department_description FROM Degree_Programs AS T1 JOIN Departments AS T2 ON T1.department_id  =  T2.department_id WHERE T1.department_id  =  (SELECT department_id FROM Student_Enrolment WHERE student_id  =  14)
medium gold: SELECT T1.degree_summary_description FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id WHERE T2.student_id  =  14

当前idx1
eval_err_num:67
____________________
SELECT Model FROM cars_data ORDER BY MPG DESC LIMIT 1
SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId   =   T2.Id ORDER BY T2.mpg DESC LIMIT 1
连接数据库../datasets/cosql_dataset/database/car_1/car_1.sqlite
执行第一个查询
执行出错: no such column: Model
eval_exec:False
exact_score:0
hard pred: SELECT Model FROM cars_data ORDER BY MPG DESC LIMIT 1
hard gold: SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId   =   T2.Id ORDER BY T2.mpg DESC LIMIT 1

当前idx2
eval_err_num:68
____________________
SELECT Model FROM cars_data ORDER BY Horsepower DESC LIMIT 1
SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId   =   T2.Id ORDER BY T2.horsepower DESC LIMIT 1
连接数据库../datasets/cosql_dataset/database/car_1/car_1.sqlite
执行第一个查询
执行出错: no such column: Model
eval_exec:False
exact_score:0
hard pred: SELECT Model FROM cars_data ORDER BY Horsepower DESC LIMIT 1
hard gold: SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId   =   T2.Id ORDER BY T2.horsepower DESC LIMIT 1

当前idx1
____________________
SELECT age FROM employee WHERE name = "George Chuter"
SELECT Age from employee where Name = 'George Chuter'
连接数据库../datasets/cosql_dataset/database/employee_hire_evaluation/employee_hire_evaluation.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT age FROM employee WHERE name = "Lee Mears"
SELECT Age from employee where Name = 'Lee Mears'
连接数据库../datasets/cosql_dataset/database/employee_hire_evaluation/employee_hire_evaluation.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx3
____________________
SELECT employee_id, bonus FROM evaluation ORDER BY bonus DESC LIMIT 1
SELECT t1.name FROM employee AS t1 JOIN evaluation AS t2 ON t1.Employee_ID  =  t2.Employee_ID ORDER BY t2.bonus DESC LIMIT 1
连接数据库../datasets/cosql_dataset/database/employee_hire_evaluation/employee_hire_evaluation.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
hard pred: SELECT employee_id, bonus FROM evaluation ORDER BY bonus DESC LIMIT 1
hard gold: SELECT t1.name FROM employee AS t1 JOIN evaluation AS t2 ON t1.Employee_ID  =  t2.Employee_ID ORDER BY t2.bonus DESC LIMIT 1

当前idx1
____________________
SELECT Name FROM people WHERE Nationality != "Poker Player"
SELECT Name FROM people WHERE People_ID NOT IN  ( SELECT People_ID FROM poker_player ) 
连接数据库../datasets/cosql_dataset/database/poker_player/poker_player.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
hard pred: SELECT Name FROM people WHERE Nationality != "Poker Player"
hard gold: SELECT Name FROM people WHERE People_ID NOT IN  ( SELECT People_ID FROM poker_player ) 

当前idx2
____________________
SELECT Name FROM people WHERE Nationality = "Poker Player"
SELECT Name FROM people WHERE People_ID IN  ( SELECT People_ID FROM poker_player ) 
连接数据库../datasets/cosql_dataset/database/poker_player/poker_player.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
hard pred: SELECT Name FROM people WHERE Nationality = "Poker Player"
hard gold: SELECT Name FROM people WHERE People_ID IN  ( SELECT People_ID FROM poker_player ) 

当前idx1
____________________
SELECT count(*) FROM players
SELECT count ( * )  FROM players
连接数据库../datasets/cosql_dataset/database/wta_1/wta_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT first_name FROM players
SELECT first_name FROM players
连接数据库../datasets/cosql_dataset/database/wta_1/wta_1.sqlite
执行第一个查询
执行出错: Could not decode to UTF-8 column 'first_name' with text 'Selin G��Lseren'
eval_exec:False
exact_score:True
当前idx3
____________________
SELECT country_code FROM players WHERE first_name = "Mirjana"
SELECT country_code FROM players  where first_name  =  "Mirjana"
连接数据库../datasets/cosql_dataset/database/wta_1/wta_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx4
____________________
SELECT birth_date FROM players WHERE first_name = "Justine"
SELECT birth_date FROM players  where first_name  =  "Mirjana"
连接数据库../datasets/cosql_dataset/database/wta_1/wta_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:True
当前idx1
____________________
SELECT Model FROM car_names WHERE Make = "General Motors"
SELECT DISTINCT T2.Model FROM CAR_NAMES AS T1 JOIN MODEL_LIST AS T2 ON T1.Model   =   T2.Model JOIN CAR_MAKERS AS T3 ON T2.Maker   =   T3.Id JOIN CARS_DATA AS T4 ON T1.MakeId   =   T4.Id WHERE T3.FullName   =   'General Motors'
连接数据库../datasets/cosql_dataset/database/car_1/car_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
extra pred: SELECT Model FROM car_names WHERE Make = "General Motors"
extra gold: SELECT DISTINCT T2.Model FROM CAR_NAMES AS T1 JOIN MODEL_LIST AS T2 ON T1.Model   =   T2.Model JOIN CAR_MAKERS AS T3 ON T2.Maker   =   T3.Id JOIN CARS_DATA AS T4 ON T1.MakeId   =   T4.Id WHERE T3.FullName   =   'General Motors'

当前idx2
eval_err_num:69
____________________
SELECT Model FROM car_names WHERE Weight > 3500
SELECT DISTINCT T2.Model FROM CAR_NAMES AS T1 JOIN MODEL_LIST AS T2 ON T1.Model   =   T2.Model JOIN CAR_MAKERS AS T3 ON T2.Maker   =   T3.Id JOIN CARS_DATA AS T4 ON T1.MakeId   =   T4.Id WHERE T4.weight  >  3500
连接数据库../datasets/cosql_dataset/database/car_1/car_1.sqlite
执行第一个查询
执行出错: no such column: Weight
eval_exec:False
exact_score:0
extra pred: SELECT Model FROM car_names WHERE Weight > 3500
extra gold: SELECT DISTINCT T2.Model FROM CAR_NAMES AS T1 JOIN MODEL_LIST AS T2 ON T1.Model   =   T2.Model JOIN CAR_MAKERS AS T3 ON T2.Maker   =   T3.Id JOIN CARS_DATA AS T4 ON T1.MakeId   =   T4.Id WHERE T4.weight  >  3500

当前idx3
eval_err_num:70
____________________
SELECT Model FROM car_names WHERE Weight > 3500 GROUP BY Model HAVING COUNT(*) = 1
SELECT DISTINCT T2.Model FROM CAR_NAMES AS T1 JOIN MODEL_LIST AS T2 ON T1.Model   =   T2.Model JOIN CAR_MAKERS AS T3 ON T2.Maker   =   T3.Id JOIN CARS_DATA AS T4 ON T1.MakeId   =   T4.Id WHERE T3.FullName   =   'General Motors' or T4.weight  < =   3500
连接数据库../datasets/cosql_dataset/database/car_1/car_1.sqlite
执行第一个查询
执行出错: no such column: Weight
eval_exec:False
exact_score:0
extra pred: SELECT Model FROM car_names WHERE Weight > 3500 GROUP BY Model HAVING COUNT(*) = 1
extra gold: SELECT DISTINCT T2.Model FROM CAR_NAMES AS T1 JOIN MODEL_LIST AS T2 ON T1.Model   =   T2.Model JOIN CAR_MAKERS AS T3 ON T2.Maker   =   T3.Id JOIN CARS_DATA AS T4 ON T1.MakeId   =   T4.Id WHERE T3.FullName   =   'General Motors' or T4.weight  < =   3500

当前idx4
eval_err_num:71
____________________
SELECT Model FROM car_names WHERE Weight > 3500 OR Make = "General Motors" GROUP BY Model HAVING COUNT(*) = 1
SELECT DISTINCT T2.Model FROM CAR_NAMES AS T1 JOIN MODEL_LIST AS T2 ON T1.Model   =   T2.Model JOIN CAR_MAKERS AS T3 ON T2.Maker   =   T3.Id JOIN CARS_DATA AS T4 ON T1.MakeId   =   T4.Id WHERE T3.FullName   =   'General Motors' Or T4.weight  < =   3500 except SELECT DISTINCT T2.Model FROM CAR_NAMES AS T1 JOIN MODEL_LIST AS T2 ON T1.Model   =   T2.Model JOIN CAR_MAKERS AS T3 ON T2.Maker   =   T3.Id JOIN CARS_DATA AS T4 ON T1.MakeId   =   T4.Id WHERE T3.FullName   =   'General Motors' and T4.weight  < =   3500
连接数据库../datasets/cosql_dataset/database/car_1/car_1.sqlite
执行第一个查询
执行出错: no such column: Weight
eval_exec:False
exact_score:0
extra pred: SELECT Model FROM car_names WHERE Weight > 3500 OR Make = "General Motors" GROUP BY Model HAVING COUNT(*) = 1
extra gold: SELECT DISTINCT T2.Model FROM CAR_NAMES AS T1 JOIN MODEL_LIST AS T2 ON T1.Model   =   T2.Model JOIN CAR_MAKERS AS T3 ON T2.Maker   =   T3.Id JOIN CARS_DATA AS T4 ON T1.MakeId   =   T4.Id WHERE T3.FullName   =   'General Motors' Or T4.weight  < =   3500 except SELECT DISTINCT T2.Model FROM CAR_NAMES AS T1 JOIN MODEL_LIST AS T2 ON T1.Model   =   T2.Model JOIN CAR_MAKERS AS T3 ON T2.Maker   =   T3.Id JOIN CARS_DATA AS T4 ON T1.MakeId   =   T4.Id WHERE T3.FullName   =   'General Motors' and T4.weight  < =   3500

当前idx1
____________________
SELECT Height FROM people WHERE Name = "Aleksey Ostapenko"
SELECT height FROM people where name  =  "Aleksey Ostapenko"
连接数据库../datasets/cosql_dataset/database/poker_player/poker_player.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT Name FROM people WHERE Birth_Date = "August 16, 1982"
SELECT name FROM people where birth_date  =  "August 16, 1982"
连接数据库../datasets/cosql_dataset/database/poker_player/poker_player.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx3
____________________
SELECT People_ID FROM people WHERE Nationality = "Russia"
SELECT people_id FROM people where nationality  =  "Russia"
连接数据库../datasets/cosql_dataset/database/poker_player/poker_player.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx4
____________________
SELECT Nationality FROM people GROUP BY Nationality HAVING COUNT(*) >= 2
SELECT Nationality FROM people GROUP BY Nationality HAVING COUNT ( * )    > =    2
连接数据库../datasets/cosql_dataset/database/poker_player/poker_player.sqlite
执行第一个查询
执行第二个查询
执行出错: near "=": syntax error
eval_exec:False
exact_score:True
当前idx1
____________________
SELECT population FROM country WHERE name = "Afghanistan"
SELECT Population FROM country where Name   =   "Afghanistan"
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT population FROM country WHERE name = "Aruba"
SELECT Population FROM country where Name   =   "Aruba"
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx3
____________________
SELECT language FROM countrylanguage WHERE countrycode = (SELECT code FROM country WHERE name = "Aruba")
SELECT T2.language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code   =   T2.CountryCode WHERE T1.Name   =   "Aruba"
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:0
medium pred: SELECT language FROM countrylanguage WHERE countrycode = (SELECT code FROM country WHERE name = "Aruba")
medium gold: SELECT T2.language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code   =   T2.CountryCode WHERE T1.Name   =   "Aruba"

当前idx4
____________________
SELECT language FROM countrylanguage WHERE countrycode = (SELECT code FROM country WHERE name = "Aruba") AND isofficial = "T"
SELECT T2.language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code   =   T2.CountryCode WHERE T1.Name   =   "Aruba" and T2.IsOfficial = 'T'
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:0
medium pred: SELECT language FROM countrylanguage WHERE countrycode = (SELECT code FROM country WHERE name = "Aruba") AND isofficial = "T"
medium gold: SELECT T2.language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code   =   T2.CountryCode WHERE T1.Name   =   "Aruba" and T2.IsOfficial = 'T'

当前idx>4
____________________
SELECT language FROM countrylanguage WHERE countrycode = (SELECT code FROM country WHERE name = "Afghanistan") AND isofficial = "T"
SELECT T2.language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code   =   T2.CountryCode WHERE T1.Name   =   "Afghanistan" and T2.IsOfficial = 'T'
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:0
medium pred: SELECT language FROM countrylanguage WHERE countrycode = (SELECT code FROM country WHERE name = "Afghanistan") AND isofficial = "T"
medium gold: SELECT T2.language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code   =   T2.CountryCode WHERE T1.Name   =   "Afghanistan" and T2.IsOfficial = 'T'

当前idx>4
____________________
SELECT COUNT(*) FROM countrylanguage WHERE language = "Dari"
SELECT count ( * )  FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code   =   T2.CountryCode WHERE T2.language = 'Dari' and T1.name ! =  'Afghanistan'
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
执行出错: unrecognized token: "!"
eval_exec:False
exact_score:0
medium pred: SELECT COUNT(*) FROM countrylanguage WHERE language = "Dari"
medium gold: SELECT count ( * )  FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code   =   T2.CountryCode WHERE T2.language = 'Dari' and T1.name ! =  'Afghanistan'

当前idx1
eval_err_num:72
____________________
SELECT name, cost_of_treatment FROM Treatments
SELECT name,cost_of_treatment  FROM Dogs join Treatments
连接数据库../datasets/cosql_dataset/database/dog_kennels/dog_kennels.sqlite
执行第一个查询
执行出错: no such column: name
eval_exec:False
exact_score:0
medium pred: SELECT name, cost_of_treatment FROM Treatments
medium gold: SELECT name,cost_of_treatment  FROM Dogs join Treatments

当前idx2
eval_err_num:73
____________________
SELECT name FROM Treatments WHERE cost_of_treatment < 1000
SELECT name FROM Dogs WHERE dog_id NOT IN (  SELECT dog_id FROM Treatments GROUP BY dog_id HAVING sum ( cost_of_treatment )   <  1000  ) 
连接数据库../datasets/cosql_dataset/database/dog_kennels/dog_kennels.sqlite
执行第一个查询
执行出错: no such column: name
eval_exec:False
exact_score:0
hard pred: SELECT name FROM Treatments WHERE cost_of_treatment < 1000
hard gold: SELECT name FROM Dogs WHERE dog_id NOT IN (  SELECT dog_id FROM Treatments GROUP BY dog_id HAVING sum ( cost_of_treatment )   <  1000  ) 

当前idx1
eval_err_num:74
____________________
SELECT T2.age FROM visitor AS T1 JOIN visit AS T2 ON T1.ID = T2.visitor_ID WHERE T1.name = "Gonzalo Higuaín"
SELECT age FROM visitor where name  =  "Gonzalo Higuaín"
连接数据库../datasets/cosql_dataset/database/museum_visit/museum_visit.sqlite
执行第一个查询
执行出错: no such column: T2.age
eval_exec:False
exact_score:0
easy pred: SELECT T2.age FROM visitor AS T1 JOIN visit AS T2 ON T1.ID = T2.visitor_ID WHERE T1.name = "Gonzalo Higuaín"
easy gold: SELECT age FROM visitor where name  =  "Gonzalo Higuaín"

当前idx2
____________________
SELECT T2.num_of_ticket FROM visitor AS T1 JOIN visit AS T2 ON T1.id = T2.visitor_id WHERE T1.id = 5
SELECT num_of_ticket FROM visitor AS t1 JOIN visit AS t2 ON t1.id   =   t2.visitor_id where visitor_id  =  5
连接数据库../datasets/cosql_dataset/database/museum_visit/museum_visit.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx3
____________________
SELECT T2.total_spent FROM visitor AS T1 JOIN visit AS T2 ON T1.id = T2.visitor_id WHERE T1.name = "Arjen Robben"
SELECT Total_spent FROM visitor AS t1 JOIN visit AS t2 ON t1.id   =   t2.visitor_id where name  =  "Arjen Robben"
连接数据库../datasets/cosql_dataset/database/museum_visit/museum_visit.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx4
____________________
SELECT T1.name, T1.age FROM visitor AS T1 JOIN visit AS T2 ON T1.id = T2.visitor_id GROUP BY T1.id ORDER BY T2.num_of_ticket DESC LIMIT 1
SELECT t1.name ,  t1.age FROM visitor AS t1 JOIN visit AS t2 ON t1.id   =   t2.visitor_id ORDER BY t2.num_of_ticket DESC LIMIT 1
连接数据库../datasets/cosql_dataset/database/museum_visit/museum_visit.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
hard pred: SELECT T1.name, T1.age FROM visitor AS T1 JOIN visit AS T2 ON T1.id = T2.visitor_id GROUP BY T1.id ORDER BY T2.num_of_ticket DESC LIMIT 1
hard gold: SELECT t1.name ,  t1.age FROM visitor AS t1 JOIN visit AS t2 ON t1.id   =   t2.visitor_id ORDER BY t2.num_of_ticket DESC LIMIT 1

当前idx1
eval_err_num:75
____________________
SELECT DISTINCT T2.Region FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  'English'
SELECT DISTINCT T1.Region FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code   =   T2.CountryCode WHERE T2.Language   =   "English"
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行出错: no such column: T2.Region
eval_exec:False
exact_score:0
medium pred: SELECT DISTINCT T2.Region FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  'English'
medium gold: SELECT DISTINCT T1.Region FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code   =   T2.CountryCode WHERE T2.Language   =   "English"

当前idx2
eval_err_num:76
____________________
SELECT DISTINCT T2.Region FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  'Dutch'
SELECT DISTINCT T1.Region FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code   =   T2.CountryCode WHERE T2.Language   =   "Dutch"
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行出错: no such column: T2.Region
eval_exec:False
exact_score:0
medium pred: SELECT DISTINCT T2.Region FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  'Dutch'
medium gold: SELECT DISTINCT T1.Region FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code   =   T2.CountryCode WHERE T2.Language   =   "Dutch"

当前idx3
____________________
SELECT T1.LifeExpectancy FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  'Dutch'
SELECT DISTINCT T1.LifeExpectancy FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code   =   T2.CountryCode WHERE T2.Language   =   "Dutch"
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx1
____________________
SELECT winner_name FROM matches ORDER BY winner_age ASC LIMIT 3
SELECT winner_name  FROM matches ORDER BY winner_age LIMIT 3
连接数据库../datasets/cosql_dataset/database/wta_1/wta_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT winner_name, winner_rank FROM matches ORDER BY winner_age ASC LIMIT 3
SELECT DISTINCT winner_name,  winner_rank FROM matches ORDER BY winner_age LIMIT 3
连接数据库../datasets/cosql_dataset/database/wta_1/wta_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx3
____________________
SELECT winner_name, loser_name FROM matches ORDER BY winner_age ASC LIMIT 3
SELECT loser_name FROM matches ORDER BY winner_age LIMIT 3
连接数据库../datasets/cosql_dataset/database/wta_1/wta_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT winner_name, loser_name FROM matches ORDER BY winner_age ASC LIMIT 3
medium gold: SELECT loser_name FROM matches ORDER BY winner_age LIMIT 3

当前idx1
____________________
SELECT first_name FROM Professionals
SELECT first_name, last_name FROM professionals
连接数据库../datasets/cosql_dataset/database/dog_kennels/dog_kennels.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT first_name FROM Professionals
medium gold: SELECT first_name, last_name FROM professionals

当前idx2
____________________
SELECT first_name FROM Professionals WHERE city LIKE '%West%'
SELECT first_name, last_name FROM professionals  WHERE city LIKE '%West%'
连接数据库../datasets/cosql_dataset/database/dog_kennels/dog_kennels.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT first_name FROM Professionals WHERE city LIKE '%West%'
medium gold: SELECT first_name, last_name FROM professionals  WHERE city LIKE '%West%'

当前idx3
____________________
SELECT role_code, street, city, state FROM Professionals WHERE first_name = 'Taryn'
SELECT role_code , street , city , state FROM professionals WHERE first_name  =  "Taryn"
连接数据库../datasets/cosql_dataset/database/dog_kennels/dog_kennels.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx4
____________________
SELECT first_name, state FROM Professionals
SELECT first_name,state FROM professionals
连接数据库../datasets/cosql_dataset/database/dog_kennels/dog_kennels.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx>4
____________________
SELECT first_name FROM Professionals WHERE state = 'Indiana'
SELECT first_name FROM professionals WHERE state  =  "Indiana"
连接数据库../datasets/cosql_dataset/database/dog_kennels/dog_kennels.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx1
____________________
SELECT count(*) FROM death
SELECT count ( * )  FROM death
连接数据库../datasets/cosql_dataset/database/battle_death/battle_death.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT * FROM death ORDER BY killed DESC LIMIT 1
SELECT * FROM death where killed  =   ( select max ( killed )  from death ) 
连接数据库../datasets/cosql_dataset/database/battle_death/battle_death.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:0
hard pred: SELECT * FROM death ORDER BY killed DESC LIMIT 1
hard gold: SELECT * FROM death where killed  =   ( select max ( killed )  from death ) 

当前idx3
____________________
SELECT * FROM death ORDER BY killed DESC LIMIT 1
SELECT * FROM death where note like "%East%"
连接数据库../datasets/cosql_dataset/database/battle_death/battle_death.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT * FROM death ORDER BY killed DESC LIMIT 1
medium gold: SELECT * FROM death where note like "%East%"

当前idx1
____________________
SELECT T1.note FROM death AS T1 JOIN ship AS T2 ON T1.caused_by_ship_id  =  T2.id WHERE T2.tonnage  =  't'
SELECT T1.killed FROM death AS T1 JOIN ship AS t2 ON T1.caused_by_ship_id  =  T2.id WHERE T2.tonnage  =  't'
连接数据库../datasets/cosql_dataset/database/battle_death/battle_death.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT T1.note FROM death AS T1 JOIN ship AS T2 ON T1.caused_by_ship_id  =  T2.id WHERE T2.tonnage  =  't'
medium gold: SELECT T1.killed FROM death AS T1 JOIN ship AS t2 ON T1.caused_by_ship_id  =  T2.id WHERE T2.tonnage  =  't'

当前idx2
____________________
SELECT T1.note FROM death AS T1 JOIN ship AS T2 ON T1.caused_by_ship_id  =  T2.id WHERE T2.tonnage  =  't'
SELECT T1.injured FROM death AS T1 JOIN ship AS t2 ON T1.caused_by_ship_id  =  T2.id WHERE T2.tonnage  =  't'
连接数据库../datasets/cosql_dataset/database/battle_death/battle_death.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT T1.note FROM death AS T1 JOIN ship AS T2 ON T1.caused_by_ship_id  =  T2.id WHERE T2.tonnage  =  't'
medium gold: SELECT T1.injured FROM death AS T1 JOIN ship AS t2 ON T1.caused_by_ship_id  =  T2.id WHERE T2.tonnage  =  't'

当前idx3
____________________
SELECT T1.note FROM death AS T1 JOIN ship AS T2 ON T1.caused_by_ship_id  =  T2.id WHERE T2.tonnage  =  't'
SELECT COUNT ( T1.id )  FROM death AS T1 JOIN ship AS t2 ON T1.caused_by_ship_id  =  T2.id WHERE T2.tonnage  =  't'
连接数据库../datasets/cosql_dataset/database/battle_death/battle_death.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT T1.note FROM death AS T1 JOIN ship AS T2 ON T1.caused_by_ship_id  =  T2.id WHERE T2.tonnage  =  't'
medium gold: SELECT COUNT ( T1.id )  FROM death AS T1 JOIN ship AS t2 ON T1.caused_by_ship_id  =  T2.id WHERE T2.tonnage  =  't'

当前idx1
eval_err_num:77
____________________
SELECT Continent, COUNT(*) FROM car_makers GROUP BY Continent
SELECT T1.Continent ,  count ( * )  FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId   =   T2.continent JOIN car_makers AS T3 ON T2.CountryId   =   T3.Country GROUP BY T1.Continent
连接数据库../datasets/cosql_dataset/database/car_1/car_1.sqlite
执行第一个查询
执行出错: no such column: Continent
eval_exec:False
exact_score:0
hard pred: SELECT Continent, COUNT(*) FROM car_makers GROUP BY Continent
hard gold: SELECT T1.Continent ,  count ( * )  FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId   =   T2.continent JOIN car_makers AS T3 ON T2.CountryId   =   T3.Country GROUP BY T1.Continent

当前idx2
____________________
SELECT COUNT(*) FROM car_makers WHERE Country = "USA"
seLECT count ( * )  FROM car_makers as T1 join countries as T2 on T2.CountryId   =   T1.Country where T2.countryname  =  "usa"
连接数据库../datasets/cosql_dataset/database/car_1/car_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT COUNT(*) FROM car_makers WHERE Country = "USA"
medium gold: seLECT count ( * )  FROM car_makers as T1 join countries as T2 on T2.CountryId   =   T1.Country where T2.countryname  =  "usa"

当前idx3
____________________
SELECT COUNT(*) FROM car_makers WHERE Country = "Germany"
seLECT count ( * )  FROM car_makers as T1 join countries as T2 on T2.CountryId   =   T1.Country where T2.countryname  =  "germany"
连接数据库../datasets/cosql_dataset/database/car_1/car_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT COUNT(*) FROM car_makers WHERE Country = "Germany"
medium gold: seLECT count ( * )  FROM car_makers as T1 join countries as T2 on T2.CountryId   =   T1.Country where T2.countryname  =  "germany"

当前idx4
____________________
SELECT COUNT(*) FROM car_makers WHERE Country = "France"
seLECT count ( * )  FROM car_makers as T1 join countries as T2 on T2.CountryId   =   T1.Country where T2.countryname  =  "france"
连接数据库../datasets/cosql_dataset/database/car_1/car_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT COUNT(*) FROM car_makers WHERE Country = "France"
medium gold: seLECT count ( * )  FROM car_makers as T1 join countries as T2 on T2.CountryId   =   T1.Country where T2.countryname  =  "france"

当前idx1
____________________
SELECT count(*) FROM country
SELECT count ( * )  FROM country
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT count(*) FROM city
SELECT count ( * )  FROM city
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx3
____________________
SELECT region FROM country WHERE Name = "Afghanistan"
SELECT Region FROM country AS T1 JOIN city AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Name  =  "Kabul"
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:0
medium pred: SELECT region FROM country WHERE Name = "Afghanistan"
medium gold: SELECT Region FROM country AS T1 JOIN city AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Name  =  "Kabul"

当前idx4
____________________
SELECT count(*) FROM city WHERE countrycode = (SELECT Code FROM country WHERE Name = "Afghanistan")
SELECT count ( T2.name )  FROM country AS T1 JOIN city AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.region  =  "Southern and Central Asia"
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT count(*) FROM city WHERE countrycode = (SELECT Code FROM country WHERE Name = "Afghanistan")
medium gold: SELECT count ( T2.name )  FROM country AS T1 JOIN city AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.region  =  "Southern and Central Asia"

当前idx1
____________________
SELECT count(*) FROM Templates WHERE Template_Type_Code = 'BK'
SELECT count ( * )  FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id   =   T2.template_id WHERE T1.template_type_code   =   "BK"
连接数据库../datasets/cosql_dataset/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:False
medium pred: SELECT count(*) FROM Templates WHERE Template_Type_Code = 'BK'
medium gold: SELECT count ( * )  FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id   =   T2.template_id WHERE T1.template_type_code   =   "BK"

当前idx2
____________________
SELECT Document_Name FROM Documents WHERE Template_ID IN (SELECT Template_ID FROM Templates WHERE Template_Type_Code = 'BK')
SELECT T2.document_name FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id   =   T2.template_id WHERE T1.template_type_code   =   "BK"
连接数据库../datasets/cosql_dataset/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:0
medium pred: SELECT Document_Name FROM Documents WHERE Template_ID IN (SELECT Template_ID FROM Templates WHERE Template_Type_Code = 'BK')
medium gold: SELECT T2.document_name FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id   =   T2.template_id WHERE T1.template_type_code   =   "BK"

当前idx3
____________________
SELECT count(*) FROM Documents WHERE Template_ID NOT IN (SELECT Template_ID FROM Templates WHERE Template_Type_Code = 'BK')
Select count ( * )  from documents where document_name not in 
 ( SELECT T2.document_name FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id   =   T2.template_id WHERE T1.template_type_code   =   "BK" ) 
连接数据库../datasets/cosql_dataset/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:0
extra pred: SELECT count(*) FROM Documents WHERE Template_ID NOT IN (SELECT Template_ID FROM Templates WHERE Template_Type_Code = 'BK')
extra gold: Select count ( * )  from documents where document_name not in 
 ( SELECT T2.document_name FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id   =   T2.template_id WHERE T1.template_type_code   =   "BK" ) 

当前idx1
eval_err_num:78
____________________
SELECT Code FROM country WHERE Language != "English"
SELECT CountryCode FROM countrylanguage WHERE LANGUAGE  ! =   "English"
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行出错: no such column: Language
eval_exec:False
exact_score:0
easy pred: SELECT Code FROM country WHERE Language != "English"
easy gold: SELECT CountryCode FROM countrylanguage WHERE LANGUAGE  ! =   "English"

当前idx2
eval_err_num:79
____________________
SELECT Code FROM country WHERE Language != "English" AND GovernmentForm != "Republic"
SELECT Code FROM country WHERE GovernmentForm ! =  "Republic" EXCEPT SELECT CountryCode FROM countrylanguage WHERE LANGUAGE   =   "English"
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行出错: no such column: Language
eval_exec:False
exact_score:0
hard pred: SELECT Code FROM country WHERE Language != "English" AND GovernmentForm != "Republic"
hard gold: SELECT Code FROM country WHERE GovernmentForm ! =  "Republic" EXCEPT SELECT CountryCode FROM countrylanguage WHERE LANGUAGE   =   "English"

当前idx3
eval_err_num:80
____________________
SELECT Language FROM country WHERE Language != "English" AND GovernmentForm != "Republic"
select countrycode, language from countrylanguage where countrycode in  ( SELECT Code FROM country WHERE GovernmentForm ! =  "Republic" EXCEPT SELECT CountryCode FROM countrylanguage WHERE LANGUAGE   =   "English" ) 
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行出错: no such column: Language
eval_exec:False
exact_score:0
extra pred: SELECT Language FROM country WHERE Language != "English" AND GovernmentForm != "Republic"
extra gold: select countrycode, language from countrylanguage where countrycode in  ( SELECT Code FROM country WHERE GovernmentForm ! =  "Republic" EXCEPT SELECT CountryCode FROM countrylanguage WHERE LANGUAGE   =   "English" ) 

当前idx4
eval_err_num:81
____________________
SELECT Name FROM country WHERE Language != "English" AND GovernmentForm != "Republic" AND Continent = "North America"
select code from country where continent  =  "North America" and code in  ( SELECT Code FROM country WHERE GovernmentForm ! =  "Republic" EXCEPT SELECT CountryCode FROM countrylanguage WHERE LANGUAGE   =   "English" ) 
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行出错: no such column: Language
eval_exec:False
exact_score:0
extra pred: SELECT Name FROM country WHERE Language != "English" AND GovernmentForm != "Republic" AND Continent = "North America"
extra gold: select code from country where continent  =  "North America" and code in  ( SELECT Code FROM country WHERE GovernmentForm ! =  "Republic" EXCEPT SELECT CountryCode FROM countrylanguage WHERE LANGUAGE   =   "English" ) 

当前idx1
____________________
SELECT * FROM Professionals WHERE state = "Indiana"
SELECT * FROM Professionals WHERE state   =   'Indiana'
连接数据库../datasets/cosql_dataset/database/dog_kennels/dog_kennels.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT cell_number FROM Professionals WHERE first_name = "Taryn"
SELECT cell_number FROM Professionals WHERE first_name  =  "Taryn"
连接数据库../datasets/cosql_dataset/database/dog_kennels/dog_kennels.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx1
____________________
SELECT count(*) FROM Templates
SELECT count ( * )  FROM Templates
连接数据库../datasets/cosql_dataset/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT Date_Effective_From FROM Templates WHERE Template_ID = 1
SELECT Date_Effective_From, Date_Effective_To FROM Templates where Template_ID = 1
连接数据库../datasets/cosql_dataset/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT Date_Effective_From FROM Templates WHERE Template_ID = 1
medium gold: SELECT Date_Effective_From, Date_Effective_To FROM Templates where Template_ID = 1

当前idx3
____________________
SELECT Template_Type_Code FROM Templates WHERE Template_ID = 4
SELECT Template_Type_Code  FROM Templates where Template_ID = 4
连接数据库../datasets/cosql_dataset/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx4
____________________
SELECT Version_Number FROM Templates WHERE Template_ID = 0
SELECT Version_Number  FROM Templates where Template_ID = 0
连接数据库../datasets/cosql_dataset/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx1
____________________
SELECT country FROM singer WHERE age  >  40
SELECT country FROM singer WHERE age  >  40
连接数据库../datasets/cosql_dataset/database/concert_singer/concert_singer.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT country FROM singer WHERE age  <  30
SELECT DISTINCT ( country )  FROM singer WHERE age  < 30
连接数据库../datasets/cosql_dataset/database/concert_singer/concert_singer.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:True
当前idx3
____________________
SELECT country FROM singer WHERE age  >  40 AND age  <  30
SELECT country FROM singer WHERE age  >  40 INTERSECT SELECT country FROM singer WHERE age  <  30
连接数据库../datasets/cosql_dataset/database/concert_singer/concert_singer.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
hard pred: SELECT country FROM singer WHERE age  >  40 AND age  <  30
hard gold: SELECT country FROM singer WHERE age  >  40 INTERSECT SELECT country FROM singer WHERE age  <  30

当前idx1
eval_err_num:82
____________________
SELECT Accelerate FROM cars_data WHERE Make = "AMC Hornet Sportabout" AND Model = "SW"
SELECT T1.Accelerate FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id   =   T2.MakeId WHERE T2.Make   =   'amc hornet sportabout  ( sw ) '
连接数据库../datasets/cosql_dataset/database/car_1/car_1.sqlite
执行第一个查询
执行出错: no such column: Make
eval_exec:False
exact_score:0
medium pred: SELECT Accelerate FROM cars_data WHERE Make = "AMC Hornet Sportabout" AND Model = "SW"
medium gold: SELECT T1.Accelerate FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id   =   T2.MakeId WHERE T2.Make   =   'amc hornet sportabout  ( sw ) '

当前idx2
____________________
SELECT Model FROM model_list ORDER BY ModelId DESC LIMIT 1
SELECT T2.Model FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id   =   T2.MakeId order by T1.Year desc limit 1
连接数据库../datasets/cosql_dataset/database/car_1/car_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
hard pred: SELECT Model FROM model_list ORDER BY ModelId DESC LIMIT 1
hard gold: SELECT T2.Model FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id   =   T2.MakeId order by T1.Year desc limit 1

当前idx1
____________________
SELECT Template_ID FROM Templates
SELECT template_id FROM Templates
连接数据库../datasets/cosql_dataset/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT Template_ID FROM Templates EXCEPT SELECT Template_ID FROM Documents
SELECT template_id FROM Templates EXCEPT SELECT template_id FROM Documents
连接数据库../datasets/cosql_dataset/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx3
eval_err_num:83
____________________
SELECT Template_ID FROM Templates WHERE Template_ID NOT IN (SELECT Template_ID FROM Documents) AND Date_Effective_To > CURRENT_DATE
SELECT Date_effective_to FROM Templates WHERE template_id IN  (  SELECT template_id FROM Templates EXCEPT SELECT template_id FROM Documents ) 
连接数据库../datasets/cosql_dataset/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
hard pred: SELECT Template_ID FROM Templates WHERE Template_ID NOT IN (SELECT Template_ID FROM Documents) AND Date_Effective_To > CURRENT_DATE
hard gold: SELECT Date_effective_to FROM Templates WHERE template_id IN  (  SELECT template_id FROM Templates EXCEPT SELECT template_id FROM Documents ) 

当前idx4
____________________
SELECT COUNT(*) FROM Templates WHERE Template_ID NOT IN (SELECT Template_ID FROM Documents)
SELECT count ( * )  FROM Templates WHERE template_id in  ( SELECT template_id FROM Templates EXCEPT SELECT template_id FROM Documents ) 
连接数据库../datasets/cosql_dataset/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:0
hard pred: SELECT COUNT(*) FROM Templates WHERE Template_ID NOT IN (SELECT Template_ID FROM Documents)
hard gold: SELECT count ( * )  FROM Templates WHERE template_id in  ( SELECT template_id FROM Templates EXCEPT SELECT template_id FROM Documents ) 

当前idx>4
____________________
SELECT Template_ID FROM Templates WHERE Template_ID NOT IN (SELECT Template_ID FROM Documents)
SELECT template_id FROM Templates EXCEPT SELECT template_id FROM Documents
连接数据库../datasets/cosql_dataset/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:0
hard pred: SELECT Template_ID FROM Templates WHERE Template_ID NOT IN (SELECT Template_ID FROM Documents)
hard gold: SELECT template_id FROM Templates EXCEPT SELECT template_id FROM Documents

当前idx1
eval_err_num:84
____________________
SELECT T1.concert_Name, T1.Theme, COUNT(*) AS num_singers FROM concert AS T1 JOIN singer_in_concert AS T2 ON T1.concert_ID  =  T2.concert_ID GROUP BY T1.concert_Name, T1.Theme
SELECT T2.concert_name , T2.theme , count ( * )  FROM singer_in_concert AS T1 JOIN concert AS T2 ON T1.concert_id  =  T2.concert_id GROUP BY T2.concert_id
连接数据库../datasets/cosql_dataset/database/concert_singer/concert_singer.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT T1.concert_Name, T1.Theme, COUNT(*) AS num_singers FROM concert AS T1 JOIN singer_in_concert AS T2 ON T1.concert_ID  =  T2.concert_ID GROUP BY T1.concert_Name, T1.Theme
medium gold: SELECT T2.concert_name , T2.theme , count ( * )  FROM singer_in_concert AS T1 JOIN concert AS T2 ON T1.concert_id  =  T2.concert_id GROUP BY T2.concert_id

当前idx2
____________________
SELECT YEAR FROM concert WHERE concert_Name = "Super Bootcamp"
SELECT Year FROM concert WHERE concert_Name  =  "Super bootcamp"
连接数据库../datasets/cosql_dataset/database/concert_singer/concert_singer.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:True
当前idx3
____________________
SELECT Stadium_ID FROM concert WHERE concert_Name = "Super Bootcamp"
SELECT Stadium_ID FROM concert WHERE concert_Name  =  "Super bootcamp"
连接数据库../datasets/cosql_dataset/database/concert_singer/concert_singer.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:True
当前idx1
____________________
SELECT SUM(Population) FROM country WHERE Continent = "Asia"
SELECT sum ( Population )  FROM country where Continent  =  'Asia'
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT Language FROM countrylanguage WHERE Percentage = 9.5
SELECT Language FROM countrylanguage where Percentage  =  9.5
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx3
____________________
SELECT LifeExpectancy FROM country WHERE Code = "AO"
SELECT LifeExpectancy FROM country where LocalName  =  'Angola'
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
easy pred: SELECT LifeExpectancy FROM country WHERE Code = "AO"
easy gold: SELECT LifeExpectancy FROM country where LocalName  =  'Angola'

当前idx4
____________________
SELECT GNP FROM country WHERE Code = "AW"
SELECT GNP FROM country where LocalName  =  'Angola'
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
easy pred: SELECT GNP FROM country WHERE Code = "AW"
easy gold: SELECT GNP FROM country where LocalName  =  'Angola'

当前idx>4
____________________
SELECT GNPOld FROM country WHERE Code = "AF"
SELECT GNPOld FROM country where Name  =  'Afghanistan'
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
easy pred: SELECT GNPOld FROM country WHERE Code = "AF"
easy gold: SELECT GNPOld FROM country where Name  =  'Afghanistan'

当前idx1
____________________
SELECT T1.Name FROM singer AS T1 JOIN concert AS T2 ON T1.Singer_ID  =  T2.concert_ID JOIN singer_in_concert AS T3 ON T2.concert_ID  =  T3.concert_ID GROUP BY T1.Singer_ID HAVING MAX(T2.Year)  >  (SELECT AVG(T2.Year) FROM concert)
SELECT song_name FROM singer WHERE song_release_year  >   ( SELECT avg ( song_release_year )  FROM singer ) 
连接数据库../datasets/cosql_dataset/database/concert_singer/concert_singer.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
hard pred: SELECT T1.Name FROM singer AS T1 JOIN concert AS T2 ON T1.Singer_ID  =  T2.concert_ID JOIN singer_in_concert AS T3 ON T2.concert_ID  =  T3.concert_ID GROUP BY T1.Singer_ID HAVING MAX(T2.Year)  >  (SELECT AVG(T2.Year) FROM concert)
hard gold: SELECT song_name FROM singer WHERE song_release_year  >   ( SELECT avg ( song_release_year )  FROM singer ) 

当前idx2
____________________
SELECT AVG(T2.Year) FROM concert AS T2 JOIN singer_in_concert AS T3 ON T2.concert_ID  =  T3.concert_ID
SELECT avg ( song_release_year )  FROM singer
连接数据库../datasets/cosql_dataset/database/concert_singer/concert_singer.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
easy pred: SELECT AVG(T2.Year) FROM concert AS T2 JOIN singer_in_concert AS T3 ON T2.concert_ID  =  T3.concert_ID
easy gold: SELECT avg ( song_release_year )  FROM singer

当前idx3
eval_err_num:85
____________________
SELECT T2.Song_Name FROM concert AS T2 JOIN singer_in_concert AS T3 ON T2.concert_ID  =  T3.concert_ID ORDER BY T2.Year
SELECT song_name from singer order by song_release_year
连接数据库../datasets/cosql_dataset/database/concert_singer/concert_singer.sqlite
执行第一个查询
执行出错: no such column: T2.Song_Name
eval_exec:False
exact_score:0
easy pred: SELECT T2.Song_Name FROM concert AS T2 JOIN singer_in_concert AS T3 ON T2.concert_ID  =  T3.concert_ID ORDER BY T2.Year
easy gold: SELECT song_name from singer order by song_release_year

当前idx4
eval_err_num:86
____________________
SELECT T1.Name, T2.Song_Name FROM singer AS T1 JOIN concert AS T2 ON T1.Singer_ID  =  T2.concert_ID WHERE T1.Age  >  (SELECT AVG(T1.Age) FROM singer)
SELECT song_name FROM singer WHERE age  >   ( SELECT avg ( age )  FROM singer ) 
连接数据库../datasets/cosql_dataset/database/concert_singer/concert_singer.sqlite
执行第一个查询
执行出错: no such column: T2.Song_Name
eval_exec:False
exact_score:0
hard pred: SELECT T1.Name, T2.Song_Name FROM singer AS T1 JOIN concert AS T2 ON T1.Singer_ID  =  T2.concert_ID WHERE T1.Age  >  (SELECT AVG(T1.Age) FROM singer)
hard gold: SELECT song_name FROM singer WHERE age  >   ( SELECT avg ( age )  FROM singer ) 

当前idx1
eval_err_num:87
____________________
SELECT T1.orchestra FROM conductor AS T1 JOIN orchestra AS T2 ON T1.conductor_id  =  T2.orchestra_id
SELECT T2.Orchestra FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID   =   T2.Conductor_ID
连接数据库../datasets/cosql_dataset/database/orchestra/orchestra.sqlite
执行第一个查询
执行出错: no such column: T1.orchestra
eval_exec:False
exact_score:0
easy pred: SELECT T1.orchestra FROM conductor AS T1 JOIN orchestra AS T2 ON T1.conductor_id  =  T2.orchestra_id
easy gold: SELECT T2.Orchestra FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID   =   T2.Conductor_ID

当前idx2
____________________
SELECT name FROM conductor
SELECT Name FROM conductor
连接数据库../datasets/cosql_dataset/database/orchestra/orchestra.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx3
____________________
SELECT age FROM conductor WHERE name = "Colin Davis"
SELECT Age FROM conductor WHERE Name  =  "Colin Davis"
连接数据库../datasets/cosql_dataset/database/orchestra/orchestra.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx1
____________________
SELECT count(*) FROM Students
SELECT count ( * )  FROM Students
连接数据库../datasets/cosql_dataset/database/student_transcripts_tracking/student_transcripts_tracking.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT first_name FROM Students WHERE student_id = 3
SELECT first_name FROM Students where student_id = 3
连接数据库../datasets/cosql_dataset/database/student_transcripts_tracking/student_transcripts_tracking.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx3
____________________
SELECT email_address FROM Students WHERE student_id = 2
SELECT email_address FROM Students where student_id = 2
连接数据库../datasets/cosql_dataset/database/student_transcripts_tracking/student_transcripts_tracking.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx4
____________________
SELECT count(*) FROM Student_Enrolment
SELECT count ( * )  FROM Student_Enrolment
连接数据库../datasets/cosql_dataset/database/student_transcripts_tracking/student_transcripts_tracking.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx1
____________________
SELECT Template_ID FROM Templates WHERE Template_ID IN (SELECT Template_ID FROM Documents)
SELECT * FROM Templates AS T1 JOIN Documents AS T2 ON T1.Template_ID   =   T2.template_ID
连接数据库../datasets/cosql_dataset/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
easy pred: SELECT Template_ID FROM Templates WHERE Template_ID IN (SELECT Template_ID FROM Documents)
easy gold: SELECT * FROM Templates AS T1 JOIN Documents AS T2 ON T1.Template_ID   =   T2.template_ID

当前idx2
____________________
SELECT Template_Type_Description FROM Ref_Template_Types WHERE Template_Type_Code IN (SELECT Template_Type_Code FROM Templates WHERE Template_ID IN (SELECT Template_ID FROM Documents))
SELECT T1.template_type_description FROM Ref_template_types AS T1 JOIN Templates AS T2 ON T1.template_type_code  =  T2.template_type_code JOIN Documents AS T3 ON T2.Template_ID  =  T3.template_ID
连接数据库../datasets/cosql_dataset/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT Template_Type_Description FROM Ref_Template_Types WHERE Template_Type_Code IN (SELECT Template_Type_Code FROM Templates WHERE Template_ID IN (SELECT Template_ID FROM Documents))
medium gold: SELECT T1.template_type_description FROM Ref_template_types AS T1 JOIN Templates AS T2 ON T1.template_type_code  =  T2.template_type_code JOIN Documents AS T3 ON T2.Template_ID  =  T3.template_ID

当前idx3
____________________
SELECT DISTINCT Template_Type_Description FROM Ref_Template_Types WHERE Template_Type_Code IN (SELECT Template_Type_Code FROM Templates WHERE Template_ID IN (SELECT Template_ID FROM Documents))
SELECT DISTINCT T1.template_type_description FROM Ref_template_types AS T1 JOIN Templates AS T2 ON T1.template_type_code  =  T2.template_type_code JOIN Documents AS T3 ON T2.Template_ID  =  T3.template_ID
连接数据库../datasets/cosql_dataset/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT DISTINCT Template_Type_Description FROM Ref_Template_Types WHERE Template_Type_Code IN (SELECT Template_Type_Code FROM Templates WHERE Template_ID IN (SELECT Template_ID FROM Documents))
medium gold: SELECT DISTINCT T1.template_type_description FROM Ref_template_types AS T1 JOIN Templates AS T2 ON T1.template_type_code  =  T2.template_type_code JOIN Documents AS T3 ON T2.Template_ID  =  T3.template_ID

当前idx1
____________________
SELECT population FROM country WHERE name = "Russian Federation"
SELECT Population FROM country ORDER BY SurfaceArea DESC LIMIT 1
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:0
medium pred: SELECT population FROM country WHERE name = "Russian Federation"
medium gold: SELECT Population FROM country ORDER BY SurfaceArea DESC LIMIT 1

当前idx2
eval_err_num:88
____________________
SELECT head of state FROM country WHERE name = "Russian Federation"
SELECT HeadOfState FROM country ORDER BY SurfaceArea DESC LIMIT 1
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行出错: near "state": syntax error
eval_exec:False
exact_score:0
medium pred: SELECT head of state FROM country WHERE name = "Russian Federation"
medium gold: SELECT HeadOfState FROM country ORDER BY SurfaceArea DESC LIMIT 1

当前idx3
____________________
SELECT continent FROM country WHERE name = "Russian Federation"
SELECT Continent FROM country ORDER BY SurfaceArea DESC LIMIT 1
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:0
medium pred: SELECT continent FROM country WHERE name = "Russian Federation"
medium gold: SELECT Continent FROM country ORDER BY SurfaceArea DESC LIMIT 1

当前idx1
eval_err_num:89
____________________
SELECT Name FROM poker_player WHERE Earnings > 300000
SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID   =   T2.People_ID WHERE T2.Earnings  >  300000
连接数据库../datasets/cosql_dataset/database/poker_player/poker_player.sqlite
执行第一个查询
执行出错: no such column: Name
eval_exec:False
exact_score:0
medium pred: SELECT Name FROM poker_player WHERE Earnings > 300000
medium gold: SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID   =   T2.People_ID WHERE T2.Earnings  >  300000

当前idx2
____________________
SELECT COUNT(*) FROM poker_player
SELECT count ( Poker_Player_ID )  from poker_player
连接数据库../datasets/cosql_dataset/database/poker_player/poker_player.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
easy pred: SELECT COUNT(*) FROM poker_player
easy gold: SELECT count ( Poker_Player_ID )  from poker_player

当前idx1
____________________
SELECT count(*) FROM Addresses AS T1 JOIN Students AS T2 ON T1.address_id  =  T2.permanent_address_id WHERE T1.state_province_county  =  'North Carolina'
SELECT count ( * )  FROM Students AS T1 JOIN Addresses AS T2 ON T1.current_address_id   =   T2.address_id WHERE T2.state_province_county   =   'NorthCarolina'
连接数据库../datasets/cosql_dataset/database/student_transcripts_tracking/student_transcripts_tracking.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:True
当前idx2
____________________
SELECT T2.first_name, T2.last_name FROM Addresses AS T1 JOIN Students AS T2 ON T1.address_id  =  T2.permanent_address_id WHERE T1.state_province_county  =  'North Carolina'
SELECT T1.first_name,T1.last_name FROM Students AS T1 JOIN Addresses AS T2 ON T1.current_address_id   =   T2.address_id WHERE T2.state_province_county   =   'NorthCarolina'
连接数据库../datasets/cosql_dataset/database/student_transcripts_tracking/student_transcripts_tracking.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:True
当前idx3
____________________
SELECT T2.first_name, T2.last_name FROM Addresses AS T1 JOIN Students AS T2 ON T1.address_id  =  T2.permanent_address_id WHERE T1.state_province_county  =  'North Carolina' AND T2.student_id NOT IN (SELECT student_id FROM Student_Enrolment)
SELECT T1.first_name, T1.last_name FROM Students AS T1 JOIN Addresses AS T2 ON T1.current_address_id   =   T2.address_id WHERE T2.state_province_county   =   'NorthCarolina' EXCEPT SELECT T3.first_name, T3.last_name FROM Students AS T3 JOIN Student_Enrolment AS T4 ON T3.student_id   =   T4.student_id
连接数据库../datasets/cosql_dataset/database/student_transcripts_tracking/student_transcripts_tracking.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
extra pred: SELECT T2.first_name, T2.last_name FROM Addresses AS T1 JOIN Students AS T2 ON T1.address_id  =  T2.permanent_address_id WHERE T1.state_province_county  =  'North Carolina' AND T2.student_id NOT IN (SELECT student_id FROM Student_Enrolment)
extra gold: SELECT T1.first_name, T1.last_name FROM Students AS T1 JOIN Addresses AS T2 ON T1.current_address_id   =   T2.address_id WHERE T2.state_province_county   =   'NorthCarolina' EXCEPT SELECT T3.first_name, T3.last_name FROM Students AS T3 JOIN Student_Enrolment AS T4 ON T3.student_id   =   T4.student_id

当前idx1
____________________
SELECT area_code FROM AREA_CODE_STATE
select area_code from AREA_CODE_STATE
连接数据库../datasets/cosql_dataset/database/voter_1/voter_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
eval_err_num:90
____________________
SELECT T1.area_code FROM AREA_CODE_STATE AS T1 JOIN VOTES AS T2 ON T1.state  =  T2.state WHERE T2.contestant_name  =  'Tabatha Gehling'
SELECT T3.area_code FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number JOIN area_code_state AS T3 ON T2.state  =  T3.state WHERE T1.contestant_name  =  'Tabatha Gehling'
连接数据库../datasets/cosql_dataset/database/voter_1/voter_1.sqlite
执行第一个查询
执行出错: no such column: T2.contestant_name
eval_exec:False
exact_score:0
hard pred: SELECT T1.area_code FROM AREA_CODE_STATE AS T1 JOIN VOTES AS T2 ON T1.state  =  T2.state WHERE T2.contestant_name  =  'Tabatha Gehling'
hard gold: SELECT T3.area_code FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number JOIN area_code_state AS T3 ON T2.state  =  T3.state WHERE T1.contestant_name  =  'Tabatha Gehling'

当前idx3
eval_err_num:91
____________________
SELECT T1.area_code FROM AREA_CODE_STATE AS T1 JOIN VOTES AS T2 ON T1.state  =  T2.state WHERE T2.contestant_name  =  'Kelly Clauss'
SELECT T3.area_code FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number JOIN area_code_state AS T3 ON T2.state  =  T3.state WHERE T1.contestant_name  =  'Kelly Clauss'
连接数据库../datasets/cosql_dataset/database/voter_1/voter_1.sqlite
执行第一个查询
执行出错: no such column: T2.contestant_name
eval_exec:False
exact_score:0
hard pred: SELECT T1.area_code FROM AREA_CODE_STATE AS T1 JOIN VOTES AS T2 ON T1.state  =  T2.state WHERE T2.contestant_name  =  'Kelly Clauss'
hard gold: SELECT T3.area_code FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number JOIN area_code_state AS T3 ON T2.state  =  T3.state WHERE T1.contestant_name  =  'Kelly Clauss'

当前idx4
eval_err_num:92
____________________
SELECT T1.area_code FROM AREA_CODE_STATE AS T1 JOIN VOTES AS T2 ON T1.state  =  T2.state WHERE T2.contestant_name  =  'Kelly Clauss' INTERSECT SELECT T1.area_code FROM AREA_CODE_STATE AS T1 JOIN VOTES AS T2 ON T1.state  =  T2.state WHERE T2.contestant_name  =  'Tabatha Gehling'
SELECT T3.area_code FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number JOIN area_code_state AS T3 ON T2.state  =  T3.state WHERE T1.contestant_name  =  'Tabatha Gehling' INTERSECT SELECT T3.area_code FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number JOIN area_code_state AS T3 ON T2.state  =  T3.state WHERE T1.contestant_name  =  'Kelly Clauss'
连接数据库../datasets/cosql_dataset/database/voter_1/voter_1.sqlite
执行第一个查询
执行出错: no such column: T2.contestant_name
eval_exec:False
exact_score:0
extra pred: SELECT T1.area_code FROM AREA_CODE_STATE AS T1 JOIN VOTES AS T2 ON T1.state  =  T2.state WHERE T2.contestant_name  =  'Kelly Clauss' INTERSECT SELECT T1.area_code FROM AREA_CODE_STATE AS T1 JOIN VOTES AS T2 ON T1.state  =  T2.state WHERE T2.contestant_name  =  'Tabatha Gehling'
extra gold: SELECT T3.area_code FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number JOIN area_code_state AS T3 ON T2.state  =  T3.state WHERE T1.contestant_name  =  'Tabatha Gehling' INTERSECT SELECT T3.area_code FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number JOIN area_code_state AS T3 ON T2.state  =  T3.state WHERE T1.contestant_name  =  'Kelly Clauss'

当前idx1
____________________
SELECT count(*) FROM shop
SELECT count ( * )  FROM shop
连接数据库../datasets/cosql_dataset/database/employee_hire_evaluation/employee_hire_evaluation.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
  0%|          | 0/293 [00:00<?, ?it/s]  3%|▎         | 9/293 [00:00<00:03, 86.51it/s]  6%|▌         | 18/293 [00:00<00:03, 86.85it/s] 10%|▉         | 28/293 [00:00<00:03, 86.77it/s] 13%|█▎        | 38/293 [00:00<00:03, 83.48it/s] 17%|█▋        | 49/293 [00:00<00:02, 91.98it/s] 20%|██        | 60/293 [00:00<00:02, 95.27it/s] 25%|██▍       | 72/293 [00:00<00:02, 100.58it/s] 28%|██▊       | 83/293 [00:00<00:02, 86.58it/s]  32%|███▏      | 93/293 [00:01<00:02, 83.29it/s] 35%|███▍      | 102/293 [00:01<00:02, 83.71it/s] 38%|███▊      | 111/293 [00:01<00:02, 81.38it/s] 41%|████      | 120/293 [00:01<00:02, 79.25it/s] 44%|████▍     | 129/293 [00:01<00:02, 65.24it/s] 47%|████▋     | 137/293 [00:01<00:02, 68.17it/s] 50%|████▉     | 146/293 [00:01<00:02, 71.32it/s] 53%|█████▎    | 155/293 [00:01<00:01, 74.77it/s] 56%|█████▋    | 165/293 [00:02<00:01, 80.09it/s] 60%|█████▉  SELECT name FROM shop
SELECT name FROM shop
连接数据库../datasets/cosql_dataset/database/employee_hire_evaluation/employee_hire_evaluation.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx3
____________________
SELECT location FROM shop WHERE name = "FC Haka"
SELECT location FROM shop where name  =  "FC Haka"
连接数据库../datasets/cosql_dataset/database/employee_hire_evaluation/employee_hire_evaluation.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx4
____________________
SELECT number_products FROM shop WHERE name = "HJK"
SELECT Number_products FROM shop where name  =  "HJK"
连接数据库../datasets/cosql_dataset/database/employee_hire_evaluation/employee_hire_evaluation.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx1
____________________
SELECT department_name, department_id FROM Departments
select department_id,department_name from Departments
连接数据库../datasets/cosql_dataset/database/student_transcripts_tracking/student_transcripts_tracking.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT degree_summary_name FROM Degree_Programs WHERE department_id = 1
select T2.degree_summary_name from Departments as T1 JOIN Degree_Programs as T2 on T1.department_id  =  T2.department_id where T1.department_name  =  'statistics'
连接数据库../datasets/cosql_dataset/database/student_transcripts_tracking/student_transcripts_tracking.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT degree_summary_name FROM Degree_Programs WHERE department_id = 1
medium gold: select T2.degree_summary_name from Departments as T1 JOIN Degree_Programs as T2 on T1.department_id  =  T2.department_id where T1.department_name  =  'statistics'

当前idx1
____________________
SELECT professional_id FROM Professionals
SELECT professional_id  FROM Professionals
连接数据库../datasets/cosql_dataset/database/dog_kennels/dog_kennels.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT role_code FROM Professionals
SELECT professional_id, role_code  FROM Professionals
连接数据库../datasets/cosql_dataset/database/dog_kennels/dog_kennels.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT role_code FROM Professionals
medium gold: SELECT professional_id, role_code  FROM Professionals

当前idx3
____________________
SELECT email_address FROM Professionals WHERE professional_id NOT IN (SELECT professional_id FROM Treatments)
SELECT professional_id , role_code , email_address FROM Professionals EXCEPT SELECT T1.professional_id , T1.role_code , T1.email_address FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id
连接数据库../datasets/cosql_dataset/database/dog_kennels/dog_kennels.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
extra pred: SELECT email_address FROM Professionals WHERE professional_id NOT IN (SELECT professional_id FROM Treatments)
extra gold: SELECT professional_id , role_code , email_address FROM Professionals EXCEPT SELECT T1.professional_id , T1.role_code , T1.email_address FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id

当前idx1
____________________
SELECT Id FROM car_makers WHERE Maker = "American Motor"
SELECT Id FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id   =   T2.Maker WHERE T1.FullName   =   'American Motor Company'
连接数据库../datasets/cosql_dataset/database/car_1/car_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT Id FROM car_makers WHERE Maker = "American Motor"
medium gold: SELECT Id FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id   =   T2.Maker WHERE T1.FullName   =   'American Motor Company'

当前idx2
eval_err_num:93
____________________
SELECT ModelId FROM car_makers WHERE Maker = "American Motor"
SELECT ModelId FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id   =   T2.Maker WHERE T1.Maker   =   'amc'
连接数据库../datasets/cosql_dataset/database/car_1/car_1.sqlite
执行第一个查询
执行出错: no such column: ModelId
eval_exec:False
exact_score:0
medium pred: SELECT ModelId FROM car_makers WHERE Maker = "American Motor"
medium gold: SELECT ModelId FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id   =   T2.Maker WHERE T1.Maker   =   'amc'

当前idx3
____________________
SELECT Maker FROM car_makers WHERE Id = 2
SELECT DISTINCT ( T1.Maker )  FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id   =   T2.Maker WHERE T1.Id  =  2
连接数据库../datasets/cosql_dataset/database/car_1/car_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:False
medium pred: SELECT Maker FROM car_makers WHERE Id = 2
medium gold: SELECT DISTINCT ( T1.Maker )  FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id   =   T2.Maker WHERE T1.Id  =  2

当前idx4
____________________
SELECT count(*) FROM car_makers WHERE FullName = "American Motor Company"
SELECT count ( * )  FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id   =   T2.Maker WHERE T1.FullName   =   'American Motor Company'
连接数据库../datasets/cosql_dataset/database/car_1/car_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:False
medium pred: SELECT count(*) FROM car_makers WHERE FullName = "American Motor Company"
medium gold: SELECT count ( * )  FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id   =   T2.Maker WHERE T1.FullName   =   'American Motor Company'

当前idx1
eval_err_num:94
____________________
SELECT T1.Name, T2.Course FROM teacher AS T1 JOIN course_arrange AS T2 ON T1.Teacher_ID  =  T2.Teacher_ID
SELECT T3.Name ,  T2.Course FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID   =   T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID   =   T3.Teacher_ID
连接数据库../datasets/cosql_dataset/database/course_teach/course_teach.sqlite
执行第一个查询
执行出错: no such column: T2.Course
eval_exec:False
exact_score:0
medium pred: SELECT T1.Name, T2.Course FROM teacher AS T1 JOIN course_arrange AS T2 ON T1.Teacher_ID  =  T2.Teacher_ID
medium gold: SELECT T3.Name ,  T2.Course FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID   =   T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID   =   T3.Teacher_ID

当前idx2
eval_err_num:95
____________________
SELECT T1.Name, T2.Course FROM teacher AS T1 JOIN course_arrange AS T2 ON T1.Teacher_ID  =  T2.Teacher_ID ORDER BY T1.Name ASC
SELECT T3.Name ,  T2.Course FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID   =   T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID   =   T3.Teacher_ID ORDER BY T3.Name
连接数据库../datasets/cosql_dataset/database/course_teach/course_teach.sqlite
执行第一个查询
执行出错: no such column: T2.Course
eval_exec:False
exact_score:0
hard pred: SELECT T1.Name, T2.Course FROM teacher AS T1 JOIN course_arrange AS T2 ON T1.Teacher_ID  =  T2.Teacher_ID ORDER BY T1.Name ASC
hard gold: SELECT T3.Name ,  T2.Course FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID   =   T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID   =   T3.Teacher_ID ORDER BY T3.Name

当前idx3
eval_err_num:96
____________________
SELECT T1.Name, T1.Teacher_ID, T2.Course FROM teacher AS T1 JOIN course_arrange AS T2 ON T1.Teacher_ID  =  T2.Teacher_ID ORDER BY T1.Name ASC
SELECT T3.Name ,  T2.Course, T1.teacher_ID FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID   =   T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID   =   T3.Teacher_ID ORDER BY T3.Name
连接数据库../datasets/cosql_dataset/database/course_teach/course_teach.sqlite
执行第一个查询
执行出错: no such column: T2.Course
eval_exec:False
exact_score:0
hard pred: SELECT T1.Name, T1.Teacher_ID, T2.Course FROM teacher AS T1 JOIN course_arrange AS T2 ON T1.Teacher_ID  =  T2.Teacher_ID ORDER BY T1.Name ASC
hard gold: SELECT T3.Name ,  T2.Course, T1.teacher_ID FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID   =   T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID   =   T3.Teacher_ID ORDER BY T3.Name

当前idx1
____________________
SELECT Name FROM country
SELECT Name FROM country
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT GovernmentForm FROM country
SELECT GovernmentForm FROM country
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx3
____________________
SELECT SurfaceArea FROM country
SELECT SurfaceArea FROM country
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx1
____________________
SELECT Language FROM TV_Channel WHERE series_name = "Sky Music"
SELECT Language FROM TV_Channel where series_name = 'Sky Music'
连接数据库../datasets/cosql_dataset/database/tvshow/tvshow.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT Package_Option FROM TV_Channel
SELECT distinct Package_Option FROM TV_Channel
连接数据库../datasets/cosql_dataset/database/tvshow/tvshow.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:True
当前idx3
____________________
SELECT Content FROM TV_Channel
SELECT distinct  Content FROM TV_Channel
连接数据库../datasets/cosql_dataset/database/tvshow/tvshow.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:True
当前idx1
____________________
SELECT Language FROM TV_Channel GROUP BY Language ORDER BY COUNT(*) ASC LIMIT 1
SELECT LANGUAGE FROM TV_Channel GROUP BY LANGUAGE ORDER BY count ( * )  ASC LIMIT 1
连接数据库../datasets/cosql_dataset/database/tvshow/tvshow.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT Language FROM TV_Channel GROUP BY Language ORDER BY COUNT(*) DESC LIMIT 1
SELECT LANGUAGE FROM TV_Channel GROUP BY LANGUAGE ORDER BY count ( * )  desc LIMIT 1
连接数据库../datasets/cosql_dataset/database/tvshow/tvshow.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx3
____________________
SELECT Content FROM TV_Channel GROUP BY Content ORDER BY COUNT(*) DESC LIMIT 1
SELECT content from tv_channel group by content order by count ( * )  desc limit 1
连接数据库../datasets/cosql_dataset/database/tvshow/tvshow.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx4
____________________
SELECT Content FROM TV_Channel GROUP BY Content ORDER BY COUNT(*) ASC LIMIT 1
SELECT content from tv_channel group by content order by count ( * )  limit 1
连接数据库../datasets/cosql_dataset/database/tvshow/tvshow.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx>4
____________________
SELECT series_name FROM TV_Channel GROUP BY series_name ORDER BY COUNT(*) ASC LIMIT 1
SELECT series_name from tv_channel
连接数据库../datasets/cosql_dataset/database/tvshow/tvshow.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
easy pred: SELECT series_name FROM TV_Channel GROUP BY series_name ORDER BY COUNT(*) ASC LIMIT 1
easy gold: SELECT series_name from tv_channel

当前idx1
____________________
SELECT first_name FROM Professionals UNION SELECT first_name FROM Owners
SELECT first_name FROM Professionals UNION SELECT first_name FROM Owners
连接数据库../datasets/cosql_dataset/database/dog_kennels/dog_kennels.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT first_name FROM Professionals UNION SELECT first_name FROM Owners EXCEPT SELECT name FROM Dogs
SELECT first_name FROM Professionals UNION SELECT first_name FROM Owners EXCEPT SELECT name FROM Dogs
连接数据库../datasets/cosql_dataset/database/dog_kennels/dog_kennels.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx3
____________________
SELECT first_name FROM Professionals UNION SELECT first_name FROM Owners INTERSECT SELECT name FROM Dogs
SELECT first_name FROM Professionals UNION SELECT first_name FROM Owners UNION SELECT name FROM Dogs
连接数据库../datasets/cosql_dataset/database/dog_kennels/dog_kennels.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
hard pred: SELECT first_name FROM Professionals UNION SELECT first_name FROM Owners INTERSECT SELECT name FROM Dogs
hard gold: SELECT first_name FROM Professionals UNION SELECT first_name FROM Owners UNION SELECT name FROM Dogs

当前idx1
____________________
SELECT LName FROM Student WHERE StuID IN (SELECT StuID FROM Has_Pet)
select lname from Student AS T1 JOIN Has_Pet AS T2 ON T2.stuid = T1.stuid
连接数据库../datasets/cosql_dataset/database/pets_1/pets_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
easy pred: SELECT LName FROM Student WHERE StuID IN (SELECT StuID FROM Has_Pet)
easy gold: select lname from Student AS T1 JOIN Has_Pet AS T2 ON T2.stuid = T1.stuid

当前idx2
eval_err_num:97
____________________
SELECT LName FROM Student WHERE StuID IN (SELECT StuID FROM Has_Pet WHERE PetType = "cat")
SELECT T1.lname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE  T3.pettype  =  'cat'
连接数据库../datasets/cosql_dataset/database/pets_1/pets_1.sqlite
执行第一个查询
执行出错: no such column: PetType
eval_exec:False
exact_score:0
hard pred: SELECT LName FROM Student WHERE StuID IN (SELECT StuID FROM Has_Pet WHERE PetType = "cat")
hard gold: SELECT T1.lname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE  T3.pettype  =  'cat'

当前idx3
eval_err_num:98
____________________
SELECT LName FROM Student WHERE StuID IN (SELECT StuID FROM Has_Pet WHERE PetType = "cat" AND pet_age = 3)
SELECT T1.lname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pet_age  =  3 AND T3.pettype  =  'cat'
连接数据库../datasets/cosql_dataset/database/pets_1/pets_1.sqlite
执行第一个查询
执行出错: no such column: PetType
eval_exec:False
exact_score:0
hard pred: SELECT LName FROM Student WHERE StuID IN (SELECT StuID FROM Has_Pet WHERE PetType = "cat" AND pet_age = 3)
hard gold: SELECT T1.lname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pet_age  =  3 AND T3.pettype  =  'cat'

当前idx1
____________________
SELECT orchestra, major_record_format FROM orchestra
SELECT orchestra, Major_Record_Format  FROM orchestra
连接数据库../datasets/cosql_dataset/database/orchestra/orchestra.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT orchestra FROM orchestra ORDER BY orchestra ASC
SELECT orchestra FROM orchestra order by orchestra
连接数据库../datasets/cosql_dataset/database/orchestra/orchestra.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx3
____________________
SELECT major_record_format FROM orchestra GROUP BY major_record_format ORDER BY count(*) ASC
SELECT Major_Record_Format FROM orchestra GROUP BY Major_Record_Format ORDER BY COUNT ( * )  ASC
连接数据库../datasets/cosql_dataset/database/orchestra/orchestra.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx1
____________________
SELECT count(*) FROM museum
SELECT count ( Museum_ID  )  FROM museum
连接数据库../datasets/cosql_dataset/database/museum_visit/museum_visit.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
easy pred: SELECT count(*) FROM museum
easy gold: SELECT count ( Museum_ID  )  FROM museum

当前idx2
____________________
SELECT Num_of_Staff FROM museum WHERE Museum_ID = 3
SELECT Num_of_Staff FROM museum where museum.Museum_ID  =  3
连接数据库../datasets/cosql_dataset/database/museum_visit/museum_visit.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx3
____________________
SELECT Open_Year FROM museum WHERE Museum_ID = 3
SELECT Open_year FROM museum where Name = 'Capital Plaza Museum'
连接数据库../datasets/cosql_dataset/database/museum_visit/museum_visit.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
easy pred: SELECT Open_Year FROM museum WHERE Museum_ID = 3
easy gold: SELECT Open_year FROM museum where Name = 'Capital Plaza Museum'

当前idx1
____________________
SELECT T1.Name FROM visitor AS T1 JOIN visit AS T2 ON T1.ID = T2.visitor_ID GROUP BY T1.ID HAVING COUNT(*)  >  1
SELECT  t1.name FROM visitor AS t1 JOIN visit AS t2 ON t1.id   =   t2.visitor_id GROUP BY t1.id HAVING count ( * )   >  1
连接数据库../datasets/cosql_dataset/database/museum_visit/museum_visit.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT T1.ID, T1.Age FROM visitor AS T1 JOIN visit AS T2 ON T1.ID = T2.visitor_ID GROUP BY T1.ID HAVING COUNT(*)  >  1
SELECT  t1.name, t1.id, t1.age FROM visitor AS t1 JOIN visit AS t2 ON t1.id   =   t2.visitor_id GROUP BY t1.id HAVING count ( * )   >  1
连接数据库../datasets/cosql_dataset/database/museum_visit/museum_visit.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT T1.ID, T1.Age FROM visitor AS T1 JOIN visit AS T2 ON T1.ID = T2.visitor_ID GROUP BY T1.ID HAVING COUNT(*)  >  1
medium gold: SELECT  t1.name, t1.id, t1.age FROM visitor AS t1 JOIN visit AS t2 ON t1.id   =   t2.visitor_id GROUP BY t1.id HAVING count ( * )   >  1

当前idx3
____________________
SELECT T1.Name, T1.Level_of_membership FROM visitor AS T1 JOIN visit AS T2 ON T1.ID = T2.visitor_ID WHERE T1.Age  >  20
SELECT  name, Level_of_membership FROM visitor where age > 20
连接数据库../datasets/cosql_dataset/database/museum_visit/museum_visit.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:False
medium pred: SELECT T1.Name, T1.Level_of_membership FROM visitor AS T1 JOIN visit AS T2 ON T1.ID = T2.visitor_ID WHERE T1.Age  >  20
medium gold: SELECT  name, Level_of_membership FROM visitor where age > 20

当前idx4
____________________
SELECT T1.Name, T1.Age FROM visitor AS T1 JOIN visit AS T2 ON T1.ID = T2.visitor_ID WHERE T2.Total_spent  >  100
SELECT  t1.name , t1.age FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id where t2.total_spent > 100
连接数据库../datasets/cosql_dataset/database/museum_visit/museum_visit.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx1
____________________
SELECT count(governmentform) FROM country
SELECT count ( GovernmentForm )  FROM country
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT count(*) FROM country WHERE lifeexpectancy > 72
SELECT GovernmentForm FROM country GROUP BY GovernmentForm HAVING avg ( LifeExpectancy )   >  72
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
easy pred: SELECT count(*) FROM country WHERE lifeexpectancy > 72
easy gold: SELECT GovernmentForm FROM country GROUP BY GovernmentForm HAVING avg ( LifeExpectancy )   >  72

当前idx3
____________________
SELECT governmentform, sum(population) FROM country WHERE lifeexpectancy > 72 GROUP BY governmentform
SELECT sum ( Population )  ,  GovernmentForm FROM country GROUP BY GovernmentForm HAVING avg ( LifeExpectancy )   >  72
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT governmentform, sum(population) FROM country WHERE lifeexpectancy > 72 GROUP BY governmentform
medium gold: SELECT sum ( Population )  ,  GovernmentForm FROM country GROUP BY GovernmentForm HAVING avg ( LifeExpectancy )   >  72

当前idx4
____________________
SELECT governmentform, avg(lifeexpectancy) FROM country WHERE lifeexpectancy > 72 GROUP BY governmentform
SELECT avg ( LifeExpectancy )  FROM country GROUP BY GovernmentForm HAVING avg ( LifeExpectancy )   >  72
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
easy pred: SELECT governmentform, avg(lifeexpectancy) FROM country WHERE lifeexpectancy > 72 GROUP BY governmentform
easy gold: SELECT avg ( LifeExpectancy )  FROM country GROUP BY GovernmentForm HAVING avg ( LifeExpectancy )   >  72

当前idx>4
____________________
SELECT governmentform, sum(population) FROM country WHERE lifeexpectancy > 72 GROUP BY governmentform
SELECT sum ( Population )  ,  GovernmentForm FROM country GROUP BY GovernmentForm HAVING avg ( LifeExpectancy )   >  72
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT governmentform, sum(population) FROM country WHERE lifeexpectancy > 72 GROUP BY governmentform
medium gold: SELECT sum ( Population )  ,  GovernmentForm FROM country GROUP BY GovernmentForm HAVING avg ( LifeExpectancy )   >  72

当前idx1
____________________
SELECT Level_of_membership FROM visitor WHERE ID = 1
SELECT Level_of_membership FROM visitor WHERE ID  =  1
连接数据库../datasets/cosql_dataset/database/museum_visit/museum_visit.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT Name FROM visitor WHERE ID = 1
SELECT Name FROM visitor WHERE ID  =  1
连接数据库../datasets/cosql_dataset/database/museum_visit/museum_visit.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx3
____________________
SELECT Age FROM visitor WHERE ID = 1
SELECT Age FROM visitor WHERE ID  =  1
连接数据库../datasets/cosql_dataset/database/museum_visit/museum_visit.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx1
____________________
SELECT T1.Airline FROM flights AS T1 GROUP BY T1.Airline ORDER BY count(*) DESC LIMIT 1
SELECT T1.airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid   =   T2.Airline GROUP BY T1.Airline ORDER BY count ( * )  desc LIMIT 1
连接数据库../datasets/cosql_dataset/database/flight_2/flight_2.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
extra pred: SELECT T1.Airline FROM flights AS T1 GROUP BY T1.Airline ORDER BY count(*) DESC LIMIT 1
extra gold: SELECT T1.airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid   =   T2.Airline GROUP BY T1.Airline ORDER BY count ( * )  desc LIMIT 1

当前idx2
____________________
SELECT T1.Airline FROM flights AS T1 GROUP BY T1.Airline ORDER BY count(*) ASC LIMIT 1
SELECT T1.airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid   =   T2.Airline GROUP BY T1.Airline ORDER BY count ( * )  asc LIMIT 1
连接数据库../datasets/cosql_dataset/database/flight_2/flight_2.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
extra pred: SELECT T1.Airline FROM flights AS T1 GROUP BY T1.Airline ORDER BY count(*) ASC LIMIT 1
extra gold: SELECT T1.airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid   =   T2.Airline GROUP BY T1.Airline ORDER BY count ( * )  asc LIMIT 1

当前idx3
____________________
SELECT T1.Abbreviation FROM airlines AS T1 WHERE T1.Airline = "AirTran Airways"
SELECT abbreviation from airlines where airline =  "AirTran Airways"
连接数据库../datasets/cosql_dataset/database/flight_2/flight_2.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx4
____________________
SELECT T1.Country FROM airlines AS T1 WHERE T1.Airline = "AirTran Airways"
SELECT country from airlines where airline =  "AirTran Airways"
连接数据库../datasets/cosql_dataset/database/flight_2/flight_2.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx1
____________________
SELECT id, name FROM battle
SELECT T1.id ,  T1.name FROM battle AS T1
连接数据库../datasets/cosql_dataset/database/battle_death/battle_death.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
eval_err_num:99
____________________
SELECT id, name FROM battle WHERE id IN (SELECT battle_id FROM death GROUP BY battle_id HAVING COUNT(*) > 10)
SELECT T1.id ,  T1.name FROM battle AS T1 JOIN ship AS T2 ON T1.id   =   T2.lost_in_battle JOIN death AS T3 ON T2.id   =   T3.caused_by_ship_id GROUP BY T1.id HAVING sum ( T3.killed )   >  10
连接数据库../datasets/cosql_dataset/database/battle_death/battle_death.sqlite
执行第一个查询
执行出错: no such column: battle_id
eval_exec:False
exact_score:0
hard pred: SELECT id, name FROM battle WHERE id IN (SELECT battle_id FROM death GROUP BY battle_id HAVING COUNT(*) > 10)
hard gold: SELECT T1.id ,  T1.name FROM battle AS T1 JOIN ship AS T2 ON T1.id   =   T2.lost_in_battle JOIN death AS T3 ON T2.id   =   T3.caused_by_ship_id GROUP BY T1.id HAVING sum ( T3.killed )   >  10

当前idx3
eval_err_num:100
____________________
SELECT id, name, date FROM battle WHERE id IN (SELECT battle_id FROM death GROUP BY battle_id HAVING COUNT(*) > 10)
SELECT T1.id ,  T1.name ,T1.date FROM battle AS T1 JOIN ship AS T2 ON T1.id   =   T2.lost_in_battle JOIN death AS T3 ON T2.id   =   T3.caused_by_ship_id GROUP BY T1.id HAVING sum ( T3.killed )   >  10
连接数据库../datasets/cosql_dataset/database/battle_death/battle_death.sqlite
执行第一个查询
执行出错: no such column: battle_id
eval_exec:False
exact_score:0
hard pred: SELECT id, name, date FROM battle WHERE id IN (SELECT battle_id FROM death GROUP BY battle_id HAVING COUNT(*) > 10)
hard gold: SELECT T1.id ,  T1.name ,T1.date FROM battle AS T1 JOIN ship AS T2 ON T1.id   =   T2.lost_in_battle JOIN death AS T3 ON T2.id   =   T3.caused_by_ship_id GROUP BY T1.id HAVING sum ( T3.killed )   >  10

当前idx1
____________________
SELECT avg(pet_age) FROM Pets WHERE PetType = "cat"
SELECT avg ( pet_age )  FROM pets WHERE PetType  =  'cat'
连接数据库../datasets/cosql_dataset/database/pets_1/pets_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT avg(pet_age) FROM Pets WHERE PetType = "dog"
SELECT avg ( pet_age )  FROM pets WHERE PetType  =  'dog'
连接数据库../datasets/cosql_dataset/database/pets_1/pets_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx3
____________________
SELECT max(pet_age) FROM Pets WHERE PetType = "dog"
SELECT max ( pet_age )  FROM pets WHERE PetType  =  'dog'
连接数据库../datasets/cosql_dataset/database/pets_1/pets_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx4
____________________
SELECT max(pet_age) FROM Pets WHERE PetType = "cat" UNION SELECT max(pet_age) FROM Pets WHERE PetType = "dog"
SELECT max ( pet_age )  ,  pettype FROM pets GROUP BY pettype
连接数据库../datasets/cosql_dataset/database/pets_1/pets_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT max(pet_age) FROM Pets WHERE PetType = "cat" UNION SELECT max(pet_age) FROM Pets WHERE PetType = "dog"
medium gold: SELECT max ( pet_age )  ,  pettype FROM pets GROUP BY pettype

当前idx>4
____________________
SELECT max(pet_age) FROM Pets WHERE PetType = "cat"
SELECT max ( pet_age )  FROM pets WHERE PetType  =  'cat'
连接数据库../datasets/cosql_dataset/database/pets_1/pets_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx1
____________________
SELECT FullName FROM car_makers WHERE Maker = "AMC"
select fullname from car_makers where maker  =  "amc"
连接数据库../datasets/cosql_dataset/database/car_1/car_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:True
当前idx2
____________________
SELECT Model FROM car_names WHERE Make = "Mercedes-Benz"
SELECT T3.model FROM Countries AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId   =   T2.Country JOIN MODEL_LIST AS T3 ON T2.Id   =   T3.Maker WHERE T1.countryname  =  "germany"
连接数据库../datasets/cosql_dataset/database/car_1/car_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
hard pred: SELECT Model FROM car_names WHERE Make = "Mercedes-Benz"
hard gold: SELECT T3.model FROM Countries AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId   =   T2.Country JOIN MODEL_LIST AS T3 ON T2.Id   =   T3.Maker WHERE T1.countryname  =  "germany"

当前idx3
eval_err_num:101
____________________
SELECT ModelId FROM car_names WHERE Make = "BMW"
SELECT modelid from model_list where model  =  "bmw"
连接数据库../datasets/cosql_dataset/database/car_1/car_1.sqlite
执行第一个查询
执行出错: no such column: ModelId
eval_exec:False
exact_score:0
easy pred: SELECT ModelId FROM car_names WHERE Make = "BMW"
easy gold: SELECT modelid from model_list where model  =  "bmw"

当前idx4
____________________
SELECT Country, Id FROM car_makers WHERE Maker = "Flat" OR Country IN (SELECT Country FROM car_makers GROUP BY Country HAVING COUNT(*) > 3)
SELECT T1.countryId ,  T1.CountryName FROM Countries AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId   =   T2.Country GROUP BY T1.countryId HAVING count ( * )   >  3 UNION SELECT T1.countryId ,  T1.CountryName FROM Countries AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId   =   T2.Country JOIN MODEL_LIST AS T3 ON T2.Id   =   T3.Maker WHERE T3.Model   =   'fiat'
连接数据库../datasets/cosql_dataset/database/car_1/car_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
extra pred: SELECT Country, Id FROM car_makers WHERE Maker = "Flat" OR Country IN (SELECT Country FROM car_makers GROUP BY Country HAVING COUNT(*) > 3)
extra gold: SELECT T1.countryId ,  T1.CountryName FROM Countries AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId   =   T2.Country GROUP BY T1.countryId HAVING count ( * )   >  3 UNION SELECT T1.countryId ,  T1.CountryName FROM Countries AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId   =   T2.Country JOIN MODEL_LIST AS T3 ON T2.Id   =   T3.Maker WHERE T3.Model   =   'fiat'

当前idx1
____________________
SELECT T1.cell_number FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id ORDER BY count(*) DESC LIMIT 1
SELECT T1.cell_number FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id   =   T2.professional_id GROUP BY T1.professional_id order by count ( * )   desc limit 1
连接数据库../datasets/cosql_dataset/database/dog_kennels/dog_kennels.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT T1.professional_id FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >=  2
SELECT T1.professional_id  FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id   =   T2.professional_id GROUP BY T1.professional_id HAVING count ( * )    > =    2
连接数据库../datasets/cosql_dataset/database/dog_kennels/dog_kennels.sqlite
执行第一个查询
执行第二个查询
执行出错: near "=": syntax error
eval_exec:False
exact_score:True
当前idx3
____________________
SELECT count(*) FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  =  1
select count ( * )  from  ( SELECT *  FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id   =   T2.professional_id GROUP BY T1.professional_id HAVING count ( * )    =  1 ) 
连接数据库../datasets/cosql_dataset/database/dog_kennels/dog_kennels.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
easy pred: SELECT count(*) FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  =  1
easy gold: select count ( * )  from  ( SELECT *  FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id   =   T2.professional_id GROUP BY T1.professional_id HAVING count ( * )    =  1 ) 

当前idx1
____________________
SELECT Document_ID FROM Paragraphs GROUP BY Document_ID HAVING count(*)  <=  2
SELECT document_id FROM Paragraphs GROUP BY document_id HAVING count ( * )  BETWEEN 1 AND 2
连接数据库../datasets/cosql_dataset/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:0
easy pred: SELECT Document_ID FROM Paragraphs GROUP BY Document_ID HAVING count(*)  <=  2
easy gold: SELECT document_id FROM Paragraphs GROUP BY document_id HAVING count ( * )  BETWEEN 1 AND 2

当前idx2
____________________
SELECT Paragraph_Text FROM Paragraphs GROUP BY Document_ID HAVING count(*)  <=  2
SELECT Paragraph_Text FROM Paragraphs GROUP BY document_id HAVING count ( * )  BETWEEN 1 AND 2
连接数据库../datasets/cosql_dataset/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:0
easy pred: SELECT Paragraph_Text FROM Paragraphs GROUP BY Document_ID HAVING count(*)  <=  2
easy gold: SELECT Paragraph_Text FROM Paragraphs GROUP BY document_id HAVING count ( * )  BETWEEN 1 AND 2

当前idx1
____________________
SELECT Name FROM teacher ORDER BY Age ASC LIMIT 1
select name from teacher order by Age asc limit 1
连接数据库../datasets/cosql_dataset/database/course_teach/course_teach.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT Hometown FROM teacher ORDER BY Age ASC LIMIT 1
select Hometown from teacher order by Age asc limit 1
连接数据库../datasets/cosql_dataset/database/course_teach/course_teach.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx3
____________________
SELECT Age FROM teacher WHERE Name = "Vicente Carretero"
select Age from teacher where Name = 'Vicente Carretero'
连接数据库../datasets/cosql_dataset/database/course_teach/course_teach.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx1
eval_err_num:102
____________________

SELECT fname, lname FROM student WHERE sex   =   'F'
连接数据库../datasets/cosql_dataset/database/pets_1/pets_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: 
medium gold: SELECT fname, lname FROM student WHERE sex   =   'F'

当前idx2
____________________
SELECT city_code FROM Student
SELECT DISTINCT city_code FROM student
连接数据库../datasets/cosql_dataset/database/pets_1/pets_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:True
当前idx3
____________________
SELECT weight FROM Pets WHERE PetType = "Dog" AND PetID IN (SELECT PetID FROM Has_Pet WHERE StuID IN (SELECT StuID FROM Student WHERE Sex = "F"))
SELECT T3.weight FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid   =   T2.stuid JOIN pets AS T3 ON T2.petid   =   T3.petid WHERE T1.sex   =   'F'
连接数据库../datasets/cosql_dataset/database/pets_1/pets_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
hard pred: SELECT weight FROM Pets WHERE PetType = "Dog" AND PetID IN (SELECT PetID FROM Has_Pet WHERE StuID IN (SELECT StuID FROM Student WHERE Sex = "F"))
hard gold: SELECT T3.weight FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid   =   T2.stuid JOIN pets AS T3 ON T2.petid   =   T3.petid WHERE T1.sex   =   'F'

当前idx1
____________________
SELECT Id FROM cars_data ORDER BY Horsepower ASC LIMIT 1
SELECT id from cars_data order by horsepower limit 1
连接数据库../datasets/cosql_dataset/database/car_1/car_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT avg(Horsepower) FROM cars_data
SELECT avg ( horsepower ) from cars_data
连接数据库../datasets/cosql_dataset/database/car_1/car_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx3
____________________
SELECT Id FROM cars_data WHERE Horsepower < (SELECT avg(Horsepower) FROM cars_data)
SELECT T1.Id FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id   =   T2.MakeId WHERE T1.Horsepower <  ( SELECT avg ( Horsepower )  FROM CARS_DATA ) 
连接数据库../datasets/cosql_dataset/database/car_1/car_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:False
extra pred: SELECT Id FROM cars_data WHERE Horsepower < (SELECT avg(Horsepower) FROM cars_data)
extra gold: SELECT T1.Id FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id   =   T2.MakeId WHERE T1.Horsepower <  ( SELECT avg ( Horsepower )  FROM CARS_DATA ) 

当前idx4
eval_err_num:103
____________________
SELECT Id, Model, Make FROM cars_data WHERE Horsepower < (SELECT avg(Horsepower) FROM cars_data)
SELECT T1.Id ,T2.model FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id   =   T2.MakeId WHERE T1.Horsepower <  ( SELECT avg ( Horsepower )  FROM CARS_DATA ) 
连接数据库../datasets/cosql_dataset/database/car_1/car_1.sqlite
执行第一个查询
执行出错: no such column: Model
eval_exec:False
exact_score:0
extra pred: SELECT Id, Model, Make FROM cars_data WHERE Horsepower < (SELECT avg(Horsepower) FROM cars_data)
extra gold: SELECT T1.Id ,T2.model FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id   =   T2.MakeId WHERE T1.Horsepower <  ( SELECT avg ( Horsepower )  FROM CARS_DATA ) 

当前idx1
____________________
SELECT * FROM Transcripts ORDER BY transcript_date DESC LIMIT 1
SELECT transcript_id FROM Transcripts ORDER BY transcript_date DESC LIMIT 1
连接数据库../datasets/cosql_dataset/database/student_transcripts_tracking/student_transcripts_tracking.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT * FROM Transcripts ORDER BY transcript_date DESC LIMIT 1
medium gold: SELECT transcript_id FROM Transcripts ORDER BY transcript_date DESC LIMIT 1

当前idx2
____________________
SELECT transcript_date FROM Transcripts WHERE transcript_id = 5
SELECT transcript_date FROM Transcripts WHERE transcript_id  =  5
连接数据库../datasets/cosql_dataset/database/student_transcripts_tracking/student_transcripts_tracking.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx1
____________________
SELECT transcript_date, transcript_id FROM Transcripts AS T1 JOIN Transcript_Contents AS T2 ON T1.transcript_id  =  T2.transcript_id GROUP BY T1.transcript_id HAVING count(*)  >=  2
SELECT T2.transcript_date ,  T1.transcript_id FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id   =   T2.transcript_id GROUP BY T1.transcript_id HAVING count ( * )    > =    2
连接数据库../datasets/cosql_dataset/database/student_transcripts_tracking/student_transcripts_tracking.sqlite
执行第一个查询
执行出错: ambiguous column name: transcript_id
eval_exec:False
exact_score:True
当前idx2
____________________
SELECT transcript_date, transcript_id, other_details FROM Transcripts AS T1 JOIN Transcript_Contents AS T2 ON T1.transcript_id  =  T2.transcript_id GROUP BY T1.transcript_id HAVING count(*)  >=  2
SELECT T2.other_details FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id   =   T2.transcript_id GROUP BY T1.transcript_id HAVING count ( * )    > =    2
连接数据库../datasets/cosql_dataset/database/student_transcripts_tracking/student_transcripts_tracking.sqlite
执行第一个查询
执行出错: ambiguous column name: transcript_id
eval_exec:False
exact_score:0
medium pred: SELECT transcript_date, transcript_id, other_details FROM Transcripts AS T1 JOIN Transcript_Contents AS T2 ON T1.transcript_id  =  T2.transcript_id GROUP BY T1.transcript_id HAVING count(*)  >=  2
medium gold: SELECT T2.other_details FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id   =   T2.transcript_id GROUP BY T1.transcript_id HAVING count ( * )    > =    2

当前idx3
____________________
SELECT transcript_date FROM Transcripts AS T1 JOIN Transcript_Contents AS T2 ON T1.transcript_id  =  T2.transcript_id GROUP BY T1.transcript_id HAVING count(*)  >=  2
SELECT T2.transcript_date FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id   =   T2.transcript_id GROUP BY T1.transcript_id HAVING count ( * )    > =    2
连接数据库../datasets/cosql_dataset/database/student_transcripts_tracking/student_transcripts_tracking.sqlite
执行第一个查询
执行第二个查询
执行出错: near "=": syntax error
eval_exec:False
exact_score:True
当前idx1
____________________
SELECT id FROM Highschooler
select student_id from Friend
连接数据库../datasets/cosql_dataset/database/network_1/network_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:False
easy pred: SELECT id FROM Highschooler
easy gold: select student_id from Friend

当前idx1
____________________
SELECT email_address FROM Professionals WHERE state = "Hawaii"
SELECT email_address FROM Professionals WHERE state   =   'Hawaii'
连接数据库../datasets/cosql_dataset/database/dog_kennels/dog_kennels.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT email_address FROM Professionals WHERE state = "Wisconsin"
SELECT email_address FROM Professionals WHERE state   =   'Wisconsin'
连接数据库../datasets/cosql_dataset/database/dog_kennels/dog_kennels.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx3
____________________
SELECT first_name FROM Professionals WHERE role_code = "Employee"
SELECT first_name FROM Professionals WHERE role_code   =   'Employee'
连接数据库../datasets/cosql_dataset/database/dog_kennels/dog_kennels.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx1
eval_err_num:104
____________________
SELECT semester_name, COUNT(*) AS enrollments FROM Student_Enrolment GROUP BY semester_name
SELECT T1.semester_name, count ( * )  from semesters as T1 join student_enrolment as T2 on T1.semester_id  =  T2.semester_id group by T2.semester_id
连接数据库../datasets/cosql_dataset/database/student_transcripts_tracking/student_transcripts_tracking.sqlite
执行第一个查询
执行出错: no such column: semester_name
eval_exec:False
exact_score:0
medium pred: SELECT semester_name, COUNT(*) AS enrollments FROM Student_Enrolment GROUP BY semester_name
medium gold: SELECT T1.semester_name, count ( * )  from semesters as T1 join student_enrolment as T2 on T1.semester_id  =  T2.semester_id group by T2.semester_id

当前idx2
eval_err_num:105
____________________
SELECT semester_name FROM Student_Enrolment GROUP BY semester_name ORDER BY COUNT(*) DESC LIMIT 1
SELECT T1.semester_name from semesters as T1 join student_enrolment as T2 on T1.semester_id  =  T2.semester_id group by T2.semester_id order by count ( * )  desc limit 1
连接数据库../datasets/cosql_dataset/database/student_transcripts_tracking/student_transcripts_tracking.sqlite
执行第一个查询
执行出错: no such column: semester_name
eval_exec:False
exact_score:0
extra pred: SELECT semester_name FROM Student_Enrolment GROUP BY semester_name ORDER BY COUNT(*) DESC LIMIT 1
extra gold: SELECT T1.semester_name from semesters as T1 join student_enrolment as T2 on T1.semester_id  =  T2.semester_id group by T2.semester_id order by count ( * )  desc limit 1

当前idx3
____________________
SELECT student_enrolment_id, degree_program_id FROM Student_Enrolment
SELECT student_enrolment_id, degree_program_id from  Student_Enrolment
连接数据库../datasets/cosql_dataset/database/student_transcripts_tracking/student_transcripts_tracking.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx4
____________________
SELECT semester_name FROM Semesters WHERE semester_id NOT IN (SELECT semester_id FROM Student_Enrolment)
sELECT semester_name FROM Semesters WHERE semester_id NOT IN (  SELECT semester_id FROM Student_Enrolment  ) 
连接数据库../datasets/cosql_dataset/database/student_transcripts_tracking/student_transcripts_tracking.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx1
____________________
SELECT country.name FROM country JOIN countrylanguage ON country.code  =  countrylanguage.countrycode WHERE countrylanguage.language  !=  'English'
SELECT name FROM country WHERE Name NOT IN  ( SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code   =   T2.CountryCode WHERE T2.Language   =   "English" AND T2.IsOfficial   =   "T" ) 
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
hard pred: SELECT country.name FROM country JOIN countrylanguage ON country.code  =  countrylanguage.countrycode WHERE countrylanguage.language  !=  'English'
hard gold: SELECT name FROM country WHERE Name NOT IN  ( SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code   =   T2.CountryCode WHERE T2.Language   =   "English" AND T2.IsOfficial   =   "T" ) 

当前idx2
eval_err_num:106
____________________
SELECT country.name, avg(country.life expectancy) FROM country JOIN countrylanguage ON country.code  =  countrylanguage.countrycode WHERE countrylanguage.language  !=  'English' GROUP BY country.name
SELECT avg ( LifeExpectancy )  FROM country WHERE Name NOT IN  ( SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code   =   T2.CountryCode WHERE T2.Language   =   "English" AND T2.IsOfficial   =   "T" ) 
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行出错: near "expectancy": syntax error
eval_exec:False
exact_score:0
extra pred: SELECT country.name, avg(country.life expectancy) FROM country JOIN countrylanguage ON country.code  =  countrylanguage.countrycode WHERE countrylanguage.language  !=  'English' GROUP BY country.name
extra gold: SELECT avg ( LifeExpectancy )  FROM country WHERE Name NOT IN  ( SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code   =   T2.CountryCode WHERE T2.Language   =   "English" AND T2.IsOfficial   =   "T" ) 

当前idx3
eval_err_num:107
____________________

SELECT avg ( LifeExpectancy )  FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code   =   T2.CountryCode WHERE T2.Language   =   "English" AND T2.IsOfficial   =   "T"
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: 
medium gold: SELECT avg ( LifeExpectancy )  FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code   =   T2.CountryCode WHERE T2.Language   =   "English" AND T2.IsOfficial   =   "T"

当前idx1
____________________
SELECT * FROM flights WHERE SourceAirport = "CVO" AND DestAirport = "SNA"
SELECT FlightNo FROM flights where SourceAirport = "CVO" and DestAirport = "SNA"
连接数据库../datasets/cosql_dataset/database/flight_2/flight_2.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT * FROM flights WHERE SourceAirport = "CVO" AND DestAirport = "SNA"
medium gold: SELECT FlightNo FROM flights where SourceAirport = "CVO" and DestAirport = "SNA"

当前idx2
____________________
SELECT * FROM flights WHERE SourceAirport = "CVO" AND DestAirport = "DFW"
SELECT * FROM flights where SourceAirport = "CVO" and DestAirport = "DFW"
连接数据库../datasets/cosql_dataset/database/flight_2/flight_2.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx3
____________________
SELECT DISTINCT T1.Airline FROM flights AS T1 JOIN airlines AS T2 ON T1.Airline = T2.uid WHERE T1.SourceAirport = "CVO"
SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid   =   T2.Airline WHERE T2.SourceAirport   =   " CVO"
连接数据库../datasets/cosql_dataset/database/flight_2/flight_2.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT DISTINCT T1.Airline FROM flights AS T1 JOIN airlines AS T2 ON T1.Airline = T2.uid WHERE T1.SourceAirport = "CVO"
medium gold: SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid   =   T2.Airline WHERE T2.SourceAirport   =   " CVO"

当前idx1
eval_err_num:108
____________________
SELECT Channel FROM TV_series WHERE series_name = "A love of a lifetime"
SELECT T1.series_name FROM TV_Channel AS T1 JOIN TV_series AS T2 ON T1.id  =  T2.Channel WHERE T2.Episode  =  "A Love of a Lifetime"
连接数据库../datasets/cosql_dataset/database/tvshow/tvshow.sqlite
执行第一个查询
执行出错: no such column: series_name
eval_exec:False
exact_score:0
medium pred: SELECT Channel FROM TV_series WHERE series_name = "A love of a lifetime"
medium gold: SELECT T1.series_name FROM TV_Channel AS T1 JOIN TV_series AS T2 ON T1.id  =  T2.Channel WHERE T2.Episode  =  "A Love of a Lifetime"

当前idx2
eval_err_num:109
____________________
SELECT Viewers_m FROM TV_series WHERE series_name = "A love of a lifetime"
SELECT  Viewers_m FROM  TV_series  where Episode  =  "A Love of a Lifetime"
连接数据库../datasets/cosql_dataset/database/tvshow/tvshow.sqlite
执行第一个查询
执行出错: no such column: series_name
eval_exec:False
exact_score:0
easy pred: SELECT Viewers_m FROM TV_series WHERE series_name = "A love of a lifetime"
easy gold: SELECT  Viewers_m FROM  TV_series  where Episode  =  "A Love of a Lifetime"

当前idx3
eval_err_num:110
____________________
SELECT Rating FROM TV_series WHERE series_name = "A love of a lifetime"
SELECT  Weekly_Rank  FROM  TV_series  where Episode  =  "A Love of a Lifetime"
连接数据库../datasets/cosql_dataset/database/tvshow/tvshow.sqlite
执行第一个查询
执行出错: no such column: series_name
eval_exec:False
exact_score:0
easy pred: SELECT Rating FROM TV_series WHERE series_name = "A love of a lifetime"
easy gold: SELECT  Weekly_Rank  FROM  TV_series  where Episode  =  "A Love of a Lifetime"

当前idx4
eval_err_num:111
____________________
SELECT Air_Date FROM TV_series WHERE series_name = "A love of a lifetime"
SELECT  Air_Date  FROM  TV_series  where Episode  =  "A Love of a Lifetime"
连接数据库../datasets/cosql_dataset/database/tvshow/tvshow.sqlite
执行第一个查询
执行出错: no such column: series_name
eval_exec:False
exact_score:0
easy pred: SELECT Air_Date FROM TV_series WHERE series_name = "A love of a lifetime"
easy gold: SELECT  Air_Date  FROM  TV_series  where Episode  =  "A Love of a Lifetime"

当前idx1
____________________
SELECT player_id FROM players ORDER BY birth_date LIMIT 1
SELECT player_id FROM players ORDER BY birth_date desc LIMIT 1
连接数据库../datasets/cosql_dataset/database/wta_1/wta_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT player_id FROM players ORDER BY birth_date LIMIT 1
medium gold: SELECT player_id FROM players ORDER BY birth_date desc LIMIT 1

当前idx2
____________________
SELECT player_id FROM players ORDER BY birth_date DESC LIMIT 1
SELECT player_id FROM players ORDER BY birth_date LIMIT 1
连接数据库../datasets/cosql_dataset/database/wta_1/wta_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT player_id FROM players ORDER BY birth_date DESC LIMIT 1
medium gold: SELECT player_id FROM players ORDER BY birth_date LIMIT 1

当前idx3
____________________
SELECT first_name, country_code FROM players ORDER BY birth_date DESC LIMIT 1
SELECT first_name, country_code FROM players ORDER BY birth_date LIMIT 1
连接数据库../datasets/cosql_dataset/database/wta_1/wta_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT first_name, country_code FROM players ORDER BY birth_date DESC LIMIT 1
medium gold: SELECT first_name, country_code FROM players ORDER BY birth_date LIMIT 1

当前idx1
____________________
SELECT T1.Name FROM teacher AS T1 JOIN course_arrange AS T2 ON T1.Teacher_ID  =  T2.Teacher_ID GROUP BY T1.Teacher_ID HAVING COUNT(*)  >=  2
SELECT T2.Name FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID   =   T2.Teacher_ID GROUP BY T2.Name HAVING COUNT ( * )    > =    2
连接数据库../datasets/cosql_dataset/database/course_teach/course_teach.sqlite
执行第一个查询
执行第二个查询
执行出错: near "=": syntax error
eval_exec:False
exact_score:0
medium pred: SELECT T1.Name FROM teacher AS T1 JOIN course_arrange AS T2 ON T1.Teacher_ID  =  T2.Teacher_ID GROUP BY T1.Teacher_ID HAVING COUNT(*)  >=  2
medium gold: SELECT T2.Name FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID   =   T2.Teacher_ID GROUP BY T2.Name HAVING COUNT ( * )    > =    2

当前idx2
____________________
SELECT T1.Age, T1.Hometown FROM teacher AS T1 JOIN course_arrange AS T2 ON T1.Teacher_ID  =  T2.Teacher_ID GROUP BY T1.Teacher_ID HAVING COUNT(*)  >=  2
SELECT T2.age, t2.hometown FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID   =   T2.Teacher_ID GROUP BY T2.Name HAVING COUNT ( * )    > =    2
连接数据库../datasets/cosql_dataset/database/course_teach/course_teach.sqlite
执行第一个查询
执行第二个查询
执行出错: near "=": syntax error
eval_exec:False
exact_score:0
medium pred: SELECT T1.Age, T1.Hometown FROM teacher AS T1 JOIN course_arrange AS T2 ON T1.Teacher_ID  =  T2.Teacher_ID GROUP BY T1.Teacher_ID HAVING COUNT(*)  >=  2
medium gold: SELECT T2.age, t2.hometown FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID   =   T2.Teacher_ID GROUP BY T2.Name HAVING COUNT ( * )    > =    2

当前idx3
____________________
SELECT T2.Grade FROM teacher AS T1 JOIN course_arrange AS T2 ON T1.Teacher_ID  =  T2.Teacher_ID GROUP BY T1.Teacher_ID HAVING COUNT(*)  >=  2 ORDER BY T1.Age DESC LIMIT 1
SELECT t1.grade FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID   =   T2.Teacher_ID order by t2.age desc limit 1
连接数据库../datasets/cosql_dataset/database/course_teach/course_teach.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
hard pred: SELECT T2.Grade FROM teacher AS T1 JOIN course_arrange AS T2 ON T1.Teacher_ID  =  T2.Teacher_ID GROUP BY T1.Teacher_ID HAVING COUNT(*)  >=  2 ORDER BY T1.Age DESC LIMIT 1
hard gold: SELECT t1.grade FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID   =   T2.Teacher_ID order by t2.age desc limit 1

当前idx1
____________________
SELECT max(Num_of_Ticket) FROM visit
SELECT max ( num_of_ticket )  FROM visit
连接数据库../datasets/cosql_dataset/database/museum_visit/museum_visit.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT avg(Num_of_Ticket) FROM visit
SELECT avg ( num_of_ticket )  FROM visit
连接数据库../datasets/cosql_dataset/database/museum_visit/museum_visit.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx1
____________________
SELECT count(*) FROM ship
SELECT   count ( * )   from ship
连接数据库../datasets/cosql_dataset/database/battle_death/battle_death.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT name FROM ship
SELECT  name  from ship
连接数据库../datasets/cosql_dataset/database/battle_death/battle_death.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx1
____________________
SELECT Name FROM singer ORDER BY Age ASC LIMIT 1
SELECT Name FROM singer ORDER BY age LIMIT 1
连接数据库../datasets/cosql_dataset/database/concert_singer/concert_singer.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT Song_Name FROM singer WHERE Name = "Tribal King"
SELECT Song_Name FROM singer where name  =  'Tribal King'
连接数据库../datasets/cosql_dataset/database/concert_singer/concert_singer.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx3
____________________
SELECT Song_release_year FROM singer WHERE Name = "Tribal King"
SELECT song_release_year FROM singer where name  =  'Tribal King'
连接数据库../datasets/cosql_dataset/database/concert_singer/concert_singer.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx1
____________________
SELECT Name FROM country WHERE Continent = "Europe"
SELECT Name FROM country WHERE continent   =   "Europe"
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT Name FROM country WHERE Continent = "Europe" AND Population = 80000
SELECT Name FROM country WHERE continent   =   "Europe" AND Population   =   "80000"
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx1
____________________
SELECT Name FROM singer
SELECT Name FROM singer
连接数据库../datasets/cosql_dataset/database/singer/singer.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx1
____________________
SELECT department_name FROM Departments WHERE department_name LIKE '%computer%'
SELECT department_name FROM Departments WHERE department_name LIKE '%computer%'
连接数据库../datasets/cosql_dataset/database/student_transcripts_tracking/student_transcripts_tracking.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT department_description FROM Departments WHERE department_name LIKE '%computer%'
SELECT department_description FROM Departments WHERE department_name LIKE '%computer%'
连接数据库../datasets/cosql_dataset/database/student_transcripts_tracking/student_transcripts_tracking.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx3
____________________
SELECT department_id FROM Departments WHERE department_name LIKE '%computer%'
SELECT department_id FROM Departments WHERE department_name LIKE '%computer%'
连接数据库../datasets/cosql_dataset/database/student_transcripts_tracking/student_transcripts_tracking.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx4
____________________
SELECT * FROM Departments WHERE department_name = 'history'
SELECT other_details FROM Departments WHERE department_name  =  "history"
连接数据库../datasets/cosql_dataset/database/student_transcripts_tracking/student_transcripts_tracking.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
easy pred: SELECT * FROM Departments WHERE department_name = 'history'
easy gold: SELECT other_details FROM Departments WHERE department_name  =  "history"

当前idx1
____________________
SELECT Cylinders FROM cars_data
SELECT sum ( Cylinders )  FROM cars_data
连接数据库../datasets/cosql_dataset/database/car_1/car_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
easy pred: SELECT Cylinders FROM cars_data
easy gold: SELECT sum ( Cylinders )  FROM cars_data

当前idx2
____________________
SELECT Weight FROM cars_data ORDER BY Weight DESC LIMIT 1
SELECT Weight FROM cars_data ORDER BY Weight DESC LIMIT 1
连接数据库../datasets/cosql_dataset/database/car_1/car_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx3
____________________
SELECT Year FROM cars_data
SELECT count ( * )  FROM cars_data
连接数据库../datasets/cosql_dataset/database/car_1/car_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
easy pred: SELECT Year FROM cars_data
easy gold: SELECT count ( * )  FROM cars_data

当前idx4
____________________
SELECT Accelerate FROM cars_data ORDER BY Accelerate DESC LIMIT 1
SELECT accelerate FROM cars_data ORDER BY accelerate DESC LIMIT 1
连接数据库../datasets/cosql_dataset/database/car_1/car_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx>4
____________________
SELECT Edispl FROM cars_data ORDER BY Edispl DESC LIMIT 1
SELECT T1.horsepower FROM CARS_DATA AS T1 ORDER BY T1.accelerate DESC LIMIT 1
连接数据库../datasets/cosql_dataset/database/car_1/car_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT Edispl FROM cars_data ORDER BY Edispl DESC LIMIT 1
medium gold: SELECT T1.horsepower FROM CARS_DATA AS T1 ORDER BY T1.accelerate DESC LIMIT 1

当前idx1
____________________
SELECT age FROM singer WHERE name = "Joe Sharp"
SELECT age from singer where name  =  "Joe Sharp"
连接数据库../datasets/cosql_dataset/database/concert_singer/concert_singer.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT count(*) FROM singer WHERE country = "US"
select count ( * )  from singer where country  =  "United States"
连接数据库../datasets/cosql_dataset/database/concert_singer/concert_singer.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:True
当前idx3
____________________
SELECT count(*) FROM singer WHERE is_male = 1
select count ( * )  from singer where Is_male  =  "True"
连接数据库../datasets/cosql_dataset/database/concert_singer/concert_singer.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx1
____________________
SELECT T2.Model FROM car_makers AS T1 JOIN model_list AS T2 ON T1.Id  =  T2.Maker WHERE T1.Maker  =  "General Motors"
SELECT DISTINCT T2.Model FROM CAR_NAMES AS T1 JOIN MODEL_LIST AS T2 ON T1.Model   =   T2.Model JOIN CAR_MAKERS AS T3 ON T2.Maker   =   T3.Id JOIN CARS_DATA AS T4 ON T1.MakeId   =   T4.Id WHERE T3.FullName   =   'General Motors'
连接数据库../datasets/cosql_dataset/database/car_1/car_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
extra pred: SELECT T2.Model FROM car_makers AS T1 JOIN model_list AS T2 ON T1.Id  =  T2.Maker WHERE T1.Maker  =  "General Motors"
extra gold: SELECT DISTINCT T2.Model FROM CAR_NAMES AS T1 JOIN MODEL_LIST AS T2 ON T1.Model   =   T2.Model JOIN CAR_MAKERS AS T3 ON T2.Maker   =   T3.Id JOIN CARS_DATA AS T4 ON T1.MakeId   =   T4.Id WHERE T3.FullName   =   'General Motors'

当前idx2
eval_err_num:112
____________________
SELECT T2.Model FROM car_makers AS T1 JOIN model_list AS T2 ON T1.Id  =  T2.Maker JOIN cars_data AS T3 ON T2.Model  =  T3.Model WHERE T3.Weight  >  3500
SELECT DISTINCT T2.Model FROM CAR_NAMES AS T1 JOIN MODEL_LIST AS T2 ON T1.Model   =   T2.Model JOIN CAR_MAKERS AS T3 ON T2.Maker   =   T3.Id JOIN CARS_DATA AS T4 ON T1.MakeId   =   T4.Id WHERE T4.weight  >  3500
连接数据库../datasets/cosql_dataset/database/car_1/car_1.sqlite
执行第一个查询
执行出错: no such column: T3.Model
eval_exec:False
exact_score:0
extra pred: SELECT T2.Model FROM car_makers AS T1 JOIN model_list AS T2 ON T1.Id  =  T2.Maker JOIN cars_data AS T3 ON T2.Model  =  T3.Model WHERE T3.Weight  >  3500
extra gold: SELECT DISTINCT T2.Model FROM CAR_NAMES AS T1 JOIN MODEL_LIST AS T2 ON T1.Model   =   T2.Model JOIN CAR_MAKERS AS T3 ON T2.Maker   =   T3.Id JOIN CARS_DATA AS T4 ON T1.MakeId   =   T4.Id WHERE T4.weight  >  3500

当前idx3
eval_err_num:113
____________________
SELECT T2.Make, T2.Model FROM car_makers AS T1 JOIN model_list AS T2 ON T1.Id  =  T2.Maker JOIN cars_data AS T3 ON T2.Model  =  T3.Model ORDER BY T3.Horsepower DESC LIMIT 1
SELECT DISTINCT T2.Model, T3.maker FROM CAR_NAMES AS T1 JOIN MODEL_LIST AS T2 ON T1.Model   =   T2.Model JOIN CAR_MAKERS AS T3 ON T2.Maker   =   T3.Id JOIN CARS_DATA AS T4 ON T1.MakeId   =   T4.Id WHERE T3.FullName   =   'General Motors' order by t4.horsepower desc limit 1
连接数据库../datasets/cosql_dataset/database/car_1/car_1.sqlite
执行第一个查询
执行出错: no such column: T2.Make
eval_exec:False
exact_score:0
extra pred: SELECT T2.Make, T2.Model FROM car_makers AS T1 JOIN model_list AS T2 ON T1.Id  =  T2.Maker JOIN cars_data AS T3 ON T2.Model  =  T3.Model ORDER BY T3.Horsepower DESC LIMIT 1
extra gold: SELECT DISTINCT T2.Model, T3.maker FROM CAR_NAMES AS T1 JOIN MODEL_LIST AS T2 ON T1.Model   =   T2.Model JOIN CAR_MAKERS AS T3 ON T2.Maker   =   T3.Id JOIN CARS_DATA AS T4 ON T1.MakeId   =   T4.Id WHERE T3.FullName   =   'General Motors' order by t4.horsepower desc limit 1

当前idx4
eval_err_num:114
____________________
SELECT count(*) FROM car_makers AS T1 JOIN model_list AS T2 ON T1.Id  =  T2.Maker JOIN cars_data AS T3 ON T2.Model  =  T3.Model WHERE T1.Maker  =  "General Motors" AND T3.MPG  >  15
SELECT count ( * )  FROM CAR_NAMES AS T1 JOIN MODEL_LIST AS T2 ON T1.Model   =   T2.Model JOIN CAR_MAKERS AS T3 ON T2.Maker   =   T3.Id JOIN CARS_DATA AS T4 ON T1.MakeId   =   T4.Id WHERE T3.FullName   =   'General Motors' and t4.mpg > 15
连接数据库../datasets/cosql_dataset/database/car_1/car_1.sqlite
执行第一个查询
执行出错: no such column: T3.Model
eval_exec:False
exact_score:0
extra pred: SELECT count(*) FROM car_makers AS T1 JOIN model_list AS T2 ON T1.Id  =  T2.Maker JOIN cars_data AS T3 ON T2.Model  =  T3.Model WHERE T1.Maker  =  "General Motors" AND T3.MPG  >  15
extra gold: SELECT count ( * )  FROM CAR_NAMES AS T1 JOIN MODEL_LIST AS T2 ON T1.Model   =   T2.Model JOIN CAR_MAKERS AS T3 ON T2.Maker   =   T3.Id JOIN CARS_DATA AS T4 ON T1.MakeId   =   T4.Id WHERE T3.FullName   =   'General Motors' and t4.mpg > 15

当前idx>4
eval_err_num:115
____________________
SELECT T2.Make, T2.Model FROM car_makers AS T1 JOIN model_list AS T2 ON T1.Id  =  T2.Maker JOIN cars_data AS T3 ON T2.Model  =  T3.Model WHERE T1.Maker  =  "General Motors" ORDER BY T3.MPG DESC LIMIT 1
SELECT DISTINCT t1.make, t1.model FROM CAR_NAMES AS T1 JOIN MODEL_LIST AS T2 ON T1.Model   =   T2.Model JOIN CAR_MAKERS AS T3 ON T2.Maker   =   T3.Id JOIN CARS_DATA AS T4 ON T1.MakeId   =   T4.Id WHERE T3.FullName   =   'General Motors' order by t4.mpg desc limit 1
连接数据库../datasets/cosql_dataset/database/car_1/car_1.sqlite
执行第一个查询
执行出错: no such column: T2.Make
eval_exec:False
exact_score:0
extra pred: SELECT T2.Make, T2.Model FROM car_makers AS T1 JOIN model_list AS T2 ON T1.Id  =  T2.Maker JOIN cars_data AS T3 ON T2.Model  =  T3.Model WHERE T1.Maker  =  "General Motors" ORDER BY T3.MPG DESC LIMIT 1
extra gold: SELECT DISTINCT t1.make, t1.model FROM CAR_NAMES AS T1 JOIN MODEL_LIST AS T2 ON T1.Model   =   T2.Model JOIN CAR_MAKERS AS T3 ON T2.Maker   =   T3.Id JOIN CARS_DATA AS T4 ON T1.MakeId   =   T4.Id WHERE T3.FullName   =   'General Motors' order by t4.mpg desc limit 1

当前idx1
____________________
SELECT count(*) FROM Highschooler
SELECT count ( * )  FROM Highschooler
连接数据库../datasets/cosql_dataset/database/network_1/network_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT avg(grade) FROM Highschooler
SELECT avg ( grade )  FROM Highschooler
连接数据库../datasets/cosql_dataset/database/network_1/network_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx3
____________________
SELECT max(grade) FROM Highschooler
SELECT grade FROM Highschooler order by grade desc limit 1
连接数据库../datasets/cosql_dataset/database/network_1/network_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:0
medium pred: SELECT max(grade) FROM Highschooler
medium gold: SELECT grade FROM Highschooler order by grade desc limit 1

当前idx4
____________________
SELECT min(grade) FROM Highschooler
SELECT grade FROM Highschooler order by grade limit 1
连接数据库../datasets/cosql_dataset/database/network_1/network_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:0
medium pred: SELECT min(grade) FROM Highschooler
medium gold: SELECT grade FROM Highschooler order by grade limit 1

当前idx1
____________________
SELECT country FROM car_makers
SELECT T1.CountryName FROM countries AS T1 JOIN CAR_MAKERS AS T2 ON T1.countryId   =   T2.Country
连接数据库../datasets/cosql_dataset/database/car_1/car_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
easy pred: SELECT country FROM car_makers
easy gold: SELECT T1.CountryName FROM countries AS T1 JOIN CAR_MAKERS AS T2 ON T1.countryId   =   T2.Country

当前idx2
eval_err_num:116
____________________
SELECT country FROM continents WHERE ContId NOT IN (SELECT country FROM car_makers)
SELECT CountryName FROM countries EXCEPT SELECT T1.CountryName FROM countries AS T1 JOIN CAR_MAKERS AS T2 ON T1.countryId   =   T2.Country
连接数据库../datasets/cosql_dataset/database/car_1/car_1.sqlite
执行第一个查询
执行出错: no such column: country
eval_exec:False
exact_score:0
hard pred: SELECT country FROM continents WHERE ContId NOT IN (SELECT country FROM car_makers)
hard gold: SELECT CountryName FROM countries EXCEPT SELECT T1.CountryName FROM countries AS T1 JOIN CAR_MAKERS AS T2 ON T1.countryId   =   T2.Country

当前idx1
____________________
SELECT T1.student_id, T2.friend_id FROM Friend AS T1 JOIN Friend AS T2 ON T1.friend_id  =  T2.student_id
SELECT student_id, friend_id FROM Friend
连接数据库../datasets/cosql_dataset/database/network_1/network_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:False
medium pred: SELECT T1.student_id, T2.friend_id FROM Friend AS T1 JOIN Friend AS T2 ON T1.friend_id  =  T2.student_id
medium gold: SELECT student_id, friend_id FROM Friend

当前idx2
____________________
SELECT id FROM Highschooler
SELECT id FROM Highschooler
连接数据库../datasets/cosql_dataset/database/network_1/network_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx3
____________________
SELECT count(*) FROM Highschooler
SELECT count ( id )  FROM Highschooler
连接数据库../datasets/cosql_dataset/database/network_1/network_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
easy pred: SELECT count(*) FROM Highschooler
easy gold: SELECT count ( id )  FROM Highschooler

当前idx4
____________________
SELECT count(*) FROM Friend
SELECT count ( distinct friend_id )  FROM Friend
连接数据库../datasets/cosql_dataset/database/network_1/network_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
easy pred: SELECT count(*) FROM Friend
easy gold: SELECT count ( distinct friend_id )  FROM Friend

当前idx>4
____________________
SELECT id FROM Highschooler EXCEPT SELECT student_id FROM Friend
SELECT id FROM Highschooler EXCEPT SELECT friend_id FROM Friend
连接数据库../datasets/cosql_dataset/database/network_1/network_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
hard pred: SELECT id FROM Highschooler EXCEPT SELECT student_id FROM Friend
hard gold: SELECT id FROM Highschooler EXCEPT SELECT friend_id FROM Friend

当前idx>4
____________________
SELECT name, grade FROM Highschooler WHERE id = 1510
SELECT name, grade FROM Highschooler where id  =  1510
连接数据库../datasets/cosql_dataset/database/network_1/network_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx1
____________________
SELECT city FROM employee
SELECT city FROM employee
连接数据库../datasets/cosql_dataset/database/employee_hire_evaluation/employee_hire_evaluation.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT city FROM employee WHERE age > 30 GROUP BY city HAVING count(*) > 1
SELECT city FROM employee WHERE age  <  30 GROUP BY city HAVING count ( * )   >  1
连接数据库../datasets/cosql_dataset/database/employee_hire_evaluation/employee_hire_evaluation.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT city FROM employee WHERE age > 30 GROUP BY city HAVING count(*) > 1
medium gold: SELECT city FROM employee WHERE age  <  30 GROUP BY city HAVING count ( * )   >  1

当前idx3
____________________
SELECT age FROM employee WHERE city = "Bath"
SELECT Age FROM employee WHERE city  =  'Bath'
连接数据库../datasets/cosql_dataset/database/employee_hire_evaluation/employee_hire_evaluation.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx1
____________________
SELECT count(*) FROM Student WHERE age  >  20
SELECT count ( * )  FROM student WHERE age  >  20
连接数据库../datasets/cosql_dataset/database/pets_1/pets_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT count(*) FROM Student WHERE age  >  20 AND StuID IN (SELECT StuID FROM Has_Pet)
SELECT count ( * )  FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid   =   T2.stuid WHERE T1.age  >  20
连接数据库../datasets/cosql_dataset/database/pets_1/pets_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:0
medium pred: SELECT count(*) FROM Student WHERE age  >  20 AND StuID IN (SELECT StuID FROM Has_Pet)
medium gold: SELECT count ( * )  FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid   =   T2.stuid WHERE T1.age  >  20

当前idx1
____________________
SELECT loser_name FROM matches WHERE loser_age = 24.626967830300003
SELECT distinct loser_name from matches where loser_age  =  24.626967830300003
连接数据库../datasets/cosql_dataset/database/wta_1/wta_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:True
当前idx2
____________________
SELECT count(*) FROM matches AS T1 JOIN players AS T2 ON T1.loser_id = T2.player_id WHERE T2.first_name = "Petra" AND T2.last_name = "Kvitova"
SELECT count ( * )  from matches where loser_name  =  "Petra Kvitova" or winner_name  =  "Petra Kvitova"
连接数据库../datasets/cosql_dataset/database/wta_1/wta_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT count(*) FROM matches AS T1 JOIN players AS T2 ON T1.loser_id = T2.player_id WHERE T2.first_name = "Petra" AND T2.last_name = "Kvitova"
medium gold: SELECT count ( * )  from matches where loser_name  =  "Petra Kvitova" or winner_name  =  "Petra Kvitova"

当前idx3
____________________
SELECT * FROM players WHERE player_id IN (SELECT player_id FROM rankings WHERE ranking_points > 3500)
SELECT distinct loser_id from matches where loser_rank_points > 3500
连接数据库../datasets/cosql_dataset/database/wta_1/wta_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
easy pred: SELECT * FROM players WHERE player_id IN (SELECT player_id FROM rankings WHERE ranking_points > 3500)
easy gold: SELECT distinct loser_id from matches where loser_rank_points > 3500

当前idx4
eval_err_num:117
____________________
SELECT winner_name, winner_rank_points FROM rankings ORDER BY winner_rank_points DESC LIMIT 1
SELECT winner_name , winner_rank_points FROM matches GROUP BY winner_name ORDER BY count ( * )  DESC LIMIT 1
连接数据库../datasets/cosql_dataset/database/wta_1/wta_1.sqlite
执行第一个查询
执行出错: no such column: winner_name
eval_exec:False
exact_score:0
hard pred: SELECT winner_name, winner_rank_points FROM rankings ORDER BY winner_rank_points DESC LIMIT 1
hard gold: SELECT winner_name , winner_rank_points FROM matches GROUP BY winner_name ORDER BY count ( * )  DESC LIMIT 1

当前idx1
____________________
SELECT name FROM Highschooler
SELECT name FROM Highschooler
连接数据库../datasets/cosql_dataset/database/network_1/network_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
eval_err_num:118
____________________
SELECT name, count(*) AS likes FROM Likes GROUP BY student_id ORDER BY likes DESC LIMIT 1
SELECT count ( * )  from  Likes  group by student_id order by  count ( * )  desc limit  1
连接数据库../datasets/cosql_dataset/database/network_1/network_1.sqlite
执行第一个查询
执行出错: no such column: name
eval_exec:False
exact_score:0
hard pred: SELECT name, count(*) AS likes FROM Likes GROUP BY student_id ORDER BY likes DESC LIMIT 1
hard gold: SELECT count ( * )  from  Likes  group by student_id order by  count ( * )  desc limit  1

当前idx3
____________________
SELECT name FROM Highschooler ORDER BY count(*) DESC LIMIT 1
SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id ORDER BY count ( * )  DESC limit 1
连接数据库../datasets/cosql_dataset/database/network_1/network_1.sqlite
执行第一个查询
执行出错: misuse of aggregate: count()
eval_exec:False
exact_score:0
extra pred: SELECT name FROM Highschooler ORDER BY count(*) DESC LIMIT 1
extra gold: SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id ORDER BY count ( * )  DESC limit 1

当前idx1
____________________
SELECT feature_type_name FROM Ref_Feature_Types WHERE feature_type_code = "AirCon"
SELECT T2.feature_type_name FROM Other_Available_Features AS T1 JOIN Ref_Feature_Types AS T2 ON T1.feature_type_code   =   T2.feature_type_code WHERE T1.feature_name   =   "AirCon"
连接数据库../datasets/cosql_dataset/database/real_estate_properties/real_estate_properties.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT feature_type_name FROM Ref_Feature_Types WHERE feature_type_code = "AirCon"
medium gold: SELECT T2.feature_type_name FROM Other_Available_Features AS T1 JOIN Ref_Feature_Types AS T2 ON T1.feature_type_code   =   T2.feature_type_code WHERE T1.feature_name   =   "AirCon"

当前idx2
eval_err_num:119
____________________
SELECT feature_type_name, feature_type_description FROM Ref_Feature_Types WHERE feature_type_code = "AirCon"
select feature_description from Other_Available_Features  where feature_name  =  "AirCon"
连接数据库../datasets/cosql_dataset/database/real_estate_properties/real_estate_properties.sqlite
执行第一个查询
执行出错: no such column: feature_type_description
eval_exec:False
exact_score:0
easy pred: SELECT feature_type_name, feature_type_description FROM Ref_Feature_Types WHERE feature_type_code = "AirCon"
easy gold: select feature_description from Other_Available_Features  where feature_name  =  "AirCon"

当前idx3
____________________
SELECT count(DISTINCT feature_id) FROM Other_Available_Features
select count ( * )  from  ( select distinct feature_id from Other_Available_Features  ) 
连接数据库../datasets/cosql_dataset/database/real_estate_properties/real_estate_properties.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
easy pred: SELECT count(DISTINCT feature_id) FROM Other_Available_Features
easy gold: select count ( * )  from  ( select distinct feature_id from Other_Available_Features  ) 

当前idx4
____________________
SELECT feature_type_code FROM Ref_Feature_Types WHERE feature_type_name = "AirCon"
select feature_type_code from Other_Available_Features  where feature_name  =  "AirCon"
连接数据库../datasets/cosql_dataset/database/real_estate_properties/real_estate_properties.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
easy pred: SELECT feature_type_code FROM Ref_Feature_Types WHERE feature_type_name = "AirCon"
easy gold: select feature_type_code from Other_Available_Features  where feature_name  =  "AirCon"

当前idx1
____________________
SELECT transcript_date FROM Transcripts GROUP BY transcript_date ORDER BY count(*) ASC LIMIT 1
SELECT transcript_date FROM Transcripts group by transcript_date order by count ( * )  asc limit 1
连接数据库../datasets/cosql_dataset/database/student_transcripts_tracking/student_transcripts_tracking.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT count(*) FROM Transcripts WHERE transcript_date = '1975-05-06 12:04:47'
SELECT count ( * )  FROM Transcripts Where transcript_date  =  "1975-05-06 12:04:47"
连接数据库../datasets/cosql_dataset/database/student_transcripts_tracking/student_transcripts_tracking.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx3
____________________
SELECT transcript_date FROM Transcripts GROUP BY transcript_date ORDER BY count(*) DESC LIMIT 1
SELECT transcript_date FROM Transcripts GROUP BY transcript_date ORDER BY count ( * )  desc limit 1
连接数据库../datasets/cosql_dataset/database/student_transcripts_tracking/student_transcripts_tracking.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx1
____________________
SELECT DestAirport FROM flights WHERE Airline = (SELECT uid FROM airlines WHERE Airline = "United Airlines")
SELECT T2.DestAirport FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T1.Airline  =  "United Airlines"
连接数据库../datasets/cosql_dataset/database/flight_2/flight_2.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:0
medium pred: SELECT DestAirport FROM flights WHERE Airline = (SELECT uid FROM airlines WHERE Airline = "United Airlines")
medium gold: SELECT T2.DestAirport FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T1.Airline  =  "United Airlines"

当前idx2
____________________
SELECT COUNT(DISTINCT Airline) FROM flights WHERE SourceAirport = "APG"
SELECT COUNT ( T1.Airline )  FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.sourceAirport like "%APG%"
连接数据库../datasets/cosql_dataset/database/flight_2/flight_2.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
hard pred: SELECT COUNT(DISTINCT Airline) FROM flights WHERE SourceAirport = "APG"
hard gold: SELECT COUNT ( T1.Airline )  FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.sourceAirport like "%APG%"

当前idx3
____________________
SELECT FlightNo FROM flights WHERE Airline = (SELECT uid FROM airlines WHERE Airline = "Delta Airlines")
SELECT T2.FlightNo FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T1.Airline  =  "Delta Airlines"
连接数据库../datasets/cosql_dataset/database/flight_2/flight_2.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:0
medium pred: SELECT FlightNo FROM flights WHERE Airline = (SELECT uid FROM airlines WHERE Airline = "Delta Airlines")
medium gold: SELECT T2.FlightNo FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T1.Airline  =  "Delta Airlines"

当前idx1
____________________
SELECT COUNT(*) FROM car_makers WHERE Country = "USA"
SELECT count ( * )  FROM MODEL_LIST AS T1 JOIN CAR_MAKERS AS T2 ON T1.Maker   =   T2.Id JOIN COUNTRIES AS T3 ON T2.Country   =   T3.CountryId WHERE T3.CountryName   =   'usa'
连接数据库../datasets/cosql_dataset/database/car_1/car_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
hard pred: SELECT COUNT(*) FROM car_makers WHERE Country = "USA"
hard gold: SELECT count ( * )  FROM MODEL_LIST AS T1 JOIN CAR_MAKERS AS T2 ON T1.Maker   =   T2.Id JOIN COUNTRIES AS T3 ON T2.Country   =   T3.CountryId WHERE T3.CountryName   =   'usa'

当前idx2
____________________
SELECT Maker FROM car_makers WHERE Country = "USA"
SELECT distinct t1.maker FROM CAR_MAKERS AS T1 JOIN COUNTRIES AS T2 ON T1.Country   =   T2.CountryId WHERE T2.CountryName   =   'usa'
连接数据库../datasets/cosql_dataset/database/car_1/car_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT Maker FROM car_makers WHERE Country = "USA"
medium gold: SELECT distinct t1.maker FROM CAR_MAKERS AS T1 JOIN COUNTRIES AS T2 ON T1.Country   =   T2.CountryId WHERE T2.CountryName   =   'usa'

当前idx3
____________________
SELECT COUNT(*) FROM car_makers WHERE Maker = "Ford"
select count (  * )  from model_list as t1 join car_makers as t2 where t1.maker  =  t2.id and t2.maker  =  "ford"
连接数据库../datasets/cosql_dataset/database/car_1/car_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT COUNT(*) FROM car_makers WHERE Maker = "Ford"
medium gold: select count (  * )  from model_list as t1 join car_makers as t2 where t1.maker  =  t2.id and t2.maker  =  "ford"

当前idx1
____________________
SELECT T1.name FROM Highschooler AS T1 JOIN Likes AS T2 ON T1.id  =  T2.student_id GROUP BY T1.id HAVING COUNT(*)  >=  2
SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id   =   T2.id GROUP BY T1.student_id HAVING count ( * )    > =    2
连接数据库../datasets/cosql_dataset/database/network_1/network_1.sqlite
执行第一个查询
执行第二个查询
执行出错: near "=": syntax error
eval_exec:False
exact_score:True
当前idx2
____________________
SELECT T1.name FROM Highschooler AS T1 JOIN Likes AS T2 ON T1.id  =  T2.student_id GROUP BY T1.id HAVING COUNT(*)  =  1
SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id   =   T2.id GROUP BY T1.student_id HAVING count ( * )    > =    1
连接数据库../datasets/cosql_dataset/database/network_1/network_1.sqlite
执行第一个查询
执行第二个查询
执行出错: near "=": syntax error
eval_exec:False
exact_score:0
medium pred: SELECT T1.name FROM Highschooler AS T1 JOIN Likes AS T2 ON T1.id  =  T2.student_id GROUP BY T1.id HAVING COUNT(*)  =  1
medium gold: SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id   =   T2.id GROUP BY T1.student_id HAVING count ( * )    > =    1

当前idx3
____________________
SELECT T1.id FROM Highschooler AS T1 JOIN Likes AS T2 ON T1.id  =  T2.student_id GROUP BY T1.id HAVING COUNT(*)  =  1
SELECT T2.id FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id   =   T2.id GROUP BY T1.student_id HAVING count ( * )    > =    1
连接数据库../datasets/cosql_dataset/database/network_1/network_1.sqlite
执行第一个查询
执行第二个查询
执行出错: near "=": syntax error
eval_exec:False
exact_score:0
medium pred: SELECT T1.id FROM Highschooler AS T1 JOIN Likes AS T2 ON T1.id  =  T2.student_id GROUP BY T1.id HAVING COUNT(*)  =  1
medium gold: SELECT T2.id FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id   =   T2.id GROUP BY T1.student_id HAVING count ( * )    > =    1

当前idx1
____________________
SELECT DestAirport FROM flights WHERE Airline = 1
SELECT DestAirport FROM flights WHERE airline   =   "1"
连接数据库../datasets/cosql_dataset/database/flight_2/flight_2.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT Country FROM airlines WHERE Airline = 1
SELECT COUNTRY FROM AIRLINES WHERE AIRLINE   =   "United Airlines"
连接数据库../datasets/cosql_dataset/database/flight_2/flight_2.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:True
当前idx3
____________________
SELECT SourceAirport FROM flights WHERE DestAirport = "ASY"
SELECT SourceAirport FROM flights WHERE DestAirport   =   "ASY"
连接数据库../datasets/cosql_dataset/database/flight_2/flight_2.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx4
____________________
SELECT Country FROM airlines WHERE Airline = 2
SELECT country FROM Airlines WHERE Airline   =   "US Airways"
连接数据库../datasets/cosql_dataset/database/flight_2/flight_2.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:True
当前idx>4
____________________
SELECT Airline FROM airlines WHERE Country = "USA"
SELECT Airline FROM Airlines WHERE country   =   "USA"
连接数据库../datasets/cosql_dataset/database/flight_2/flight_2.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx1
____________________
SELECT avg(grade) FROM Highschooler
SELECT AVG ( grade )  FROM Highschooler
连接数据库../datasets/cosql_dataset/database/network_1/network_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT name FROM Highschooler WHERE name LIKE 'A%'
SELECT AVG ( grade )  FROM Highschooler
连接数据库../datasets/cosql_dataset/database/network_1/network_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
easy pred: SELECT name FROM Highschooler WHERE name LIKE 'A%'
easy gold: SELECT AVG ( grade )  FROM Highschooler

当前idx3
____________________
SELECT max(grade) FROM Highschooler
SELECT MAX ( grade )  FROM Highschooler
连接数据库../datasets/cosql_dataset/database/network_1/network_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx1
eval_err_num:120
____________________
SELECT T1.Name FROM poker_player AS T1 JOIN people AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T1.Final_Table_Made ASC
SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID   =   T2.People_ID ORDER BY T2.Final_Table_Made
连接数据库../datasets/cosql_dataset/database/poker_player/poker_player.sqlite
执行第一个查询
执行出错: no such column: T1.Name
eval_exec:False
exact_score:0
medium pred: SELECT T1.Name FROM poker_player AS T1 JOIN people AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T1.Final_Table_Made ASC
medium gold: SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID   =   T2.People_ID ORDER BY T2.Final_Table_Made

当前idx2
____________________
SELECT T2.Nationality FROM poker_player AS T1 JOIN people AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T1.Final_Table_Made ASC
SELECT T1.Nationality FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID   =   T2.People_ID ORDER BY T2.Final_Table_Made
连接数据库../datasets/cosql_dataset/database/poker_player/poker_player.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx3
____________________
SELECT T2.Name FROM poker_player AS T1 JOIN people AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T1.Earnings DESC LIMIT 1
SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID   =   T2.People_ID ORDER BY T2.Earnings desc limit 1
连接数据库../datasets/cosql_dataset/database/poker_player/poker_player.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx4
____________________
SELECT T2.Name FROM poker_player AS T1 JOIN people AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T1.Earnings ASC LIMIT 1
SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID   =   T2.People_ID ORDER BY T2.Earnings limit 1
连接数据库../datasets/cosql_dataset/database/poker_player/poker_player.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx>4
____________________
SELECT T1.Best_Finish FROM poker_player AS T1 JOIN people AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T1.Earnings DESC LIMIT 1
SELECT T2.Best_Finish FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID   =   T2.People_ID ORDER BY T2.Earnings  limit 1
连接数据库../datasets/cosql_dataset/database/poker_player/poker_player.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
hard pred: SELECT T1.Best_Finish FROM poker_player AS T1 JOIN people AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T1.Earnings DESC LIMIT 1
hard gold: SELECT T2.Best_Finish FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID   =   T2.People_ID ORDER BY T2.Earnings  limit 1

当前idx1
____________________
SELECT transcript_date FROM Transcripts
select transcript_date from Transcripts
连接数据库../datasets/cosql_dataset/database/student_transcripts_tracking/student_transcripts_tracking.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT transcript_date FROM Transcripts ORDER BY transcript_date DESC LIMIT 1
SELECT transcript_date FROM Transcripts ORDER BY transcript_date DESC LIMIT 1
连接数据库../datasets/cosql_dataset/database/student_transcripts_tracking/student_transcripts_tracking.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx3
____________________
SELECT transcript_date FROM Transcripts ORDER BY transcript_date DESC LIMIT 1
SELECT transcript_date FROM Transcripts ORDER BY transcript_date DESC LIMIT 1
连接数据库../datasets/cosql_dataset/database/student_transcripts_tracking/student_transcripts_tracking.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx1
____________________
SELECT * FROM Cartoon ORDER BY Original_air_date DESC LIMIT 1
SELECT Title FROM cartoon ORDER BY original_air_date LIMIT 1
连接数据库../datasets/cosql_dataset/database/tvshow/tvshow.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT * FROM Cartoon ORDER BY Original_air_date DESC LIMIT 1
medium gold: SELECT Title FROM cartoon ORDER BY original_air_date LIMIT 1

当前idx2
____________________
SELECT Channel FROM Cartoon ORDER BY Original_air_date DESC LIMIT 1
SELECT Channel FROM cartoon ORDER BY original_air_date LIMIT 1
连接数据库../datasets/cosql_dataset/database/tvshow/tvshow.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT Channel FROM Cartoon ORDER BY Original_air_date DESC LIMIT 1
medium gold: SELECT Channel FROM cartoon ORDER BY original_air_date LIMIT 1

当前idx3
____________________
SELECT Production_code, Channel FROM Cartoon ORDER BY Original_air_date DESC LIMIT 1
SELECT production_code ,  channel, original_air_date FROM cartoon ORDER BY original_air_date desc LIMIT 1
连接数据库../datasets/cosql_dataset/database/tvshow/tvshow.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT Production_code, Channel FROM Cartoon ORDER BY Original_air_date DESC LIMIT 1
medium gold: SELECT production_code ,  channel, original_air_date FROM cartoon ORDER BY original_air_date desc LIMIT 1

当前idx1
____________________
SELECT Version_Number FROM Templates WHERE Template_ID = 3
SELECT Version_Number from Templates where Template_ID  =  3
连接数据库../datasets/cosql_dataset/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT Document_Name FROM Documents WHERE Template_ID = 25
SELECT t2.Document_Name from Templates as t1 join Documents as t2 on t1.Template_ID  =  t2.Template_ID where t1.Template_ID  =  25
连接数据库../datasets/cosql_dataset/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:False
medium pred: SELECT Document_Name FROM Documents WHERE Template_ID = 25
medium gold: SELECT t2.Document_Name from Templates as t1 join Documents as t2 on t1.Template_ID  =  t2.Template_ID where t1.Template_ID  =  25

当前idx3
____________________
SELECT Template_Type_Code FROM Ref_Template_Types WHERE Template_Type_Code NOT IN (SELECT Template_Type_Code FROM Templates)
SELECT template_type_code FROM Templates EXCEPT SELECT template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id
连接数据库../datasets/cosql_dataset/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
hard pred: SELECT Template_Type_Code FROM Ref_Template_Types WHERE Template_Type_Code NOT IN (SELECT Template_Type_Code FROM Templates)
hard gold: SELECT template_type_code FROM Templates EXCEPT SELECT template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id

当前idx4
____________________
SELECT Version_Number FROM Templates WHERE Template_ID = 4
SELECT Version_Number from Templates where Template_ID  =  4
连接数据库../datasets/cosql_dataset/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx1
____________________
SELECT FlightNo FROM flights WHERE SourceAirport = "AHD"
SELECT FlightNo FROM FLIGHTS WHERE SourceAirport   =  "AHD"
连接数据库../datasets/cosql_dataset/database/flight_2/flight_2.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT T1.Airline FROM flights AS T1 JOIN airlines AS T2 ON T1.Airline = T2.uid WHERE T1.SourceAirport = "AHD" GROUP BY T1.Airline
SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid   =   T2.Airline WHERE T2.SourceAirport   =   " AHD"
连接数据库../datasets/cosql_dataset/database/flight_2/flight_2.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT T1.Airline FROM flights AS T1 JOIN airlines AS T2 ON T1.Airline = T2.uid WHERE T1.SourceAirport = "AHD" GROUP BY T1.Airline
medium gold: SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid   =   T2.Airline WHERE T2.SourceAirport   =   " AHD"

当前idx1
____________________
SELECT count(*) FROM stadium WHERE Average  >  1000
SELECT count ( * )  FROM stadium WHERE average > 1000
连接数据库../datasets/cosql_dataset/database/concert_singer/concert_singer.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT Name FROM stadium ORDER BY Average ASC LIMIT 1
SELECT name FROM stadium ORDER BY average LIMIT 1
连接数据库../datasets/cosql_dataset/database/concert_singer/concert_singer.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx3
____________________
SELECT Name FROM stadium ORDER BY Average DESC LIMIT 1
SELECT name FROM stadium ORDER BY average DESC LIMIT 1
连接数据库../datasets/cosql_dataset/database/concert_singer/concert_singer.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx1
____________________
SELECT T1.Name FROM country AS T1 JOIN country AS T2 ON T1.Code  !=  T2.Code WHERE T1.Continent  =  "Africa" AND T2.Continent  =  "Asia" AND T1.Population  <  T2.Population
SELECT Name FROM country WHERE Continent   =   "Africa"  AND population  <   ( SELECT min ( population )  FROM country WHERE Continent   =   "Asia" ) 
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
extra pred: SELECT T1.Name FROM country AS T1 JOIN country AS T2 ON T1.Code  !=  T2.Code WHERE T1.Continent  =  "Africa" AND T2.Continent  =  "Asia" AND T1.Population  <  T2.Population
extra gold: SELECT Name FROM country WHERE Continent   =   "Africa"  AND population  <   ( SELECT min ( population )  FROM country WHERE Continent   =   "Asia" ) 

当前idx2
____________________
SELECT T1.Name FROM country AS T1 JOIN country AS T2 ON T1.Code  !=  T2.Code WHERE T1.Continent  =  "Asia" AND T2.Continent  =  "Africa" AND T1.Population  <  T2.Population
SELECT Name FROM country WHERE Continent   =   "Asia"  AND population  <   ( SELECT min ( population )  FROM country WHERE Continent   =   "Africa" ) 
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
extra pred: SELECT T1.Name FROM country AS T1 JOIN country AS T2 ON T1.Code  !=  T2.Code WHERE T1.Continent  =  "Asia" AND T2.Continent  =  "Africa" AND T1.Population  <  T2.Population
extra gold: SELECT Name FROM country WHERE Continent   =   "Asia"  AND population  <   ( SELECT min ( population )  FROM country WHERE Continent   =   "Africa" ) 

当前idx3
____________________
SELECT T1.Name FROM country AS T1 JOIN country AS T2 ON T1.Code  !=  T2.Code WHERE T1.Continent  =  "Asia" AND T2.Continent  =  "Asia" AND T1.LifeExpectancy  >  T2.LifeExpectancy
SELECT Name FROM country WHERE Continent  =  "Asia" ORDER BY LifeExpectancy DESC LIMIT 1
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
hard pred: SELECT T1.Name FROM country AS T1 JOIN country AS T2 ON T1.Code  !=  T2.Code WHERE T1.Continent  =  "Asia" AND T2.Continent  =  "Asia" AND T1.LifeExpectancy  >  T2.LifeExpectancy
hard gold: SELECT Name FROM country WHERE Continent  =  "Asia" ORDER BY LifeExpectancy DESC LIMIT 1

当前idx1
____________________
SELECT count(*) FROM dogs WHERE dog_id NOT IN (SELECT dog_id FROM treatments)
SELECT count ( * )  FROM Dogs WHERE dog_id NOT IN  (  SELECT dog_id FROM Treatments  ) 
连接数据库../datasets/cosql_dataset/database/dog_kennels/dog_kennels.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT count(*) FROM dogs WHERE dog_id NOT IN (SELECT dog_id FROM treatments) AND abandoned_yn = "yes"
SELECT count ( * )  FROM Dogs WHERE abandoned_yn  =  1 AND dog_id NOT IN  (  SELECT dog_id FROM Treatments  ) 
连接数据库../datasets/cosql_dataset/database/dog_kennels/dog_kennels.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx3
eval_err_num:121
____________________
SELECT dog_id, treatment_type_code FROM dogs WHERE abandoned_yn = "yes"
SELECT T1.dog_id, T2.treatment_type_code FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id  =  T2.dog_id WHERE abandoned_yn  =  1
连接数据库../datasets/cosql_dataset/database/dog_kennels/dog_kennels.sqlite
执行第一个查询
执行出错: no such column: treatment_type_code
eval_exec:False
exact_score:0
medium pred: SELECT dog_id, treatment_type_code FROM dogs WHERE abandoned_yn = "yes"
medium gold: SELECT T1.dog_id, T2.treatment_type_code FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id  =  T2.dog_id WHERE abandoned_yn  =  1

当前idx1
____________________
SELECT age FROM employee WHERE name = "George Chuter"
select age from employee where name  =  "George Chuter"
连接数据库../datasets/cosql_dataset/database/employee_hire_evaluation/employee_hire_evaluation.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT city FROM employee WHERE employee_id = 1
select city from employee where name  =  "Lee Mears"
连接数据库../datasets/cosql_dataset/database/employee_hire_evaluation/employee_hire_evaluation.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
easy pred: SELECT city FROM employee WHERE employee_id = 1
easy gold: select city from employee where name  =  "Lee Mears"

当前idx1
____________________
SELECT degree_program_id, degree_summary_name FROM Degree_Programs GROUP BY degree_program_id ORDER BY count(*) DESC LIMIT 1
SELECT T1.degree_program_id ,  T1.degree_summary_name FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id   =   T2.degree_program_id GROUP BY T1.degree_program_id ORDER BY count ( * )  DESC LIMIT 1
连接数据库../datasets/cosql_dataset/database/student_transcripts_tracking/student_transcripts_tracking.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:False
extra pred: SELECT degree_program_id, degree_summary_name FROM Degree_Programs GROUP BY degree_program_id ORDER BY count(*) DESC LIMIT 1
extra gold: SELECT T1.degree_program_id ,  T1.degree_summary_name FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id   =   T2.degree_program_id GROUP BY T1.degree_program_id ORDER BY count ( * )  DESC LIMIT 1

当前idx2
____________________
SELECT degree_program_id, degree_summary_name FROM Degree_Programs GROUP BY degree_program_id ORDER BY count(*) DESC LIMIT 1
SELECT T1.degree_program_id  FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id   =   T2.degree_program_id GROUP BY T1.degree_program_id ORDER BY count ( * )  DESC LIMIT 1
连接数据库../datasets/cosql_dataset/database/student_transcripts_tracking/student_transcripts_tracking.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
extra pred: SELECT degree_program_id, degree_summary_name FROM Degree_Programs GROUP BY degree_program_id ORDER BY count(*) DESC LIMIT 1
extra gold: SELECT T1.degree_program_id  FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id   =   T2.degree_program_id GROUP BY T1.degree_program_id ORDER BY count ( * )  DESC LIMIT 1

当前idx3
____________________
SELECT count(*) FROM Student_Enrolment WHERE degree_program_id = 9
SELECT COUNT ( * )  FROM Student_Enrolment WHERE degree_program_id  =  "9"
连接数据库../datasets/cosql_dataset/database/student_transcripts_tracking/student_transcripts_tracking.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx4
____________________
SELECT count(*) FROM Student_Enrolment WHERE degree_program_id = 9 AND semester_id = 1
SELECT COUNT ( * )  FROM Degree_Programs WHERE degree_summary_name  =  "Master" AND degree_program_id  =  "9"
连接数据库../datasets/cosql_dataset/database/student_transcripts_tracking/student_transcripts_tracking.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:0
medium pred: SELECT count(*) FROM Student_Enrolment WHERE degree_program_id = 9 AND semester_id = 1
medium gold: SELECT COUNT ( * )  FROM Degree_Programs WHERE degree_summary_name  =  "Master" AND degree_program_id  =  "9"

当前idx>4
____________________
SELECT degree_program_id, degree_summary_name FROM Degree_Programs GROUP BY degree_program_id ORDER BY count(*) ASC LIMIT 1
SELECT T1.degree_program_id ,  T1.degree_summary_name FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id   =   T2.degree_program_id GROUP BY T1.degree_program_id ORDER BY count ( * )  limit 1
连接数据库../datasets/cosql_dataset/database/student_transcripts_tracking/student_transcripts_tracking.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:False
extra pred: SELECT degree_program_id, degree_summary_name FROM Degree_Programs GROUP BY degree_program_id ORDER BY count(*) ASC LIMIT 1
extra gold: SELECT T1.degree_program_id ,  T1.degree_summary_name FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id   =   T2.degree_program_id GROUP BY T1.degree_program_id ORDER BY count ( * )  limit 1

当前idx>4
____________________
SELECT count(*) FROM Student_Enrolment WHERE degree_program_id = 3
SELECT COUNT ( * )  FROM Student_Enrolment where degree_program_id  =  "3"
连接数据库../datasets/cosql_dataset/database/student_transcripts_tracking/student_transcripts_tracking.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx1
____________________
SELECT sum(cost_of_treatment) FROM Treatments
SELECT sum ( cost_of_treatment )  from treatments
连接数据库../datasets/cosql_dataset/database/dog_kennels/dog_kennels.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
eval_err_num:122
____________________
SELECT T1.first_name, T1.last_name FROM Treatments AS T1 JOIN Professionals AS T2 ON T1.professional_id  =  T2.professional_id ORDER BY cost_of_treatment ASC LIMIT 1
select T1.first_name, T1.last_name from Professionals as T1 join Treatments as T2 on T1.professional_id  =  T2.professional_id order by T2.cost_of_treatment asc limit 1
连接数据库../datasets/cosql_dataset/database/dog_kennels/dog_kennels.sqlite
执行第一个查询
执行出错: no such column: T1.first_name
eval_exec:False
exact_score:0
hard pred: SELECT T1.first_name, T1.last_name FROM Treatments AS T1 JOIN Professionals AS T2 ON T1.professional_id  =  T2.professional_id ORDER BY cost_of_treatment ASC LIMIT 1
hard gold: select T1.first_name, T1.last_name from Professionals as T1 join Treatments as T2 on T1.professional_id  =  T2.professional_id order by T2.cost_of_treatment asc limit 1

当前idx3
____________________
SELECT T1.dog_id FROM Treatments AS T1 JOIN Professionals AS T2 ON T1.professional_id  =  T2.professional_id ORDER BY cost_of_treatment ASC LIMIT 1
select dog_id from treatments order by cost_of_treatment asc limit 1
连接数据库../datasets/cosql_dataset/database/dog_kennels/dog_kennels.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:False
medium pred: SELECT T1.dog_id FROM Treatments AS T1 JOIN Professionals AS T2 ON T1.professional_id  =  T2.professional_id ORDER BY cost_of_treatment ASC LIMIT 1
medium gold: select dog_id from treatments order by cost_of_treatment asc limit 1

当前idx1
____________________
SELECT ContId, Continent FROM continents
SELECT ContId ,  Continent  FROM CONTINENTS
连接数据库../datasets/cosql_dataset/database/car_1/car_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT Continent, COUNT(*) FROM continents AS T1 JOIN countries AS T2 ON T1.ContId  =  T2.Continent GROUP BY T1.ContId
SELECT T1.Continent ,  count ( * )  FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId   =   T2.Continent GROUP BY T1.ContId
连接数据库../datasets/cosql_dataset/database/car_1/car_1.sqlite
执行第一个查询
执行出错: ambiguous column name: Continent
eval_exec:False
exact_score:True
当前idx3
____________________
SELECT Continent FROM continents AS T1 JOIN countries AS T2 ON T1.ContId  =  T2.Continent GROUP BY T1.ContId ORDER BY COUNT(*) DESC LIMIT 1
SELECT T1.Continent ,  count ( * )  FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId   =   T2.Continent GROUP BY T1.ContId ORDER BY count ( * )  DESC LIMIT 1
连接数据库../datasets/cosql_dataset/database/car_1/car_1.sqlite
执行第一个查询
执行出错: ambiguous column name: Continent
eval_exec:False
exact_score:0
extra pred: SELECT Continent FROM continents AS T1 JOIN countries AS T2 ON T1.ContId  =  T2.Continent GROUP BY T1.ContId ORDER BY COUNT(*) DESC LIMIT 1
extra gold: SELECT T1.Continent ,  count ( * )  FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId   =   T2.Continent GROUP BY T1.ContId ORDER BY count ( * )  DESC LIMIT 1

当前idx1
____________________
SELECT t1.document_id, t1.document_name, count(*) FROM documents AS t1 JOIN paragraphs AS t2 ON t1.document_id  =  t2.document_id GROUP BY t1.document_id, t1.document_name
SELECT T1.document_id ,  T2.document_name ,  count ( * )  FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id   =   T2.document_id GROUP BY T1.document_id
连接数据库../datasets/cosql_dataset/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:0
medium pred: SELECT t1.document_id, t1.document_name, count(*) FROM documents AS t1 JOIN paragraphs AS t2 ON t1.document_id  =  t2.document_id GROUP BY t1.document_id, t1.document_name
medium gold: SELECT T1.document_id ,  T2.document_name ,  count ( * )  FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id   =   T2.document_id GROUP BY T1.document_id

当前idx2
____________________
SELECT t2.paragraph_text FROM documents AS t1 JOIN paragraphs AS t2 ON t1.document_id  =  t2.document_id
SELECT Paragraph_Text FROM Paragraphs
连接数据库../datasets/cosql_dataset/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:False
easy pred: SELECT t2.paragraph_text FROM documents AS t1 JOIN paragraphs AS t2 ON t1.document_id  =  t2.document_id
easy gold: SELECT Paragraph_Text FROM Paragraphs

当前idx3
____________________
SELECT t2.paragraph_text FROM documents AS t1 JOIN paragraphs AS t2 ON t1.document_id  =  t2.document_id WHERE t1.other_details != "NULL"
SELECT Paragraph_Text FROM Paragraphs WHERE Other_Details ! =  "NULL"
连接数据库../datasets/cosql_dataset/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite
执行第一个查询
执行第二个查询
执行出错: unrecognized token: "!"
eval_exec:False
exact_score:0
easy pred: SELECT t2.paragraph_text FROM documents AS t1 JOIN paragraphs AS t2 ON t1.document_id  =  t2.document_id WHERE t1.other_details != "NULL"
easy gold: SELECT Paragraph_Text FROM Paragraphs WHERE Other_Details ! =  "NULL"

当前idx1
____________________
SELECT Title FROM Cartoon WHERE Written_by = "Todd Casey"
select * from Cartoon where Written_by  =  'Todd Casey'
连接数据库../datasets/cosql_dataset/database/tvshow/tvshow.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
easy pred: SELECT Title FROM Cartoon WHERE Written_by = "Todd Casey"
easy gold: select * from Cartoon where Written_by  =  'Todd Casey'

当前idx2
____________________
SELECT Title FROM Cartoon WHERE Written_by = "Todd Casey" AND Title LIKE "%cartoon%"
select Title from Cartoon where Written_by  =  'Todd Casey'
连接数据库../datasets/cosql_dataset/database/tvshow/tvshow.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
easy pred: SELECT Title FROM Cartoon WHERE Written_by = "Todd Casey" AND Title LIKE "%cartoon%"
easy gold: select Title from Cartoon where Written_by  =  'Todd Casey'

当前idx3
____________________
SELECT Title, Channel FROM Cartoon WHERE Written_by = "Todd Casey" AND Title LIKE "%cartoon%"
SELECT T1.id FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id  =  T2.Channel WHERE T2.written_by  =  'Todd Casey'
连接数据库../datasets/cosql_dataset/database/tvshow/tvshow.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT Title, Channel FROM Cartoon WHERE Written_by = "Todd Casey" AND Title LIKE "%cartoon%"
medium gold: SELECT T1.id FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id  =  T2.Channel WHERE T2.written_by  =  'Todd Casey'

当前idx1
____________________
SELECT SUM(Total_spent) FROM visit WHERE visitor_ID IN (SELECT ID FROM visitor WHERE Level_of_membership = 1)
SELECT sum ( t2.Total_spent )  FROM visitor AS t1 JOIN visit AS t2 ON t1.id   =   t2.visitor_id WHERE t1.Level_of_membership   =   1
连接数据库../datasets/cosql_dataset/database/museum_visit/museum_visit.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:0
medium pred: SELECT SUM(Total_spent) FROM visit WHERE visitor_ID IN (SELECT ID FROM visitor WHERE Level_of_membership = 1)
medium gold: SELECT sum ( t2.Total_spent )  FROM visitor AS t1 JOIN visit AS t2 ON t1.id   =   t2.visitor_id WHERE t1.Level_of_membership   =   1

当前idx2
____________________
SELECT COUNT(*) FROM visitor WHERE Level_of_membership = 1
SELECT COUNT ( id )  FROM visitor WHERE Level_of_membership  =  1
连接数据库../datasets/cosql_dataset/database/museum_visit/museum_visit.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
easy pred: SELECT COUNT(*) FROM visitor WHERE Level_of_membership = 1
easy gold: SELECT COUNT ( id )  FROM visitor WHERE Level_of_membership  =  1

当前idx3
____________________
SELECT COUNT(DISTINCT Level_of_membership) FROM visitor
SELECT COUNT ( DISTINCT level_of_membership )  FROM visitor
连接数据库../datasets/cosql_dataset/database/museum_visit/museum_visit.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx4
____________________
SELECT Name FROM visitor WHERE Level_of_membership = 1
SELECT name FROM visitor WHERE Level_of_membership  =  1
连接数据库../datasets/cosql_dataset/database/museum_visit/museum_visit.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx>4
eval_err_num:123
____________________
SELECT Level_of_membership, SUM(Total_spent) FROM visit GROUP BY Level_of_membership
SELECT  t1.level_of_membership, sum ( Total_spent )  FROM visitor AS t1 JOIN visit AS t2 ON t1.id   =   t2.visitor_id group by Level_of_membership
连接数据库../datasets/cosql_dataset/database/museum_visit/museum_visit.sqlite
执行第一个查询
执行出错: no such column: Level_of_membership
eval_exec:False
exact_score:0
medium pred: SELECT Level_of_membership, SUM(Total_spent) FROM visit GROUP BY Level_of_membership
medium gold: SELECT  t1.level_of_membership, sum ( Total_spent )  FROM visitor AS t1 JOIN visit AS t2 ON t1.id   =   t2.visitor_id group by Level_of_membership

当前idx1
____________________
SELECT first_name FROM players WHERE player_id = 200001
SELECT first_name FROM players WHERE player_id  =  200001
连接数据库../datasets/cosql_dataset/database/wta_1/wta_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT birth_date FROM players WHERE player_id = 200001
SELECT birth_date FROM players WHERE player_id  =  200001
连接数据库../datasets/cosql_dataset/database/wta_1/wta_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx3
____________________
SELECT country_code FROM players WHERE player_id = 200003
SELECT country_code FROM players WHERE player_id  =  200003
连接数据库../datasets/cosql_dataset/database/wta_1/wta_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx4
____________________
SELECT last_name FROM players WHERE player_id = 200003
SELECT last_name FROM players WHERE player_id  =  200003
连接数据库../datasets/cosql_dataset/database/wta_1/wta_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx1
____________________
SELECT count(*) FROM Paragraphs WHERE Document_ID = (SELECT Document_ID FROM Documents WHERE Document_Name = 'Welcome to NY')
SELECT count ( * )  FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id   =   T2.document_id WHERE T2.Document_Name   =   'Welcome to NY'
连接数据库../datasets/cosql_dataset/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:0
medium pred: SELECT count(*) FROM Paragraphs WHERE Document_ID = (SELECT Document_ID FROM Documents WHERE Document_Name = 'Welcome to NY')
medium gold: SELECT count ( * )  FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id   =   T2.document_id WHERE T2.Document_Name   =   'Welcome to NY'

当前idx2
____________________
SELECT Paragraph_Text FROM Paragraphs WHERE Document_ID = (SELECT Document_ID FROM Documents WHERE Document_Name = 'Welcome to NY')
SELECT T1.paragraph_text FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id   =   T2.document_id WHERE T2.Document_Name   =   'Welcome to NY'
连接数据库../datasets/cosql_dataset/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:0
medium pred: SELECT Paragraph_Text FROM Paragraphs WHERE Document_ID = (SELECT Document_ID FROM Documents WHERE Document_Name = 'Welcome to NY')
medium gold: SELECT T1.paragraph_text FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id   =   T2.document_id WHERE T2.Document_Name   =   'Welcome to NY'

当前idx3
____________________
SELECT Paragraph_ID FROM Paragraphs WHERE Document_ID = (SELECT Document_ID FROM Documents WHERE Document_Name = 'Welcome to NY')
SELECT T1.paragraph_id FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id   =   T2.document_id WHERE T2.Document_Name   =   'Welcome to NY'
连接数据库../datasets/cosql_dataset/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:0
medium pred: SELECT Paragraph_ID FROM Paragraphs WHERE Document_ID = (SELECT Document_ID FROM Documents WHERE Document_Name = 'Welcome to NY')
medium gold: SELECT T1.paragraph_id FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id   =   T2.document_id WHERE T2.Document_Name   =   'Welcome to NY'

当前idx1
eval_err_num:124
____________________
SELECT T1.first_name, SUM(T2.ranking_points) AS total_ranking_points FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id GROUP BY T1.player_id
SELECT sum ( ranking_points )  ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id   =   T2.player_id GROUP BY T1.first_name
连接数据库../datasets/cosql_dataset/database/wta_1/wta_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT T1.first_name, SUM(T2.ranking_points) AS total_ranking_points FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id GROUP BY T1.player_id
medium gold: SELECT sum ( ranking_points )  ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id   =   T2.player_id GROUP BY T1.first_name

当前idx2
____________________
SELECT T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id ORDER BY T2.ranking_points DESC LIMIT 1
SELECT distinct T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id   =   T2.player_id WHERE T2.ranking  =  1
连接数据库../datasets/cosql_dataset/database/wta_1/wta_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id ORDER BY T2.ranking_points DESC LIMIT 1
medium gold: SELECT distinct T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id   =   T2.player_id WHERE T2.ranking  =  1

当前idx1
____________________
SELECT Name FROM country WHERE Continent  =  "Africa" ORDER BY Population DESC LIMIT 1
SELECT Name FROM country WHERE Continent  =  "Africa" order by population desc limit 1
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT Population FROM country WHERE Name  =  "Nigeria"
select population from country where Name  =  'Nigeria'
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx3
____________________
SELECT Name FROM country WHERE Continent  =  "Asia" ORDER BY Population DESC LIMIT 1
SELECT Name FROM country WHERE Continent   =   "Asia"  order by population desc limit 1
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx4
____________________
SELECT Population FROM country WHERE Name  =  "China"
SELECT population from country where name  =  'China'
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx>4
____________________
SELECT COUNT(*) FROM country WHERE Continent  =  "Asia" AND Population  >  (SELECT Population FROM country WHERE Name  =  "Nigeria")
SELECT count ( Name )  FROM country WHERE Continent   =   "Asia"  AND population >  ( SELECT population FROM country WHERE name  =  'Nigeria' ) 
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
extra pred: SELECT COUNT(*) FROM country WHERE Continent  =  "Asia" AND Population  >  (SELECT Population FROM country WHERE Name  =  "Nigeria")
extra gold: SELECT count ( Name )  FROM country WHERE Continent   =   "Asia"  AND population >  ( SELECT population FROM country WHERE name  =  'Nigeria' ) 

当前idx>4
____________________
SELECT Name FROM country WHERE Continent  =  "Asia" AND Population  >  (SELECT Population FROM country WHERE Name  =  "Nigeria")
SELECT Name FROM country WHERE Continent   =   "Asia"  AND population >  ( SELECT population FROM country WHERE name  =  'Nigeria' ) 
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx1
____________________
SELECT DISTINCT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  'Chinese' AND T1.Continent  =  'Asia'
SELECT DISTINCT T3.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code   =   T2.CountryCode JOIN city AS T3 ON T1.Code   =   T3.CountryCode WHERE T1.Continent   =   "Asia"
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
hard pred: SELECT DISTINCT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  'Chinese' AND T1.Continent  =  'Asia'
hard gold: SELECT DISTINCT T3.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code   =   T2.CountryCode JOIN city AS T3 ON T1.Code   =   T3.CountryCode WHERE T1.Continent   =   "Asia"

当前idx2
____________________
SELECT DISTINCT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  'Chinese' AND T1.Continent  =  'Asia' AND T1.Population  >  200000
SELECT DISTINCT T3.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code   =   T2.CountryCode JOIN city AS T3 ON T1.Code   =   T3.CountryCode WHERE T3.Population >200000
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
hard pred: SELECT DISTINCT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  'Chinese' AND T1.Continent  =  'Asia' AND T1.Population  >  200000
hard gold: SELECT DISTINCT T3.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code   =   T2.CountryCode JOIN city AS T3 ON T1.Code   =   T3.CountryCode WHERE T3.Population >200000

当前idx3
____________________
SELECT avg(T1.Population) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  'Chinese' AND T1.Continent  =  'Asia'
SELECT avg ( T3.Population )  FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code   =   T2.CountryCode JOIN city AS T3 ON T1.Code   =   T3.CountryCode WHERE T1.Name  =  "China"
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
hard pred: SELECT avg(T1.Population) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  'Chinese' AND T1.Continent  =  'Asia'
hard gold: SELECT avg ( T3.Population )  FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code   =   T2.CountryCode JOIN city AS T3 ON T1.Code   =   T3.CountryCode WHERE T1.Name  =  "China"

当前idx4
____________________
SELECT avg(T1.Population) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  'Dutch'
SELECT avg ( T3.Population )  FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code   =   T2.CountryCode JOIN city AS T3 ON T1.Code   =   T3.CountryCode WHERE T2.Language  =  "Dutch"
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
hard pred: SELECT avg(T1.Population) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  'Dutch'
hard gold: SELECT avg ( T3.Population )  FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code   =   T2.CountryCode JOIN city AS T3 ON T1.Code   =   T3.CountryCode WHERE T2.Language  =  "Dutch"

当前idx1
____________________
SELECT count(*) FROM visitor
SELECT count ( * )  from visitor
连接数据库../datasets/cosql_dataset/database/museum_visit/museum_visit.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT count(*) FROM visitor WHERE level_of_membership > 4
SELECT count ( * )  FROM visitor WHERE Level_of_membership  >  4
连接数据库../datasets/cosql_dataset/database/museum_visit/museum_visit.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx3
____________________
SELECT name FROM visitor WHERE level_of_membership > 4
SELECT name FROM visitor WHERE Level_of_membership  >  4
连接数据库../datasets/cosql_dataset/database/museum_visit/museum_visit.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx4
____________________
SELECT name, level_of_membership FROM visitor WHERE level_of_membership > 4 ORDER BY level_of_membership DESC
SELECT name FROM visitor WHERE Level_of_membership  >  4 ORDER BY Level_of_membership DESC
连接数据库../datasets/cosql_dataset/database/museum_visit/museum_visit.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT name, level_of_membership FROM visitor WHERE level_of_membership > 4 ORDER BY level_of_membership DESC
medium gold: SELECT name FROM visitor WHERE Level_of_membership  >  4 ORDER BY Level_of_membership DESC

当前idx1
____________________
SELECT T1.first_name, AVG(T2.ranking) FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id GROUP BY T1.first_name
SELECT avg ( ranking )  ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id   =   T2.player_id GROUP BY T1.player_id
连接数据库../datasets/cosql_dataset/database/wta_1/wta_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT T1.first_name, AVG(T2.ranking) FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id GROUP BY T1.first_name
medium gold: SELECT avg ( ranking )  ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id   =   T2.player_id GROUP BY T1.player_id

当前idx2
____________________
SELECT T1.first_name, T1.last_name, AVG(T2.ranking) FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id GROUP BY T1.first_name, T1.last_name
SELECT avg ( ranking )  ,  T1.first_name, t1.last_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id   =   T2.player_id GROUP BY T1.player_id
连接数据库../datasets/cosql_dataset/database/wta_1/wta_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT T1.first_name, T1.last_name, AVG(T2.ranking) FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id GROUP BY T1.first_name, T1.last_name
medium gold: SELECT avg ( ranking )  ,  T1.first_name, t1.last_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id   =   T2.player_id GROUP BY T1.player_id

当前idx3
____________________
SELECT T1.first_name, T1.last_name FROM players AS T1 WHERE T1.hand  =  "L"
SELECT  T1.first_name, t1.last_name FROM players AS T1 where t1.hand  =  "L"
连接数据库../datasets/cosql_dataset/database/wta_1/wta_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx4
____________________
SELECT T1.last_name FROM players AS T1 WHERE T1.hand  =  "L"
SELECT T1.last_name FROM players AS T1 where t1.hand  =  "L"
连接数据库../datasets/cosql_dataset/database/wta_1/wta_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx>4
____________________
SELECT T1.last_name, AVG(T2.ranking) FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id WHERE T1.hand  =  "L" GROUP BY T1.last_name
SELECT avg ( ranking )  ,  T1.last_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id   =   T2.player_id where T1.hand  =  "L" GROUP BY T1.first_name
连接数据库../datasets/cosql_dataset/database/wta_1/wta_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
hard pred: SELECT T1.last_name, AVG(T2.ranking) FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id WHERE T1.hand  =  "L" GROUP BY T1.last_name
hard gold: SELECT avg ( ranking )  ,  T1.last_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id   =   T2.player_id where T1.hand  =  "L" GROUP BY T1.first_name

当前idx1
____________________
SELECT avg(grade) FROM highschooler WHERE id IN (SELECT student_id FROM friend)
SELECT avg ( grade )  FROM Highschooler WHERE id IN  ( SELECT T1.student_id FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id   =   T2.id ) 
连接数据库../datasets/cosql_dataset/database/network_1/network_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:0
hard pred: SELECT avg(grade) FROM highschooler WHERE id IN (SELECT student_id FROM friend)
hard gold: SELECT avg ( grade )  FROM Highschooler WHERE id IN  ( SELECT T1.student_id FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id   =   T2.id ) 

当前idx2
____________________
SELECT name FROM highschooler WHERE id NOT IN (SELECT student_id FROM friend)
SELECT * FROM Highschooler WHERE id not IN  ( SELECT student_id FROM Friend ) 
连接数据库../datasets/cosql_dataset/database/network_1/network_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
hard pred: SELECT name FROM highschooler WHERE id NOT IN (SELECT student_id FROM friend)
hard gold: SELECT * FROM Highschooler WHERE id not IN  ( SELECT student_id FROM Friend ) 

当前idx3
____________________
SELECT grade FROM highschooler WHERE id NOT IN (SELECT student_id FROM friend)
SELECT grade FROM Highschooler WHERE id not IN  ( SELECT student_id FROM Friend ) 
连接数据库../datasets/cosql_dataset/database/network_1/network_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx4
____________________
SELECT name FROM highschooler WHERE id NOT IN (SELECT student_id FROM friend)
SELECT name FROM Highschooler WHERE id not IN  ( SELECT student_id FROM Friend ) 
连接数据库../datasets/cosql_dataset/database/network_1/network_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx>4
____________________
SELECT name FROM highschooler WHERE id IN (SELECT student_id FROM friend)
SELECT name FROM Highschooler WHERE id IN  ( SELECT student_id FROM Friend ) 
连接数据库../datasets/cosql_dataset/database/network_1/network_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx1
____________________
SELECT count(*) FROM Highschooler
select count ( * )  from highschooler
连接数据库../datasets/cosql_dataset/database/network_1/network_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT count(*) FROM Highschooler WHERE grade = 9
SELECT count ( * )  FROM highschooler WHERE grade   =   9
连接数据库../datasets/cosql_dataset/database/network_1/network_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx3
____________________
SELECT grade FROM Highschooler WHERE name = "John"
SELECT grade from highschooler where name  =  "Kyle"
连接数据库../datasets/cosql_dataset/database/network_1/network_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx1
____________________
SELECT Name FROM stadium
SELECT name FROM stadium WHERE stadium_id NOT IN  ( SELECT stadium_id FROM concert ) 
连接数据库../datasets/cosql_dataset/database/concert_singer/concert_singer.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
hard pred: SELECT Name FROM stadium
hard gold: SELECT name FROM stadium WHERE stadium_id NOT IN  ( SELECT stadium_id FROM concert ) 

当前idx2
____________________
SELECT Name FROM stadium ORDER BY Capacity DESC LIMIT 1
SELECT name FROM stadium ORDER BY Highest DESC LIMIT 1
连接数据库../datasets/cosql_dataset/database/concert_singer/concert_singer.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT Name FROM stadium ORDER BY Capacity DESC LIMIT 1
medium gold: SELECT name FROM stadium ORDER BY Highest DESC LIMIT 1

当前idx1
____________________
SELECT Citizenship FROM singer GROUP BY Citizenship ORDER BY COUNT(*) DESC LIMIT 1
SELECT Citizenship FROM singer GROUP BY Citizenship ORDER BY COUNT ( * )  DESC LIMIT 1
连接数据库../datasets/cosql_dataset/database/singer/singer.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT Citizenship FROM singer GROUP BY Citizenship ORDER BY COUNT(*) ASC LIMIT 1
SELECT Citizenship FROM singer GROUP BY Citizenship ORDER BY COUNT ( * )  ASC LIMIT 1
连接数据库../datasets/cosql_dataset/database/singer/singer.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx3
____________________
SELECT Name FROM singer WHERE Citizenship = "Australia"
SELECT name FROM singer where Citizenship = 'Australia'
连接数据库../datasets/cosql_dataset/database/singer/singer.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx1
____________________
SELECT Nationality FROM people WHERE People_ID = 1
SELECT Nationality FROM people where People_ID = 1
连接数据库../datasets/cosql_dataset/database/poker_player/poker_player.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT Birth_Date FROM people WHERE Name = "Teodor Salparov"
SELECT Birth_Date FROM people where Name = "Teodor Salparov"
连接数据库../datasets/cosql_dataset/database/poker_player/poker_player.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx3
____________________
SELECT Earnings FROM poker_player WHERE People_ID = 5
SELECT Earnings FROM poker_player where People_ID   =   5
连接数据库../datasets/cosql_dataset/database/poker_player/poker_player.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx4
eval_err_num:125
____________________
SELECT Money_Rank FROM poker_player ORDER BY Height DESC LIMIT 1
SELECT T2.Money_Rank FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID   =   T2.People_ID ORDER BY T1.Height DESC LIMIT 1
连接数据库../datasets/cosql_dataset/database/poker_player/poker_player.sqlite
执行第一个查询
执行出错: no such column: Height
eval_exec:False
exact_score:0
hard pred: SELECT Money_Rank FROM poker_player ORDER BY Height DESC LIMIT 1
hard gold: SELECT T2.Money_Rank FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID   =   T2.People_ID ORDER BY T1.Height DESC LIMIT 1

当前idx1
eval_err_num:126
____________________
SELECT T1.department_name, T1.department_id FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id GROUP BY T1.department_id ORDER BY count(*) ASC LIMIT 1
SELECT T1.degree_summary_name FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id   =   T2.degree_program_id GROUP BY T1.degree_summary_name ORDER BY count ( * )  DESC LIMIT 1
连接数据库../datasets/cosql_dataset/database/student_transcripts_tracking/student_transcripts_tracking.sqlite
执行第一个查询
执行出错: no such column: T1.department_name
eval_exec:False
exact_score:0
extra pred: SELECT T1.department_name, T1.department_id FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id GROUP BY T1.department_id ORDER BY count(*) ASC LIMIT 1
extra gold: SELECT T1.degree_summary_name FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id   =   T2.degree_program_id GROUP BY T1.degree_summary_name ORDER BY count ( * )  DESC LIMIT 1

当前idx2
eval_err_num:127
____________________
SELECT T1.department_id FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id WHERE T1.department_name  =  "Architecto"
SELECT degree_program_id from Degree_Programs where degree_summary_description  =  'architecto'
连接数据库../datasets/cosql_dataset/database/student_transcripts_tracking/student_transcripts_tracking.sqlite
执行第一个查询
执行出错: no such column: T1.department_name
eval_exec:False
exact_score:0
easy pred: SELECT T1.department_id FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id WHERE T1.department_name  =  "Architecto"
easy gold: SELECT degree_program_id from Degree_Programs where degree_summary_description  =  'architecto'

当前idx1
eval_err_num:128
____________________
SELECT T1.department_name FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.department_id  =  T2.degree_program_id JOIN Students AS T3 ON T2.student_id  =  T3.student_id WHERE T3.first_name  =  "Timmothy"
SELECT T2.degree_program_id FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id WHERE T1.first_name  =  "Timmothy"
连接数据库../datasets/cosql_dataset/database/student_transcripts_tracking/student_transcripts_tracking.sqlite
执行第一个查询
执行出错: no such column: T1.department_name
eval_exec:False
exact_score:0
medium pred: SELECT T1.department_name FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.department_id  =  T2.degree_program_id JOIN Students AS T3 ON T2.student_id  =  T3.student_id WHERE T3.first_name  =  "Timmothy"
medium gold: SELECT T2.degree_program_id FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id WHERE T1.first_name  =  "Timmothy"

当前idx2
____________________
SELECT T3.date_first_registered, T3.date_left FROM Students AS T3 JOIN Student_Enrolment AS T2 ON T3.student_id  =  T2.student_id WHERE T3.first_name  =  "Timmothy"
SELECT date_first_registered, date_left FROM Students WHERE first_name  =  "Timmothy"
连接数据库../datasets/cosql_dataset/database/student_transcripts_tracking/student_transcripts_tracking.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:False
medium pred: SELECT T3.date_first_registered, T3.date_left FROM Students AS T3 JOIN Student_Enrolment AS T2 ON T3.student_id  =  T2.student_id WHERE T3.first_name  =  "Timmothy"
medium gold: SELECT date_first_registered, date_left FROM Students WHERE first_name  =  "Timmothy"

当前idx3
____________________
SELECT T3.middle_name FROM Students AS T3 JOIN Student_Enrolment AS T2 ON T3.student_id  =  T2.student_id WHERE T3.email_address  =  "johns.unique@example.net"
SELECT middle_name FROM Students WHERE email_address  =  "johns.unique@example.net"
连接数据库../datasets/cosql_dataset/database/student_transcripts_tracking/student_transcripts_tracking.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:False
easy pred: SELECT T3.middle_name FROM Students AS T3 JOIN Student_Enrolment AS T2 ON T3.student_id  =  T2.student_id WHERE T3.email_address  =  "johns.unique@example.net"
easy gold: SELECT middle_name FROM Students WHERE email_address  =  "johns.unique@example.net"

当前idx1
____________________
SELECT PetType FROM Pets
SELECT distinct PetType from Pets
连接数据库../datasets/cosql_dataset/database/pets_1/pets_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:True
当前idx2
____________________
SELECT count(*) FROM Pets WHERE PetType = "Dog"
SELECT count ( * )   from Pets where PetType = "dog"
连接数据库../datasets/cosql_dataset/database/pets_1/pets_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:True
当前idx3
____________________
SELECT pet_age FROM Pets WHERE PetType = "Dog"
SELECT pet_age  from Pets where PetType = "dog"
连接数据库../datasets/cosql_dataset/database/pets_1/pets_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:True
当前idx4
____________________
SELECT weight FROM Pets WHERE pet_age = 1
SELECT weight  from Pets where PetType = "dog" and pet_age  =   ( select min ( pet_age )  from Pets where PetType = "dog" ) 
连接数据库../datasets/cosql_dataset/database/pets_1/pets_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:0
extra pred: SELECT weight FROM Pets WHERE pet_age = 1
extra gold: SELECT weight  from Pets where PetType = "dog" and pet_age  =   ( select min ( pet_age )  from Pets where PetType = "dog" ) 

当前idx1
eval_err_num:129
____________________
SELECT last_name FROM Students WHERE state_province_county = "North Carolina"
SELECT T1.last_name FROM Students AS T1 JOIN Addresses AS T2 ON T1.current_address_id   =   T2.address_id WHERE T2.state_province_county   =   'NorthCarolina'
连接数据库../datasets/cosql_dataset/database/student_transcripts_tracking/student_transcripts_tracking.sqlite
执行第一个查询
执行出错: no such column: state_province_county
eval_exec:False
exact_score:0
medium pred: SELECT last_name FROM Students WHERE state_province_county = "North Carolina"
medium gold: SELECT T1.last_name FROM Students AS T1 JOIN Addresses AS T2 ON T1.current_address_id   =   T2.address_id WHERE T2.state_province_county   =   'NorthCarolina'

当前idx2
eval_err_num:130
____________________
SELECT first_name FROM Students WHERE state_province_county = "North Carolina"
SELECT T1.first_name FROM Students AS T1 JOIN Addresses AS T2 ON T1.current_address_id   =   T2.address_id WHERE T2.state_province_county   =   'NorthCarolina'
连接数据库../datasets/cosql_dataset/database/student_transcripts_tracking/student_transcripts_tracking.sqlite
执行第一个查询
执行出错: no such column: state_province_county
eval_exec:False
exact_score:0
medium pred: SELECT first_name FROM Students WHERE state_province_county = "North Carolina"
medium gold: SELECT T1.first_name FROM Students AS T1 JOIN Addresses AS T2 ON T1.current_address_id   =   T2.address_id WHERE T2.state_province_county   =   'NorthCarolina'

当前idx3
eval_err_num:131
____________________
SELECT last_name FROM Students WHERE state_province_county = "North Carolina" AND student_id NOT IN (SELECT student_id FROM Student_Enrolment)
SELECT T1.last_name FROM Students AS T1 JOIN Addresses AS T2 ON T1.current_address_id   =   T2.address_id WHERE T2.state_province_county   =   'NorthCarolina' EXCEPT SELECT DISTINCT T3.last_name FROM Students AS T3 JOIN Student_Enrolment AS T4 ON T3.student_id   =   T4.student_id
连接数据库../datasets/cosql_dataset/database/student_transcripts_tracking/student_transcripts_tracking.sqlite
执行第一个查询
执行出错: no such column: state_province_county
eval_exec:False
exact_score:0
extra pred: SELECT last_name FROM Students WHERE state_province_county = "North Carolina" AND student_id NOT IN (SELECT student_id FROM Student_Enrolment)
extra gold: SELECT T1.last_name FROM Students AS T1 JOIN Addresses AS T2 ON T1.current_address_id   =   T2.address_id WHERE T2.state_province_county   =   'NorthCarolina' EXCEPT SELECT DISTINCT T3.last_name FROM Students AS T3 JOIN Student_Enrolment AS T4 ON T3.student_id   =   T4.student_id

当前idx4
eval_err_num:132
____________________
SELECT first_name FROM Students WHERE state_province_county = "North Carolina" AND student_id NOT IN (SELECT student_id FROM Student_Enrolment)
SELECT T1.first_name FROM Students AS T1 JOIN Addresses AS T2 ON T1.current_address_id   =   T2.address_id WHERE T2.state_province_county   =   'NorthCarolina' EXCEPT SELECT DISTINCT T3.last_name FROM Students AS T3 JOIN Student_Enrolment AS T4 ON T3.student_id   =   T4.student_id
连接数据库../datasets/cosql_dataset/database/student_transcripts_tracking/student_transcripts_tracking.sqlite
执行第一个查询
执行出错: no such column: state_province_county
eval_exec:False
exact_score:0
extra pred: SELECT first_name FROM Students WHERE state_province_county = "North Carolina" AND student_id NOT IN (SELECT student_id FROM Student_Enrolment)
extra gold: SELECT T1.first_name FROM Students AS T1 JOIN Addresses AS T2 ON T1.current_address_id   =   T2.address_id WHERE T2.state_province_county   =   'NorthCarolina' EXCEPT SELECT DISTINCT T3.last_name FROM Students AS T3 JOIN Student_Enrolment AS T4 ON T3.student_id   =   T4.student_id

当前idx1
____________________
SELECT T1.loser_name, T1.winner_name FROM matches AS T1 ORDER BY T1.minutes DESC LIMIT 1
SELECT winner_name ,  loser_name FROM matches ORDER BY minutes DESC LIMIT 1
连接数据库../datasets/cosql_dataset/database/wta_1/wta_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT T1.loser_name, T1.winner_name, T1.score FROM matches AS T1 ORDER BY T1.minutes DESC LIMIT 1
SELECT score FROM matches ORDER BY minutes DESC LIMIT 1
连接数据库../datasets/cosql_dataset/database/wta_1/wta_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT T1.loser_name, T1.winner_name, T1.score FROM matches AS T1 ORDER BY T1.minutes DESC LIMIT 1
medium gold: SELECT score FROM matches ORDER BY minutes DESC LIMIT 1

当前idx1
____________________
SELECT DISTINCT Model FROM car_names
select distinct Model from car_names
连接数据库../datasets/cosql_dataset/database/car_1/car_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
eval_err_num:133
____________________
SELECT Model FROM car_names WHERE MakeId IN (SELECT Id FROM car_makers WHERE Country = 'USA') AND Model IN (SELECT Model FROM car_names WHERE MakeId IN (SELECT Id FROM car_makers WHERE Country = 'USA') AND Model IN (SELECT Model FROM car_names WHERE MakeId IN (SELECT Id FROM car_makers WHERE Country = 'USA') AND Model IN (SELECT Model FROM car_names WHERE MakeId IN (SELECT Id FROM car_makers WHERE Country = 'USA') AND Model IN (SELECT Model FROM car_names WHERE MakeId IN (SELECT Id FROM car_makers WHERE Country = 'USA') AND Model IN (SELECT Model FROM car_names WHERE MakeId IN (SELECT Id FROM car_makers WHERE Country = 'USA') AND Model IN (SELECT Model FROM car_names WHERE MakeId IN (SELECT Id FROM car_makers WHERE Country = 'USA') AND Model IN (SELECT Model FROM car_names WHERE MakeId IN (SELECT Id FROM car_makers WHERE Country = 'USA') AND Model IN (SELECT Model FROM car_names WHERE MakeId IN (SELECT Id FROM car_makers WHERE Country = 'USA') AND Model IN (SELECT Model FROM car_names WHERE MakeId IN (SELECT Id FROM car_makers WHERE Country = 'USA') AND Model IN (SELECT Model FROM car_names WHERE MakeId IN (SELECT Id FROM car_makers WHERE Country
SELECT DISTINCT T1.model FROM MODEL_LIST AS T1 JOIN CAR_NAMES AS T2 ON T1.model   =   T2.model JOIN CARS_DATA AS T3 ON T2.MakeId   =   T3.id WHERE T3.year  >  1980
连接数据库../datasets/cosql_dataset/database/car_1/car_1.sqlite
执行第一个查询
执行出错: parser stack overflow
eval_exec:False
exact_score:0
hard pred: SELECT Model FROM car_names WHERE MakeId IN (SELECT Id FROM car_makers WHERE Country = 'USA') AND Model IN (SELECT Model FROM car_names WHERE MakeId IN (SELECT Id FROM car_makers WHERE Country = 'USA') AND Model IN (SELECT Model FROM car_names WHERE MakeId IN (SELECT Id FROM car_makers WHERE Country = 'USA') AND Model IN (SELECT Model FROM car_names WHERE MakeId IN (SELECT Id FROM car_makers WHERE Country = 'USA') AND Model IN (SELECT Model FROM car_names WHERE MakeId IN (SELECT Id FROM car_makers WHERE Country = 'USA') AND Model IN (SELECT Model FROM car_names WHERE MakeId IN (SELECT Id FROM car_makers WHERE Country = 'USA') AND Model IN (SELECT Model FROM car_names WHERE MakeId IN (SELECT Id FROM car_makers WHERE Country = 'USA') AND Model IN (SELECT Model FROM car_names WHERE MakeId IN (SELECT Id FROM car_makers WHERE Country = 'USA') AND Model IN (SELECT Model FROM car_names WHERE MakeId IN (SELECT Id FROM car_makers WHERE Country = 'USA') AND Model IN (SELECT Model FROM car_names WHERE MakeId IN (SELECT Id FROM car_makers WHERE Country = 'USA') AND Model IN (SELECT Model FROM car_names WHERE MakeId IN (SELECT Id FROM car_makers WHERE Country
hard gold: SELECT DISTINCT T1.model FROM MODEL_LIST AS T1 JOIN CAR_NAMES AS T2 ON T1.model   =   T2.model JOIN CARS_DATA AS T3 ON T2.MakeId   =   T3.id WHERE T3.year  >  1980

当前idx1
____________________
SELECT grade FROM Highschooler GROUP BY grade ORDER BY count(*) DESC LIMIT 1
SELECT grade FROM Highschooler GROUP BY grade ORDER BY count ( * )  DESC LIMIT 1
连接数据库../datasets/cosql_dataset/database/network_1/network_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT name FROM Highschooler WHERE grade = 9
SELECT name FROM Highschooler WHERE grade  =  9
连接数据库../datasets/cosql_dataset/database/network_1/network_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx3
____________________
SELECT grade FROM Highschooler WHERE name = "Tiffany"
SELECT grade FROM Highschooler WHERE name  =  "Tiffany"
连接数据库../datasets/cosql_dataset/database/network_1/network_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx4
____________________
SELECT count(*) FROM Highschooler WHERE grade = 9
SELECT count ( * )  FROM Highschooler WHERE grade  =  9
连接数据库../datasets/cosql_dataset/database/network_1/network_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx>4
____________________
SELECT grade FROM Highschooler WHERE id = 1689
SELECT grade FROM Highschooler WHERE name  =  "Gabriel" AND ID  =  1689
连接数据库../datasets/cosql_dataset/database/network_1/network_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:0
medium pred: SELECT grade FROM Highschooler WHERE id = 1689
medium gold: SELECT grade FROM Highschooler WHERE name  =  "Gabriel" AND ID  =  1689

当前idx>4
____________________
SELECT id FROM Highschooler WHERE name = "Tiffany"
SELECT ID FROM Highschooler WHERE name  =  "Tiffany"
连接数据库../datasets/cosql_dataset/database/network_1/network_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx>4
____________________
SELECT name FROM Highschooler WHERE id = 1510
SELECT name FROM Highschooler WHERE ID  =  1510
连接数据库../datasets/cosql_dataset/database/network_1/network_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx1
____________________
SELECT first_name, last_name FROM Owners WHERE owner_id = 1
SELECT T1.first_name , T1.last_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id   =   T2.owner_id WHERE T1.owner_id   =  1
连接数据库../datasets/cosql_dataset/database/dog_kennels/dog_kennels.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:False
medium pred: SELECT first_name, last_name FROM Owners WHERE owner_id = 1
medium gold: SELECT T1.first_name , T1.last_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id   =   T2.owner_id WHERE T1.owner_id   =  1

当前idx2
____________________
SELECT name FROM Dogs WHERE age = 6
SELECT name  FROM Dogs  WHERE age  =  6
连接数据库../datasets/cosql_dataset/database/dog_kennels/dog_kennels.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx3
____________________
SELECT name FROM Dogs WHERE age > 5
SELECT  name  FROM  Dogs WHERE age >5
连接数据库../datasets/cosql_dataset/database/dog_kennels/dog_kennels.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx4
____________________
SELECT name FROM Dogs WHERE owner_id IN (SELECT owner_id FROM Owners WHERE state = 'Virginia')
SELECT T2.name  FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id   =   T2.owner_id WHERE T1.state   = "Virginia"
连接数据库../datasets/cosql_dataset/database/dog_kennels/dog_kennels.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:0
medium pred: SELECT name FROM Dogs WHERE owner_id IN (SELECT owner_id FROM Owners WHERE state = 'Virginia')
medium gold: SELECT T2.name  FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id   =   T2.owner_id WHERE T1.state   = "Virginia"

当前idx1
____________________
SELECT course_name FROM Courses ORDER BY count(*) ASC LIMIT 1
SELECT  T1.course_name FROM Courses AS T1 JOIN Student_Enrolment_Courses AS T2 ON T1.course_id   =   T2.course_id GROUP BY T1.course_name ORDER BY count ( * )  LIMIT 1
连接数据库../datasets/cosql_dataset/database/student_transcripts_tracking/student_transcripts_tracking.sqlite
执行第一个查询
执行出错: misuse of aggregate: count()
eval_exec:False
exact_score:0
extra pred: SELECT course_name FROM Courses ORDER BY count(*) ASC LIMIT 1
extra gold: SELECT  T1.course_name FROM Courses AS T1 JOIN Student_Enrolment_Courses AS T2 ON T1.course_id   =   T2.course_id GROUP BY T1.course_name ORDER BY count ( * )  LIMIT 1

当前idx2
____________________
SELECT course_id FROM Courses WHERE course_name = "Math"
SELECT course_id from courses where course_name  =  "math"
连接数据库../datasets/cosql_dataset/database/student_transcripts_tracking/student_transcripts_tracking.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:True
当前idx3
____________________
SELECT count(*) FROM Student_Enrolment_Courses WHERE student_course_id = 14
SELECT  count ( * )  FROM Courses AS T1 JOIN Student_Enrolment_Courses AS T2 ON T1.course_id   =   T2.course_id GROUP BY T1.course_name having T1.course_id  =  14
连接数据库../datasets/cosql_dataset/database/student_transcripts_tracking/student_transcripts_tracking.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT count(*) FROM Student_Enrolment_Courses WHERE student_course_id = 14
medium gold: SELECT  count ( * )  FROM Courses AS T1 JOIN Student_Enrolment_Courses AS T2 ON T1.course_id   =   T2.course_id GROUP BY T1.course_name having T1.course_id  =  14

当前idx1
____________________
SELECT count(distinct countrycode) FROM countrylanguage
SELECT count ( distinct  Language )  from countrylanguage
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
easy pred: SELECT count(distinct countrycode) FROM countrylanguage
easy gold: SELECT count ( distinct  Language )  from countrylanguage

当前idx2
____________________
SELECT max(percentage) FROM countrylanguage
SELECT max ( Percentage )  from countrylanguage
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx1
____________________
SELECT name FROM Highschooler
select name from highschooler
连接数据库../datasets/cosql_dataset/database/network_1/network_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT T1.name FROM Highschooler AS T1 JOIN Friend AS T2 ON T1.id  =  T2.student_id WHERE T2.friend_id  =  1
SELECT T3.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id JOIN Highschooler AS T3 ON T1.friend_id  =  T3.id WHERE T2.name  =  "Kyle"
连接数据库../datasets/cosql_dataset/database/network_1/network_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
hard pred: SELECT T1.name FROM Highschooler AS T1 JOIN Friend AS T2 ON T1.id  =  T2.student_id WHERE T2.friend_id  =  1
hard gold: SELECT T3.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id JOIN Highschooler AS T3 ON T1.friend_id  =  T3.id WHERE T2.name  =  "Kyle"

当前idx3
____________________
SELECT T1.id FROM Highschooler AS T1 JOIN Friend AS T2 ON T1.id  =  T2.student_id WHERE T2.friend_id  =  1
SELECT id FROM highschooler where name  =  "Kyle"
连接数据库../datasets/cosql_dataset/database/network_1/network_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
easy pred: SELECT T1.id FROM Highschooler AS T1 JOIN Friend AS T2 ON T1.id  =  T2.student_id WHERE T2.friend_id  =  1
easy gold: SELECT id FROM highschooler where name  =  "Kyle"

当前idx4
____________________
SELECT name FROM Highschooler WHERE id = 1709
SELECT name FROM highschooler where id  =  1709
连接数据库../datasets/cosql_dataset/database/network_1/network_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx>4
____________________
SELECT T1.name FROM Highschooler AS T1 JOIN Friend AS T2 ON T1.id  =  T2.student_id WHERE T2.friend_id  =  1709
SELECT T3.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id JOIN Highschooler AS T3 ON T1.friend_id  =  T3.id WHERE T2.name  =  "Jordan"
连接数据库../datasets/cosql_dataset/database/network_1/network_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
hard pred: SELECT T1.name FROM Highschooler AS T1 JOIN Friend AS T2 ON T1.id  =  T2.student_id WHERE T2.friend_id  =  1709
hard gold: SELECT T3.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id JOIN Highschooler AS T3 ON T1.friend_id  =  T3.id WHERE T2.name  =  "Jordan"

当前idx>4
____________________
SELECT T1.name FROM Highschooler AS T1 JOIN Friend AS T2 ON T1.id  =  T2.student_id WHERE T2.friend_id  =  1709
SELECT T3.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id JOIN Highschooler AS T3 ON T1.friend_id  =  T3.id WHERE T2.name  =  "Gabriel"
连接数据库../datasets/cosql_dataset/database/network_1/network_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
hard pred: SELECT T1.name FROM Highschooler AS T1 JOIN Friend AS T2 ON T1.id  =  T2.student_id WHERE T2.friend_id  =  1709
hard gold: SELECT T3.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id JOIN Highschooler AS T3 ON T1.friend_id  =  T3.id WHERE T2.name  =  "Gabriel"

当前idx1
____________________
SELECT CountryName FROM countries WHERE Continent = 1
SELECT distinct T1.CountryName FROM COUNTRIES AS T1 JOIN CONTINENTS AS T2 ON T1.Continent   =   T2.ContId JOIN CAR_MAKERS AS T3 ON T1.CountryId   =   T3.Country WHERE T2.Continent   =   'europe'
连接数据库../datasets/cosql_dataset/database/car_1/car_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
hard pred: SELECT CountryName FROM countries WHERE Continent = 1
hard gold: SELECT distinct T1.CountryName FROM COUNTRIES AS T1 JOIN CONTINENTS AS T2 ON T1.Continent   =   T2.ContId JOIN CAR_MAKERS AS T3 ON T1.CountryId   =   T3.Country WHERE T2.Continent   =   'europe'

当前idx2
____________________
SELECT CountryName, COUNT(*) FROM countries AS T1 JOIN car_makers AS T2 ON T1.CountryId  =  T2.Country GROUP BY T1.CountryId
SELECT T1.CountryName, count ( * )  FROM COUNTRIES AS T1 JOIN CONTINENTS AS T2 ON T1.Continent   =   T2.ContId JOIN CAR_MAKERS AS T3 ON T1.CountryId   =   T3.Country WHERE T2.Continent   =   'europe' GROUP BY T1.CountryName
连接数据库../datasets/cosql_dataset/database/car_1/car_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
extra pred: SELECT CountryName, COUNT(*) FROM countries AS T1 JOIN car_makers AS T2 ON T1.CountryId  =  T2.Country GROUP BY T1.CountryId
extra gold: SELECT T1.CountryName, count ( * )  FROM COUNTRIES AS T1 JOIN CONTINENTS AS T2 ON T1.Continent   =   T2.ContId JOIN CAR_MAKERS AS T3 ON T1.CountryId   =   T3.Country WHERE T2.Continent   =   'europe' GROUP BY T1.CountryName

当前idx3
____________________
SELECT CountryName FROM countries AS T1 JOIN car_makers AS T2 ON T1.CountryId  =  T2.Country GROUP BY T1.CountryId HAVING COUNT(*) >= 3
SELECT T1.CountryName FROM COUNTRIES AS T1 JOIN CONTINENTS AS T2 ON T1.Continent   =   T2.ContId JOIN CAR_MAKERS AS T3 ON T1.CountryId   =   T3.Country WHERE T2.Continent   =   'europe' GROUP BY T1.CountryName HAVING count ( * )    > =    3
连接数据库../datasets/cosql_dataset/database/car_1/car_1.sqlite
执行第一个查询
执行第二个查询
执行出错: near "=": syntax error
eval_exec:False
exact_score:0
extra pred: SELECT CountryName FROM countries AS T1 JOIN car_makers AS T2 ON T1.CountryId  =  T2.Country GROUP BY T1.CountryId HAVING COUNT(*) >= 3
extra gold: SELECT T1.CountryName FROM COUNTRIES AS T1 JOIN CONTINENTS AS T2 ON T1.Continent   =   T2.ContId JOIN CAR_MAKERS AS T3 ON T1.CountryId   =   T3.Country WHERE T2.Continent   =   'europe' GROUP BY T1.CountryName HAVING count ( * )    > =    3

当前idx4
____________________
SELECT CountryName, COUNT(*) FROM countries AS T1 JOIN car_makers AS T2 ON T1.CountryId  =  T2.Country GROUP BY T1.CountryId HAVING COUNT(*) >= 3
SELECT T1.CountryName, count ( * )  FROM COUNTRIES AS T1 JOIN CONTINENTS AS T2 ON T1.Continent   =   T2.ContId JOIN CAR_MAKERS AS T3 ON T1.CountryId   =   T3.Country WHERE T2.Continent   =   'europe' GROUP BY T1.CountryName HAVING count ( * )    > =    3
连接数据库../datasets/cosql_dataset/database/car_1/car_1.sqlite
执行第一个查询
执行第二个查询
执行出错: near "=": syntax error
eval_exec:False
exact_score:0
extra pred: SELECT CountryName, COUNT(*) FROM countries AS T1 JOIN car_makers AS T2 ON T1.CountryId  =  T2.Country GROUP BY T1.CountryId HAVING COUNT(*) >= 3
extra gold: SELECT T1.CountryName, count ( * )  FROM COUNTRIES AS T1 JOIN CONTINENTS AS T2 ON T1.Continent   =   T2.ContId JOIN CAR_MAKERS AS T3 ON T1.CountryId   =   T3.Country WHERE T2.Continent   =   'europe' GROUP BY T1.CountryName HAVING count ( * )    > =    3

当前idx>4
____________________
SELECT COUNT(*) FROM countries AS T1 JOIN car_makers AS T2 ON T1.CountryId  =  T2.Country WHERE T1.Continent = 1
SELECT count ( * )  FROM COUNTRIES AS T1 JOIN CONTINENTS AS T2 ON T1.Continent   =   T2.ContId JOIN CAR_MAKERS AS T3 ON T1.CountryId   =   T3.Country WHERE T2.Continent   =   'europe'
连接数据库../datasets/cosql_dataset/database/car_1/car_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
hard pred: SELECT COUNT(*) FROM countries AS T1 JOIN car_makers AS T2 ON T1.CountryId  =  T2.Country WHERE T1.Continent = 1
hard gold: SELECT count ( * )  FROM COUNTRIES AS T1 JOIN CONTINENTS AS T2 ON T1.Continent   =   T2.ContId JOIN CAR_MAKERS AS T3 ON T1.CountryId   =   T3.Country WHERE T2.Continent   =   'europe'

当前idx>4
____________________
SELECT COUNT(*) FROM countries AS T1 JOIN car_makers AS T2 ON T1.CountryId  =  T2.Country WHERE T1.Continent = 2
SELECT count ( * )  FROM COUNTRIES AS T1 JOIN CONTINENTS AS T2 ON T1.Continent   =   T2.ContId JOIN CAR_MAKERS AS T3 ON T1.CountryId   =   T3.Country WHERE T2.Continent   =   'america'
连接数据库../datasets/cosql_dataset/database/car_1/car_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
hard pred: SELECT COUNT(*) FROM countries AS T1 JOIN car_makers AS T2 ON T1.CountryId  =  T2.Country WHERE T1.Continent = 2
hard gold: SELECT count ( * )  FROM COUNTRIES AS T1 JOIN CONTINENTS AS T2 ON T1.Continent   =   T2.ContId JOIN CAR_MAKERS AS T3 ON T1.CountryId   =   T3.Country WHERE T2.Continent   =   'america'

当前idx>4
____________________
SELECT CountryName FROM countries AS T1 JOIN car_makers AS T2 ON T1.CountryId  =  T2.Country WHERE T1.Continent = 2
SELECT T3.Fullname FROM COUNTRIES AS T1 JOIN CONTINENTS AS T2 ON T1.Continent   =   T2.ContId JOIN CAR_MAKERS AS T3 ON T1.CountryId   =   T3.Country WHERE T2.Continent   =   'america'
连接数据库../datasets/cosql_dataset/database/car_1/car_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
hard pred: SELECT CountryName FROM countries AS T1 JOIN car_makers AS T2 ON T1.CountryId  =  T2.Country WHERE T1.Continent = 2
hard gold: SELECT T3.Fullname FROM COUNTRIES AS T1 JOIN CONTINENTS AS T2 ON T1.Continent   =   T2.ContId JOIN CAR_MAKERS AS T3 ON T1.CountryId   =   T3.Country WHERE T2.Continent   =   'america'

当前idx1
____________________
SELECT count(*) FROM visitor WHERE ID NOT IN (SELECT visitor_ID FROM visit WHERE museum_id IN (SELECT museum_id FROM museum WHERE open_year > 2010))
SELECT count ( * )  FROM visitor WHERE id NOT IN  ( SELECT t2.visitor_id FROM museum AS t1 JOIN visit AS t2 ON t1.Museum_ID   =   t2.Museum_ID WHERE t1.open_year  >  2010 ) 
连接数据库../datasets/cosql_dataset/database/museum_visit/museum_visit.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:0
extra pred: SELECT count(*) FROM visitor WHERE ID NOT IN (SELECT visitor_ID FROM visit WHERE museum_id IN (SELECT museum_id FROM museum WHERE open_year > 2010))
extra gold: SELECT count ( * )  FROM visitor WHERE id NOT IN  ( SELECT t2.visitor_id FROM museum AS t1 JOIN visit AS t2 ON t1.Museum_ID   =   t2.Museum_ID WHERE t1.open_year  >  2010 ) 

当前idx2
____________________
SELECT name, level_of_membership FROM visitor WHERE ID IN (SELECT visitor_ID FROM visit WHERE museum_id IN (SELECT museum_id FROM museum WHERE open_year > 2010))
SELECT name, level_of_membership FROM visitor WHERE id NOT IN  ( SELECT t2.visitor_id FROM museum AS t1 JOIN visit AS t2 ON t1.Museum_ID   =   t2.Museum_ID WHERE t1.open_year  >  2010 ) 
连接数据库../datasets/cosql_dataset/database/museum_visit/museum_visit.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
extra pred: SELECT name, level_of_membership FROM visitor WHERE ID IN (SELECT visitor_ID FROM visit WHERE museum_id IN (SELECT museum_id FROM museum WHERE open_year > 2010))
extra gold: SELECT name, level_of_membership FROM visitor WHERE id NOT IN  ( SELECT t2.visitor_id FROM museum AS t1 JOIN visit AS t2 ON t1.Museum_ID   =   t2.Museum_ID WHERE t1.open_year  >  2010 ) 

当前idx1
____________________
SELECT count(*) FROM Owners WHERE owner_id NOT IN (SELECT owner_id FROM Dogs)
SELECT count ( * )  FROM Owners WHERE owner_id NOT IN  (  SELECT owner_id FROM Dogs  ) 
连接数据库../datasets/cosql_dataset/database/dog_kennels/dog_kennels.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT first_name, last_name FROM Owners WHERE owner_id NOT IN (SELECT owner_id FROM Dogs)
SELECT count ( * )  FROM Owners WHERE owner_id NOT IN  (  SELECT owner_id FROM Dogs  ) 
连接数据库../datasets/cosql_dataset/database/dog_kennels/dog_kennels.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
extra pred: SELECT first_name, last_name FROM Owners WHERE owner_id NOT IN (SELECT owner_id FROM Dogs)
extra gold: SELECT count ( * )  FROM Owners WHERE owner_id NOT IN  (  SELECT owner_id FROM Dogs  ) 

当前idx1
____________________
SELECT Title FROM Cartoon ORDER BY Original_air_date LIMIT 1
SELECT title  FROM cartoon ORDER BY original_air_date LIMIT 1
连接数据库../datasets/cosql_dataset/database/tvshow/tvshow.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT Title FROM Cartoon ORDER BY Original_air_date DESC LIMIT 1
SELECT title  FROM cartoon ORDER BY original_air_date desc LIMIT 1
连接数据库../datasets/cosql_dataset/database/tvshow/tvshow.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx3
____________________
SELECT Channel FROM Cartoon ORDER BY Original_air_date DESC LIMIT 1
SELECT channel FROM cartoon ORDER BY original_air_date desc LIMIT 1
连接数据库../datasets/cosql_dataset/database/tvshow/tvshow.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx4
____________________
SELECT Production_code FROM Cartoon ORDER BY Original_air_date DESC LIMIT 1
SELECT production_code FROM cartoon ORDER BY original_air_date desc LIMIT 1
连接数据库../datasets/cosql_dataset/database/tvshow/tvshow.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx1
____________________
SELECT Name FROM singer WHERE Birth_Year < 1945
SELECT * FROM singer WHERE Birth_Year  <  1945
连接数据库../datasets/cosql_dataset/database/singer/singer.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
easy pred: SELECT Name FROM singer WHERE Birth_Year < 1945
easy gold: SELECT * FROM singer WHERE Birth_Year  <  1945

当前idx2
____________________
SELECT Name FROM singer WHERE Birth_Year > 1955
SELECT * FROM singer WHERE Birth_Year  >  1955
连接数据库../datasets/cosql_dataset/database/singer/singer.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
easy pred: SELECT Name FROM singer WHERE Birth_Year > 1955
easy gold: SELECT * FROM singer WHERE Birth_Year  >  1955

当前idx3
____________________
SELECT Citizenship FROM singer WHERE Birth_Year < 1945
SELECT Citizenship FROM singer WHERE Birth_Year  <  1945
连接数据库../datasets/cosql_dataset/database/singer/singer.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx4
____________________
SELECT Citizenship FROM singer WHERE Birth_Year > 1955
SELECT Citizenship FROM singer WHERE Birth_Year  <  1945 or Birth_Year  >  1955
连接数据库../datasets/cosql_dataset/database/singer/singer.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT Citizenship FROM singer WHERE Birth_Year > 1955
medium gold: SELECT Citizenship FROM singer WHERE Birth_Year  <  1945 or Birth_Year  >  1955

当前idx>4
____________________
SELECT Name FROM singer WHERE Birth_Year < 1945 AND Citizenship = "United States"
SELECT * FROM singer WHERE Birth_Year  <  1945 and Citizenship  =  'United States'
连接数据库../datasets/cosql_dataset/database/singer/singer.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT Name FROM singer WHERE Birth_Year < 1945 AND Citizenship = "United States"
medium gold: SELECT * FROM singer WHERE Birth_Year  <  1945 and Citizenship  =  'United States'

当前idx>4
____________________
SELECT Name FROM singer WHERE Birth_Year > 1955 AND Citizenship = "United States"
SELECT * FROM singer WHERE Birth_Year  <  1945 and Citizenship  =  'United States' UNION SELECT * FROM singer WHERE Birth_Year  >  1955 and Citizenship  =  'United States'
连接数据库../datasets/cosql_dataset/database/singer/singer.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
extra pred: SELECT Name FROM singer WHERE Birth_Year > 1955 AND Citizenship = "United States"
extra gold: SELECT * FROM singer WHERE Birth_Year  <  1945 and Citizenship  =  'United States' UNION SELECT * FROM singer WHERE Birth_Year  >  1955 and Citizenship  =  'United States'

当前idx>4
____________________
SELECT Name FROM singer WHERE Birth_Year < 1945 AND Citizenship = "France"
SELECT * FROM singer WHERE Birth_Year  <  1945 and Citizenship  =  'France'
连接数据库../datasets/cosql_dataset/database/singer/singer.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT Name FROM singer WHERE Birth_Year < 1945 AND Citizenship = "France"
medium gold: SELECT * FROM singer WHERE Birth_Year  <  1945 and Citizenship  =  'France'

当前idx>4
____________________
SELECT Name FROM singer WHERE Birth_Year > 1955 AND Citizenship = "France"
SELECT * FROM singer WHERE Birth_Year  <  1945 and Citizenship  =  'France' UNION SELECT * FROM singer WHERE Birth_Year  >  1955 and Citizenship  =  'France'
连接数据库../datasets/cosql_dataset/database/singer/singer.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
extra pred: SELECT Name FROM singer WHERE Birth_Year > 1955 AND Citizenship = "France"
extra gold: SELECT * FROM singer WHERE Birth_Year  <  1945 and Citizenship  =  'France' UNION SELECT * FROM singer WHERE Birth_Year  >  1955 and Citizenship  =  'France'

当前idx>4
eval_err_num:134
____________________
SELECT Name FROM singer WHERE (Birth_Year < 1945 OR Birth_Year > 1955) AND Citizenship = "Chile"
SELECT * FROM singer WHERE Birth_Year  <  1945 and Citizenship  =  'Chile' UNION SELECT * FROM singer WHERE Birth_Year  >  1955 and Citizenship  =  'Chile'
连接数据库../datasets/cosql_dataset/database/singer/singer.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
extra pred: SELECT Name FROM singer WHERE (Birth_Year < 1945 OR Birth_Year > 1955) AND Citizenship = "Chile"
extra gold: SELECT * FROM singer WHERE Birth_Year  <  1945 and Citizenship  =  'Chile' UNION SELECT * FROM singer WHERE Birth_Year  >  1955 and Citizenship  =  'Chile'

当前idx1
____________________
SELECT count(*) FROM country
select count ( * )  from Country
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT count(*) FROM countrylanguage
select count ( distinct Language )  from countrylanguage
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
easy pred: SELECT count(*) FROM countrylanguage
easy gold: select count ( distinct Language )  from countrylanguage

当前idx3
____________________
SELECT surfacearea FROM country WHERE code = "AFG"
select SurfaceArea from Country where Code  =  'AFG'
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx1
____________________
SELECT SUM(Population) FROM country WHERE Continent = "Caribbean"
SELECT sum ( Population )  FROM country WHERE Region  =  "Caribbean"
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
easy pred: SELECT SUM(Population) FROM country WHERE Continent = "Caribbean"
easy gold: SELECT sum ( Population )  FROM country WHERE Region  =  "Caribbean"

当前idx2
____________________
SELECT Continent FROM country WHERE LifeExpectancy < 72 GROUP BY Continent
SELECT Continent FROM country GROUP BY Continent HAVING avg ( LifeExpectancy )   <  72
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
easy pred: SELECT Continent FROM country WHERE LifeExpectancy < 72 GROUP BY Continent
easy gold: SELECT Continent FROM country GROUP BY Continent HAVING avg ( LifeExpectancy )   <  72

当前idx3
____________________
SELECT Continent, SUM(Population) FROM country WHERE LifeExpectancy < 72 GROUP BY Continent
SELECT sum ( Population ) ,  Continent FROM country GROUP BY Continent HAVING avg ( LifeExpectancy )   <  72
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT Continent, SUM(Population) FROM country WHERE LifeExpectancy < 72 GROUP BY Continent
medium gold: SELECT sum ( Population ) ,  Continent FROM country GROUP BY Continent HAVING avg ( LifeExpectancy )   <  72

当前idx4
____________________
SELECT Continent, AVG(LifeExpectancy) FROM country WHERE LifeExpectancy < 72 GROUP BY Continent
SELECT avg ( LifeExpectancy )  ,  Continent FROM country GROUP BY Continent HAVING avg ( LifeExpectancy )   <  72
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT Continent, AVG(LifeExpectancy) FROM country WHERE LifeExpectancy < 72 GROUP BY Continent
medium gold: SELECT avg ( LifeExpectancy )  ,  Continent FROM country GROUP BY Continent HAVING avg ( LifeExpectancy )   <  72

当前idx>4
____________________
SELECT Continent, AVG(LifeExpectancy), SUM(Population) FROM country WHERE LifeExpectancy < 72 GROUP BY Continent
SELECT sum ( Population )  ,  avg ( LifeExpectancy )  ,  Continent FROM country GROUP BY Continent HAVING avg ( LifeExpectancy )   <  72
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT Continent, AVG(LifeExpectancy), SUM(Population) FROM country WHERE LifeExpectancy < 72 GROUP BY Continent
medium gold: SELECT sum ( Population )  ,  avg ( LifeExpectancy )  ,  Continent FROM country GROUP BY Continent HAVING avg ( LifeExpectancy )   <  72

当前idx1
____________________
SELECT street FROM Owners WHERE first_name = "Nora" AND last_name = "Haley"
SELECT street FROM Owners WHERE first_name  =  "Nora" and last_name  =  "Haley"
连接数据库../datasets/cosql_dataset/database/dog_kennels/dog_kennels.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT home_phone FROM Owners WHERE first_name = "Nora" AND last_name = "Haley"
SELECT home_phone FROM Owners WHERE first_name  =  "Nora" and last_name  =  "Haley"
连接数据库../datasets/cosql_dataset/database/dog_kennels/dog_kennels.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx3
____________________
SELECT email_address FROM Owners WHERE first_name = "Jaclyn" AND last_name = "Stoltenberg"
SELECT email_address FROM Owners WHERE first_name  =  "Jaclyn" and last_name  =  "Stoltenberg"
连接数据库../datasets/cosql_dataset/database/dog_kennels/dog_kennels.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx4
____________________
SELECT first_name FROM Owners WHERE last_name = "DuBuque"
SELECT first_name FROM Owners WHERE last_name  =  "DuBuque"
连接数据库../datasets/cosql_dataset/database/dog_kennels/dog_kennels.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx1
____________________
SELECT Document_ID FROM Paragraphs GROUP BY Document_ID ORDER BY count(*) ASC LIMIT 1
SELECT document_id FROM Paragraphs GROUP BY document_id ORDER BY count ( * )  ASC LIMIT 1
连接数据库../datasets/cosql_dataset/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT Document_ID FROM Paragraphs GROUP BY Document_ID ORDER BY count(*) DESC LIMIT 1
SELECT document_id FROM Paragraphs GROUP BY document_id ORDER BY count ( * )  desc LIMIT 1
连接数据库../datasets/cosql_dataset/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx3
____________________
SELECT count(*) FROM Paragraphs WHERE Document_ID = 2394
select count ( paragraph_id )  from Paragraphs where Document_ID  =  2394
连接数据库../datasets/cosql_dataset/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
easy pred: SELECT count(*) FROM Paragraphs WHERE Document_ID = 2394
easy gold: select count ( paragraph_id )  from Paragraphs where Document_ID  =  2394

当前idx4
____________________
SELECT Paragraph_Text FROM Paragraphs WHERE Document_ID = 2394
select Paragraph_Text from Paragraphs where Document_ID  =  2394
连接数据库../datasets/cosql_dataset/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx1
____________________
SELECT email_address FROM Owners WHERE owner_id = 1
SELECT email_address from owners where owner_id  =  1
连接数据库../datasets/cosql_dataset/database/dog_kennels/dog_kennels.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT weight FROM Dogs WHERE dog_id = 1
SELECT weight from dogs where dog_id  =  1
连接数据库../datasets/cosql_dataset/database/dog_kennels/dog_kennels.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx3
____________________
SELECT age FROM Dogs WHERE dog_id = 1
SELECT age from dogs where dog_id  =  1
连接数据库../datasets/cosql_dataset/database/dog_kennels/dog_kennels.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx4
____________________
SELECT T1.owner_id, T1.last_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id JOIN Treatments AS T3 ON T2.dog_id  =  T3.dog_id GROUP BY T1.owner_id ORDER BY count(*) DESC LIMIT 1
SELECT T1.owner_id ,  T1.last_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id   =   T2.owner_id JOIN Treatments AS T3 ON T2.dog_id   =   T3.dog_id GROUP BY T1.owner_id ORDER BY count ( * )  DESC LIMIT 1
连接数据库../datasets/cosql_dataset/database/dog_kennels/dog_kennels.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx1
____________________
SELECT COUNT(*) FROM matches WHERE tourney_date BETWEEN '2013-01-01' AND '2013-12-31'
SELECT count ( * )  FROM matches WHERE YEAR   =   2013
连接数据库../datasets/cosql_dataset/database/wta_1/wta_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
easy pred: SELECT COUNT(*) FROM matches WHERE tourney_date BETWEEN '2013-01-01' AND '2013-12-31'
easy gold: SELECT count ( * )  FROM matches WHERE YEAR   =   2013

当前idx2
____________________
SELECT COUNT(*) FROM matches WHERE tourney_date BETWEEN '2016-01-01' AND '2016-12-31'
SELECT count ( * )  FROM matches WHERE YEAR   =   2016
连接数据库../datasets/cosql_dataset/database/wta_1/wta_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
easy pred: SELECT COUNT(*) FROM matches WHERE tourney_date BETWEEN '2016-01-01' AND '2016-12-31'
easy gold: SELECT count ( * )  FROM matches WHERE YEAR   =   2016

当前idx3
____________________
SELECT loser_id FROM matches WHERE loser_name = "Petra Kvitová"
SELECT distinct loser_id  FROM  matches where loser_name   = "Petra Kvitova"
连接数据库../datasets/cosql_dataset/database/wta_1/wta_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:True
当前idx1
____________________
SELECT Country FROM TV_Channel WHERE id NOT IN (SELECT Channel FROM Cartoon)
SELECT country FROM TV_Channel EXCEPT SELECT T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id  =  T2.Channel WHERE T2.written_by   =   'Todd Casey'
连接数据库../datasets/cosql_dataset/database/tvshow/tvshow.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
hard pred: SELECT Country FROM TV_Channel WHERE id NOT IN (SELECT Channel FROM Cartoon)
hard gold: SELECT country FROM TV_Channel EXCEPT SELECT T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id  =  T2.Channel WHERE T2.written_by   =   'Todd Casey'

当前idx2
____________________
SELECT Directed_by FROM Cartoon WHERE Title = "The Rise of Blue Beetle" AND Written_by = "Michael Jelenic"
SELECT directed_by from cartoon where title  =  "The Rise of the Blue Beetle!" and written_by  =  "Michael Jelenic"
连接数据库../datasets/cosql_dataset/database/tvshow/tvshow.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:True
当前idx3
____________________
SELECT Package_Option FROM TV_Channel WHERE Country = "Italy"
SELECT Package_Option from tv_channel where country  =  "Italy"
连接数据库../datasets/cosql_dataset/database/tvshow/tvshow.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx1
____________________
SELECT T1.Name, T1.Song_release_year FROM singer AS T1 JOIN singer_in_concert AS T2 ON T1.Singer_ID  =  T2.Singer_ID ORDER BY T1.Age ASC LIMIT 1
SELECT song_name ,  song_release_year FROM singer ORDER BY age LIMIT 1
连接数据库../datasets/cosql_dataset/database/concert_singer/concert_singer.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT T1.Name, T1.Song_release_year FROM singer AS T1 JOIN singer_in_concert AS T2 ON T1.Singer_ID  =  T2.Singer_ID ORDER BY T1.Age ASC LIMIT 1
medium gold: SELECT song_name ,  song_release_year FROM singer ORDER BY age LIMIT 1

当前idx2
____________________
SELECT T1.Name, T1.Song_release_year FROM singer AS T1 JOIN singer_in_concert AS T2 ON T1.Singer_ID  =  T2.Singer_ID ORDER BY T1.Age DESC LIMIT 1
SELECT song_name ,  song_release_year FROM singer ORDER BY age desc LIMIT 1
连接数据库../datasets/cosql_dataset/database/concert_singer/concert_singer.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT T1.Name, T1.Song_release_year FROM singer AS T1 JOIN singer_in_concert AS T2 ON T1.Singer_ID  =  T2.Singer_ID ORDER BY T1.Age DESC LIMIT 1
medium gold: SELECT song_name ,  song_release_year FROM singer ORDER BY age desc LIMIT 1

当前idx3
____________________
SELECT T1.Name FROM singer AS T1 JOIN singer_in_concert AS T2 ON T1.Singer_ID  =  T2.Singer_ID ORDER BY T1.Age ASC LIMIT 1
SELECT Name FROM singer ORDER BY age LIMIT 1
连接数据库../datasets/cosql_dataset/database/concert_singer/concert_singer.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:False
medium pred: SELECT T1.Name FROM singer AS T1 JOIN singer_in_concert AS T2 ON T1.Singer_ID  =  T2.Singer_ID ORDER BY T1.Age ASC LIMIT 1
medium gold: SELECT Name FROM singer ORDER BY age LIMIT 1

当前idx4
____________________
SELECT T1.Name, T1.Age FROM singer AS T1 JOIN singer_in_concert AS T2 ON T1.Singer_ID  =  T2.Singer_ID ORDER BY T1.Age DESC LIMIT 1
SELECT Name, age FROM singer ORDER BY age desc LIMIT 1
连接数据库../datasets/cosql_dataset/database/concert_singer/concert_singer.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:False
medium pred: SELECT T1.Name, T1.Age FROM singer AS T1 JOIN singer_in_concert AS T2 ON T1.Singer_ID  =  T2.Singer_ID ORDER BY T1.Age DESC LIMIT 1
medium gold: SELECT Name, age FROM singer ORDER BY age desc LIMIT 1

当前idx>4
____________________
SELECT T1.Country FROM singer AS T1 JOIN singer_in_concert AS T2 ON T1.Singer_ID  =  T2.Singer_ID ORDER BY T1.Age DESC LIMIT 1
SELECT Country FROM singer ORDER BY age desc LIMIT 1
连接数据库../datasets/cosql_dataset/database/concert_singer/concert_singer.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:False
medium pred: SELECT T1.Country FROM singer AS T1 JOIN singer_in_concert AS T2 ON T1.Singer_ID  =  T2.Singer_ID ORDER BY T1.Age DESC LIMIT 1
medium gold: SELECT Country FROM singer ORDER BY age desc LIMIT 1

当前idx>4
____________________
SELECT T1.Name FROM singer AS T1 JOIN singer_in_concert AS T2 ON T1.Singer_ID  =  T2.Singer_ID WHERE T1.Country  =  "United States"
SELECT Name FROM singer where country  =  'United States'
连接数据库../datasets/cosql_dataset/database/concert_singer/concert_singer.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:False
easy pred: SELECT T1.Name FROM singer AS T1 JOIN singer_in_concert AS T2 ON T1.Singer_ID  =  T2.Singer_ID WHERE T1.Country  =  "United States"
easy gold: SELECT Name FROM singer where country  =  'United States'

当前idx1
____________________
SELECT count(*) FROM Student AS T1 JOIN Has_Pet AS T2 ON T1.StuID  =  T2.StuID JOIN Pets AS T3 ON T2.PetID  =  T3.PetID WHERE T3.PetType  =  "dog"
SELECT count ( * )  FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid   =   T2.stuid JOIN pets AS T3 ON T3.petid   =   T2.petid WHERE T3.pettype   =   'dog'
连接数据库../datasets/cosql_dataset/database/pets_1/pets_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT count(*) FROM Student AS T1 JOIN Has_Pet AS T2 ON T1.StuID  =  T2.StuID JOIN Pets AS T3 ON T2.PetID  =  T3.PetID WHERE T3.PetType  =  "cat"
SELECT count ( * )  FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid   =   T2.stuid JOIN pets AS T3 ON T3.petid   =   T2.petid WHERE T3.pettype   =   'cat'
连接数据库../datasets/cosql_dataset/database/pets_1/pets_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx3
____________________
SELECT T1.Fname FROM Student AS T1 JOIN Has_Pet AS T2 ON T1.StuID  =  T2.StuID JOIN Pets AS T3 ON T2.PetID  =  T3.PetID WHERE T3.PetType  =  "dog"
SELECT DISTINCT T1.Fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid   =   T2.stuid JOIN pets AS T3 ON T3.petid   =   T2.petid WHERE T3.pettype   =   'cat' OR T3.pettype   =   'dog'
连接数据库../datasets/cosql_dataset/database/pets_1/pets_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
extra pred: SELECT T1.Fname FROM Student AS T1 JOIN Has_Pet AS T2 ON T1.StuID  =  T2.StuID JOIN Pets AS T3 ON T2.PetID  =  T3.PetID WHERE T3.PetType  =  "dog"
extra gold: SELECT DISTINCT T1.Fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid   =   T2.stuid JOIN pets AS T3 ON T3.petid   =   T2.petid WHERE T3.pettype   =   'cat' OR T3.pettype   =   'dog'

当前idx1
____________________
SELECT state FROM Professionals GROUP BY state
SELECT state FROM Professionals
连接数据库../datasets/cosql_dataset/database/dog_kennels/dog_kennels.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
easy pred: SELECT state FROM Professionals GROUP BY state
easy gold: SELECT state FROM Professionals

当前idx2
____________________
SELECT state FROM Owners INTERSECT SELECT state FROM Professionals
SELECT state FROM Owners INTERSECT SELECT state FROM Professionals
连接数据库../datasets/cosql_dataset/database/dog_kennels/dog_kennels.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx1
____________________
SELECT first_name FROM Professionals
SELECT DISTINCT first_name FROM professionals
连接数据库../datasets/cosql_dataset/database/dog_kennels/dog_kennels.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT first_name, treatment_type_description FROM Professionals JOIN Treatments ON Professionals.professional_id  =  Treatments.professional_id JOIN Treatment_Types ON Treatments.treatment_type_code  =  Treatment_Types.treatment_type_code
SELECT DISTINCT T1.first_name ,  T3.treatment_type_description FROM professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id   =   T2.professional_id JOIN Treatment_types AS T3 ON T2.treatment_type_code   =   T3.treatment_type_code
连接数据库../datasets/cosql_dataset/database/dog_kennels/dog_kennels.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:True
当前idx3
____________________
SELECT first_name, treatment_type_description FROM Professionals JOIN Treatments ON Professionals.professional_id  =  Treatments.professional_id JOIN Treatment_Types ON Treatments.treatment_type_code  =  Treatment_Types.treatment_type_code
SELECT DISTINCT T1.first_name ,  T3.treatment_type_description FROM professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id   =   T2.professional_id JOIN Treatment_types AS T3 ON T2.treatment_type_code   =   T3.treatment_type_code
连接数据库../datasets/cosql_dataset/database/dog_kennels/dog_kennels.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:True
当前idx1
____________________
SELECT count(Course_ID) FROM course
SELECT count ( Course_ID )  FROM course
连接数据库../datasets/cosql_dataset/database/course_teach/course_teach.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT Course FROM course
SELECT Course FROM course
连接数据库../datasets/cosql_dataset/database/course_teach/course_teach.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx3
____________________
SELECT count(Teacher_ID) FROM course_arrange
SELECT count ( Teacher_ID )  FROM teacher
连接数据库../datasets/cosql_dataset/database/course_teach/course_teach.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:False
easy pred: SELECT count(Teacher_ID) FROM course_arrange
easy gold: SELECT count ( Teacher_ID )  FROM teacher

当前idx4
____________________
SELECT Name FROM teacher WHERE Teacher_ID IN (SELECT Teacher_ID FROM course_arrange WHERE Course_ID IN (SELECT Course_ID FROM course WHERE Course = "Math"))
SELECT T3.Name FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID   =   T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID   =   T3.Teacher_ID WHERE T2.Course   =   "Math"
连接数据库../datasets/cosql_dataset/database/course_teach/course_teach.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
hard pred: SELECT Name FROM teacher WHERE Teacher_ID IN (SELECT Teacher_ID FROM course_arrange WHERE Course_ID IN (SELECT Course_ID FROM course WHERE Course = "Math"))
hard gold: SELECT T3.Name FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID   =   T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID   =   T3.Teacher_ID WHERE T2.Course   =   "Math"

当前idx1
eval_err_num:135
____________________
SELECT Continent, COUNT(*) FROM car_makers GROUP BY Continent
SELECT T1.Continent ,  count ( * )  FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId   =   T2.continent JOIN car_makers AS T3 ON T2.CountryId   =   T3.Country GROUP BY T1.Continent
连接数据库../datasets/cosql_dataset/database/car_1/car_1.sqlite
执行第一个查询
执行出错: no such column: Continent
eval_exec:False
exact_score:0
hard pred: SELECT Continent, COUNT(*) FROM car_makers GROUP BY Continent
hard gold: SELECT T1.Continent ,  count ( * )  FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId   =   T2.continent JOIN car_makers AS T3 ON T2.CountryId   =   T3.Country GROUP BY T1.Continent

当前idx2
eval_err_num:136
____________________
SELECT FullName, Country FROM car_makers WHERE Continent = 1
SELECT T3.fullname,  T2.countryName FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId   =   T2.continent JOIN car_makers AS T3 ON T2.CountryId   =   T3.Country where T1.continent  =  "asia"
连接数据库../datasets/cosql_dataset/database/car_1/car_1.sqlite
执行第一个查询
执行出错: no such column: Continent
eval_exec:False
exact_score:0
hard pred: SELECT FullName, Country FROM car_makers WHERE Continent = 1
hard gold: SELECT T3.fullname,  T2.countryName FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId   =   T2.continent JOIN car_makers AS T3 ON T2.CountryId   =   T3.Country where T1.continent  =  "asia"

当前idx3
eval_err_num:137
____________________
SELECT FullName, Country FROM car_makers WHERE Continent = 2
SELECT T3.fullname,  T2.countryName FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId   =   T2.continent JOIN car_makers AS T3 ON T2.CountryId   =   T3.Country where T1.continent  =  "europe"
连接数据库../datasets/cosql_dataset/database/car_1/car_1.sqlite
执行第一个查询
执行出错: no such column: Continent
eval_exec:False
exact_score:0
hard pred: SELECT FullName, Country FROM car_makers WHERE Continent = 2
hard gold: SELECT T3.fullname,  T2.countryName FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId   =   T2.continent JOIN car_makers AS T3 ON T2.CountryId   =   T3.Country where T1.continent  =  "europe"

当前idx4
eval_err_num:138
____________________
SELECT FullName, Country FROM car_makers WHERE Continent = 3
SELECT T3.fullname,  T2.countryName FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId   =   T2.continent JOIN car_makers AS T3 ON T2.CountryId   =   T3.Country where T1.continent  =  "america"
连接数据库../datasets/cosql_dataset/database/car_1/car_1.sqlite
执行第一个查询
执行出错: no such column: Continent
eval_exec:False
exact_score:0
hard pred: SELECT FullName, Country FROM car_makers WHERE Continent = 3
hard gold: SELECT T3.fullname,  T2.countryName FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId   =   T2.continent JOIN car_makers AS T3 ON T2.CountryId   =   T3.Country where T1.continent  =  "america"

当前idx>4
____________________
SELECT COUNT(*) FROM car_makers
select count ( * )  from car_makers
连接数据库../datasets/cosql_dataset/database/car_1/car_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx1
____________________
SELECT count(DISTINCT professional_id) FROM Treatments
SELECT count ( distinct professional_id )  from professionals
连接数据库../datasets/cosql_dataset/database/dog_kennels/dog_kennels.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:False
easy pred: SELECT count(DISTINCT professional_id) FROM Treatments
easy gold: SELECT count ( distinct professional_id )  from professionals

当前idx2
eval_err_num:139
____________________
SELECT professional_id, first_name, treatment_type_code FROM Treatments
SELECT T1.professional_id, T1.first_name ,  T3.treatment_type_code FROM professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id   =   T2.professional_id JOIN Treatment_types AS T3 ON T2.treatment_type_code   =   T3.treatment_type_code
连接数据库../datasets/cosql_dataset/database/dog_kennels/dog_kennels.sqlite
执行第一个查询
执行出错: no such column: first_name
eval_exec:False
exact_score:0
medium pred: SELECT professional_id, first_name, treatment_type_code FROM Treatments
medium gold: SELECT T1.professional_id, T1.first_name ,  T3.treatment_type_code FROM professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id   =   T2.professional_id JOIN Treatment_types AS T3 ON T2.treatment_type_code   =   T3.treatment_type_code

当前idx3
____________________
SELECT * FROM Treatments ORDER BY date_of_treatment DESC LIMIT 5
SELECT T1.professional_id, T1.first_name, T3.treatment_type_code FROM professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id   =   T2.professional_id JOIN Treatment_types AS T3 ON T2.treatment_type_code   =   T3.treatment_type_code order by T2.date_of_treatment desc limit 5
连接数据库../datasets/cosql_dataset/database/dog_kennels/dog_kennels.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
extra pred: SELECT * FROM Treatments ORDER BY date_of_treatment DESC LIMIT 5
extra gold: SELECT T1.professional_id, T1.first_name, T3.treatment_type_code FROM professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id   =   T2.professional_id JOIN Treatment_types AS T3 ON T2.treatment_type_code   =   T3.treatment_type_code order by T2.date_of_treatment desc limit 5

当前idx1
____________________
SELECT name FROM battle
SELECT name  FROM battle
连接数据库../datasets/cosql_dataset/database/battle_death/battle_death.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT name, bulgarian_commander FROM battle
SELECT name, bulgarian_commander FROM battle
连接数据库../datasets/cosql_dataset/database/battle_death/battle_death.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx3
eval_err_num:140
____________________
SELECT name FROM battle WHERE lost_in_battle != 1 AND location = "English Channel"
SELECT name  FROM battle EXCEPT SELECT T1.name FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle WHERE T2.location  =  'English Channel'
连接数据库../datasets/cosql_dataset/database/battle_death/battle_death.sqlite
执行第一个查询
执行出错: no such column: lost_in_battle
eval_exec:False
exact_score:0
hard pred: SELECT name FROM battle WHERE lost_in_battle != 1 AND location = "English Channel"
hard gold: SELECT name  FROM battle EXCEPT SELECT T1.name FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle WHERE T2.location  =  'English Channel'

当前idx4
eval_err_num:141
____________________
SELECT name, result FROM battle WHERE lost_in_battle != 1 AND location = "English Channel"
SELECT name , RESULT FROM battle EXCEPT SELECT T1.name , T1.result  FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle WHERE T2.location  =  'English Channel'
连接数据库../datasets/cosql_dataset/database/battle_death/battle_death.sqlite
执行第一个查询
执行出错: no such column: lost_in_battle
eval_exec:False
exact_score:0
extra pred: SELECT name, result FROM battle WHERE lost_in_battle != 1 AND location = "English Channel"
extra gold: SELECT name , RESULT FROM battle EXCEPT SELECT T1.name , T1.result  FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle WHERE T2.location  =  'English Channel'

当前idx>4
eval_err_num:142
____________________
SELECT name, result, bulgarian_commander FROM battle WHERE lost_in_battle != 1 AND location = "English Channel"
SELECT name , RESULT , bulgarian_commander FROM battle EXCEPT SELECT T1.name , T1.result , T1.bulgarian_commander FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle WHERE T2.location  =  'English Channel'
连接数据库../datasets/cosql_dataset/database/battle_death/battle_death.sqlite
执行第一个查询
执行出错: no such column: lost_in_battle
eval_exec:False
exact_score:0
extra pred: SELECT name, result, bulgarian_commander FROM battle WHERE lost_in_battle != 1 AND location = "English Channel"
extra gold: SELECT name , RESULT , bulgarian_commander FROM battle EXCEPT SELECT T1.name , T1.result , T1.bulgarian_commander FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle WHERE T2.location  =  'English Channel'

当前idx>4
____________________
SELECT date FROM battle WHERE result = "Bulgarian victory"
SELECT date FROM battle WHERE result  =  "Bulgarian victory"
连接数据库../datasets/cosql_dataset/database/battle_death/battle_death.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx1
____________________
SELECT count(*) FROM Likes
SELECT count ( * )  FROM Likes
连接数据库../datasets/cosql_dataset/database/network_1/network_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT count(*) FROM Friend
SELECT count ( * )  FROM friend
连接数据库../datasets/cosql_dataset/database/network_1/network_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx3
____________________
SELECT student_id FROM Friend WHERE friend_id = 1689
SELECT student_id FROM friend where friend_id  =  1689
连接数据库../datasets/cosql_dataset/database/network_1/network_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx1
____________________
SELECT * FROM Documents
SELECT * FROM Documents
连接数据库../datasets/cosql_dataset/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT * FROM Documents AS T1 JOIN Templates AS T2 ON T1.Template_ID  =  T2.Template_ID
SELECT * FROM Documents AS T1 JOIN Templates AS T2 ON T1.Template_ID   =   T2.Template_ID
连接数据库../datasets/cosql_dataset/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx3
____________________
SELECT count(*) FROM Documents AS T1 JOIN Templates AS T2 ON T1.Template_ID  =  T2.Template_ID WHERE T2.Template_Type_Code  =  'PPT'
SELECT count ( * )  FROM Documents AS T1 JOIN Templates AS T2 ON T1.Template_ID   =   T2.Template_ID WHERE T2.Template_Type_Code   =   'PPT'
连接数据库../datasets/cosql_dataset/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx1
____________________
SELECT avg(Accelerate) FROM cars_data
SELECT AVG ( Accelerate )  FROM cars_data
连接数据库../datasets/cosql_dataset/database/car_1/car_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT avg(Horsepower) FROM cars_data
SELECT AVG ( Horsepower )  FROM cars_data
连接数据库../datasets/cosql_dataset/database/car_1/car_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx3
eval_err_num:143
____________________
SELECT Model FROM cars_data WHERE Cylinders = 4 ORDER BY Horsepower DESC LIMIT 1
SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.Cylinders  =  4 ORDER BY T2.horsepower DESC LIMIT 1
连接数据库../datasets/cosql_dataset/database/car_1/car_1.sqlite
执行第一个查询
执行出错: no such column: Model
eval_exec:False
exact_score:0
extra pred: SELECT Model FROM cars_data WHERE Cylinders = 4 ORDER BY Horsepower DESC LIMIT 1
extra gold: SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.Cylinders  =  4 ORDER BY T2.horsepower DESC LIMIT 1

当前idx1
____________________
SELECT Language FROM countrylanguage WHERE IsOfficial = "T" AND CountryCode IN (SELECT Code FROM country WHERE IndepYear < 1930) GROUP BY Language HAVING COUNT(*) = 1
SELECT count ( DISTINCT T2.Language )  FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code   =   T2.CountryCode WHERE  IndepYear  <  1930 AND T2.IsOfficial   =   "T"
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT Language FROM countrylanguage WHERE IsOfficial = "T" AND CountryCode IN (SELECT Code FROM country WHERE IndepYear < 1930) GROUP BY Language HAVING COUNT(*) = 1
medium gold: SELECT count ( DISTINCT T2.Language )  FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code   =   T2.CountryCode WHERE  IndepYear  <  1930 AND T2.IsOfficial   =   "T"

当前idx2
____________________
SELECT COUNT(*) FROM countrylanguage WHERE IsOfficial = "T" AND CountryCode IN (SELECT Code FROM country WHERE IndepYear < 1930) GROUP BY Language HAVING COUNT(*) = 1
SELECT count ( DISTINCT T2.Language )  FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code   =   T2.CountryCode WHERE  IndepYear  <  1930 AND T2.IsOfficial   =   "T"
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
  | 175/293 [00:02<00:01, 83.29it/s] 63%|██████▎   | 185/293 [00:02<00:01, 87.17it/s] 66%|██████▌   | 194/293 [00:02<00:01, 86.48it/s] 70%|██████▉   | 205/293 [00:02<00:00, 91.94it/s] 73%|███████▎  | 215/293 [00:02<00:00, 91.54it/s] 77%|███████▋  | 225/293 [00:02<00:00, 80.12it/s] 80%|████████  | 235/293 [00:02<00:00, 84.10it/s] 83%|████████▎ | 244/293 [00:02<00:00, 85.13it/s] 86%|████████▋ | 253/293 [00:11<00:11,  3.49it/s] 90%|█████████ | 264/293 [00:11<00:05,  5.15it/s] 93%|█████████▎| 272/293 [00:11<00:03,  6.76it/s] 96%|█████████▌| 280/293 [00:12<00:01,  8.92it/s] 99%|█████████▊| 289/293 [00:12<00:00, 12.21it/s]100%|██████████| 293/293 [00:12<00:00, 24.05it/s]
medium pred: SELECT COUNT(*) FROM countrylanguage WHERE IsOfficial = "T" AND CountryCode IN (SELECT Code FROM country WHERE IndepYear < 1930) GROUP BY Language HAVING COUNT(*) = 1
medium gold: SELECT count ( DISTINCT T2.Language )  FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code   =   T2.CountryCode WHERE  IndepYear  <  1930 AND T2.IsOfficial   =   "T"

275
417
138
320
54
163
18
107
485
1007
55
293
                     easy                 medium               hard                 extra                all                  joint_all           
count                417                  320                  163                  107                  1007                 293                 
=====================   EXECUTION ACCURACY     =====================
execution            0.659                0.431                0.331                0.168                0.482                0.188               

====================== EXACT MATCHING ACCURACY =====================
exact match          0.717                0.328                0.307                0.103                0.462                0.198               


                     turn 1               turn 2               turn 3               turn 4               turn >4             
count                293                  285                  244                  114                  71                  
=====================   TRUN EXECUTION ACCURACY     =====================
execution            0.536                0.470                0.471                0.439                0.408               

====================== TRUN EXACT MATCHING ACCURACY =====================
exact match          0.532                0.460                0.439                0.412                0.338               
符合条件对话总数：293
