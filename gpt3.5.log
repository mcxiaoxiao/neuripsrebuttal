nohup: ignoring input
0it [00:00, ?it/s]278it [00:00, 41038.13it/s]
当前idx1
eval_err_num:1
____________________
SELECT  car_makers.FullName, COUNT(model_list.Model) AS ModelCount FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker GROUP BY car_makers.FullName
SELECT Count ( * )  ,  T2.FullName  FROM MODEL_LIST AS T1 JOIN CAR_MAKERS AS T2 ON T1.Maker   =   T2.Id GROUP BY T2.id
连接数据库../datasets/cosql_dataset/database/car_1/car_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT  car_makers.FullName, COUNT(model_list.Model) AS ModelCount FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker GROUP BY car_makers.FullName
medium gold: SELECT Count ( * )  ,  T2.FullName  FROM MODEL_LIST AS T1 JOIN CAR_MAKERS AS T2 ON T1.Maker   =   T2.Id GROUP BY T2.id

当前idx2
eval_err_num:2
____________________
SELECT  Model, COUNT(*) AS Popularity FROM car_names GROUP BY Model ORDER BY Popularity DESC
SELECT T1.model FROM MODEL_LIST AS T1 JOIN CAR_MAKERS AS T2 ON T1.Maker   =   T2.Id GROUP BY T2.id order by count ( * )  desc limit 1
连接数据库../datasets/cosql_dataset/database/car_1/car_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
extra pred: SELECT  Model, COUNT(*) AS Popularity FROM car_names GROUP BY Model ORDER BY Popularity DESC
extra gold: SELECT T1.model FROM MODEL_LIST AS T1 JOIN CAR_MAKERS AS T2 ON T1.Maker   =   T2.Id GROUP BY T2.id order by count ( * )  desc limit 1

当前idx3
eval_err_num:3
____________________
SELECT  car_makers.FullName, COUNT(model_list.Model) AS ModelCount FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker GROUP BY car_makers.FullName HAVING ModelCount >= 3
SELECT Count ( * )  ,  T2.FullName ,  T2.id FROM MODEL_LIST AS T1 JOIN CAR_MAKERS AS T2 ON T1.Maker   =   T2.Id GROUP BY T2.id having count ( * )   > =  3
连接数据库../datasets/cosql_dataset/database/car_1/car_1.sqlite
执行第一个查询
执行第二个查询
执行出错: near "=": syntax error
eval_exec:False
exact_score:0
medium pred: SELECT  car_makers.FullName, COUNT(model_list.Model) AS ModelCount FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker GROUP BY car_makers.FullName HAVING ModelCount >= 3
medium gold: SELECT Count ( * )  ,  T2.FullName ,  T2.id FROM MODEL_LIST AS T1 JOIN CAR_MAKERS AS T2 ON T1.Maker   =   T2.Id GROUP BY T2.id having count ( * )   > =  3

当前idx1
____________________
SELECT  Name FROM singer
SELECT name FROM singer
连接数据库../datasets/cosql_dataset/database/concert_singer/concert_singer.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
eval_err_num:4
____________________
SELECT  s.Name, COUNT(c.concert_ID) AS Concert_Count FROM singer s LEFT JOIN singer_in_concert sic ON s.Singer_ID = sic.Singer_ID LEFT JOIN concert c ON sic.concert_ID = c.concert_ID GROUP BY s.Name
SELECT T2.name ,  count ( * )  FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id   =   T2.singer_id GROUP BY T2.singer_id
连接数据库../datasets/cosql_dataset/database/concert_singer/concert_singer.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT  s.Name, COUNT(c.concert_ID) AS Concert_Count FROM singer s LEFT JOIN singer_in_concert sic ON s.Singer_ID = sic.Singer_ID LEFT JOIN concert c ON sic.concert_ID = c.concert_ID GROUP BY s.Name
medium gold: SELECT T2.name ,  count ( * )  FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id   =   T2.singer_id GROUP BY T2.singer_id

当前idx1
____________________
SELECT COUNT(*) 
FROM Dogs 
WHERE gender = 'female' 
AND dog_id IN (SELECT dog_id FROM Treatments)
SELECT count ( * )  FROM Dogs WHERE dog_id IN  (  SELECT dog_id FROM Treatments  ) 
连接数据库../datasets/cosql_dataset/database/dog_kennels/dog_kennels.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
hard pred: SELECT COUNT(*) 
FROM Dogs 
WHERE gender = 'female' 
AND dog_id IN (SELECT dog_id FROM Treatments)
hard gold: SELECT count ( * )  FROM Dogs WHERE dog_id IN  (  SELECT dog_id FROM Treatments  ) 

当前idx2
____________________
SELECT age
FROM Dogs 
WHERE gender = 'female' 
AND dog_id IN (SELECT dog_id FROM Treatments)
SELECT age FROM Dogs WHERE dog_id IN  (  SELECT dog_id FROM Treatments  ) 
连接数据库../datasets/cosql_dataset/database/dog_kennels/dog_kennels.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
hard pred: SELECT age
FROM Dogs 
WHERE gender = 'female' 
AND dog_id IN (SELECT dog_id FROM Treatments)
hard gold: SELECT age FROM Dogs WHERE dog_id IN  (  SELECT dog_id FROM Treatments  ) 

当前idx3
____________________
SELECT MAX(weight)
FROM Dogs
WHERE age = '2'
SELECT weight FROM Dogs WHERE age = 2 ORDER BY weight DESC LIMIT 1
连接数据库../datasets/cosql_dataset/database/dog_kennels/dog_kennels.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:0
hard pred: SELECT MAX(weight)
FROM Dogs
WHERE age = '2'
hard gold: SELECT weight FROM Dogs WHERE age = 2 ORDER BY weight DESC LIMIT 1

当前idx1
____________________
SELECT  COUNT(*)  FROM teacher
SELECT COUNT ( * )  FROM teacher
连接数据库../datasets/cosql_dataset/database/course_teach/course_teach.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT  COUNT(*)  FROM course
SELECT COUNT ( * )  FROM course_arrange
连接数据库../datasets/cosql_dataset/database/course_teach/course_teach.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:False
easy pred: SELECT  COUNT(*)  FROM course
easy gold: SELECT COUNT ( * )  FROM course_arrange

当前idx3
eval_err_num:5
____________________
SELECT  t.Name, COUNT(ca.Course_ID) as Number_of_Courses FROM teacher t LEFT JOIN course_arrange ca ON t.Teacher_ID = ca.Teacher_ID GROUP BY t.Name
SELECT T2.Name , COUNT ( * )  FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID  =  T2.Teacher_ID GROUP BY T2.Name
连接数据库../datasets/cosql_dataset/database/course_teach/course_teach.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT  t.Name, COUNT(ca.Course_ID) as Number_of_Courses FROM teacher t LEFT JOIN course_arrange ca ON t.Teacher_ID = ca.Teacher_ID GROUP BY t.Name
medium gold: SELECT T2.Name , COUNT ( * )  FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID  =  T2.Teacher_ID GROUP BY T2.Name

当前idx4
____________________
SELECT  Name, Age FROM teacher
SELECT Name , age FROM teacher
连接数据库../datasets/cosql_dataset/database/course_teach/course_teach.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx1
____________________
SELECT  latin_commander FROM battle WHERE name = 'Battle of Serres'
SELECT latin_commander FROM battle WHERE name  =  "Battle of Serres"
连接数据库../datasets/cosql_dataset/database/battle_death/battle_death.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT  result FROM battle WHERE date = '31st January 1206'
SELECT result FROM battle WHERE date  =  "31 January 1206"
连接数据库../datasets/cosql_dataset/database/battle_death/battle_death.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:True
当前idx3
____________________
SELECT  bulgarian_commander FROM battle WHERE date LIKE '%June 1205%'
SELECT bulgarian_commander FROM battle WHERE date  =  "June 1205"
连接数据库../datasets/cosql_dataset/database/battle_death/battle_death.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:0
easy pred: SELECT  bulgarian_commander FROM battle WHERE date LIKE '%June 1205%'
easy gold: SELECT bulgarian_commander FROM battle WHERE date  =  "June 1205"

当前idx4
____________________
SELECT  name FROM battle WHERE latin_commander = 'Baldwin 1'
SELECT name FROM battle WHERE latin_commander  =  "Baldwin I"
连接数据库../datasets/cosql_dataset/database/battle_death/battle_death.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:True
当前idx1
eval_err_num:6
____________________
SELECT  COUNT(*) AS Number_of_TV_Channels FROM TV_Channel
SELECT count ( * )  FROM TV_Channel
连接数据库../datasets/cosql_dataset/database/tvshow/tvshow.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
easy pred: SELECT  COUNT(*) AS Number_of_TV_Channels FROM TV_Channel
easy gold: SELECT count ( * )  FROM TV_Channel

当前idx2
____________________
SELECT  Language FROM TV_Channel WHERE series_name = 'Sky Music'
SELECT language FROM TV_Channel where series_name = 'Sky Music'
连接数据库../datasets/cosql_dataset/database/tvshow/tvshow.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx3
____________________
SELECT  Title FROM Cartoon WHERE id = 2.0
SELECT title FROM Cartoon where id = 2.0
连接数据库../datasets/cosql_dataset/database/tvshow/tvshow.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx1
____________________
SELECT  MAX(Horsepower) FROM cars_data
SELECT Horsepower FROM CARS_DATA ORDER BY Horsepower DESC LIMIT 1
连接数据库../datasets/cosql_dataset/database/car_1/car_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:0
medium pred: SELECT  MAX(Horsepower) FROM cars_data
medium gold: SELECT Horsepower FROM CARS_DATA ORDER BY Horsepower DESC LIMIT 1

当前idx2
____________________
SELECT  COUNT(*) FROM cars_data
SELECT count ( * )  FROM CARS_DATA
连接数据库../datasets/cosql_dataset/database/car_1/car_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx3
____________________
SELECT  COUNT(DISTINCT Cylinders) FROM cars_data
SELECT sum ( cylinders )  FROM CARS_DATA
连接数据库../datasets/cosql_dataset/database/car_1/car_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
easy pred: SELECT  COUNT(DISTINCT Cylinders) FROM cars_data
easy gold: SELECT sum ( cylinders )  FROM CARS_DATA

当前idx1
____________________
SELECT  District FROM shop ORDER BY Number_products DESC LIMIT 1
SELECT district FROM shop ORDER BY number_products DESC LIMIT 1
连接数据库../datasets/cosql_dataset/database/employee_hire_evaluation/employee_hire_evaluation.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT  Manager_name FROM shop WHERE Number_products = (SELECT MAX(Number_products) FROM shop)
SELECT manager_name FROM shop ORDER BY number_products DESC LIMIT 1
连接数据库../datasets/cosql_dataset/database/employee_hire_evaluation/employee_hire_evaluation.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:0
medium pred: SELECT  Manager_name FROM shop WHERE Number_products = (SELECT MAX(Number_products) FROM shop)
medium gold: SELECT manager_name FROM shop ORDER BY number_products DESC LIMIT 1

当前idx3
____________________
SELECT  Number_products FROM shop WHERE Number_products = (SELECT MAX(Number_products) FROM shop)
SELECT number_products FROM shop ORDER BY number_products DESC LIMIT 1
连接数据库../datasets/cosql_dataset/database/employee_hire_evaluation/employee_hire_evaluation.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:0
medium pred: SELECT  Number_products FROM shop WHERE Number_products = (SELECT MAX(Number_products) FROM shop)
medium gold: SELECT number_products FROM shop ORDER BY number_products DESC LIMIT 1

当前idx4
____________________
SELECT  Location FROM shop WHERE District = (SELECT District FROM shop ORDER BY Number_products DESC LIMIT 1)
SELECT location FROM shop ORDER BY number_products DESC LIMIT 1
连接数据库../datasets/cosql_dataset/database/employee_hire_evaluation/employee_hire_evaluation.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:0
medium pred: SELECT  Location FROM shop WHERE District = (SELECT District FROM shop ORDER BY Number_products DESC LIMIT 1)
medium gold: SELECT location FROM shop ORDER BY number_products DESC LIMIT 1

当前idx>4
____________________
SELECT  Shop_ID FROM shop WHERE District = (SELECT District FROM shop ORDER BY Number_products DESC LIMIT 1)
SELECT shop_ID FROM shop ORDER BY number_products DESC LIMIT 1
连接数据库../datasets/cosql_dataset/database/employee_hire_evaluation/employee_hire_evaluation.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:0
medium pred: SELECT  Shop_ID FROM shop WHERE District = (SELECT District FROM shop ORDER BY Number_products DESC LIMIT 1)
medium gold: SELECT shop_ID FROM shop ORDER BY number_products DESC LIMIT 1

当前idx1
eval_err_num:7
____________________
SELECT  AVG(Population) AS AveragePopulation FROM city
SELECT avg ( Population )  FROM city
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
easy pred: SELECT  AVG(Population) AS AveragePopulation FROM city
easy gold: SELECT avg ( Population )  FROM city

当前idx2
____________________
SELECT  District FROM city WHERE Population > (SELECT AVG(Population) FROM city)
SELECT District FROM city WHERE Population  >   ( SELECT avg ( Population )  FROM city ) 
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx3
____________________
SELECT  District, COUNT(*) FROM city WHERE Population > (SELECT AVG(Population) FROM city) GROUP BY District
SELECT count ( * )  ,  District FROM city WHERE Population  >   ( SELECT avg ( Population )  FROM city )  GROUP BY District
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx1
____________________
SELECT  Name FROM country WHERE GovernmentForm = 'US territory'
SELECT Name FROM country WHERE GovernmentForm   =   "US Territory"
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:True
当前idx2
____________________
SELECT  Name, GNP, Population FROM country WHERE GovernmentForm = 'US territory'
SELECT GNP, population FROM country WHERE GovernmentForm   =   "US Territory"
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT  Name, GNP, Population FROM country WHERE GovernmentForm = 'US territory'
medium gold: SELECT GNP, population FROM country WHERE GovernmentForm   =   "US Territory"

当前idx3
eval_err_num:8
____________________
SELECT  AVG(GNP) AS Average_GNP, SUM(Population) AS Total_Population FROM country WHERE GovernmentForm = 'US territory'
SELECT avg ( GNP )  ,  sum ( population )  FROM country WHERE GovernmentForm   =   "US Territory"
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT  AVG(GNP) AS Average_GNP, SUM(Population) AS Total_Population FROM country WHERE GovernmentForm = 'US territory'
medium gold: SELECT avg ( GNP )  ,  sum ( population )  FROM country WHERE GovernmentForm   =   "US Territory"

当前idx1
____________________
SELECT  SUM(SurfaceArea)  FROM country  WHERE Continent = 'Asia'
SELECT sum ( SurfaceArea )  FROM country WHERE Continent  =  "Asia"
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT  LocalName  FROM country
SELECT LocalName FROM country
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx3
____________________
SELECT  Code  FROM country  WHERE Name = 'Aruba'
SELECT Code FROM country WHERE Name  =  "Aruba"
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx1
____________________
SELECT  COUNT(*) FROM shop
SELECT count ( * )  FROM shop
连接数据库../datasets/cosql_dataset/database/employee_hire_evaluation/employee_hire_evaluation.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT  Name FROM shop
SELECT * FROM shop
连接数据库../datasets/cosql_dataset/database/employee_hire_evaluation/employee_hire_evaluation.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
easy pred: SELECT  Name FROM shop
easy gold: SELECT * FROM shop

当前idx3
eval_err_num:9
____________________
SELECT  s.Name, COUNT(h.Employee_ID) AS Num_Employees FROM shop s LEFT JOIN hiring h ON s.Shop_ID = h.Shop_ID GROUP BY s.Name
SELECT count ( * )  FROM hiring AS t1 JOIN shop AS t2 ON t1.shop_id   =   t2.shop_id GROUP BY t2.name
连接数据库../datasets/cosql_dataset/database/employee_hire_evaluation/employee_hire_evaluation.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT  s.Name, COUNT(h.Employee_ID) AS Num_Employees FROM shop s LEFT JOIN hiring h ON s.Shop_ID = h.Shop_ID GROUP BY s.Name
medium gold: SELECT count ( * )  FROM hiring AS t1 JOIN shop AS t2 ON t1.shop_id   =   t2.shop_id GROUP BY t2.name

当前idx1
____________________
SELECT  Name FROM singer
SELECT name from singer
连接数据库../datasets/cosql_dataset/database/concert_singer/concert_singer.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT  Song_release_year FROM singer WHERE Name = 'Joe Sharp' AND Song_Name = 'You'
SELECT song_release_year from singer where Name  =  "Joe Sharp" and Song_Name  =  "You"
连接数据库../datasets/cosql_dataset/database/concert_singer/concert_singer.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx3
eval_err_num:10
____________________
SELECT  COUNT(concert_ID) AS Number_of_Concerts FROM singer_in_concert WHERE Singer_ID = (SELECT Singer_ID FROM singer WHERE Name = 'Joe Sharp')
SELECT count ( * )  FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id   =   T2.singer_id where T2.name  =  "Joe Sharp" GROUP BY T2.singer_id
连接数据库../datasets/cosql_dataset/database/concert_singer/concert_singer.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
hard pred: SELECT  COUNT(concert_ID) AS Number_of_Concerts FROM singer_in_concert WHERE Singer_ID = (SELECT Singer_ID FROM singer WHERE Name = 'Joe Sharp')
hard gold: SELECT count ( * )  FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id   =   T2.singer_id where T2.name  =  "Joe Sharp" GROUP BY T2.singer_id

当前idx4
____________________
SELECT  Country FROM singer WHERE Name = 'Joe Sharp'
SELECT country from singer where name  =  "Joe Sharp"
连接数据库../datasets/cosql_dataset/database/concert_singer/concert_singer.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx1
____________________
SELECT  Continent FROM continents
SELECT Continent FROM CONTINENTS
连接数据库../datasets/cosql_dataset/database/car_1/car_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
eval_err_num:11
____________________
SELECT  c.ContId, c.Continent, COUNT(co.CountryId) AS NumCountries FROM continents c LEFT JOIN countries co ON c.ContId = co.Continent GROUP BY c.ContId, c.Continent
SELECT T1.ContId ,  T1.Continent ,  count ( * )  FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId   =   T2.Continent GROUP BY T1.ContId
连接数据库../datasets/cosql_dataset/database/car_1/car_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT  c.ContId, c.Continent, COUNT(co.CountryId) AS NumCountries FROM continents c LEFT JOIN countries co ON c.ContId = co.Continent GROUP BY c.ContId, c.Continent
medium gold: SELECT T1.ContId ,  T1.Continent ,  count ( * )  FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId   =   T2.Continent GROUP BY T1.ContId

当前idx1
____________________
SELECT Model
FROM model_list
WHERE ModelId IN (
    SELECT Id
    FROM cars_data
    WHERE Weight < 3500
)
SELECT DISTINCT T1.model FROM MODEL_LIST AS T1 JOIN CAR_NAMES AS T2 ON T1.Model   =   T2.Model JOIN CARS_DATA AS T3 ON T2.MakeId   =   T3.Id JOIN CAR_MAKERS AS T4 ON T1.Maker   =   T4.Id WHERE T3.weight  <  3500
连接数据库../datasets/cosql_dataset/database/car_1/car_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
extra pred: SELECT Model
FROM model_list
WHERE ModelId IN (
    SELECT Id
    FROM cars_data
    WHERE Weight < 3500
)
extra gold: SELECT DISTINCT T1.model FROM MODEL_LIST AS T1 JOIN CAR_NAMES AS T2 ON T1.Model   =   T2.Model JOIN CARS_DATA AS T3 ON T2.MakeId   =   T3.Id JOIN CAR_MAKERS AS T4 ON T1.Maker   =   T4.Id WHERE T3.weight  <  3500

当前idx2
eval_err_num:12
____________________
SELECT Weight
FROM cars_data
WHERE Id IN (
    SELECT Id
    FROM car_names
    WHERE Make = 'BMW'
)
SELECT DISTINCT T3.Weight FROM MODEL_LIST AS T1 JOIN CAR_NAMES AS T2 ON T1.Model   =   T2.Model JOIN CARS_DATA AS T3 ON T2.MakeId   =   T3.Id JOIN CAR_MAKERS AS T4 ON T1.Maker   =   T4.Id WHERE T1.Model = "bmw"
连接数据库../datasets/cosql_dataset/database/car_1/car_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
extra pred: SELECT Weight
FROM cars_data
WHERE Id IN (
    SELECT Id
    FROM car_names
    WHERE Make = 'BMW'
)
extra gold: SELECT DISTINCT T3.Weight FROM MODEL_LIST AS T1 JOIN CAR_NAMES AS T2 ON T1.Model   =   T2.Model JOIN CARS_DATA AS T3 ON T2.MakeId   =   T3.Id JOIN CAR_MAKERS AS T4 ON T1.Maker   =   T4.Id WHERE T1.Model = "bmw"

当前idx3
____________________
SELECT Maker
FROM car_makers
WHERE Id = 2
SELECT Model FROM car_names WHERE MakeId = 2
连接数据库../datasets/cosql_dataset/database/car_1/car_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
easy pred: SELECT Maker
FROM car_makers
WHERE Id = 2
easy gold: SELECT Model FROM car_names WHERE MakeId = 2

当前idx1
eval_err_num:13
____________________
SELECT  COUNT(*) AS Total_Singers FROM singer
SELECT count ( * )  from singer
连接数据库../datasets/cosql_dataset/database/singer/singer.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
easy pred: SELECT  COUNT(*) AS Total_Singers FROM singer
easy gold: SELECT count ( * )  from singer

当前idx2
____________________
SELECT  Citizenship FROM singer WHERE Name = 'Alice Walton'
SELECT citizenship from singer where name  =  "Alice Walton"
连接数据库../datasets/cosql_dataset/database/singer/singer.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx3
____________________
SELECT  Sales FROM song WHERE Song_ID = 3
SELECT Sales from song where song_id  =  3
连接数据库../datasets/cosql_dataset/database/singer/singer.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx1
____________________
SELECT  Country  FROM airlines  WHERE Abbreviation = 'delta'
SELECT country FROM AIRLINES where Airline  =  'Delta Airlines'
连接数据库../datasets/cosql_dataset/database/flight_2/flight_2.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
easy pred: SELECT  Country  FROM airlines  WHERE Abbreviation = 'delta'
easy gold: SELECT country FROM AIRLINES where Airline  =  'Delta Airlines'

当前idx2
____________________
SELECT  DestAirport  FROM flights  WHERE FlightNo = 44
SELECT DestAirport FROM flights where FlightNo  =  44
连接数据库../datasets/cosql_dataset/database/flight_2/flight_2.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx3
eval_err_num:14
____________________
SELECT  Airline, COUNT(*) AS NumFlights FROM flights GROUP BY Airline ORDER BY NumFlights DESC LIMIT 1
SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid   =   T2.Airline GROUP BY T1.Airline ORDER BY count ( * )  DESC LIMIT 1
连接数据库../datasets/cosql_dataset/database/flight_2/flight_2.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
extra pred: SELECT  Airline, COUNT(*) AS NumFlights FROM flights GROUP BY Airline ORDER BY NumFlights DESC LIMIT 1
extra gold: SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid   =   T2.Airline GROUP BY T1.Airline ORDER BY count ( * )  DESC LIMIT 1

当前idx1
eval_err_num:15
____________________
SELECT  COUNT(DISTINCT course_id) AS num_courses FROM Courses
SELECT  count ( distinct course_id )  from courses
连接数据库../datasets/cosql_dataset/database/student_transcripts_tracking/student_transcripts_tracking.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
easy pred: SELECT  COUNT(DISTINCT course_id) AS num_courses FROM Courses
easy gold: SELECT  count ( distinct course_id )  from courses

当前idx2
eval_err_num:16
____________________
SELECT  c.course_name FROM Courses c JOIN Student_Enrolment_Courses sec ON c.course_id = sec.course_id GROUP BY c.course_id ORDER BY COUNT(sec.student_enrolment_id) LIMIT 1
SELECT  T1.course_name FROM Courses AS T1 JOIN Student_Enrolment_Courses AS T2 ON T1.course_id   =   T2.course_id GROUP BY T1.course_name ORDER BY count ( * )  LIMIT 1
连接数据库../datasets/cosql_dataset/database/student_transcripts_tracking/student_transcripts_tracking.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
extra pred: SELECT  c.course_name FROM Courses c JOIN Student_Enrolment_Courses sec ON c.course_id = sec.course_id GROUP BY c.course_id ORDER BY COUNT(sec.student_enrolment_id) LIMIT 1
extra gold: SELECT  T1.course_name FROM Courses AS T1 JOIN Student_Enrolment_Courses AS T2 ON T1.course_id   =   T2.course_id GROUP BY T1.course_name ORDER BY count ( * )  LIMIT 1

当前idx1
____________________
SELECT  COUNT(*)  FROM concert
SELECT  count ( * )  FROM concert
连接数据库../datasets/cosql_dataset/database/concert_singer/concert_singer.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
eval_err_num:17
____________________
SELECT  s.Name AS Stadium_Name, COUNT(c.concert_ID) AS Number_of_Concerts FROM stadium s LEFT JOIN concert c ON s.Stadium_ID = c.Stadium_ID GROUP BY s.Name
SELECT T2.name , count ( * )  FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id GROUP BY T1.stadium_id
连接数据库../datasets/cosql_dataset/database/concert_singer/concert_singer.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT  s.Name AS Stadium_Name, COUNT(c.concert_ID) AS Number_of_Concerts FROM stadium s LEFT JOIN concert c ON s.Stadium_ID = c.Stadium_ID GROUP BY s.Name
medium gold: SELECT T2.name , count ( * )  FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id GROUP BY T1.stadium_id

当前idx3
eval_err_num:18
____________________
SELECT  Capacity FROM stadium WHERE Name = 'Stark''s Park'
SELECT capacity from stadium where name  =  "Stark s Park"
连接数据库../datasets/cosql_dataset/database/concert_singer/concert_singer.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
easy pred: SELECT  Capacity FROM stadium WHERE Name = 'Stark''s Park'
easy gold: SELECT capacity from stadium where name  =  "Stark s Park"

当前idx4
____________________
SELECT  concert_Name FROM concert
SELECT concert_name from concert
连接数据库../datasets/cosql_dataset/database/concert_singer/concert_singer.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx1
eval_err_num:19
____________________
SELECT  COUNT(DISTINCT treatment_type_code) AS number_of_treatments FROM Treatment_Types
select count ( * )  from  ( SELECT distinct treatment_type_code from treatments ) 
连接数据库../datasets/cosql_dataset/database/dog_kennels/dog_kennels.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
easy pred: SELECT  COUNT(DISTINCT treatment_type_code) AS number_of_treatments FROM Treatment_Types
easy gold: select count ( * )  from  ( SELECT distinct treatment_type_code from treatments ) 

当前idx2
eval_err_num:20
____________________
SELECT  treatment_type_code, MAX(cost_of_treatment) AS max_cost FROM Treatments GROUP BY treatment_type_code ORDER BY max_cost DESC LIMIT 1
SELECT * FROM Treatments ORDER BY cost_of_treatment DESC LIMIT 1
连接数据库../datasets/cosql_dataset/database/dog_kennels/dog_kennels.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT  treatment_type_code, MAX(cost_of_treatment) AS max_cost FROM Treatments GROUP BY treatment_type_code ORDER BY max_cost DESC LIMIT 1
medium gold: SELECT * FROM Treatments ORDER BY cost_of_treatment DESC LIMIT 1

当前idx3
eval_err_num:21
____________________
SELECT  MAX(cost_of_treatment) AS max_recent_cost FROM Treatments WHERE date_of_treatment = (SELECT MAX(date_of_treatment) FROM Treatments)
SELECT cost_of_treatment FROM Treatments ORDER BY date_of_treatment DESC LIMIT 1
连接数据库../datasets/cosql_dataset/database/dog_kennels/dog_kennels.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT  MAX(cost_of_treatment) AS max_recent_cost FROM Treatments WHERE date_of_treatment = (SELECT MAX(date_of_treatment) FROM Treatments)
medium gold: SELECT cost_of_treatment FROM Treatments ORDER BY date_of_treatment DESC LIMIT 1

当前idx1
____________________
SELECT  Airline FROM flights GROUP BY Airline HAVING COUNT(*) < 200
SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid   =   T2.Airline GROUP BY T1.Airline HAVING count ( * )   <  200
连接数据库../datasets/cosql_dataset/database/flight_2/flight_2.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT  Airline FROM flights GROUP BY Airline HAVING COUNT(*) < 200
medium gold: SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid   =   T2.Airline GROUP BY T1.Airline HAVING count ( * )   <  200

当前idx2
____________________
SELECT  airlines.Country FROM airlines WHERE airlines.uid IN (     SELECT flights.Airline     FROM flights     GROUP BY flights.Airline     HAVING COUNT(*) < 200     LIMIT 3 )
SELECT T1.Airline, T2.DestAirport FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid   =   T2.Airline GROUP BY T1.Airline HAVING count ( * )   <  200 limit 3
连接数据库../datasets/cosql_dataset/database/flight_2/flight_2.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
hard pred: SELECT  airlines.Country FROM airlines WHERE airlines.uid IN (     SELECT flights.Airline     FROM flights     GROUP BY flights.Airline     HAVING COUNT(*) < 200     LIMIT 3 )
hard gold: SELECT T1.Airline, T2.DestAirport FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid   =   T2.Airline GROUP BY T1.Airline HAVING count ( * )   <  200 limit 3

当前idx1
____________________
SELECT  Nationality FROM people GROUP BY Nationality HAVING COUNT(*) > 1
SELECT Nationality FROM people GROUP BY Nationality HAVING COUNT ( * )   >  1
连接数据库../datasets/cosql_dataset/database/poker_player/poker_player.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT  People_ID FROM people WHERE Nationality = 'Russia'
SELECT People_ID FROM people WHERE Nationality  =  'Russia'
连接数据库../datasets/cosql_dataset/database/poker_player/poker_player.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx3
____________________
SELECT  People_ID, Name FROM people WHERE Nationality = 'Russia'
SELECT People_ID, name FROM people WHERE Nationality  =  'Russia'
连接数据库../datasets/cosql_dataset/database/poker_player/poker_player.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx1
eval_err_num:22
____________________
SELECT  AVG(loser_age) AS average_age_of_losers FROM matches
SELECT avg ( loser_age )  FROM matches
连接数据库../datasets/cosql_dataset/database/wta_1/wta_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
easy pred: SELECT  AVG(loser_age) AS average_age_of_losers FROM matches
easy gold: SELECT avg ( loser_age )  FROM matches

当前idx2
eval_err_num:23
____________________
SELECT  AVG(winner_age) AS average_age_of_winners FROM matches
SELECT avg ( winner_age )  FROM matches
连接数据库../datasets/cosql_dataset/database/wta_1/wta_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
easy pred: SELECT  AVG(winner_age) AS average_age_of_winners FROM matches
easy gold: SELECT avg ( winner_age )  FROM matches

当前idx3
eval_err_num:24
____________________
SELECT  AVG(minutes) AS average_minutes_of_matches FROM matches
SELECT avg ( minutes )  FROM matches
连接数据库../datasets/cosql_dataset/database/wta_1/wta_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
easy pred: SELECT  AVG(minutes) AS average_minutes_of_matches FROM matches
easy gold: SELECT avg ( minutes )  FROM matches

当前idx4
eval_err_num:25
____________________
SELECT  MAX(minutes) AS longest_match_minutes FROM matches
SELECT max ( minutes )  FROM matches
连接数据库../datasets/cosql_dataset/database/wta_1/wta_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
easy pred: SELECT  MAX(minutes) AS longest_match_minutes FROM matches
easy gold: SELECT max ( minutes )  FROM matches

当前idx>4
eval_err_num:26
____________________
SELECT  MIN(minutes) AS shortest_match_minutes FROM matches
SELECT min ( minutes )  FROM matches
连接数据库../datasets/cosql_dataset/database/wta_1/wta_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
easy pred: SELECT  MIN(minutes) AS shortest_match_minutes FROM matches
easy gold: SELECT min ( minutes )  FROM matches

当前idx1
eval_err_num:27
____________________
SELECT  COUNT(*)  FROM flights  WHERE DestAirport IN ('Aberdeen', 'Abilene')
SELECT count ( * )  FROM Flights AS T1 JOIN Airports AS T2 ON T1.DestAirport   =   T2.AirportCode WHERE T2.city  like  "%Aberdeen%" OR T2.city  like  "%Abilene%"
连接数据库../datasets/cosql_dataset/database/flight_2/flight_2.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
extra pred: SELECT  COUNT(*)  FROM flights  WHERE DestAirport IN ('Aberdeen', 'Abilene')
extra gold: SELECT count ( * )  FROM Flights AS T1 JOIN Airports AS T2 ON T1.DestAirport   =   T2.AirportCode WHERE T2.city  like  "%Aberdeen%" OR T2.city  like  "%Abilene%"

当前idx1
____________________
SELECT  Name FROM museum
SELECT name from museum
连接数据库../datasets/cosql_dataset/database/museum_visit/museum_visit.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx1
____________________
SELECT  Title FROM Cartoon WHERE Directed_by = 'Ben Jones' OR Directed_by = 'Brandon Vietti'
SELECT Title FROM Cartoon WHERE Directed_by  =  "Ben Jones" OR Directed_by  =  "Brandon Vietti"
连接数据库../datasets/cosql_dataset/database/tvshow/tvshow.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT  Title, Original_air_date FROM Cartoon WHERE Directed_by = 'Ben Jones' OR Directed_by = 'Brandon Vietti'
SELECT Title, original_air_date FROM Cartoon WHERE Directed_by  =  "Ben Jones" OR Directed_by  =  "Brandon Vietti"
连接数据库../datasets/cosql_dataset/database/tvshow/tvshow.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx3
____________________
SELECT  Title, Written_by FROM Cartoon WHERE Directed_by = 'Ben Jones' OR Directed_by = 'Brandon Vietti'
SELECT Title, written_by FROM Cartoon WHERE Directed_by  =  "Ben Jones" OR Directed_by  =  "Brandon Vietti"
连接数据库../datasets/cosql_dataset/database/tvshow/tvshow.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx1
____________________
SELECT  * FROM Documents WHERE Document_Description LIKE '%w%'
SELECT * from Documents WHERE Document_Description LIKE "%w%"
连接数据库../datasets/cosql_dataset/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT  Document_Name FROM Documents WHERE Document_Description LIKE '%w%'
SELECT document_name from Documents WHERE Document_Description LIKE "%w%"
连接数据库../datasets/cosql_dataset/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx3
____________________
SELECT  Document_Name, Template_ID FROM Documents WHERE Document_Description LIKE '%w%'
SELECT document_name , template_id FROM Documents WHERE Document_Description LIKE "%w%"
连接数据库../datasets/cosql_dataset/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx1
eval_err_num:28
____________________
SELECT  AVG(loser_age) AS average_loser_age FROM matches
SELECT avg ( loser_age )   FROM matches
连接数据库../datasets/cosql_dataset/database/wta_1/wta_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
easy pred: SELECT  AVG(loser_age) AS average_loser_age FROM matches
easy gold: SELECT avg ( loser_age )   FROM matches

当前idx2
eval_err_num:29
____________________
SELECT  AVG(winner_age) AS average_winner_age FROM matches
SELECT avg ( winner_age )   FROM matches
连接数据库../datasets/cosql_dataset/database/wta_1/wta_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
easy pred: SELECT  AVG(winner_age) AS average_winner_age FROM matches
easy gold: SELECT avg ( winner_age )   FROM matches

当前idx3
eval_err_num:30
____________________
SELECT  COUNT(*) AS left_handed_winners FROM matches WHERE winner_hand = 'L'
SELECT count ( * )  from matches where winner_hand  =  "L"
连接数据库../datasets/cosql_dataset/database/wta_1/wta_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
easy pred: SELECT  COUNT(*) AS left_handed_winners FROM matches WHERE winner_hand = 'L'
easy gold: SELECT count ( * )  from matches where winner_hand  =  "L"

当前idx4
____________________
SELECT  winner_name, loser_name FROM matches ORDER BY minutes DESC LIMIT 1
SELECT winner_name, loser_name from matches where minutes  =   ( select max ( minutes )  from matches ) 
连接数据库../datasets/cosql_dataset/database/wta_1/wta_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:0
extra pred: SELECT  winner_name, loser_name FROM matches ORDER BY minutes DESC LIMIT 1
extra gold: SELECT winner_name, loser_name from matches where minutes  =   ( select max ( minutes )  from matches ) 

当前idx1
____________________
SELECT  name FROM Dogs
SELECT name FROM Dogs
连接数据库../datasets/cosql_dataset/database/dog_kennels/dog_kennels.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
eval_err_num:31
____________________
SELECT  d.name FROM Dogs d JOIN Breeds b ON d.breed_code = b.breed_code WHERE b.breed_name = 'rarest breed'
SELECT name FROM Dogs WHERE breed_code   =    (  SELECT breed_code FROM Dogs GROUP BY breed_code ORDER BY count ( * )  ASC LIMIT 1  ) 
连接数据库../datasets/cosql_dataset/database/dog_kennels/dog_kennels.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
hard pred: SELECT  d.name FROM Dogs d JOIN Breeds b ON d.breed_code = b.breed_code WHERE b.breed_name = 'rarest breed'
hard gold: SELECT name FROM Dogs WHERE breed_code   =    (  SELECT breed_code FROM Dogs GROUP BY breed_code ORDER BY count ( * )  ASC LIMIT 1  ) 

当前idx3
____________________
SELECT  name, gender FROM Dogs
SELECT name, gender FROM Dogs WHERE breed_code   =    (  SELECT breed_code FROM Dogs GROUP BY breed_code ORDER BY count ( * )  ASC LIMIT 1  ) 
连接数据库../datasets/cosql_dataset/database/dog_kennels/dog_kennels.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
extra pred: SELECT  name, gender FROM Dogs
extra gold: SELECT name, gender FROM Dogs WHERE breed_code   =    (  SELECT breed_code FROM Dogs GROUP BY breed_code ORDER BY count ( * )  ASC LIMIT 1  ) 

当前idx4
eval_err_num:32
____________________
SELECT  d.name, p.first_name, p.last_name FROM Dogs d JOIN Treatments t ON d.dog_id = t.dog_id JOIN Professionals p ON t.professional_id = p.professional_id
SELECT T1.name ,  T2.date_of_treatment FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id   =   T2.dog_id WHERE T1.breed_code   =    (  SELECT breed_code FROM Dogs GROUP BY breed_code ORDER BY count ( * )  ASC LIMIT 1  ) 
连接数据库../datasets/cosql_dataset/database/dog_kennels/dog_kennels.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
extra pred: SELECT  d.name, p.first_name, p.last_name FROM Dogs d JOIN Treatments t ON d.dog_id = t.dog_id JOIN Professionals p ON t.professional_id = p.professional_id
extra gold: SELECT T1.name ,  T2.date_of_treatment FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id   =   T2.dog_id WHERE T1.breed_code   =    (  SELECT breed_code FROM Dogs GROUP BY breed_code ORDER BY count ( * )  ASC LIMIT 1  ) 

当前idx1
____________________
SELECT  COUNT(DISTINCT StuID) FROM Has_Pet JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Pets.PetType = 'cat'
SELECT count ( * )  FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat'
连接数据库../datasets/cosql_dataset/database/pets_1/pets_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
hard pred: SELECT  COUNT(DISTINCT StuID) FROM Has_Pet JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Pets.PetType = 'cat'
hard gold: SELECT count ( * )  FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat'

当前idx2
____________________
SELECT  COUNT(DISTINCT StuID) FROM Student WHERE StuID NOT IN (     SELECT StuID     FROM Has_Pet     JOIN Pets ON Has_Pet.PetID = Pets.PetID     WHERE Pets.PetType = 'cat' )
select count ( * )  from  ( SELECT stuid FROM student EXCEPT SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid   =   T2.stuid JOIN pets AS T3 ON T3.petid   =   T2.petid WHERE T3.pettype   =   'cat' ) 
连接数据库../datasets/cosql_dataset/database/pets_1/pets_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
easy pred: SELECT  COUNT(DISTINCT StuID) FROM Student WHERE StuID NOT IN (     SELECT StuID     FROM Has_Pet     JOIN Pets ON Has_Pet.PetID = Pets.PetID     WHERE Pets.PetType = 'cat' )
easy gold: select count ( * )  from  ( SELECT stuid FROM student EXCEPT SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid   =   T2.stuid JOIN pets AS T3 ON T3.petid   =   T2.petid WHERE T3.pettype   =   'cat' ) 

当前idx3
____________________
SELECT  DISTINCT StuID FROM Student WHERE StuID NOT IN (     SELECT StuID     FROM Has_Pet     JOIN Pets ON Has_Pet.PetID = Pets.PetID     WHERE Pets.PetType = 'cat' )
SELECT stuid FROM student EXCEPT SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid   =   T2.stuid JOIN pets AS T3 ON T3.petid   =   T2.petid WHERE T3.pettype   =   'cat'
连接数据库../datasets/cosql_dataset/database/pets_1/pets_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:0
hard pred: SELECT  DISTINCT StuID FROM Student WHERE StuID NOT IN (     SELECT StuID     FROM Has_Pet     JOIN Pets ON Has_Pet.PetID = Pets.PetID     WHERE Pets.PetType = 'cat' )
hard gold: SELECT stuid FROM student EXCEPT SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid   =   T2.stuid JOIN pets AS T3 ON T3.petid   =   T2.petid WHERE T3.pettype   =   'cat'

当前idx1
eval_err_num:33
____________________
SELECT  DISTINCT v.Name FROM visitor v JOIN visit vi ON v.ID = vi.visitor_ID JOIN museum m ON vi.Museum_ID = m.Museum_ID WHERE m.Open_Year < 2009 AND m.Open_Year > 2011
SELECT t1.name FROM visitor AS t1 JOIN visit AS t2 ON t1.id   =   t2.visitor_id JOIN museum AS t3 ON t3.Museum_ID   =   t2.Museum_ID WHERE t3.open_year  <  2009 INTERSECT SELECT t1.name FROM visitor AS t1 JOIN visit AS t2 ON t1.id   =   t2.visitor_id JOIN museum AS t3 ON t3.Museum_ID   =   t2.Museum_ID WHERE t3.open_year  >  2011
连接数据库../datasets/cosql_dataset/database/museum_visit/museum_visit.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
extra pred: SELECT  DISTINCT v.Name FROM visitor v JOIN visit vi ON v.ID = vi.visitor_ID JOIN museum m ON vi.Museum_ID = m.Museum_ID WHERE m.Open_Year < 2009 AND m.Open_Year > 2011
extra gold: SELECT t1.name FROM visitor AS t1 JOIN visit AS t2 ON t1.id   =   t2.visitor_id JOIN museum AS t3 ON t3.Museum_ID   =   t2.Museum_ID WHERE t3.open_year  <  2009 INTERSECT SELECT t1.name FROM visitor AS t1 JOIN visit AS t2 ON t1.id   =   t2.visitor_id JOIN museum AS t3 ON t3.Museum_ID   =   t2.Museum_ID WHERE t3.open_year  >  2011

当前idx2
eval_err_num:34
____________________
SELECT  DISTINCT m.Name FROM visitor v JOIN visit vi ON v.ID = vi.visitor_ID JOIN museum m ON vi.Museum_ID = m.Museum_ID WHERE m.Open_Year < 2009
SELECT t3.name FROM visitor AS t1 JOIN visit AS t2 ON t1.id   =   t2.visitor_id JOIN museum AS t3 ON t3.Museum_ID   =   t2.Museum_ID WHERE t3.open_year  <  2009 AND t1.name  =   ( SELECT t1.name FROM visitor AS t1 JOIN visit AS t2 ON t1.id   =   t2.visitor_id JOIN museum AS t3 ON t3.Museum_ID   =   t2.Museum_ID WHERE t3.open_year  <  2009 INTERSECT SELECT t1.name FROM visitor AS t1 JOIN visit AS t2 ON t1.id   =   t2.visitor_id JOIN museum AS t3 ON t3.Museum_ID   =   t2.Museum_ID WHERE t3.open_year  >  2011 ) 
连接数据库../datasets/cosql_dataset/database/museum_visit/museum_visit.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
extra pred: SELECT  DISTINCT m.Name FROM visitor v JOIN visit vi ON v.ID = vi.visitor_ID JOIN museum m ON vi.Museum_ID = m.Museum_ID WHERE m.Open_Year < 2009
extra gold: SELECT t3.name FROM visitor AS t1 JOIN visit AS t2 ON t1.id   =   t2.visitor_id JOIN museum AS t3 ON t3.Museum_ID   =   t2.Museum_ID WHERE t3.open_year  <  2009 AND t1.name  =   ( SELECT t1.name FROM visitor AS t1 JOIN visit AS t2 ON t1.id   =   t2.visitor_id JOIN museum AS t3 ON t3.Museum_ID   =   t2.Museum_ID WHERE t3.open_year  <  2009 INTERSECT SELECT t1.name FROM visitor AS t1 JOIN visit AS t2 ON t1.id   =   t2.visitor_id JOIN museum AS t3 ON t3.Museum_ID   =   t2.Museum_ID WHERE t3.open_year  >  2011 ) 

当前idx3
____________________
SELECT  Level_of_membership FROM visitor WHERE Name = 'Fernando Gago'
SELECT level_of_membership FROM visitor WHERE name  =  "Fernando Gago"
连接数据库../datasets/cosql_dataset/database/museum_visit/museum_visit.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx4
____________________
SELECT  Age FROM visitor WHERE Name = 'Fernando Gago'
SELECT age FROM visitor WHERE name  =  "Fernando Gago"
连接数据库../datasets/cosql_dataset/database/museum_visit/museum_visit.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx1
____________________
SELECT  SourceAirport FROM flights WHERE Airline = (SELECT uid FROM airlines WHERE Airline = 'United Airlines')
SELECT T1.SourceAirport FROM FLIGHTS AS T1 JOIN AIRLINES AS T2 ON T2.uid   =   T1.Airline WHERE T2.Airline   =   "United Airlines"
连接数据库../datasets/cosql_dataset/database/flight_2/flight_2.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:0
medium pred: SELECT  SourceAirport FROM flights WHERE Airline = (SELECT uid FROM airlines WHERE Airline = 'United Airlines')
medium gold: SELECT T1.SourceAirport FROM FLIGHTS AS T1 JOIN AIRLINES AS T2 ON T2.uid   =   T1.Airline WHERE T2.Airline   =   "United Airlines"

当前idx2
____________________
SELECT  FlightNo FROM flights WHERE Airline = (SELECT uid FROM airlines WHERE Airline = 'United Airlines')
SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRLINES AS T2 ON T2.uid   =   T1.Airline WHERE T2.Airline   =   "United Airlines"
连接数据库../datasets/cosql_dataset/database/flight_2/flight_2.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:0
medium pred: SELECT  FlightNo FROM flights WHERE Airline = (SELECT uid FROM airlines WHERE Airline = 'United Airlines')
medium gold: SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRLINES AS T2 ON T2.uid   =   T1.Airline WHERE T2.Airline   =   "United Airlines"

当前idx3
____________________
SELECT  DestAirport FROM flights WHERE FlightNo = 28
SELECT DestAirport FROM flights WHERE FlightNo  =  28
连接数据库../datasets/cosql_dataset/database/flight_2/flight_2.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx4
____________________
SELECT  DestAirport FROM flights WHERE FlightNo = 29
SELECT DestAirport FROM flights WHERE FlightNo  =  29
连接数据库../datasets/cosql_dataset/database/flight_2/flight_2.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx1
____________________
SELECT  first_name, last_name FROM players
SELECT first_name,  last_name FROM players
连接数据库../datasets/cosql_dataset/database/wta_1/wta_1.sqlite
执行第一个查询
执行出错: Could not decode to UTF-8 column 'last_name' with text 'Treyes Albarrac��N'
eval_exec:False
exact_score:True
当前idx2
eval_err_num:35
____________________
SELECT  first_name, REPLACE(last_name, '��', 'Ñ') as last_name FROM players
SELECT first_name ,  last_name FROM players WHERE hand   =   'L'
连接数据库../datasets/cosql_dataset/database/wta_1/wta_1.sqlite
执行第一个查询
执行出错: Could not decode to UTF-8 column 'last_name' with text 'Treyes Albarrac��N'
eval_exec:False
exact_score:0
medium pred: SELECT  first_name, REPLACE(last_name, '��', 'Ñ') as last_name FROM players
medium gold: SELECT first_name ,  last_name FROM players WHERE hand   =   'L'

当前idx1
____________________
SELECT  COUNT(*)  FROM flights  WHERE Airline = (SELECT uid FROM airlines WHERE Airline = 'United Airlines')  AND DestAirport = 'Aberdeen'
SELECT count ( * )  FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport   =   T2.AirportCode JOIN AIRLINES AS T3 ON T3.uid   =   T1.Airline WHERE T2.City   =   "Aberdeen" AND T3.Airline   =   "United Airlines"
连接数据库../datasets/cosql_dataset/database/flight_2/flight_2.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:0
hard pred: SELECT  COUNT(*)  FROM flights  WHERE Airline = (SELECT uid FROM airlines WHERE Airline = 'United Airlines')  AND DestAirport = 'Aberdeen'
hard gold: SELECT count ( * )  FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport   =   T2.AirportCode JOIN AIRLINES AS T3 ON T3.uid   =   T1.Airline WHERE T2.City   =   "Aberdeen" AND T3.Airline   =   "United Airlines"

当前idx2
____________________
SELECT  DISTINCT DestAirport  FROM flights  WHERE Airline = (SELECT uid FROM airlines WHERE Airline = 'United Airlines')
SELECT T2.city FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport   =   T2.AirportCode JOIN AIRLINES AS T3 ON T3.uid   =   T1.Airline where T2.city ! =   'Aberdeen' and T3.airline  =  "United Airlines"
连接数据库../datasets/cosql_dataset/database/flight_2/flight_2.sqlite
执行第一个查询
执行第二个查询
执行出错: unrecognized token: "!"
eval_exec:False
exact_score:0
hard pred: SELECT  DISTINCT DestAirport  FROM flights  WHERE Airline = (SELECT uid FROM airlines WHERE Airline = 'United Airlines')
hard gold: SELECT T2.city FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport   =   T2.AirportCode JOIN AIRLINES AS T3 ON T3.uid   =   T1.Airline where T2.city ! =   'Aberdeen' and T3.airline  =  "United Airlines"

当前idx1
eval_err_num:36
____________________
SELECT  t.Name FROM teacher t JOIN course_arrange ca ON t.Teacher_ID = ca.Teacher_ID JOIN course c ON ca.Course_ID = c.Course_ID WHERE c.Course = 'Math'
SELECT T3.Name FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID   =   T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID   =   T3.Teacher_ID WHERE T2.Course   =   "Math"
连接数据库../datasets/cosql_dataset/database/course_teach/course_teach.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
hard pred: SELECT  t.Name FROM teacher t JOIN course_arrange ca ON t.Teacher_ID = ca.Teacher_ID JOIN course c ON ca.Course_ID = c.Course_ID WHERE c.Course = 'Math'
hard gold: SELECT T3.Name FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID   =   T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID   =   T3.Teacher_ID WHERE T2.Course   =   "Math"

当前idx2
eval_err_num:37
____________________
SELECT  DISTINCT ca.Grade, c.Staring_Date FROM course_arrange ca JOIN course c ON ca.Course_ID = c.Course_ID JOIN teacher t ON ca.Teacher_ID = t.Teacher_ID WHERE c.Course = 'Math'
SELECT T2.Staring_Date  FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID   =   T2.Course_ID where T2.Course  =  "Math"
连接数据库../datasets/cosql_dataset/database/course_teach/course_teach.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT  DISTINCT ca.Grade, c.Staring_Date FROM course_arrange ca JOIN course c ON ca.Course_ID = c.Course_ID JOIN teacher t ON ca.Teacher_ID = t.Teacher_ID WHERE c.Course = 'Math'
medium gold: SELECT T2.Staring_Date  FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID   =   T2.Course_ID where T2.Course  =  "Math"

当前idx1
eval_err_num:38
____________________
SELECT  p.Birth_Date FROM poker_player pp JOIN people p ON pp.People_ID = p.People_ID WHERE pp.Earnings = (SELECT MIN(Earnings) FROM poker_player)
SELECT T1.Birth_Date FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID   =   T2.People_ID ORDER BY T2.Earnings ASC LIMIT 1
连接数据库../datasets/cosql_dataset/database/poker_player/poker_player.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
hard pred: SELECT  p.Birth_Date FROM poker_player pp JOIN people p ON pp.People_ID = p.People_ID WHERE pp.Earnings = (SELECT MIN(Earnings) FROM poker_player)
hard gold: SELECT T1.Birth_Date FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID   =   T2.People_ID ORDER BY T2.Earnings ASC LIMIT 1

当前idx2
eval_err_num:39
____________________
SELECT  p.Name FROM poker_player pp JOIN people p ON pp.People_ID = p.People_ID WHERE pp.Earnings = (SELECT MIN(Earnings) FROM poker_player)
SELECT name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID   =   T2.People_ID ORDER BY T2.Earnings ASC LIMIT 1
连接数据库../datasets/cosql_dataset/database/poker_player/poker_player.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
hard pred: SELECT  p.Name FROM poker_player pp JOIN people p ON pp.People_ID = p.People_ID WHERE pp.Earnings = (SELECT MIN(Earnings) FROM poker_player)
hard gold: SELECT name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID   =   T2.People_ID ORDER BY T2.Earnings ASC LIMIT 1

当前idx3
eval_err_num:40
____________________
SELECT  p.Nationality FROM poker_player pp JOIN people p ON pp.People_ID = p.People_ID WHERE pp.Earnings = (SELECT MIN(Earnings) FROM poker_player)
SELECT Nationality FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID   =   T2.People_ID ORDER BY T2.Earnings ASC LIMIT 1
连接数据库../datasets/cosql_dataset/database/poker_player/poker_player.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
hard pred: SELECT  p.Nationality FROM poker_player pp JOIN people p ON pp.People_ID = p.People_ID WHERE pp.Earnings = (SELECT MIN(Earnings) FROM poker_player)
hard gold: SELECT Nationality FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID   =   T2.People_ID ORDER BY T2.Earnings ASC LIMIT 1

当前idx1
eval_err_num:41
____________________
SELECT  COUNT(*) AS Total_Poker_Players FROM poker_player
SELECT count ( * )  FROM poker_player
连接数据库../datasets/cosql_dataset/database/poker_player/poker_player.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
easy pred: SELECT  COUNT(*) AS Total_Poker_Players FROM poker_player
easy gold: SELECT count ( * )  FROM poker_player

当前idx2
____________________
SELECT  COUNT(*) FROM people WHERE Height > 200
SELECT count ( * )  FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID   =   T2.People_ID WHERE T1.Height  >  200
连接数据库../datasets/cosql_dataset/database/poker_player/poker_player.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:False
medium pred: SELECT  COUNT(*) FROM people WHERE Height > 200
medium gold: SELECT count ( * )  FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID   =   T2.People_ID WHERE T1.Height  >  200

当前idx3
eval_err_num:42
____________________
SELECT  AVG(p.Earnings) AS Average_Earnings FROM poker_player p JOIN people pe ON p.People_ID = pe.People_ID WHERE pe.Height > 200
SELECT avg ( T2.Earnings )  FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID   =   T2.People_ID WHERE T1.Height  >  200
连接数据库../datasets/cosql_dataset/database/poker_player/poker_player.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT  AVG(p.Earnings) AS Average_Earnings FROM poker_player p JOIN people pe ON p.People_ID = pe.People_ID WHERE pe.Height > 200
medium gold: SELECT avg ( T2.Earnings )  FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID   =   T2.People_ID WHERE T1.Height  >  200

当前idx1
____________________
SELECT  DISTINCT Student.StuID FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Pets.PetType = 'dog'
SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'dog'
连接数据库../datasets/cosql_dataset/database/pets_1/pets_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:True
当前idx2
____________________
SELECT  Student.StuID FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Pets.PetType = 'dog' AND Student.StuID IN (     SELECT Student.StuID     FROM Student     JOIN Has_Pet ON Student.StuID = Has_Pet.StuID     JOIN Pets ON Has_Pet.PetID = Pets.PetID     WHERE Pets.PetType = 'cat' )
SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'dog' intersect SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat'
连接数据库../datasets/cosql_dataset/database/pets_1/pets_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:0
extra pred: SELECT  Student.StuID FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Pets.PetType = 'dog' AND Student.StuID IN (     SELECT Student.StuID     FROM Student     JOIN Has_Pet ON Student.StuID = Has_Pet.StuID     JOIN Pets ON Has_Pet.PetID = Pets.PetID     WHERE Pets.PetType = 'cat' )
extra gold: SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'dog' intersect SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat'

当前idx3
____________________
SELECT  Student.Fname, Student.Age FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Pets.PetType = 'dog'
SELECT T1.Fname, T1.age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'dog'
连接数据库../datasets/cosql_dataset/database/pets_1/pets_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx1
____________________
SELECT  COUNT(*) FROM country
SELECT count ( * )  from country
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT  CountryCode FROM city WHERE Name = 'Herat'
SELECT countrycode  from city where name  =  "Herat"
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx3
____________________
SELECT  Population FROM city WHERE Name = 'Qandahar'
SELECT population  from city where name  =  "Qandahar"
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx1
____________________
SELECT id
FROM TV_Channel
WHERE Country IN (
    SELECT Country
    FROM TV_Channel
    GROUP BY Country
    HAVING COUNT(id) > 2
)
select id from tv_channel where country in  ( SELECT country FROM tv_channel GROUP BY country HAVING count ( * )   >  2 ) 
连接数据库../datasets/cosql_dataset/database/tvshow/tvshow.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:0
hard pred: SELECT id
FROM TV_Channel
WHERE Country IN (
    SELECT Country
    FROM TV_Channel
    GROUP BY Country
    HAVING COUNT(id) > 2
)
hard gold: select id from tv_channel where country in  ( SELECT country FROM tv_channel GROUP BY country HAVING count ( * )   >  2 ) 

当前idx2
____________________
SELECT id, Package_Option
FROM TV_Channel
WHERE Country IN (
    SELECT Country
    FROM TV_Channel
    GROUP BY Country
    HAVING COUNT(id) > 2
)
select package_option from tv_channel where country in  ( SELECT country FROM tv_channel GROUP BY country HAVING count ( * )   >  2 ) 
连接数据库../datasets/cosql_dataset/database/tvshow/tvshow.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
hard pred: SELECT id, Package_Option
FROM TV_Channel
WHERE Country IN (
    SELECT Country
    FROM TV_Channel
    GROUP BY Country
    HAVING COUNT(id) > 2
)
hard gold: select package_option from tv_channel where country in  ( SELECT country FROM tv_channel GROUP BY country HAVING count ( * )   >  2 ) 

当前idx3
____________________
SELECT series_name
FROM TV_Channel
ORDER BY series_name ASC
SELECT series_name FROM tv_channel order by series_name asc
连接数据库../datasets/cosql_dataset/database/tvshow/tvshow.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx1
eval_err_num:43
____________________
SELECT  COUNT(DISTINCT dog_id) AS total_dogs_treated FROM Treatments
SELECT count ( * )  FROM Dogs WHERE dog_id IN  (  SELECT dog_id FROM Treatments  ) 
连接数据库../datasets/cosql_dataset/database/dog_kennels/dog_kennels.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
hard pred: SELECT  COUNT(DISTINCT dog_id) AS total_dogs_treated FROM Treatments
hard gold: SELECT count ( * )  FROM Dogs WHERE dog_id IN  (  SELECT dog_id FROM Treatments  ) 

当前idx2
eval_err_num:44
____________________
SELECT  MIN(age) AS youngest_dog_age_treated FROM Dogs WHERE dog_id IN (SELECT DISTINCT dog_id FROM Treatments)
SELECT min ( age )  FROM Dogs WHERE dog_id IN  (  SELECT dog_id FROM Treatments  ) 
连接数据库../datasets/cosql_dataset/database/dog_kennels/dog_kennels.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
hard pred: SELECT  MIN(age) AS youngest_dog_age_treated FROM Dogs WHERE dog_id IN (SELECT DISTINCT dog_id FROM Treatments)
hard gold: SELECT min ( age )  FROM Dogs WHERE dog_id IN  (  SELECT dog_id FROM Treatments  ) 

当前idx3
eval_err_num:45
____________________
SELECT  MAX(age) AS oldest_dog_age_treated FROM Dogs WHERE dog_id IN (SELECT DISTINCT dog_id FROM Treatments)
SELECT max ( age )  FROM Dogs WHERE dog_id IN  (  SELECT dog_id FROM Treatments  ) 
连接数据库../datasets/cosql_dataset/database/dog_kennels/dog_kennels.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
hard pred: SELECT  MAX(age) AS oldest_dog_age_treated FROM Dogs WHERE dog_id IN (SELECT DISTINCT dog_id FROM Treatments)
hard gold: SELECT max ( age )  FROM Dogs WHERE dog_id IN  (  SELECT dog_id FROM Treatments  ) 

当前idx4
eval_err_num:46
____________________
SELECT  AVG(age) AS average_dog_age_treated FROM Dogs WHERE dog_id IN (SELECT DISTINCT dog_id FROM Treatments)
SELECT avg ( age )  FROM Dogs WHERE dog_id IN  (  SELECT dog_id FROM Treatments  ) 
连接数据库../datasets/cosql_dataset/database/dog_kennels/dog_kennels.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
hard pred: SELECT  AVG(age) AS average_dog_age_treated FROM Dogs WHERE dog_id IN (SELECT DISTINCT dog_id FROM Treatments)
hard gold: SELECT avg ( age )  FROM Dogs WHERE dog_id IN  (  SELECT dog_id FROM Treatments  ) 

当前idx1
____________________
SELECT  Name FROM country WHERE Code NOT IN (SELECT CountryCode FROM countrylanguage WHERE Language = 'English')
SELECT Name FROM country WHERE Name NOT IN  ( SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code   =   T2.CountryCode WHERE T2.Language   =   "English" ) 
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:0
hard pred: SELECT  Name FROM country WHERE Code NOT IN (SELECT CountryCode FROM countrylanguage WHERE Language = 'English')
hard gold: SELECT Name FROM country WHERE Name NOT IN  ( SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code   =   T2.CountryCode WHERE T2.Language   =   "English" ) 

当前idx2
____________________
SELECT  SUM(Population) FROM country WHERE Code NOT IN (SELECT CountryCode FROM countrylanguage WHERE Language = 'English')
SELECT Name,sum ( Population )  FROM country WHERE Name NOT IN  ( SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code   =   T2.CountryCode WHERE T2.Language   =   "English" )  group by Name
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
extra pred: SELECT  SUM(Population) FROM country WHERE Code NOT IN (SELECT CountryCode FROM countrylanguage WHERE Language = 'English')
extra gold: SELECT Name,sum ( Population )  FROM country WHERE Name NOT IN  ( SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code   =   T2.CountryCode WHERE T2.Language   =   "English" )  group by Name

当前idx1
____________________
SELECT  Weight  FROM cars_data  WHERE Id = 1
SELECT T2.Weight FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId   =   T2.Id WHERE T1.MakeID  =  1
连接数据库../datasets/cosql_dataset/database/car_1/car_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:False
medium pred: SELECT  Weight  FROM cars_data  WHERE Id = 1
medium gold: SELECT T2.Weight FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId   =   T2.Id WHERE T1.MakeID  =  1

当前idx2
eval_err_num:47
____________________
SELECT  c.Year FROM cars_data c JOIN model_list m ON c.Id = m.ModelId WHERE m.Model = 'buick'
SELECT T2.Year FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId   =   T2.Id WHERE T1.Model  =  "buick"
连接数据库../datasets/cosql_dataset/database/car_1/car_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT  c.Year FROM cars_data c JOIN model_list m ON c.Id = m.ModelId WHERE m.Model = 'buick'
medium gold: SELECT T2.Year FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId   =   T2.Id WHERE T1.Model  =  "buick"

当前idx3
eval_err_num:48
____________________
SELECT  c.Horsepower FROM cars_data c JOIN model_list m ON c.Id = m.ModelId WHERE m.Model = 'plymouth'
SELECT T2.Horsepower FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId   =   T2.Id WHERE T1.Model  =  "plymouth"
连接数据库../datasets/cosql_dataset/database/car_1/car_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT  c.Horsepower FROM cars_data c JOIN model_list m ON c.Id = m.ModelId WHERE m.Model = 'plymouth'
medium gold: SELECT T2.Horsepower FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId   =   T2.Id WHERE T1.Model  =  "plymouth"

当前idx4
eval_err_num:49
____________________
SELECT  m.Model FROM cars_data c JOIN model_list m ON c.Id = m.ModelId WHERE c.Cylinders = 4 ORDER BY c.Horsepower DESC LIMIT 1
SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.Cylinders  =  4 ORDER BY T2.horsepower DESC LIMIT 1
连接数据库../datasets/cosql_dataset/database/car_1/car_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
extra pred: SELECT  m.Model FROM cars_data c JOIN model_list m ON c.Id = m.ModelId WHERE c.Cylinders = 4 ORDER BY c.Horsepower DESC LIMIT 1
extra gold: SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.Cylinders  =  4 ORDER BY T2.horsepower DESC LIMIT 1

当前idx1
eval_err_num:50
____________________
SELECT  COUNT(DISTINCT Model) FROM model_list WHERE ModelId IN (SELECT ModelId FROM cars_data WHERE Year = 1974)
select count ( * )  from cars_data where year = '1974'
连接数据库../datasets/cosql_dataset/database/car_1/car_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
easy pred: SELECT  COUNT(DISTINCT Model) FROM model_list WHERE ModelId IN (SELECT ModelId FROM cars_data WHERE Year = 1974)
easy gold: select count ( * )  from cars_data where year = '1974'

当前idx2
____________________
SELECT  Id FROM cars_data WHERE Year = 1974 AND Cylinders = 8
select id  from cars_data where year = '1974' and Cylinders  =  '8'
连接数据库../datasets/cosql_dataset/database/car_1/car_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx1
____________________
SELECT  Name FROM shop
select name from shop
连接数据库../datasets/cosql_dataset/database/employee_hire_evaluation/employee_hire_evaluation.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
eval_err_num:51
____________________
SELECT  DISTINCT s.Name FROM shop s JOIN hiring h ON s.Shop_ID = h.Shop_ID
SELECT t2.name FROM hiring AS t1 JOIN shop AS t2 ON t1.shop_id   =   t2.shop_id GROUP BY t1.shop_id
连接数据库../datasets/cosql_dataset/database/employee_hire_evaluation/employee_hire_evaluation.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT  DISTINCT s.Name FROM shop s JOIN hiring h ON s.Shop_ID = h.Shop_ID
medium gold: SELECT t2.name FROM hiring AS t1 JOIN shop AS t2 ON t1.shop_id   =   t2.shop_id GROUP BY t1.shop_id

当前idx3
eval_err_num:52
____________________
SELECT  s.Name FROM shop s JOIN (     SELECT Shop_ID, COUNT(Employee_ID) AS num_employees     FROM hiring     GROUP BY Shop_ID     ORDER BY num_employees DESC     LIMIT 1 ) AS h ON s.Shop_ID = h.Shop_ID
SELECT t2.name FROM hiring AS t1 JOIN shop AS t2 ON t1.shop_id   =   t2.shop_id GROUP BY t1.shop_id ORDER BY count ( * )  DESC LIMIT 1
连接数据库../datasets/cosql_dataset/database/employee_hire_evaluation/employee_hire_evaluation.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
extra pred: SELECT  s.Name FROM shop s JOIN (     SELECT Shop_ID, COUNT(Employee_ID) AS num_employees     FROM hiring     GROUP BY Shop_ID     ORDER BY num_employees DESC     LIMIT 1 ) AS h ON s.Shop_ID = h.Shop_ID
extra gold: SELECT t2.name FROM hiring AS t1 JOIN shop AS t2 ON t1.shop_id   =   t2.shop_id GROUP BY t1.shop_id ORDER BY count ( * )  DESC LIMIT 1

当前idx1
____________________
SELECT  COUNT(*)  FROM singer
select count ( distinct Singer_ID )  from Singer
连接数据库../datasets/cosql_dataset/database/singer/singer.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
easy pred: SELECT  COUNT(*)  FROM singer
easy gold: select count ( distinct Singer_ID )  from Singer

当前idx2
____________________
SELECT  COUNT(DISTINCT Singer_ID) FROM song WHERE Sales > 300000
SELECT count ( DISTINCT T1.Name )  FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID WHERE T2.Sales > 300000
连接数据库../datasets/cosql_dataset/database/singer/singer.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT  COUNT(DISTINCT Singer_ID) FROM song WHERE Sales > 300000
medium gold: SELECT count ( DISTINCT T1.Name )  FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID WHERE T2.Sales > 300000

当前idx3
eval_err_num:53
____________________
SELECT  DISTINCT s.Name FROM singer s JOIN song so ON s.Singer_ID = so.Singer_ID WHERE so.Sales > 300000
SELECT DISTINCT T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID WHERE T2.Sales > 300000
连接数据库../datasets/cosql_dataset/database/singer/singer.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT  DISTINCT s.Name FROM singer s JOIN song so ON s.Singer_ID = so.Singer_ID WHERE so.Sales > 300000
medium gold: SELECT DISTINCT T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID WHERE T2.Sales > 300000

当前idx1
____________________
SELECT  contestant_name FROM CONTESTANTS
SELECT contestant_name FROM CONTESTANTS
连接数据库../datasets/cosql_dataset/database/voter_1/voter_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
eval_err_num:54
____________________
SELECT  COUNT(contestant_number) AS total_contestants FROM CONTESTANTS
SELECT COUNT ( contestant_name )  FROM CONTESTANTS
连接数据库../datasets/cosql_dataset/database/voter_1/voter_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
easy pred: SELECT  COUNT(contestant_number) AS total_contestants FROM CONTESTANTS
easy gold: SELECT COUNT ( contestant_name )  FROM CONTESTANTS

当前idx3
____________________
SELECT  contestant_name FROM CONTESTANTS WHERE contestant_number = 1
SELECT contestant_name FROM CONTESTANTS WHERE contestant_number  =  1
连接数据库../datasets/cosql_dataset/database/voter_1/voter_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx4
____________________
SELECT  contestant_name FROM CONTESTANTS WHERE contestant_number = 2
SELECT contestant_name FROM CONTESTANTS WHERE contestant_number  =  2
连接数据库../datasets/cosql_dataset/database/voter_1/voter_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx1
____________________
SELECT  AirportName FROM airports
SELECT airportname FROM airports
连接数据库../datasets/cosql_dataset/database/flight_2/flight_2.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT  COUNT(FlightNo) FROM flights
SELECT COUNT ( DISTINCT Flightno )  FROM flights
连接数据库../datasets/cosql_dataset/database/flight_2/flight_2.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:True
当前idx3
____________________
SELECT  COUNT(DISTINCT Country) FROM airports
SELECT COUNT ( DISTINCT country )  FROM airports
连接数据库../datasets/cosql_dataset/database/flight_2/flight_2.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx1
eval_err_num:55
____________________
SELECT  COUNT(*) AS total_breeds FROM Breeds
SELECT count ( * )  from Breeds
连接数据库../datasets/cosql_dataset/database/dog_kennels/dog_kennels.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
easy pred: SELECT  COUNT(*) AS total_breeds FROM Breeds
easy gold: SELECT count ( * )  from Breeds

当前idx2
____________________
SELECT  breed_name FROM Breeds ORDER BY breed_name DESC LIMIT 1
SELECT T1.breed_name FROM Breeds AS T1 JOIN Dogs AS T2 ON T1.breed_code   =   T2.breed_code GROUP BY T1.breed_name ORDER BY count ( * )  DESC LIMIT 1
连接数据库../datasets/cosql_dataset/database/dog_kennels/dog_kennels.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
extra pred: SELECT  breed_name FROM Breeds ORDER BY breed_name DESC LIMIT 1
extra gold: SELECT T1.breed_name FROM Breeds AS T1 JOIN Dogs AS T2 ON T1.breed_code   =   T2.breed_code GROUP BY T1.breed_name ORDER BY count ( * )  DESC LIMIT 1

当前idx3
eval_err_num:56
____________________
SELECT  size_description FROM Sizes WHERE size_code = (SELECT size_code FROM Breeds WHERE breed_name = 'Bulldog')
SELECT T2.size_code FROM Breeds AS T1 JOIN Dogs AS T2 ON T1.breed_code   =   T2.breed_code where T1.breed_name = "Bulldog"
连接数据库../datasets/cosql_dataset/database/dog_kennels/dog_kennels.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT  size_description FROM Sizes WHERE size_code = (SELECT size_code FROM Breeds WHERE breed_name = 'Bulldog')
medium gold: SELECT T2.size_code FROM Breeds AS T1 JOIN Dogs AS T2 ON T1.breed_code   =   T2.breed_code where T1.breed_name = "Bulldog"

当前idx4
____________________
SELECT  breed_name FROM Breeds WHERE breed_code = (     SELECT breed_code     FROM Dogs     GROUP BY breed_code     ORDER BY COUNT(*) DESC     LIMIT 1 )
SELECT T1.breed_name FROM Breeds AS T1 JOIN Dogs AS T2 ON T1.breed_code   =   T2.breed_code GROUP BY T1.breed_name ORDER BY count ( * )  DESC LIMIT 1
连接数据库../datasets/cosql_dataset/database/dog_kennels/dog_kennels.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:0
extra pred: SELECT  breed_name FROM Breeds WHERE breed_code = (     SELECT breed_code     FROM Dogs     GROUP BY breed_code     ORDER BY COUNT(*) DESC     LIMIT 1 )
extra gold: SELECT T1.breed_name FROM Breeds AS T1 JOIN Dogs AS T2 ON T1.breed_code   =   T2.breed_code GROUP BY T1.breed_name ORDER BY count ( * )  DESC LIMIT 1

当前idx1
____________________
SELECT  Name FROM conductor ORDER BY Year_of_Work DESC LIMIT 1
SELECT Name FROM conductor ORDER BY Year_of_Work DESC LIMIT 1
连接数据库../datasets/cosql_dataset/database/orchestra/orchestra.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT  Year_of_Work FROM conductor WHERE Name = 'Robert Craft'
SELECT Year_of_Work FROM conductor where name = 'Robert Craft'
连接数据库../datasets/cosql_dataset/database/orchestra/orchestra.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx3
____________________
SELECT  Name FROM conductor ORDER BY Year_of_Work LIMIT 1
SELECT Name FROM conductor ORDER BY Year_of_Work asc LIMIT 1
连接数据库../datasets/cosql_dataset/database/orchestra/orchestra.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx1
eval_err_num:57
____________________
SELECT  p.first_name, p.last_name, COUNT(t.professional_id) AS num_treatments FROM Professionals p JOIN Treatments t ON p.professional_id = t.professional_id GROUP BY p.professional_id ORDER BY num_treatments DESC LIMIT 1
SELECT * FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id   =   T2.professional_id GROUP BY T1.professional_id order by COUNT ( * )   desc limit 1
连接数据库../datasets/cosql_dataset/database/dog_kennels/dog_kennels.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
extra pred: SELECT  p.first_name, p.last_name, COUNT(t.professional_id) AS num_treatments FROM Professionals p JOIN Treatments t ON p.professional_id = t.professional_id GROUP BY p.professional_id ORDER BY num_treatments DESC LIMIT 1
extra gold: SELECT * FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id   =   T2.professional_id GROUP BY T1.professional_id order by COUNT ( * )   desc limit 1

当前idx2
eval_err_num:58
____________________
SELECT  p.first_name, p.last_name, COUNT(t.professional_id) AS num_treatments FROM Professionals p LEFT JOIN Treatments t ON p.professional_id = t.professional_id GROUP BY p.professional_id ORDER BY num_treatments LIMIT 1
SELECT * FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id   =   T2.professional_id GROUP BY T1.professional_id order by COUNT ( * )   limit 1
连接数据库../datasets/cosql_dataset/database/dog_kennels/dog_kennels.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
extra pred: SELECT  p.first_name, p.last_name, COUNT(t.professional_id) AS num_treatments FROM Professionals p LEFT JOIN Treatments t ON p.professional_id = t.professional_id GROUP BY p.professional_id ORDER BY num_treatments LIMIT 1
extra gold: SELECT * FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id   =   T2.professional_id GROUP BY T1.professional_id order by COUNT ( * )   limit 1

当前idx3
eval_err_num:59
____________________
SELECT  COUNT(*) FROM (     SELECT p.professional_id, COUNT(t.professional_id) AS num_treatments     FROM Professionals p     LEFT JOIN Treatments t ON p.professional_id = t.professional_id     GROUP BY p.professional_id     HAVING num_treatments <= 3 ) AS subquery
select count ( * )  from  ( SELECT * FROM Professionals AS T1 JOIN Treatments AS T2 group by T2.professional_id having count ( * )  < =  3 ) 
连接数据库../datasets/cosql_dataset/database/dog_kennels/dog_kennels.sqlite
执行第一个查询
执行第二个查询
执行出错: near "=": syntax error
eval_exec:False
exact_score:0
easy pred: SELECT  COUNT(*) FROM (     SELECT p.professional_id, COUNT(t.professional_id) AS num_treatments     FROM Professionals p     LEFT JOIN Treatments t ON p.professional_id = t.professional_id     GROUP BY p.professional_id     HAVING num_treatments <= 3 ) AS subquery
easy gold: select count ( * )  from  ( SELECT * FROM Professionals AS T1 JOIN Treatments AS T2 group by T2.professional_id having count ( * )  < =  3 ) 

当前idx1
____________________
SELECT  Name FROM country WHERE Code NOT IN (     SELECT CountryCode     FROM countrylanguage     WHERE Language = 'English'     AND IsOfficial = 'T' )
select name from country where code not in  ( SELECT CountryCode FROM countrylanguage WHERE LANGUAGE   =   "English" ) 
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
hard pred: SELECT  Name FROM country WHERE Code NOT IN (     SELECT CountryCode     FROM countrylanguage     WHERE Language = 'English'     AND IsOfficial = 'T' )
hard gold: select name from country where code not in  ( SELECT CountryCode FROM countrylanguage WHERE LANGUAGE   =   "English" ) 

当前idx2
____________________
SELECT  Name FROM country WHERE Code NOT IN (     SELECT CountryCode     FROM countrylanguage     WHERE Language = 'English'     AND IsOfficial = 'T' ) AND GovernmentForm != 'Republic'
select name from country where code in  ( SELECT Code FROM country WHERE GovernmentForm ! =  "Republic" EXCEPT SELECT CountryCode FROM countrylanguage WHERE LANGUAGE   =   "English" ) 
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
执行出错: unrecognized token: "!"
eval_exec:False
exact_score:0
hard pred: SELECT  Name FROM country WHERE Code NOT IN (     SELECT CountryCode     FROM countrylanguage     WHERE Language = 'English'     AND IsOfficial = 'T' ) AND GovernmentForm != 'Republic'
hard gold: select name from country where code in  ( SELECT Code FROM country WHERE GovernmentForm ! =  "Republic" EXCEPT SELECT CountryCode FROM countrylanguage WHERE LANGUAGE   =   "English" ) 

当前idx1
eval_err_num:60
____________________
SELECT  state, COUNT(*) AS total_votes FROM VOTES WHERE state IN ('NY', 'CA') GROUP BY state
SELECT count ( * )  FROM votes WHERE state   =   'NY' or  state   =   'CA'
连接数据库../datasets/cosql_dataset/database/voter_1/voter_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT  state, COUNT(*) AS total_votes FROM VOTES WHERE state IN ('NY', 'CA') GROUP BY state
medium gold: SELECT count ( * )  FROM votes WHERE state   =   'NY' or  state   =   'CA'

当前idx2
____________________
SELECT  DISTINCT contestant_number FROM VOTES
SELECT distinct contestant_number FROM votes
连接数据库../datasets/cosql_dataset/database/voter_1/voter_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx3
eval_err_num:61
____________________
SELECT  COUNT(vote_id) AS total_votes FROM VOTES WHERE contestant_number = 5
SELECT count ( * )  from votes where contestant_number  =  '5'
连接数据库../datasets/cosql_dataset/database/voter_1/voter_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
easy pred: SELECT  COUNT(vote_id) AS total_votes FROM VOTES WHERE contestant_number = 5
easy gold: SELECT count ( * )  from votes where contestant_number  =  '5'

当前idx1
____________________
SELECT  DISTINCT Nationality FROM people
SELECT distinct Nationality FROM people
连接数据库../datasets/cosql_dataset/database/poker_player/poker_player.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT  Nationality FROM people
SELECT Nationality FROM people
连接数据库../datasets/cosql_dataset/database/poker_player/poker_player.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx3
____________________
SELECT  COUNT(*) FROM people WHERE Nationality = 'Russia'
SELECT count ( * )  FROM people where Nationality  =  'Russia'
连接数据库../datasets/cosql_dataset/database/poker_player/poker_player.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx4
____________________
SELECT  COUNT(*) FROM people WHERE Nationality = 'Bulgaria'
SELECT count ( * )  FROM people where Nationality  =  'Bulgaria'
连接数据库../datasets/cosql_dataset/database/poker_player/poker_player.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx1
____________________
SELECT  Maker FROM car_makers GROUP BY Maker HAVING COUNT(DISTINCT Id) > 3
SELECT * FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id   =   T2.Maker GROUP BY T1.Id HAVING count ( * )   >  3
连接数据库../datasets/cosql_dataset/database/car_1/car_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT  Maker FROM car_makers GROUP BY Maker HAVING COUNT(DISTINCT Id) > 3
medium gold: SELECT * FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id   =   T2.Maker GROUP BY T1.Id HAVING count ( * )   >  3

当前idx2
____________________
SELECT  Id FROM car_makers WHERE Maker IN (     SELECT Maker     FROM car_makers     GROUP BY Maker     HAVING COUNT(DISTINCT Id) > 3 )
SELECT T1.id FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id   =   T2.Maker GROUP BY T1.Id HAVING count ( * )   >  3
连接数据库../datasets/cosql_dataset/database/car_1/car_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT  Id FROM car_makers WHERE Maker IN (     SELECT Maker     FROM car_makers     GROUP BY Maker     HAVING COUNT(DISTINCT Id) > 3 )
medium gold: SELECT T1.id FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id   =   T2.Maker GROUP BY T1.Id HAVING count ( * )   >  3

当前idx3
____________________
SELECT  Id, FullName FROM car_makers WHERE Maker IN (     SELECT Maker     FROM car_makers     GROUP BY Maker     HAVING COUNT(DISTINCT Id) > 3 )
SELECT T1.FullName ,  T1.Id FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id   =   T2.Maker GROUP BY T1.Id HAVING count ( * )   >  3
连接数据库../datasets/cosql_dataset/database/car_1/car_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT  Id, FullName FROM car_makers WHERE Maker IN (     SELECT Maker     FROM car_makers     GROUP BY Maker     HAVING COUNT(DISTINCT Id) > 3 )
medium gold: SELECT T1.FullName ,  T1.Id FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id   =   T2.Maker GROUP BY T1.Id HAVING count ( * )   >  3

当前idx1
eval_err_num:62
____________________
SELECT  AVG(Horsepower) AS AverageHorsepower FROM cars_data
SELECT avg ( Horsepower )  FROM cars_data
连接数据库../datasets/cosql_dataset/database/car_1/car_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
easy pred: SELECT  AVG(Horsepower) AS AverageHorsepower FROM cars_data
easy gold: SELECT avg ( Horsepower )  FROM cars_data

当前idx2
____________________
SELECT  *  FROM cars_data  WHERE Horsepower = (SELECT MAX(Horsepower) FROM cars_data)
SELECT Id FROM CARS_DATA ORDER BY Horsepower DESC LIMIT 1
连接数据库../datasets/cosql_dataset/database/car_1/car_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT  *  FROM cars_data  WHERE Horsepower = (SELECT MAX(Horsepower) FROM cars_data)
medium gold: SELECT Id FROM CARS_DATA ORDER BY Horsepower DESC LIMIT 1

当前idx3
____________________
SELECT  Accelerate  FROM cars_data  WHERE Id = 39
SELECT accelerate FROM CARS_DATA ORDER BY Horsepower DESC LIMIT 1
连接数据库../datasets/cosql_dataset/database/car_1/car_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:0
medium pred: SELECT  Accelerate  FROM cars_data  WHERE Id = 39
medium gold: SELECT accelerate FROM CARS_DATA ORDER BY Horsepower DESC LIMIT 1

当前idx4
____________________
SELECT  *  FROM cars_data  WHERE Accelerate > 19.0
SELECT COUNT ( * )  FROM CARS_DATA WHERE Accelerate  >  19.0
连接数据库../datasets/cosql_dataset/database/car_1/car_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
easy pred: SELECT  *  FROM cars_data  WHERE Accelerate > 19.0
easy gold: SELECT COUNT ( * )  FROM CARS_DATA WHERE Accelerate  >  19.0

当前idx1
____________________
SELECT  Year FROM concert WHERE concert_Name = 'Auditions'
SELECT year from concert where concert_name  =  "Auditions"
连接数据库../datasets/cosql_dataset/database/concert_singer/concert_singer.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT  Year FROM concert WHERE concert_Name = 'Super bootcamp'
SELECT year from concert where concert_name  =  "Super bootcamp"
连接数据库../datasets/cosql_dataset/database/concert_singer/concert_singer.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx3
____________________
SELECT  Year FROM concert WHERE concert_Name = 'Home Visits'
SELECT year from concert where concert_name  =  "Home Visits"
连接数据库../datasets/cosql_dataset/database/concert_singer/concert_singer.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx4
eval_err_num:63
____________________
SELECT  COUNT(*) FROM concert WHERE Year IN ('2014', '2015')
SELECT count ( * )  FROM concert WHERE YEAR   =   2014 OR YEAR   =   2015
连接数据库../datasets/cosql_dataset/database/concert_singer/concert_singer.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT  COUNT(*) FROM concert WHERE Year IN ('2014', '2015')
medium gold: SELECT count ( * )  FROM concert WHERE YEAR   =   2014 OR YEAR   =   2015

当前idx>4
____________________
SELECT  COUNT(*) FROM concert WHERE Year = '2014'
SELECT count ( * )  FROM concert WHERE YEAR   =   2014
连接数据库../datasets/cosql_dataset/database/concert_singer/concert_singer.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx>4
____________________
SELECT  COUNT(*) FROM concert WHERE Year = '2015'
SELECT count ( * )  FROM concert WHERE YEAR   =   2015
连接数据库../datasets/cosql_dataset/database/concert_singer/concert_singer.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx1
____________________
SELECT  DISTINCT tourney_name FROM matches
SELECT distinct tourney_name FROM matches
连接数据库../datasets/cosql_dataset/database/wta_1/wta_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx1
____________________
SELECT  COUNT(student_id)  FROM Students  WHERE student_id IN (     SELECT student_id      FROM Student_Enrolment      WHERE degree_program_id IN (         SELECT degree_program_id          FROM Degree_Programs     ) )
SELECT count ( * )   from students
连接数据库../datasets/cosql_dataset/database/student_transcripts_tracking/student_transcripts_tracking.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
easy pred: SELECT  COUNT(student_id)  FROM Students  WHERE student_id IN (     SELECT student_id      FROM Student_Enrolment      WHERE degree_program_id IN (         SELECT degree_program_id          FROM Degree_Programs     ) )
easy gold: SELECT count ( * )   from students

当前idx2
eval_err_num:64
____________________
SELECT  first_name, middle_name, last_name FROM Students WHERE student_id IN (     SELECT student_id     FROM Student_Enrolment     WHERE degree_program_id IN (         SELECT degree_program_id         FROM Degree_Programs     )     ORDER BY date_left     LIMIT 1 )
SELECT first_name ,  middle_name ,  last_name FROM Students ORDER BY date_left ASC LIMIT 1
连接数据库../datasets/cosql_dataset/database/student_transcripts_tracking/student_transcripts_tracking.sqlite
执行第一个查询
执行出错: no such column: date_left
eval_exec:False
exact_score:0
medium pred: SELECT  first_name, middle_name, last_name FROM Students WHERE student_id IN (     SELECT student_id     FROM Student_Enrolment     WHERE degree_program_id IN (         SELECT degree_program_id         FROM Degree_Programs     )     ORDER BY date_left     LIMIT 1 )
medium gold: SELECT first_name ,  middle_name ,  last_name FROM Students ORDER BY date_left ASC LIMIT 1

当前idx1
____________________
SELECT  SourceAirport FROM flights WHERE FlightNo = 28
SELECT SourceAirport FROM Flights WHERE FlightNo = '28'
连接数据库../datasets/cosql_dataset/database/flight_2/flight_2.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT  City FROM airports WHERE AirportCode = 'APG'
select city from airports where airportcode = 'APG'
连接数据库../datasets/cosql_dataset/database/flight_2/flight_2.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx3
____________________
SELECT  AirportName FROM airports WHERE AirportCode NOT IN (SELECT SourceAirport FROM flights) AND AirportCode NOT IN (SELECT DestAirport FROM flights)
SELECT AirportName FROM Airports WHERE AirportCode NOT IN  ( SELECT SourceAirport FROM Flights UNION SELECT DestAirport FROM Flights ) 
连接数据库../datasets/cosql_dataset/database/flight_2/flight_2.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:0
hard pred: SELECT  AirportName FROM airports WHERE AirportCode NOT IN (SELECT SourceAirport FROM flights) AND AirportCode NOT IN (SELECT DestAirport FROM flights)
hard gold: SELECT AirportName FROM Airports WHERE AirportCode NOT IN  ( SELECT SourceAirport FROM Flights UNION SELECT DestAirport FROM Flights ) 

当前idx1
eval_err_num:65
____________________
SELECT  MIN(transcript_date) AS first_transcript_release_date FROM Transcripts
SELECT * FROM Transcripts ORDER BY transcript_date ASC LIMIT 1
连接数据库../datasets/cosql_dataset/database/student_transcripts_tracking/student_transcripts_tracking.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT  MIN(transcript_date) AS first_transcript_release_date FROM Transcripts
medium gold: SELECT * FROM Transcripts ORDER BY transcript_date ASC LIMIT 1

当前idx1
____________________
SELECT  winner_name FROM matches ORDER BY winner_age LIMIT 3
SELECT DISTINCT winner_name  FROM matches ORDER BY winner_age LIMIT 3
连接数据库../datasets/cosql_dataset/database/wta_1/wta_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:True
当前idx2
____________________
SELECT  winner_name, winner_rank_points FROM matches ORDER BY winner_age LIMIT 3
SELECT loser_rank_points FROM matches ORDER BY winner_age LIMIT 3
连接数据库../datasets/cosql_dataset/database/wta_1/wta_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT  winner_name, winner_rank_points FROM matches ORDER BY winner_age LIMIT 3
medium gold: SELECT loser_rank_points FROM matches ORDER BY winner_age LIMIT 3

当前idx3
____________________
SELECT  winner_age FROM matches ORDER BY winner_age LIMIT 3
SELECT winner_age FROM matches ORDER BY winner_age LIMIT 3
连接数据库../datasets/cosql_dataset/database/wta_1/wta_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx1
____________________
SELECT  COUNT(*)  FROM Friend
SELECT count ( * )  FROM Friend
连接数据库../datasets/cosql_dataset/database/network_1/network_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT  AVG(grade)  FROM Highschooler
SELECT avg ( grade )  FROM Highschooler
连接数据库../datasets/cosql_dataset/database/network_1/network_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx3
____________________
SELECT  name  FROM Highschooler
SELECT DISTINCT name  FROM Highschooler
连接数据库../datasets/cosql_dataset/database/network_1/network_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:True
当前idx1
eval_err_num:66
____________________
SELECT  COUNT(*) AS Total_Poker_Players FROM poker_player
select count ( * )  from poker_player
连接数据库../datasets/cosql_dataset/database/poker_player/poker_player.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
easy pred: SELECT  COUNT(*) AS Total_Poker_Players FROM poker_player
easy gold: select count ( * )  from poker_player

当前idx2
____________________
SELECT  COUNT(*) FROM poker_player WHERE Earnings > 300000
SELECT count ( * )  FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID   =   T2.People_ID WHERE T2.Earnings  >  300000
连接数据库../datasets/cosql_dataset/database/poker_player/poker_player.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:False
medium pred: SELECT  COUNT(*) FROM poker_player WHERE Earnings > 300000
medium gold: SELECT count ( * )  FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID   =   T2.People_ID WHERE T2.Earnings  >  300000

当前idx3
eval_err_num:67
____________________
SELECT  p.Name FROM poker_player pp JOIN people p ON pp.People_ID = p.People_ID WHERE pp.Earnings > 300000
SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID   =   T2.People_ID WHERE T2.Earnings  >  300000
连接数据库../datasets/cosql_dataset/database/poker_player/poker_player.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT  p.Name FROM poker_player pp JOIN people p ON pp.People_ID = p.People_ID WHERE pp.Earnings > 300000
medium gold: SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID   =   T2.People_ID WHERE T2.Earnings  >  300000

当前idx1
eval_err_num:68
____________________
SELECT  COUNT(*) AS Number_of_Museums FROM museum
SELECT count ( * )  from museum
连接数据库../datasets/cosql_dataset/database/museum_visit/museum_visit.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
easy pred: SELECT  COUNT(*) AS Number_of_Museums FROM museum
easy gold: SELECT count ( * )  from museum

当前idx2
____________________
SELECT  Museum_ID, Num_of_Staff FROM museum
SELECT Num_of_Staff from museum
连接数据库../datasets/cosql_dataset/database/museum_visit/museum_visit.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
easy pred: SELECT  Museum_ID, Num_of_Staff FROM museum
easy gold: SELECT Num_of_Staff from museum

当前idx3
____________________
SELECT  Museum_ID, Name FROM museum WHERE Num_of_Staff = (SELECT MAX(Num_of_Staff) FROM museum)
SELECT Museum_ID, Name from museum order by Num_of_Staff desc limit 1
连接数据库../datasets/cosql_dataset/database/museum_visit/museum_visit.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:0
medium pred: SELECT  Museum_ID, Name FROM museum WHERE Num_of_Staff = (SELECT MAX(Num_of_Staff) FROM museum)
medium gold: SELECT Museum_ID, Name from museum order by Num_of_Staff desc limit 1

当前idx1
eval_err_num:69
____________________
SELECT  COUNT(student_id) AS total_students FROM Students
SELECT count ( * )  FROM Students
连接数据库../datasets/cosql_dataset/database/student_transcripts_tracking/student_transcripts_tracking.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
easy pred: SELECT  COUNT(student_id) AS total_students FROM Students
easy gold: SELECT count ( * )  FROM Students

当前idx2
____________________
SELECT  first_name, middle_name, last_name FROM Students LIMIT 15
SELECT first_name,middle_name,last_name  FROM Students
连接数据库../datasets/cosql_dataset/database/student_transcripts_tracking/student_transcripts_tracking.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:0
medium pred: SELECT  first_name, middle_name, last_name FROM Students LIMIT 15
medium gold: SELECT first_name,middle_name,last_name  FROM Students

当前idx3
____________________
SELECT  first_name, middle_name, last_name, date_first_registered FROM Students LIMIT 15
SELECT date_first_registered  FROM Students
连接数据库../datasets/cosql_dataset/database/student_transcripts_tracking/student_transcripts_tracking.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
easy pred: SELECT  first_name, middle_name, last_name, date_first_registered FROM Students LIMIT 15
easy gold: SELECT date_first_registered  FROM Students

当前idx1
eval_err_num:70
____________________
SELECT  COUNT(*) AS total_students FROM Student
SELECT count ( StuID )  FROM student
连接数据库../datasets/cosql_dataset/database/pets_1/pets_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
easy pred: SELECT  COUNT(*) AS total_students FROM Student
easy gold: SELECT count ( StuID )  FROM student

当前idx2
____________________
SELECT  Age FROM Student WHERE LName = 'Smith'
SELECT Age  FROM student where LName = 'Smith'
连接数据库../datasets/cosql_dataset/database/pets_1/pets_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx3
____________________
SELECT  S.Age, P.PetID FROM Student AS S JOIN Has_Pet AS HP ON S.StuID = HP.StuID JOIN Pets AS P ON HP.PetID = P.PetID WHERE S.LName = 'Smith'
SELECT T2.petid ,age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid   =   T2.stuid WHERE T1.Lname   =   'Smith'
连接数据库../datasets/cosql_dataset/database/pets_1/pets_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:False
medium pred: SELECT  S.Age, P.PetID FROM Student AS S JOIN Has_Pet AS HP ON S.StuID = HP.StuID JOIN Pets AS P ON HP.PetID = P.PetID WHERE S.LName = 'Smith'
medium gold: SELECT T2.petid ,age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid   =   T2.stuid WHERE T1.Lname   =   'Smith'

当前idx1
____________________
SELECT  StuID FROM Has_Pet
SELECT distinct T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid   =   T2.stuid
连接数据库../datasets/cosql_dataset/database/pets_1/pets_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:False
easy pred: SELECT  StuID FROM Has_Pet
easy gold: SELECT distinct T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid   =   T2.stuid

当前idx2
____________________
SELECT  Fname, LName, Major, Age FROM Student WHERE StuID IN (SELECT StuID FROM Has_Pet)
SELECT distinct T1.Fname, T1.Lname, T1.major, T1.age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid   =   T2.stuid
连接数据库../datasets/cosql_dataset/database/pets_1/pets_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:0
medium pred: SELECT  Fname, LName, Major, Age FROM Student WHERE StuID IN (SELECT StuID FROM Has_Pet)
medium gold: SELECT distinct T1.Fname, T1.Lname, T1.major, T1.age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid   =   T2.stuid

当前idx3
eval_err_num:71
____________________
SELECT  Fname, LName, Major, Age FROM Student WHERE StuID IN (SELECT StuID FROM Has_Pet WHERE PetID IN (SELECT PetID FROM Pets WHERE PetType <> 'cat'))
SELECT Fname, Lname, major, age FROM student WHERE stuid NOT IN  ( SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat' ) 
连接数据库../datasets/cosql_dataset/database/pets_1/pets_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
extra pred: SELECT  Fname, LName, Major, Age FROM Student WHERE StuID IN (SELECT StuID FROM Has_Pet WHERE PetID IN (SELECT PetID FROM Pets WHERE PetType <> 'cat'))
extra gold: SELECT Fname, Lname, major, age FROM student WHERE stuid NOT IN  ( SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat' ) 

当前idx1
eval_err_num:72
____________________
SELECT  COUNT(*) AS total_dogs FROM Dogs
SELECT count ( * )  FROM Dogs
连接数据库../datasets/cosql_dataset/database/dog_kennels/dog_kennels.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
easy pred: SELECT  COUNT(*) AS total_dogs FROM Dogs
easy gold: SELECT count ( * )  FROM Dogs

当前idx2
____________________
SELECT  age FROM Dogs WHERE name = 'Kacey'
SELECT age FROM Dogs where name  =  "Kacey"
连接数据库../datasets/cosql_dataset/database/dog_kennels/dog_kennels.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx3
eval_err_num:73
____________________
SELECT  name FROM Dogs ORDER BY CAST(weight AS INTEGER) DESC LIMIT 1
SELECT name FROM Dogs order by weight desc limit 1
连接数据库../datasets/cosql_dataset/database/dog_kennels/dog_kennels.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT  name FROM Dogs ORDER BY CAST(weight AS INTEGER) DESC LIMIT 1
medium gold: SELECT name FROM Dogs order by weight desc limit 1

当前idx4
____________________
SELECT  size_code FROM Dogs WHERE breed_code = 'BUL'
SELECT size_code FROM Dogs where breed_code  =  "BUL"
连接数据库../datasets/cosql_dataset/database/dog_kennels/dog_kennels.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx1
____________________
SELECT  Name FROM country ORDER BY Population LIMIT 3
SELECT Name FROM country ORDER BY Population ASC LIMIT 3
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT  Name FROM country ORDER BY SurfaceArea DESC LIMIT 1
SELECT Name FROM country ORDER BY surfacearea desc LIMIT 1
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx3
____________________
SELECT  SUM(Population) FROM country WHERE Name = 'Antarctica'
SELECT population from country where name  =  "Antarctica"
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:0
easy pred: SELECT  SUM(Population) FROM country WHERE Name = 'Antarctica'
easy gold: SELECT population from country where name  =  "Antarctica"

当前idx1
eval_err_num:74
____________________
SELECT  AVG(friend_id) AS average_friend_id FROM Friend
SELECT AVG ( friend_id )  FROM friend
连接数据库../datasets/cosql_dataset/database/network_1/network_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
easy pred: SELECT  AVG(friend_id) AS average_friend_id FROM Friend
easy gold: SELECT AVG ( friend_id )  FROM friend

当前idx2
eval_err_num:75
____________________
SELECT  AVG(grade) AS average_grade FROM Highschooler
SELECT AVG ( grade )  FROM Highschooler
连接数据库../datasets/cosql_dataset/database/network_1/network_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
easy pred: SELECT  AVG(grade) AS average_grade FROM Highschooler
easy gold: SELECT AVG ( grade )  FROM Highschooler

当前idx3
eval_err_num:76
____________________
SELECT  MAX(grade) AS highest_grade FROM Highschooler
SELECT MAX ( grade )  FROM Highschooler
连接数据库../datasets/cosql_dataset/database/network_1/network_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
easy pred: SELECT  MAX(grade) AS highest_grade FROM Highschooler
easy gold: SELECT MAX ( grade )  FROM Highschooler

当前idx1
eval_err_num:77
____________________
SELECT  COUNT(DISTINCT student_id) AS total_students FROM Student_Enrolment WHERE degree_program_id IN (SELECT degree_program_id FROM Degree_Programs WHERE degree_summary_name LIKE '%bachelor%')
SELECT count ( * )  FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id   =   T2.student_id JOIN Degree_Programs AS T3 ON T2.degree_program_id   =   T3.degree_program_id WHERE T3.degree_summary_name   =   'Bachelor'
连接数据库../datasets/cosql_dataset/database/student_transcripts_tracking/student_transcripts_tracking.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
hard pred: SELECT  COUNT(DISTINCT student_id) AS total_students FROM Student_Enrolment WHERE degree_program_id IN (SELECT degree_program_id FROM Degree_Programs WHERE degree_summary_name LIKE '%bachelor%')
hard gold: SELECT count ( * )  FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id   =   T2.student_id JOIN Degree_Programs AS T3 ON T2.degree_program_id   =   T3.degree_program_id WHERE T3.degree_summary_name   =   'Bachelor'

当前idx2
____________________
SELECT  DISTINCT student_id FROM Student_Enrolment WHERE degree_program_id IN (SELECT degree_program_id FROM Degree_Programs WHERE degree_summary_name LIKE '%bachelor%')
SELECT t1.student_id FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id   =   T2.student_id JOIN Degree_Programs AS T3 ON T2.degree_program_id   =   T3.degree_program_id WHERE T3.degree_summary_name   =   'Bachelor'
连接数据库../datasets/cosql_dataset/database/student_transcripts_tracking/student_transcripts_tracking.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
hard pred: SELECT  DISTINCT student_id FROM Student_Enrolment WHERE degree_program_id IN (SELECT degree_program_id FROM Degree_Programs WHERE degree_summary_name LIKE '%bachelor%')
hard gold: SELECT t1.student_id FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id   =   T2.student_id JOIN Degree_Programs AS T3 ON T2.degree_program_id   =   T3.degree_program_id WHERE T3.degree_summary_name   =   'Bachelor'

当前idx3
____________________
SELECT  * FROM Students WHERE student_id = 9
SELECT DISTINCT t1.first_name, t1.middle_name, t1.last_name FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id   =   T2.student_id JOIN Degree_Programs AS T3 ON T2.degree_program_id   =   T3.degree_program_id WHERE t1.student_id  =  9
连接数据库../datasets/cosql_dataset/database/student_transcripts_tracking/student_transcripts_tracking.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
hard pred: SELECT  * FROM Students WHERE student_id = 9
hard gold: SELECT DISTINCT t1.first_name, t1.middle_name, t1.last_name FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id   =   T2.student_id JOIN Degree_Programs AS T3 ON T2.degree_program_id   =   T3.degree_program_id WHERE t1.student_id  =  9

当前idx4
____________________
SELECT  * FROM Students WHERE student_id = 7
SELECT DISTINCT t1.first_name, t1.middle_name, t1.last_name FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id   =   T2.student_id JOIN Degree_Programs AS T3 ON T2.degree_program_id   =   T3.degree_program_id WHERE t1.student_id  =  7
连接数据库../datasets/cosql_dataset/database/student_transcripts_tracking/student_transcripts_tracking.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
hard pred: SELECT  * FROM Students WHERE student_id = 7
hard gold: SELECT DISTINCT t1.first_name, t1.middle_name, t1.last_name FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id   =   T2.student_id JOIN Degree_Programs AS T3 ON T2.degree_program_id   =   T3.degree_program_id WHERE t1.student_id  =  7

当前idx>4
eval_err_num:78
____________________
SELECT  s.student_id, d.degree_summary_name FROM Students s JOIN Student_Enrolment se ON s.student_id = se.student_id JOIN Degree_Programs d ON se.degree_program_id = d.degree_program_id WHERE d.degree_summary_name LIKE '%bachelor%'
SELECT DISTINCT T1.first_name ,  T1.middle_name ,  T1.last_name, T3.degree_summary_name FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id   =   T2.student_id JOIN Degree_Programs AS T3 ON T2.degree_program_id   =   T3.degree_program_id WHERE T3.degree_summary_name   =   'Bachelor'
连接数据库../datasets/cosql_dataset/database/student_transcripts_tracking/student_transcripts_tracking.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
hard pred: SELECT  s.student_id, d.degree_summary_name FROM Students s JOIN Student_Enrolment se ON s.student_id = se.student_id JOIN Degree_Programs d ON se.degree_program_id = d.degree_program_id WHERE d.degree_summary_name LIKE '%bachelor%'
hard gold: SELECT DISTINCT T1.first_name ,  T1.middle_name ,  T1.last_name, T3.degree_summary_name FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id   =   T2.student_id JOIN Degree_Programs AS T3 ON T2.degree_program_id   =   T3.degree_program_id WHERE T3.degree_summary_name   =   'Bachelor'

当前idx>4
____________________
SELECT  DISTINCT degree_summary_description FROM Degree_Programs
SELECT DISTINCT T3.degree_summary_description FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id   =   T2.student_id JOIN Degree_Programs AS T3 ON T2.degree_program_id   =   T3.degree_program_id
连接数据库../datasets/cosql_dataset/database/student_transcripts_tracking/student_transcripts_tracking.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:False
medium pred: SELECT  DISTINCT degree_summary_description FROM Degree_Programs
medium gold: SELECT DISTINCT T3.degree_summary_description FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id   =   T2.student_id JOIN Degree_Programs AS T3 ON T2.degree_program_id   =   T3.degree_program_id

当前idx>4
____________________
SELECT  DISTINCT student_id FROM Student_Enrolment WHERE degree_program_id IN (SELECT degree_program_id FROM Degree_Programs WHERE degree_summary_name LIKE '%bachelor%')
SELECT DISTINCT T1.student_ID FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id   =   T2.student_id JOIN Degree_Programs AS T3 ON T2.degree_program_id   =   T3.degree_program_id WHERE T3.degree_summary_name   =   'Bachelor'
连接数据库../datasets/cosql_dataset/database/student_transcripts_tracking/student_transcripts_tracking.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:0
hard pred: SELECT  DISTINCT student_id FROM Student_Enrolment WHERE degree_program_id IN (SELECT degree_program_id FROM Degree_Programs WHERE degree_summary_name LIKE '%bachelor%')
hard gold: SELECT DISTINCT T1.student_ID FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id   =   T2.student_id JOIN Degree_Programs AS T3 ON T2.degree_program_id   =   T3.degree_program_id WHERE T3.degree_summary_name   =   'Bachelor'

当前idx>4
____________________
SELECT  first_name, middle_name, last_name FROM Students WHERE student_id IN (     SELECT DISTINCT student_id     FROM Student_Enrolment     WHERE degree_program_id IN (SELECT degree_program_id FROM Degree_Programs WHERE degree_summary_name LIKE '%bachelor%') )
SELECT DISTINCT T1.first_name ,  T1.middle_name ,  T1.last_name FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id   =   T2.student_id JOIN Degree_Programs AS T3 ON T2.degree_program_id   =   T3.degree_program_id WHERE T3.degree_summary_name   =   'Bachelor'
连接数据库../datasets/cosql_dataset/database/student_transcripts_tracking/student_transcripts_tracking.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
hard pred: SELECT  first_name, middle_name, last_name FROM Students WHERE student_id IN (     SELECT DISTINCT student_id     FROM Student_Enrolment     WHERE degree_program_id IN (SELECT degree_program_id FROM Degree_Programs WHERE degree_summary_name LIKE '%bachelor%') )
hard gold: SELECT DISTINCT T1.first_name ,  T1.middle_name ,  T1.last_name FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id   =   T2.student_id JOIN Degree_Programs AS T3 ON T2.degree_program_id   =   T3.degree_program_id WHERE T3.degree_summary_name   =   'Bachelor'

当前idx1
____________________
SELECT  COUNT(DISTINCT Maker) FROM car_makers WHERE Maker = 'Chevrolet'
SELECT count ( DISTINCT Make )  FROM CAR_NAMES WHERE Model  =  'chevrolet'
连接数据库../datasets/cosql_dataset/database/car_1/car_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
easy pred: SELECT  COUNT(DISTINCT Maker) FROM car_makers WHERE Maker = 'Chevrolet'
easy gold: SELECT count ( DISTINCT Make )  FROM CAR_NAMES WHERE Model  =  'chevrolet'

当前idx2
____________________
SELECT  COUNT(*) FROM model_list
SELECT count ( DISTINCT Model )  FROM CAR_NAMES
连接数据库../datasets/cosql_dataset/database/car_1/car_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
easy pred: SELECT  COUNT(*) FROM model_list
easy gold: SELECT count ( DISTINCT Model )  FROM CAR_NAMES

当前idx3
____________________
SELECT  Model FROM model_list GROUP BY Model ORDER BY COUNT(DISTINCT Maker) DESC LIMIT 1
SELECT Model FROM CAR_NAMES GROUP BY Model ORDER BY count ( DISTINCT Make )  DESC LIMIT 1
连接数据库../datasets/cosql_dataset/database/car_1/car_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
hard pred: SELECT  Model FROM model_list GROUP BY Model ORDER BY COUNT(DISTINCT Maker) DESC LIMIT 1
hard gold: SELECT Model FROM CAR_NAMES GROUP BY Model ORDER BY count ( DISTINCT Make )  DESC LIMIT 1

当前idx1
eval_err_num:79
____________________
SELECT  t.Name, c.Course FROM teacher t JOIN course_arrange ca ON t.Teacher_ID = ca.Teacher_ID JOIN course c ON ca.Course_ID = c.Course_ID
SELECT T2.Name, T1.course_id FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID   =   T2.Teacher_ID
连接数据库../datasets/cosql_dataset/database/course_teach/course_teach.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT  t.Name, c.Course FROM teacher t JOIN course_arrange ca ON t.Teacher_ID = ca.Teacher_ID JOIN course c ON ca.Course_ID = c.Course_ID
medium gold: SELECT T2.Name, T1.course_id FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID   =   T2.Teacher_ID

当前idx2
eval_err_num:80
____________________
SELECT  Teacher_ID, COUNT(Course_ID) AS Number_of_Courses FROM course_arrange GROUP BY Teacher_ID
SELECT T2.Name ,  COUNT ( * )  FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID   =   T2.Teacher_ID GROUP BY T2.Name
连接数据库../datasets/cosql_dataset/database/course_teach/course_teach.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT  Teacher_ID, COUNT(Course_ID) AS Number_of_Courses FROM course_arrange GROUP BY Teacher_ID
medium gold: SELECT T2.Name ,  COUNT ( * )  FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID   =   T2.Teacher_ID GROUP BY T2.Name

当前idx3
____________________
SELECT  Name FROM teacher WHERE Age < 30
SELECT name from teacher where age < 30
连接数据库../datasets/cosql_dataset/database/course_teach/course_teach.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx1
____________________
SELECT  Date FROM performance WHERE Type = 'audition'
SELECT date FROM performance WHERE TYPE LIKE "%audition%"
连接数据库../datasets/cosql_dataset/database/orchestra/orchestra.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT  Date FROM performance WHERE Type = 'audition'
medium gold: SELECT date FROM performance WHERE TYPE LIKE "%audition%"

当前idx1
____________________
SELECT  birth_date FROM players WHERE player_id = 200002
SELECT birth_date FROM players where player_id = 200002
连接数据库../datasets/cosql_dataset/database/wta_1/wta_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT  first_name FROM players WHERE player_id = 200001
SELECT first_name FROM players where player_id = 200001
连接数据库../datasets/cosql_dataset/database/wta_1/wta_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx3
____________________
SELECT  country_code FROM players GROUP BY country_code HAVING COUNT(player_id) > 50
SELECT country_code FROM players GROUP BY country_code HAVING count ( * )  > 50
连接数据库../datasets/cosql_dataset/database/wta_1/wta_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:0
easy pred: SELECT  country_code FROM players GROUP BY country_code HAVING COUNT(player_id) > 50
easy gold: SELECT country_code FROM players GROUP BY country_code HAVING count ( * )  > 50

当前idx1
eval_err_num:81
____________________
SELECT  co.Region FROM city ci JOIN country co ON ci.CountryCode = co.Code WHERE ci.Name = 'Kabul'
SELECT Region FROM country AS T1 JOIN city AS T2 ON T1.Code   =   T2.CountryCode WHERE T2.Name   =   "Kabul"
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT  co.Region FROM city ci JOIN country co ON ci.CountryCode = co.Code WHERE ci.Name = 'Kabul'
medium gold: SELECT Region FROM country AS T1 JOIN city AS T2 ON T1.Code   =   T2.CountryCode WHERE T2.Name   =   "Kabul"

当前idx2
eval_err_num:82
____________________
SELECT  co.Region FROM city ci JOIN country co ON ci.CountryCode = co.Code WHERE ci.Name = 'Herat'
SELECT Region FROM country AS T1 JOIN city AS T2 ON T1.Code   =   T2.CountryCode WHERE T2.Name   =   "Herat"
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT  co.Region FROM city ci JOIN country co ON ci.CountryCode = co.Code WHERE ci.Name = 'Herat'
medium gold: SELECT Region FROM country AS T1 JOIN city AS T2 ON T1.Code   =   T2.CountryCode WHERE T2.Name   =   "Herat"

当前idx3
eval_err_num:83
____________________
SELECT  co.Region FROM city ci JOIN country co ON ci.CountryCode = co.Code WHERE ci.Name = 'Quandahar'
SELECT Region FROM country AS T1 JOIN city AS T2 ON T1.Code   =   T2.CountryCode WHERE T2.Name   =   "Qandahar"
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT  co.Region FROM city ci JOIN country co ON ci.CountryCode = co.Code WHERE ci.Name = 'Quandahar'
medium gold: SELECT Region FROM country AS T1 JOIN city AS T2 ON T1.Code   =   T2.CountryCode WHERE T2.Name   =   "Qandahar"

当前idx1
eval_err_num:84
____________________
SELECT  year, COUNT(*) AS num_matches FROM matches GROUP BY year ORDER BY num_matches DESC LIMIT 1
SELECT YEAR FROM matches GROUP BY YEAR ORDER BY count ( * )  DESC LIMIT 1
连接数据库../datasets/cosql_dataset/database/wta_1/wta_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
hard pred: SELECT  year, COUNT(*) AS num_matches FROM matches GROUP BY year ORDER BY num_matches DESC LIMIT 1
hard gold: SELECT YEAR FROM matches GROUP BY YEAR ORDER BY count ( * )  DESC LIMIT 1

当前idx2
eval_err_num:85
____________________
SELECT  year, COUNT(*) AS num_matches FROM matches GROUP BY year ORDER BY num_matches LIMIT 1
SELECT YEAR FROM matches GROUP BY YEAR ORDER BY count ( * )  LIMIT 1
连接数据库../datasets/cosql_dataset/database/wta_1/wta_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
hard pred: SELECT  year, COUNT(*) AS num_matches FROM matches GROUP BY year ORDER BY num_matches LIMIT 1
hard gold: SELECT YEAR FROM matches GROUP BY YEAR ORDER BY count ( * )  LIMIT 1

当前idx3
eval_err_num:86
____________________
SELECT  year, COUNT(*) AS num_matches FROM matches GROUP BY year ORDER BY num_matches LIMIT 1
SELECT YEAR, count ( * )  FROM matches GROUP BY YEAR ORDER BY count ( * )  LIMIT 1
连接数据库../datasets/cosql_dataset/database/wta_1/wta_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
hard pred: SELECT  year, COUNT(*) AS num_matches FROM matches GROUP BY year ORDER BY num_matches LIMIT 1
hard gold: SELECT YEAR, count ( * )  FROM matches GROUP BY YEAR ORDER BY count ( * )  LIMIT 1

当前idx4
eval_err_num:87
____________________
SELECT  COUNT(*) AS num_matches FROM matches WHERE year = 2016
SELECT year, count ( * )  from matches where year  =  2016
连接数据库../datasets/cosql_dataset/database/wta_1/wta_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT  COUNT(*) AS num_matches FROM matches WHERE year = 2016
medium gold: SELECT year, count ( * )  from matches where year  =  2016

当前idx>4
eval_err_num:88
____________________
SELECT  COUNT(*) AS num_hard_surface_matches FROM matches WHERE year = 2016 AND surface = 'Hard'
SELECT count ( * )  from matches where surface  =  "Hard"
连接数据库../datasets/cosql_dataset/database/wta_1/wta_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
easy pred: SELECT  COUNT(*) AS num_hard_surface_matches FROM matches WHERE year = 2016 AND surface = 'Hard'
easy gold: SELECT count ( * )  from matches where surface  =  "Hard"

当前idx1
eval_err_num:89
____________________
SELECT  cm.FullName AS "Car Maker", COUNT(ml.Model) AS "Number of Models" FROM car_makers cm LEFT JOIN model_list ml ON cm.Id = ml.Maker GROUP BY cm.FullName  SELECT Id AS "Car Maker Id" FROM car_makers
SELECT  Id  FROM CAR_MAKERS
连接数据库../datasets/cosql_dataset/database/car_1/car_1.sqlite
执行第一个查询
执行出错: near "SELECT": syntax error
eval_exec:False
exact_score:0
easy pred: SELECT  cm.FullName AS "Car Maker", COUNT(ml.Model) AS "Number of Models" FROM car_makers cm LEFT JOIN model_list ml ON cm.Id = ml.Maker GROUP BY cm.FullName  SELECT Id AS "Car Maker Id" FROM car_makers
easy gold: SELECT  Id  FROM CAR_MAKERS

当前idx2
eval_err_num:90
____________________
SELECT  cm.FullName AS "Car Maker", cm.Country AS "Country Id" FROM car_makers cm
SELECT  Country  FROM CAR_MAKERS
连接数据库../datasets/cosql_dataset/database/car_1/car_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
easy pred: SELECT  cm.FullName AS "Car Maker", cm.Country AS "Country Id" FROM car_makers cm
easy gold: SELECT  Country  FROM CAR_MAKERS

当前idx1
eval_err_num:91
____________________
SELECT  AVG(Percentage) AS AveragePercentage FROM countrylanguage
select avg ( percentage )  from countrylanguage
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
easy pred: SELECT  AVG(Percentage) AS AveragePercentage FROM countrylanguage
easy gold: select avg ( percentage )  from countrylanguage

当前idx2
____________________
SELECT  CountryCode FROM countrylanguage WHERE Language = 'Dutch' ORDER BY Percentage DESC LIMIT 1
select countrycode from countrylanguage where language  =  "Dutch" order by percentage desc limit 1
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx3
eval_err_num:92
____________________
SELECT  MAX(Percentage) - MIN(Percentage) AS DifferenceOfOverallPercent FROM countrylanguage
select avg ( percentage )  from countrylanguage where language  =  "Papiamento"
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
easy pred: SELECT  MAX(Percentage) - MIN(Percentage) AS DifferenceOfOverallPercent FROM countrylanguage
easy gold: select avg ( percentage )  from countrylanguage where language  =  "Papiamento"

当前idx1
____________________
SELECT  Level_of_membership FROM visitor WHERE Name = 'Gonzalo Higuaín'
SELECT Level_of_membership FROM visitor WHERE name  =   "Gonzalo Higuaín "
连接数据库../datasets/cosql_dataset/database/museum_visit/museum_visit.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:True
当前idx2
____________________
SELECT  Name FROM visitor WHERE Level_of_membership = 5
SELECT name FROM visitor WHERE Level_of_membership =  5
连接数据库../datasets/cosql_dataset/database/museum_visit/museum_visit.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx3
____________________
SELECT  COUNT(*) FROM visitor WHERE Level_of_membership > 5
SELECT count ( * )  FROM visitor WHERE Level_of_membership>5
连接数据库../datasets/cosql_dataset/database/museum_visit/museum_visit.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx4
____________________
SELECT  Age FROM visitor WHERE Level_of_membership = 8
SELECT age FROM visitor WHERE Level_of_membership   = 8
连接数据库../datasets/cosql_dataset/database/museum_visit/museum_visit.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx>4
____________________
SELECT  COUNT(*) FROM visitor WHERE Level_of_membership > 4
SELECT count ( * )  FROM visitor WHERE Level_of_membership > 4
连接数据库../datasets/cosql_dataset/database/museum_visit/museum_visit.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx>4
____________________
SELECT  Name FROM visitor ORDER BY Age DESC, Level_of_membership
SELECT name ,  Level_of_membership FROM visitor WHERE Level_of_membership  >  4 ORDER BY age DESC
连接数据库../datasets/cosql_dataset/database/museum_visit/museum_visit.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT  Name FROM visitor ORDER BY Age DESC, Level_of_membership
medium gold: SELECT name ,  Level_of_membership FROM visitor WHERE Level_of_membership  >  4 ORDER BY age DESC

当前idx1
eval_err_num:93
____________________
SELECT  country.Name, COUNT(countrylanguage.Language) AS NumLanguages FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode GROUP BY country.Code ORDER BY NumLanguages DESC LIMIT 1
SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code   =   T2.CountryCode GROUP BY T1.Name ORDER BY COUNT ( * )  DESC LIMIT 1
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
extra pred: SELECT  country.Name, COUNT(countrylanguage.Language) AS NumLanguages FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode GROUP BY country.Code ORDER BY NumLanguages DESC LIMIT 1
extra gold: SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code   =   T2.CountryCode GROUP BY T1.Name ORDER BY COUNT ( * )  DESC LIMIT 1

当前idx2
eval_err_num:94
____________________
SELECT  COUNT(Language) AS NumLanguages FROM countrylanguage WHERE CountryCode = 'CAN'
SELECT count ( * )  FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code   =   T2.CountryCode where T1.name  =  "Canada"
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT  COUNT(Language) AS NumLanguages FROM countrylanguage WHERE CountryCode = 'CAN'
medium gold: SELECT count ( * )  FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code   =   T2.CountryCode where T1.name  =  "Canada"

当前idx3
____________________
SELECT  Language FROM countrylanguage WHERE CountryCode = 'CAN'
SELECT T2.language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code   =   T2.CountryCode where T1.name  =  "Canada"
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:0
medium pred: SELECT  Language FROM countrylanguage WHERE CountryCode = 'CAN'
medium gold: SELECT T2.language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code   =   T2.CountryCode where T1.name  =  "Canada"

当前idx4
eval_err_num:95
____________________
SELECT  COUNT(DISTINCT CountryCode) AS NumCountries FROM countrylanguage WHERE Language = 'Chinese'
SELECT count ( distinct CountryCode )  FROM countrylanguage WHERE Language  =  "Chinese"
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
easy pred: SELECT  COUNT(DISTINCT CountryCode) AS NumCountries FROM countrylanguage WHERE Language = 'Chinese'
easy gold: SELECT count ( distinct CountryCode )  FROM countrylanguage WHERE Language  =  "Chinese"

当前idx>4
____________________
SELECT  Name FROM country WHERE Continent = 'North America'
SELECT NAME FROM country WHERE Continent  =  "North America"
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx>4
____________________
SELECT  country.Name, countrylanguage.Language FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE country.Continent = 'North America' AND countrylanguage.IsOfficial = 'T'
SELECT LANGUAGE FROM countrylanguage WHERE countrycode in  ( SELECT Code FROM country WHERE Continent  =  "North America" )  and IsOfficial  =  "T"
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
extra pred: SELECT  country.Name, countrylanguage.Language FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE country.Continent = 'North America' AND countrylanguage.IsOfficial = 'T'
extra gold: SELECT LANGUAGE FROM countrylanguage WHERE countrycode in  ( SELECT Code FROM country WHERE Continent  =  "North America" )  and IsOfficial  =  "T"

当前idx>4
____________________
SELECT  LifeExpectancy FROM country WHERE Code = 'CAN'
SELECT LifeExpectancy FROM country WHERE name  =  "Canada"
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:0
easy pred: SELECT  LifeExpectancy FROM country WHERE Code = 'CAN'
easy gold: SELECT LifeExpectancy FROM country WHERE name  =  "Canada"

当前idx1
eval_err_num:96
____________________
SELECT  COUNT(StuID) FROM (     SELECT StuID, COUNT(PetID) AS num_pets     FROM Has_Pet     GROUP BY StuID     HAVING num_pets > 1 ) AS multiple_pets
SELECT count ( * )  FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid   =   T2.stuid GROUP BY T1.stuid HAVING count ( * )   >  1
连接数据库../datasets/cosql_dataset/database/pets_1/pets_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT  COUNT(StuID) FROM (     SELECT StuID, COUNT(PetID) AS num_pets     FROM Has_Pet     GROUP BY StuID     HAVING num_pets > 1 ) AS multiple_pets
medium gold: SELECT count ( * )  FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid   =   T2.stuid GROUP BY T1.stuid HAVING count ( * )   >  1

当前idx2
eval_err_num:97
____________________
SELECT  Fname, LName FROM Student WHERE StuID IN (     SELECT StuID     FROM (         SELECT StuID, COUNT(PetID) AS num_pets         FROM Has_Pet         GROUP BY StuID         HAVING num_pets > 1     ) AS multiple_pets )
SELECT T1.lname, T1.fname  FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid   =   T2.stuid GROUP BY T1.stuid HAVING count ( * )   >  1
连接数据库../datasets/cosql_dataset/database/pets_1/pets_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT  Fname, LName FROM Student WHERE StuID IN (     SELECT StuID     FROM (         SELECT StuID, COUNT(PetID) AS num_pets         FROM Has_Pet         GROUP BY StuID         HAVING num_pets > 1     ) AS multiple_pets )
medium gold: SELECT T1.lname, T1.fname  FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid   =   T2.stuid GROUP BY T1.stuid HAVING count ( * )   >  1

当前idx3
____________________
SELECT  Sex FROM Student WHERE Fname = 'Kim' AND LName = 'Tracy'
SELECT T1.lname, T1.fname, T1.sex  FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid   =   T2.stuid GROUP BY T1.stuid HAVING count ( * )   >  1
连接数据库../datasets/cosql_dataset/database/pets_1/pets_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT  Sex FROM Student WHERE Fname = 'Kim' AND LName = 'Tracy'
medium gold: SELECT T1.lname, T1.fname, T1.sex  FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid   =   T2.stuid GROUP BY T1.stuid HAVING count ( * )   >  1

当前idx1
____________________
SELECT  COUNT(DISTINCT Region)  FROM country  WHERE Continent = 'Asia'
select count ( * )  from  ( SELECT region FROM country WHERE Continent   =   "Asia" group by region ) 
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
easy pred: SELECT  COUNT(DISTINCT Region)  FROM country  WHERE Continent = 'Asia'
easy gold: select count ( * )  from  ( SELECT region FROM country WHERE Continent   =   "Asia" group by region ) 

当前idx2
____________________
SELECT  COUNT(DISTINCT Region)  FROM country  WHERE Continent = 'Europe'
select count ( * )  from  ( SELECT region FROM country WHERE Continent   =   "Europe" group by region ) 
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
easy pred: SELECT  COUNT(DISTINCT Region)  FROM country  WHERE Continent = 'Europe'
easy gold: select count ( * )  from  ( SELECT region FROM country WHERE Continent   =   "Europe" group by region ) 

当前idx3
____________________
SELECT  SUM(SurfaceArea)  FROM country  WHERE Region IN (SELECT Region FROM country WHERE Continent = 'Asia' LIMIT 10)
SELECT sum ( SurfaceArea )  FROM country WHERE Continent   =   "Asia" OR Continent   =   "Europe"
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT  SUM(SurfaceArea)  FROM country  WHERE Region IN (SELECT Region FROM country WHERE Continent = 'Asia' LIMIT 10)
medium gold: SELECT sum ( SurfaceArea )  FROM country WHERE Continent   =   "Asia" OR Continent   =   "Europe"

当前idx1
____________________
SELECT  COUNT(DISTINCT Template_ID) FROM Templates WHERE Template_Type_Code = (SELECT Template_Type_Code FROM Ref_Template_Types WHERE Template_Type_Description = 'Presentation')
SELECT count ( * )  FROM Ref_template_types AS T1 JOIN Templates AS T2 ON T1.template_type_code   =  T2.template_type_code WHERE T1.template_type_description   =   "Presentation"
连接数据库../datasets/cosql_dataset/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT  COUNT(DISTINCT Template_ID) FROM Templates WHERE Template_Type_Code = (SELECT Template_Type_Code FROM Ref_Template_Types WHERE Template_Type_Description = 'Presentation')
medium gold: SELECT count ( * )  FROM Ref_template_types AS T1 JOIN Templates AS T2 ON T1.template_type_code   =  T2.template_type_code WHERE T1.template_type_description   =   "Presentation"

当前idx2
____________________
SELECT  Template_ID FROM Templates WHERE Template_Type_Code = (SELECT Template_Type_Code FROM Ref_Template_Types WHERE Template_Type_Description = 'Presentation')
SELECT T2.template_id FROM Ref_template_types AS T1 JOIN Templates AS T2 ON T1.template_type_code   =  T2.template_type_code WHERE T1.template_type_description   =   "Presentation"
连接数据库../datasets/cosql_dataset/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:0
medium pred: SELECT  Template_ID FROM Templates WHERE Template_Type_Code = (SELECT Template_Type_Code FROM Ref_Template_Types WHERE Template_Type_Description = 'Presentation')
medium gold: SELECT T2.template_id FROM Ref_template_types AS T1 JOIN Templates AS T2 ON T1.template_type_code   =  T2.template_type_code WHERE T1.template_type_description   =   "Presentation"

当前idx3
____________________
SELECT  Template_Type_Code FROM Templates WHERE Template_ID IN (     SELECT Template_ID     FROM Templates     WHERE Template_Type_Code = (SELECT Template_Type_Code FROM Ref_Template_Types WHERE Template_Type_Description = 'Presentation') )
SELECT T2.template_id, T2.Template_Type_Code FROM Ref_template_types AS T1 JOIN Templates AS T2 ON T1.template_type_code   =  T2.template_type_code WHERE T1.template_type_description   =   "Presentation"
连接数据库../datasets/cosql_dataset/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT  Template_Type_Code FROM Templates WHERE Template_ID IN (     SELECT Template_ID     FROM Templates     WHERE Template_Type_Code = (SELECT Template_Type_Code FROM Ref_Template_Types WHERE Template_Type_Description = 'Presentation') )
medium gold: SELECT T2.template_id, T2.Template_Type_Code FROM Ref_template_types AS T1 JOIN Templates AS T2 ON T1.template_type_code   =  T2.template_type_code WHERE T1.template_type_description   =   "Presentation"

当前idx1
eval_err_num:98
____________________
SELECT  student_course_id, COUNT(transcript_id) AS num_transcripts FROM Transcript_Contents GROUP BY student_course_id ORDER BY num_transcripts DESC LIMIT 1
SELECT count ( * )   FROM Transcript_Contents GROUP BY student_course_id ORDER BY count ( * )  DESC LIMIT 1
连接数据库../datasets/cosql_dataset/database/student_transcripts_tracking/student_transcripts_tracking.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
hard pred: SELECT  student_course_id, COUNT(transcript_id) AS num_transcripts FROM Transcript_Contents GROUP BY student_course_id ORDER BY num_transcripts DESC LIMIT 1
hard gold: SELECT count ( * )   FROM Transcript_Contents GROUP BY student_course_id ORDER BY count ( * )  DESC LIMIT 1

当前idx2
eval_err_num:99
____________________
SELECT  student_course_id FROM Transcript_Contents GROUP BY student_course_id HAVING COUNT(transcript_id) = (SELECT COUNT(transcript_id) AS num_transcripts                                FROM Transcript_Contents                                GROUP BY student_course_id                                ORDER BY num_transcripts DESC                                LIMIT 1)
SELECT student_course_id FROM Transcript_Contents GROUP BY student_course_id ORDER BY count ( * )  DESC LIMIT 1
连接数据库../datasets/cosql_dataset/database/student_transcripts_tracking/student_transcripts_tracking.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
hard pred: SELECT  student_course_id FROM Transcript_Contents GROUP BY student_course_id HAVING COUNT(transcript_id) = (SELECT COUNT(transcript_id) AS num_transcripts                                FROM Transcript_Contents                                GROUP BY student_course_id                                ORDER BY num_transcripts DESC                                LIMIT 1)
hard gold: SELECT student_course_id FROM Transcript_Contents GROUP BY student_course_id ORDER BY count ( * )  DESC LIMIT 1

当前idx3
eval_err_num:100
____________________
SELECT  student_course_id, COUNT(transcript_id) AS num_transcripts FROM Transcript_Contents GROUP BY student_course_id ORDER BY num_transcripts LIMIT 1
SELECT count ( * )  FROM Transcript_Contents GROUP BY student_course_id ORDER BY count ( * )  LIMIT 1
连接数据库../datasets/cosql_dataset/database/student_transcripts_tracking/student_transcripts_tracking.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
hard pred: SELECT  student_course_id, COUNT(transcript_id) AS num_transcripts FROM Transcript_Contents GROUP BY student_course_id ORDER BY num_transcripts LIMIT 1
hard gold: SELECT count ( * )  FROM Transcript_Contents GROUP BY student_course_id ORDER BY count ( * )  LIMIT 1

当前idx4
eval_err_num:101
____________________
SELECT  student_course_id FROM Transcript_Contents GROUP BY student_course_id HAVING COUNT(transcript_id) = (SELECT COUNT(transcript_id) AS num_transcripts                                FROM Transcript_Contents                                GROUP BY student_course_id                                ORDER BY num_transcripts                                LIMIT 1)
SELECT  student_course_id FROM Transcript_Contents GROUP BY student_course_id ORDER BY count ( * )  LIMIT 1
连接数据库../datasets/cosql_dataset/database/student_transcripts_tracking/student_transcripts_tracking.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
hard pred: SELECT  student_course_id FROM Transcript_Contents GROUP BY student_course_id HAVING COUNT(transcript_id) = (SELECT COUNT(transcript_id) AS num_transcripts                                FROM Transcript_Contents                                GROUP BY student_course_id                                ORDER BY num_transcripts                                LIMIT 1)
hard gold: SELECT  student_course_id FROM Transcript_Contents GROUP BY student_course_id ORDER BY count ( * )  LIMIT 1

当前idx>4
eval_err_num:102
____________________
SELECT  AVG(student_course_id) AS average_student_course_id FROM Transcript_Contents
SELECT avg ( student_course_id )  FROM Transcript_Contents
连接数据库../datasets/cosql_dataset/database/student_transcripts_tracking/student_transcripts_tracking.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
easy pred: SELECT  AVG(student_course_id) AS average_student_course_id FROM Transcript_Contents
easy gold: SELECT avg ( student_course_id )  FROM Transcript_Contents

当前idx1
____________________
SELECT  property_name FROM Properties WHERE room_count > 1
SELECT property_name FROM Properties WHERE room_count  >  1
连接数据库../datasets/cosql_dataset/database/real_estate_properties/real_estate_properties.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
eval_err_num:103
____________________
SELECT  property_name FROM Properties WHERE (apt_feature_1 IS NOT NULL OR hse_feature_1 IS NOT NULL) AND room_count > 1
SELECT property_name FROM Properties WHERE property_type_code   =   "House" UNION SELECT property_name FROM Properties WHERE property_type_code   =   "Apartment" AND room_count  >  1
连接数据库../datasets/cosql_dataset/database/real_estate_properties/real_estate_properties.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
hard pred: SELECT  property_name FROM Properties WHERE (apt_feature_1 IS NOT NULL OR hse_feature_1 IS NOT NULL) AND room_count > 1
hard gold: SELECT property_name FROM Properties WHERE property_type_code   =   "House" UNION SELECT property_name FROM Properties WHERE property_type_code   =   "Apartment" AND room_count  >  1

当前idx3
eval_err_num:104
____________________
SELECT  property_name, room_count FROM Properties WHERE (apt_feature_1 IS NOT NULL OR hse_feature_1 IS NOT NULL) AND room_count > 1
SELECT property_name, room_count FROM Properties WHERE property_type_code   =   "House" UNION SELECT property_name, room_count FROM Properties WHERE property_type_code   =   "Apartment" AND room_count  >  1
连接数据库../datasets/cosql_dataset/database/real_estate_properties/real_estate_properties.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
extra pred: SELECT  property_name, room_count FROM Properties WHERE (apt_feature_1 IS NOT NULL OR hse_feature_1 IS NOT NULL) AND room_count > 1
extra gold: SELECT property_name, room_count FROM Properties WHERE property_type_code   =   "House" UNION SELECT property_name, room_count FROM Properties WHERE property_type_code   =   "Apartment" AND room_count  >  1

当前idx4
eval_err_num:105
____________________
SELECT  AVG(agreed_selling_price) FROM Properties WHERE hse_feature_1 IS NOT NULL AND room_count > 1
SELECT avg ( agreed_selling_price )  FROM Properties WHERE property_type_code   =   "House" AND room_count  >  1
连接数据库../datasets/cosql_dataset/database/real_estate_properties/real_estate_properties.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT  AVG(agreed_selling_price) FROM Properties WHERE hse_feature_1 IS NOT NULL AND room_count > 1
medium gold: SELECT avg ( agreed_selling_price )  FROM Properties WHERE property_type_code   =   "House" AND room_count  >  1

当前idx1
____________________
SELECT  City FROM employee WHERE Age < 30 GROUP BY City HAVING COUNT(Employee_ID) > 1
SELECT city FROM employee WHERE age  <  30 GROUP BY city HAVING count ( * )   >  1
连接数据库../datasets/cosql_dataset/database/employee_hire_evaluation/employee_hire_evaluation.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:0
medium pred: SELECT  City FROM employee WHERE Age < 30 GROUP BY City HAVING COUNT(Employee_ID) > 1
medium gold: SELECT city FROM employee WHERE age  <  30 GROUP BY city HAVING count ( * )   >  1

当前idx2
____________________
SELECT  City FROM employee WHERE Age > 30 GROUP BY City HAVING COUNT(Employee_ID) > 1
SELECT city FROM employee WHERE age  >  30 GROUP BY city HAVING count ( * )   >  1
连接数据库../datasets/cosql_dataset/database/employee_hire_evaluation/employee_hire_evaluation.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:0
medium pred: SELECT  City FROM employee WHERE Age > 30 GROUP BY City HAVING COUNT(Employee_ID) > 1
medium gold: SELECT city FROM employee WHERE age  >  30 GROUP BY city HAVING count ( * )   >  1

当前idx3
____________________
SELECT  Name, Age FROM employee WHERE Age > 30
SELECT Name, Age FROM employee WHERE age  >  30
连接数据库../datasets/cosql_dataset/database/employee_hire_evaluation/employee_hire_evaluation.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx4
____________________
SELECT  Name, Age FROM employee WHERE Age < 30
SELECT Name, Age FROM employee WHERE age  <  30
连接数据库../datasets/cosql_dataset/database/employee_hire_evaluation/employee_hire_evaluation.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx>4
____________________
SELECT  City FROM employee WHERE Age < 29 GROUP BY City
SELECT City FROM employee WHERE age  <  29
连接数据库../datasets/cosql_dataset/database/employee_hire_evaluation/employee_hire_evaluation.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:0
easy pred: SELECT  City FROM employee WHERE Age < 29 GROUP BY City
easy gold: SELECT City FROM employee WHERE age  <  29

当前idx1
____________________
SELECT  COUNT(owner_id)  FROM Owners
SELECT count ( * )  FROM Owners
连接数据库../datasets/cosql_dataset/database/dog_kennels/dog_kennels.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
easy pred: SELECT  COUNT(owner_id)  FROM Owners
easy gold: SELECT count ( * )  FROM Owners

当前idx2
____________________
SELECT  MIN(age)  FROM Dogs
SELECT age FROM Dogs ORDER BY age ASC LIMIT 1
连接数据库../datasets/cosql_dataset/database/dog_kennels/dog_kennels.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:0
medium pred: SELECT  MIN(age)  FROM Dogs
medium gold: SELECT age FROM Dogs ORDER BY age ASC LIMIT 1

当前idx3
____________________
SELECT  name  FROM Dogs  WHERE age = '1'
SELECT name FROM Dogs ORDER BY age ASC LIMIT 1
连接数据库../datasets/cosql_dataset/database/dog_kennels/dog_kennels.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:0
medium pred: SELECT  name  FROM Dogs  WHERE age = '1'
medium gold: SELECT name FROM Dogs ORDER BY age ASC LIMIT 1

当前idx4
eval_err_num:106
____________________
SELECT  o.first_name, o.last_name FROM Owners o JOIN Dogs d ON o.owner_id = d.owner_id WHERE d.name = 'Evangeline'
SELECT T1.first_name, T1.last_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id   =   T2.owner_id WHERE T2.name  =  "Evangeline"
连接数据库../datasets/cosql_dataset/database/dog_kennels/dog_kennels.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT  o.first_name, o.last_name FROM Owners o JOIN Dogs d ON o.owner_id = d.owner_id WHERE d.name = 'Evangeline'
medium gold: SELECT T1.first_name, T1.last_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id   =   T2.owner_id WHERE T2.name  =  "Evangeline"

当前idx1
____________________
SELECT  Singer_ID FROM singer WHERE Singer_ID NOT IN (SELECT Singer_ID FROM song)
SELECT Name FROM singer WHERE Singer_ID NOT IN  ( SELECT Singer_ID FROM song ) 
连接数据库../datasets/cosql_dataset/database/singer/singer.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
hard pred: SELECT  Singer_ID FROM singer WHERE Singer_ID NOT IN (SELECT Singer_ID FROM song)
hard gold: SELECT Name FROM singer WHERE Singer_ID NOT IN  ( SELECT Singer_ID FROM song ) 

当前idx1
eval_err_num:107
____________________
SELECT  Name FROM singer WHERE Birth_Year IN (1948, 1949)
SELECT Name FROM singer WHERE Birth_Year   =   1948 OR Birth_Year   =   1949
连接数据库../datasets/cosql_dataset/database/singer/singer.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT  Name FROM singer WHERE Birth_Year IN (1948, 1949)
medium gold: SELECT Name FROM singer WHERE Birth_Year   =   1948 OR Birth_Year   =   1949

当前idx2
eval_err_num:108
____________________
SELECT  Name, Citizenship FROM singer WHERE Birth_Year IN (1948, 1949)
SELECT Citizenship FROM singer WHERE Birth_Year   =   1948 OR Birth_Year   =   1949
连接数据库../datasets/cosql_dataset/database/singer/singer.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT  Name, Citizenship FROM singer WHERE Birth_Year IN (1948, 1949)
medium gold: SELECT Citizenship FROM singer WHERE Birth_Year   =   1948 OR Birth_Year   =   1949

当前idx3
eval_err_num:109
____________________
SELECT  Name, Net_Worth_Millions FROM singer WHERE Birth_Year IN (1948, 1949) ORDER BY Net_Worth_Millions DESC LIMIT 1
SELECT name FROM singer WHERE Birth_Year   =   1948 OR Birth_Year   =   1949 order by Net_Worth_Millions desc limit 1
连接数据库../datasets/cosql_dataset/database/singer/singer.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
extra pred: SELECT  Name, Net_Worth_Millions FROM singer WHERE Birth_Year IN (1948, 1949) ORDER BY Net_Worth_Millions DESC LIMIT 1
extra gold: SELECT name FROM singer WHERE Birth_Year   =   1948 OR Birth_Year   =   1949 order by Net_Worth_Millions desc limit 1

当前idx4
eval_err_num:110
____________________
SELECT  Name, Net_Worth_Millions FROM singer WHERE Birth_Year IN (1948, 1949) ORDER BY Net_Worth_Millions DESC LIMIT 1
SELECT name,Net_Worth_Millions FROM singer WHERE Birth_Year   =   1948 OR Birth_Year   =   1949 order by Net_Worth_Millions desc limit 1
连接数据库../datasets/cosql_dataset/database/singer/singer.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
extra pred: SELECT  Name, Net_Worth_Millions FROM singer WHERE Birth_Year IN (1948, 1949) ORDER BY Net_Worth_Millions DESC LIMIT 1
extra gold: SELECT name,Net_Worth_Millions FROM singer WHERE Birth_Year   =   1948 OR Birth_Year   =   1949 order by Net_Worth_Millions desc limit 1

当前idx>4
eval_err_num:111
____________________
SELECT  Name, Net_Worth_Millions FROM singer WHERE Birth_Year IN (1948, 1949) ORDER BY Net_Worth_Millions LIMIT 1
SELECT name FROM singer WHERE Birth_Year   =   1948 OR Birth_Year   =   1949 order by Net_Worth_Millions limit 1
连接数据库../datasets/cosql_dataset/database/singer/singer.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
extra pred: SELECT  Name, Net_Worth_Millions FROM singer WHERE Birth_Year IN (1948, 1949) ORDER BY Net_Worth_Millions LIMIT 1
extra gold: SELECT name FROM singer WHERE Birth_Year   =   1948 OR Birth_Year   =   1949 order by Net_Worth_Millions limit 1

当前idx1
eval_err_num:112
____________________
SELECT  COUNT(DISTINCT b.id) AS battles_without_ships_lost FROM battle b LEFT JOIN ship s ON b.id = s.lost_in_battle WHERE s.tonnage != '225' OR s.tonnage IS NULL
SELECT count ( * )  FROM battle WHERE id NOT IN  (  SELECT lost_in_battle FROM ship WHERE tonnage   =   '225'  ) 
连接数据库../datasets/cosql_dataset/database/battle_death/battle_death.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
extra pred: SELECT  COUNT(DISTINCT b.id) AS battles_without_ships_lost FROM battle b LEFT JOIN ship s ON b.id = s.lost_in_battle WHERE s.tonnage != '225' OR s.tonnage IS NULL
extra gold: SELECT count ( * )  FROM battle WHERE id NOT IN  (  SELECT lost_in_battle FROM ship WHERE tonnage   =   '225'  ) 

当前idx2
eval_err_num:113
____________________
SELECT  COUNT(DISTINCT b.id) AS battles_with_ships_lost FROM battle b JOIN ship s ON b.id = s.lost_in_battle WHERE s.tonnage = '225'
SELECT count ( * )  FROM battle WHERE id IN  (  SELECT lost_in_battle FROM ship WHERE tonnage   =   '225'  ) 
连接数据库../datasets/cosql_dataset/database/battle_death/battle_death.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
hard pred: SELECT  COUNT(DISTINCT b.id) AS battles_with_ships_lost FROM battle b JOIN ship s ON b.id = s.lost_in_battle WHERE s.tonnage = '225'
hard gold: SELECT count ( * )  FROM battle WHERE id IN  (  SELECT lost_in_battle FROM ship WHERE tonnage   =   '225'  ) 

当前idx3
eval_err_num:114
____________________
SELECT  COUNT(*) AS ships_with_tonnage_225 FROM ship WHERE tonnage = '225'
SELECT count ( * )  FROM ship WHERE tonnage   =   '225'
连接数据库../datasets/cosql_dataset/database/battle_death/battle_death.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
easy pred: SELECT  COUNT(*) AS ships_with_tonnage_225 FROM ship WHERE tonnage = '225'
easy gold: SELECT count ( * )  FROM ship WHERE tonnage   =   '225'

当前idx4
eval_err_num:115
____________________
SELECT  b.result AS battle_result FROM battle b JOIN ship s ON b.id = s.lost_in_battle WHERE s.tonnage = '225'
SELECT result FROM battle WHERE id IN  (  SELECT lost_in_battle FROM ship WHERE tonnage   =   '225'  ) 
连接数据库../datasets/cosql_dataset/database/battle_death/battle_death.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
hard pred: SELECT  b.result AS battle_result FROM battle b JOIN ship s ON b.id = s.lost_in_battle WHERE s.tonnage = '225'
hard gold: SELECT result FROM battle WHERE id IN  (  SELECT lost_in_battle FROM ship WHERE tonnage   =   '225'  ) 

当前idx1
eval_err_num:116
____________________
SELECT  DISTINCT s.Name, s.Location FROM stadium s JOIN concert c ON s.Stadium_ID = c.Stadium_ID WHERE c.Year = '2014' AND EXISTS (     SELECT 1     FROM concert c2     WHERE c2.Stadium_ID = c.Stadium_ID     AND c2.Year = '2015' )
SELECT T2.name ,  T2.location FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id   =   T2.stadium_id WHERE T1.Year   =   2014 INTERSECT SELECT T2.name ,  T2.location FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id   =   T2.stadium_id WHERE T1.Year   =   2015
连接数据库../datasets/cosql_dataset/database/concert_singer/concert_singer.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
extra pred: SELECT  DISTINCT s.Name, s.Location FROM stadium s JOIN concert c ON s.Stadium_ID = c.Stadium_ID WHERE c.Year = '2014' AND EXISTS (     SELECT 1     FROM concert c2     WHERE c2.Stadium_ID = c.Stadium_ID     AND c2.Year = '2015' )
extra gold: SELECT T2.name ,  T2.location FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id   =   T2.stadium_id WHERE T1.Year   =   2014 INTERSECT SELECT T2.name ,  T2.location FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id   =   T2.stadium_id WHERE T1.Year   =   2015

当前idx2
____________________
SELECT  Year FROM concert WHERE concert_Name = 'Super bootcamp'
SELECT year from concert where concert_name like "%Super bootcamp%"
连接数据库../datasets/cosql_dataset/database/concert_singer/concert_singer.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:0
medium pred: SELECT  Year FROM concert WHERE concert_Name = 'Super bootcamp'
medium gold: SELECT year from concert where concert_name like "%Super bootcamp%"

当前idx3
____________________
SELECT  Year FROM concert WHERE concert_Name = 'Auditions'
SELECT year from concert where concert_name like "%Auditions%"
连接数据库../datasets/cosql_dataset/database/concert_singer/concert_singer.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:0
medium pred: SELECT  Year FROM concert WHERE concert_Name = 'Auditions'
medium gold: SELECT year from concert where concert_name like "%Auditions%"

当前idx4
eval_err_num:117
____________________
SELECT  s.Name, s.Location FROM stadium s JOIN concert c ON s.Stadium_ID = c.Stadium_ID WHERE c.concert_Name = 'Auditions'
SELECT T1.name from stadium as T1 join  concert as T2 on T1.stadium_id  =  T2.stadium_id where T2.concert_name like "%Auditions%"
连接数据库../datasets/cosql_dataset/database/concert_singer/concert_singer.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
hard pred: SELECT  s.Name, s.Location FROM stadium s JOIN concert c ON s.Stadium_ID = c.Stadium_ID WHERE c.concert_Name = 'Auditions'
hard gold: SELECT T1.name from stadium as T1 join  concert as T2 on T1.stadium_id  =  T2.stadium_id where T2.concert_name like "%Auditions%"

当前idx>4
eval_err_num:118
____________________
SELECT  DISTINCT s.Name, s.Location FROM stadium s JOIN concert c ON s.Stadium_ID = c.Stadium_ID WHERE c.Year = '2014' OR c.Year = '2015'
SELECT T2.name , T2.location FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.Year  =  2014 or T1.Year  =  2015
连接数据库../datasets/cosql_dataset/database/concert_singer/concert_singer.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
hard pred: SELECT  DISTINCT s.Name, s.Location FROM stadium s JOIN concert c ON s.Stadium_ID = c.Stadium_ID WHERE c.Year = '2014' OR c.Year = '2015'
hard gold: SELECT T2.name , T2.location FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.Year  =  2014 or T1.Year  =  2015

当前idx1
____________________
SELECT  COUNT(*)  FROM flights  WHERE Airline = (SELECT uid FROM airlines WHERE Airline = 'United Airlines')  AND SourceAirport IN (SELECT AirportCode FROM airports WHERE Country = 'USA')  AND DestAirport IN (SELECT AirportCode FROM airports WHERE Country = 'USA')
SELECT count ( * )  FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T2.Airline   =   T1.uid WHERE T1.Airline   =   "United Airlines"
连接数据库../datasets/cosql_dataset/database/flight_2/flight_2.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT  COUNT(*)  FROM flights  WHERE Airline = (SELECT uid FROM airlines WHERE Airline = 'United Airlines')  AND SourceAirport IN (SELECT AirportCode FROM airports WHERE Country = 'USA')  AND DestAirport IN (SELECT AirportCode FROM airports WHERE Country = 'USA')
medium gold: SELECT count ( * )  FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T2.Airline   =   T1.uid WHERE T1.Airline   =   "United Airlines"

当前idx2
____________________
SELECT  COUNT(DISTINCT DestAirport)  FROM flights  WHERE Airline = (SELECT uid FROM airlines WHERE Airline = 'United Airlines')  AND SourceAirport IN (SELECT AirportCode FROM airports WHERE Country = 'USA')  AND DestAirport IN (SELECT AirportCode FROM airports WHERE Country = 'USA')
SELECT count ( distinct T2.DestAirport )  FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T2.Airline   =   T1.uid WHERE T1.Airline   =   "United Airlines"
连接数据库../datasets/cosql_dataset/database/flight_2/flight_2.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT  COUNT(DISTINCT DestAirport)  FROM flights  WHERE Airline = (SELECT uid FROM airlines WHERE Airline = 'United Airlines')  AND SourceAirport IN (SELECT AirportCode FROM airports WHERE Country = 'USA')  AND DestAirport IN (SELECT AirportCode FROM airports WHERE Country = 'USA')
medium gold: SELECT count ( distinct T2.DestAirport )  FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T2.Airline   =   T1.uid WHERE T1.Airline   =   "United Airlines"

当前idx3
____________________
SELECT  COUNT(*)  FROM flights  WHERE Airline = (SELECT uid FROM airlines WHERE Airline = 'United Airlines')  AND SourceAirport IN (SELECT AirportCode FROM airports WHERE Country = 'USA')  AND DestAirport = 'ASY'
SELECT count ( * )  FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T2.Airline   =   T1.uid WHERE T1.Airline   =   "United Airlines" AND T2.DestAirport   =   "ASY"
连接数据库../datasets/cosql_dataset/database/flight_2/flight_2.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:0
medium pred: SELECT  COUNT(*)  FROM flights  WHERE Airline = (SELECT uid FROM airlines WHERE Airline = 'United Airlines')  AND SourceAirport IN (SELECT AirportCode FROM airports WHERE Country = 'USA')  AND DestAirport = 'ASY'
medium gold: SELECT count ( * )  FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T2.Airline   =   T1.uid WHERE T1.Airline   =   "United Airlines" AND T2.DestAirport   =   "ASY"

当前idx1
____________________
SELECT  degree_program_id FROM Student_Enrolment
SELECT degree_program_id from Student_Enrolment
连接数据库../datasets/cosql_dataset/database/student_transcripts_tracking/student_transcripts_tracking.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT  semester_id FROM Student_Enrolment
SELECT semester_id from Student_Enrolment
连接数据库../datasets/cosql_dataset/database/student_transcripts_tracking/student_transcripts_tracking.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx3
____________________
SELECT  semester_name FROM Semesters
SELECT semester_name from semesters
连接数据库../datasets/cosql_dataset/database/student_transcripts_tracking/student_transcripts_tracking.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx4
____________________
SELECT  semester_id, semester_name FROM Semesters WHERE semester_id IN (     SELECT semester_id     FROM Student_Enrolment     GROUP BY semester_id     ORDER BY COUNT(student_id) DESC     LIMIT 1 )
SELECT T1.semester_name ,  T1.semester_id FROM Semesters AS T1 JOIN Student_Enrolment AS T2 ON T1.semester_id   =   T2.semester_id GROUP BY T1.semester_id ORDER BY count ( * )  DESC LIMIT 1
连接数据库../datasets/cosql_dataset/database/student_transcripts_tracking/student_transcripts_tracking.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:0
extra pred: SELECT  semester_id, semester_name FROM Semesters WHERE semester_id IN (     SELECT semester_id     FROM Student_Enrolment     GROUP BY semester_id     ORDER BY COUNT(student_id) DESC     LIMIT 1 )
extra gold: SELECT T1.semester_name ,  T1.semester_id FROM Semesters AS T1 JOIN Student_Enrolment AS T2 ON T1.semester_id   =   T2.semester_id GROUP BY T1.semester_id ORDER BY count ( * )  DESC LIMIT 1

当前idx1
eval_err_num:119
____________________
SELECT  GovernmentForm, AVG(LifeExpectancy) AS AverageLifeExpectancy FROM country GROUP BY GovernmentForm
SELECT GovernmentForm, avg ( LifeExpectancy )  FROM country GROUP BY GovernmentForm
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT  GovernmentForm, AVG(LifeExpectancy) AS AverageLifeExpectancy FROM country GROUP BY GovernmentForm
medium gold: SELECT GovernmentForm, avg ( LifeExpectancy )  FROM country GROUP BY GovernmentForm

当前idx2
eval_err_num:120
____________________
SELECT  GovernmentForm, AVG(LifeExpectancy) AS AverageLifeExpectancy FROM country GROUP BY GovernmentForm HAVING AverageLifeExpectancy > 72
SELECT GovernmentForm FROM country GROUP BY GovernmentForm HAVING avg ( LifeExpectancy )   >  72
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
easy pred: SELECT  GovernmentForm, AVG(LifeExpectancy) AS AverageLifeExpectancy FROM country GROUP BY GovernmentForm HAVING AverageLifeExpectancy > 72
easy gold: SELECT GovernmentForm FROM country GROUP BY GovernmentForm HAVING avg ( LifeExpectancy )   >  72

当前idx3
eval_err_num:121
____________________
SELECT  c.GovernmentForm, AVG(c.LifeExpectancy) AS AverageLifeExpectancy, SUM(c.Population) AS TotalPopulation FROM country c WHERE c.GovernmentForm IN (     SELECT GovernmentForm     FROM country     GROUP BY GovernmentForm     HAVING AVG(LifeExpectancy) > 72 ) GROUP BY c.GovernmentForm
SELECT sum ( Population )  ,  GovernmentForm FROM country GROUP BY GovernmentForm HAVING avg ( LifeExpectancy )   >  72
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT  c.GovernmentForm, AVG(c.LifeExpectancy) AS AverageLifeExpectancy, SUM(c.Population) AS TotalPopulation FROM country c WHERE c.GovernmentForm IN (     SELECT GovernmentForm     FROM country     GROUP BY GovernmentForm     HAVING AVG(LifeExpectancy) > 72 ) GROUP BY c.GovernmentForm
medium gold: SELECT sum ( Population )  ,  GovernmentForm FROM country GROUP BY GovernmentForm HAVING avg ( LifeExpectancy )   >  72

当前idx1
eval_err_num:122
____________________
SELECT  DISTINCT TV_Channel.id FROM TV_Channel LEFT JOIN Cartoon ON TV_Channel.id = Cartoon.Channel WHERE Cartoon.Directed_by != 'Ben Jones' OR Cartoon.Directed_by IS NULL
SELECT id FROM TV_Channel EXCEPT SELECT channel FROM cartoon WHERE directed_by   =   'Ben Jones'
连接数据库../datasets/cosql_dataset/database/tvshow/tvshow.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
hard pred: SELECT  DISTINCT TV_Channel.id FROM TV_Channel LEFT JOIN Cartoon ON TV_Channel.id = Cartoon.Channel WHERE Cartoon.Directed_by != 'Ben Jones' OR Cartoon.Directed_by IS NULL
hard gold: SELECT id FROM TV_Channel EXCEPT SELECT channel FROM cartoon WHERE directed_by   =   'Ben Jones'

当前idx2
____________________
SELECT  DISTINCT TV_Channel.id FROM TV_Channel JOIN Cartoon ON TV_Channel.id = Cartoon.Channel WHERE Cartoon.Directed_by = 'Ben Jones'
SELECT id FROM TV_Channel where id in  ( SELECT channel FROM cartoon WHERE directed_by   =   'Ben Jones' ) 
连接数据库../datasets/cosql_dataset/database/tvshow/tvshow.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:0
hard pred: SELECT  DISTINCT TV_Channel.id FROM TV_Channel JOIN Cartoon ON TV_Channel.id = Cartoon.Channel WHERE Cartoon.Directed_by = 'Ben Jones'
hard gold: SELECT id FROM TV_Channel where id in  ( SELECT channel FROM cartoon WHERE directed_by   =   'Ben Jones' ) 

当前idx3
____________________
SELECT  Cartoon.Title, Cartoon.Channel FROM Cartoon
SELECT Title FROM Cartoon where directed_by   =   'Ben Jones'
连接数据库../datasets/cosql_dataset/database/tvshow/tvshow.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
easy pred: SELECT  Cartoon.Title, Cartoon.Channel FROM Cartoon
easy gold: SELECT Title FROM Cartoon where directed_by   =   'Ben Jones'

当前idx1
____________________
SELECT  Document_ID FROM Documents
SELECT document_id FROM Paragraphs
连接数据库../datasets/cosql_dataset/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:False
easy pred: SELECT  Document_ID FROM Documents
easy gold: SELECT document_id FROM Paragraphs

当前idx2
eval_err_num:123
____________________
SELECT  d.Document_ID, COUNT(p.Paragraph_ID) AS Number_of_Paragraphs FROM Documents d LEFT JOIN Paragraphs p ON d.Document_ID = p.Document_ID GROUP BY d.Document_ID
SELECT document_id ,  count ( * )  FROM Paragraphs GROUP BY document_id
连接数据库../datasets/cosql_dataset/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT  d.Document_ID, COUNT(p.Paragraph_ID) AS Number_of_Paragraphs FROM Documents d LEFT JOIN Paragraphs p ON d.Document_ID = p.Document_ID GROUP BY d.Document_ID
medium gold: SELECT document_id ,  count ( * )  FROM Paragraphs GROUP BY document_id

当前idx3
eval_err_num:124
____________________
SELECT  d.Document_ID, COUNT(p.Paragraph_ID) AS Number_of_Paragraphs FROM Documents d LEFT JOIN Paragraphs p ON d.Document_ID = p.Document_ID GROUP BY d.Document_ID ORDER BY d.Document_ID
SELECT document_id ,  count ( * )  FROM Paragraphs GROUP BY document_id ORDER BY document_id
连接数据库../datasets/cosql_dataset/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT  d.Document_ID, COUNT(p.Paragraph_ID) AS Number_of_Paragraphs FROM Documents d LEFT JOIN Paragraphs p ON d.Document_ID = p.Document_ID GROUP BY d.Document_ID ORDER BY d.Document_ID
medium gold: SELECT document_id ,  count ( * )  FROM Paragraphs GROUP BY document_id ORDER BY document_id

当前idx1
____________________
SELECT  FlightNo FROM flights
SELECT FlightNo FROM Flights
连接数据库../datasets/cosql_dataset/database/flight_2/flight_2.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
eval_err_num:125
____________________
SELECT  f.FlightNo, f.DestAirport, a.AirportCode FROM flights f JOIN airports a ON f.DestAirport = a.AirportName
SELECT FlightNo,DestAirport FROM Flights
连接数据库../datasets/cosql_dataset/database/flight_2/flight_2.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT  f.FlightNo, f.DestAirport, a.AirportCode FROM flights f JOIN airports a ON f.DestAirport = a.AirportName
medium gold: SELECT FlightNo,DestAirport FROM Flights

当前idx3
eval_err_num:126
____________________
SELECT  COUNT(*) FROM flights WHERE DestAirport IN ('Aberdeen', 'Abilene')
SELECT count ( * )  FROM Flights AS T1 JOIN Airports AS T2 ON T1.DestAirport   =   T2.AirportCode WHERE T2.city   =   "Aberdeen" OR T2.city   =   "Abilene"
连接数据库../datasets/cosql_dataset/database/flight_2/flight_2.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
hard pred: SELECT  COUNT(*) FROM flights WHERE DestAirport IN ('Aberdeen', 'Abilene')
hard gold: SELECT count ( * )  FROM Flights AS T1 JOIN Airports AS T2 ON T1.DestAirport   =   T2.AirportCode WHERE T2.city   =   "Aberdeen" OR T2.city   =   "Abilene"

当前idx4
eval_err_num:127
____________________
SELECT  DestAirport AS AirportCity, COUNT(*) AS NumFlights FROM flights GROUP BY DestAirport ORDER BY NumFlights DESC LIMIT 1
SELECT DESTAIRPORT FROM Flights GROUP BY DESTAIRPORT order by count ( * )  desc limit 1
连接数据库../datasets/cosql_dataset/database/flight_2/flight_2.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
hard pred: SELECT  DestAirport AS AirportCity, COUNT(*) AS NumFlights FROM flights GROUP BY DestAirport ORDER BY NumFlights DESC LIMIT 1
hard gold: SELECT DESTAIRPORT FROM Flights GROUP BY DESTAIRPORT order by count ( * )  desc limit 1

当前idx1
____________________
SELECT  COUNT(*)  FROM flights  JOIN airports ON flights.DestAirport = airports.AirportCode  WHERE airports.City = 'Aberdeen'
SELECT count ( * )  FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport   =   T2.AirportCode WHERE T2.City   =   "Aberdeen"
连接数据库../datasets/cosql_dataset/database/flight_2/flight_2.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT  COUNT(*)  FROM flights  JOIN airports ON flights.SourceAirport = airports.AirportCode  WHERE airports.City = 'Aberdeen'
SELECT count ( * )  FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.sourceAirport   =   T2.AirportCode WHERE T2.City   =   "Aberdeen"
连接数据库../datasets/cosql_dataset/database/flight_2/flight_2.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx1
eval_err_num:128
____________________
SELECT  c1.Name AS AfricanCountry FROM country c1 WHERE c1.Continent = 'Africa' AND c1.Population < (SELECT MIN(c2.Population)                                                      FROM country c2                                                      WHERE c2.Continent = 'Asia')
SELECT Name FROM country WHERE Continent   =   "Africa"  AND population  <   ( SELECT max ( population )  FROM country WHERE Continent   =   "Asia" ) 
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
extra pred: SELECT  c1.Name AS AfricanCountry FROM country c1 WHERE c1.Continent = 'Africa' AND c1.Population < (SELECT MIN(c2.Population)                                                      FROM country c2                                                      WHERE c2.Continent = 'Asia')
extra gold: SELECT Name FROM country WHERE Continent   =   "Africa"  AND population  <   ( SELECT max ( population )  FROM country WHERE Continent   =   "Asia" ) 

当前idx2
eval_err_num:129
____________________
SELECT  c.Continent FROM country c WHERE c.Name = 'Aruba'
SELECT continent FROM country WHERE name  =  "Aruba"
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
easy pred: SELECT  c.Continent FROM country c WHERE c.Name = 'Aruba'
easy gold: SELECT continent FROM country WHERE name  =  "Aruba"

当前idx3
eval_err_num:130
____________________
SELECT  c.LocalName FROM country c WHERE c.Name = 'Angola'
SELECT localname FROM country WHERE name  =  "Angola"
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
easy pred: SELECT  c.LocalName FROM country c WHERE c.Name = 'Angola'
easy gold: SELECT localname FROM country WHERE name  =  "Angola"

当前idx4
eval_err_num:131
____________________
SELECT  c.SurfaceArea FROM country c WHERE c.Name = 'Afghanistan'
SELECT SurfaceArea FROM country WHERE name  =  "Afghanistan"
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
easy pred: SELECT  c.SurfaceArea FROM country c WHERE c.Name = 'Afghanistan'
easy gold: SELECT SurfaceArea FROM country WHERE name  =  "Afghanistan"

当前idx>4
eval_err_num:132
____________________
SELECT  c.Code FROM country c WHERE c.Name = 'Aruba'
SELECT Code FROM country WHERE name  =  "Aruba"
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
easy pred: SELECT  c.Code FROM country c WHERE c.Name = 'Aruba'
easy gold: SELECT Code FROM country WHERE name  =  "Aruba"

当前idx1
____________________
SELECT  first_name FROM Owners UNION SELECT last_name FROM Owners UNION SELECT first_name FROM Professionals UNION SELECT last_name FROM Professionals EXCEPT SELECT name FROM Dogs
SELECT first_name FROM Professionals UNION SELECT first_name FROM Owners EXCEPT SELECT name FROM Dogs
连接数据库../datasets/cosql_dataset/database/dog_kennels/dog_kennels.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
hard pred: SELECT  first_name FROM Owners UNION SELECT last_name FROM Owners UNION SELECT first_name FROM Professionals UNION SELECT last_name FROM Professionals EXCEPT SELECT name FROM Dogs
hard gold: SELECT first_name FROM Professionals UNION SELECT first_name FROM Owners EXCEPT SELECT name FROM Dogs

当前idx2
____________________
SELECT  email_address FROM Professionals WHERE first_name = 'Taryn' OR last_name = 'Taryn'
SELECT email_address FROM Professionals WHERE First_Name  =  "Taryn"
连接数据库../datasets/cosql_dataset/database/dog_kennels/dog_kennels.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:0
easy pred: SELECT  email_address FROM Professionals WHERE first_name = 'Taryn' OR last_name = 'Taryn'
easy gold: SELECT email_address FROM Professionals WHERE First_Name  =  "Taryn"

当前idx3
____________________
SELECT  state FROM Owners WHERE first_name = 'Jayson' OR last_name = 'Jayson'
SELECT state FROM Professionals WHERE First_Name  =  "Jayson"
连接数据库../datasets/cosql_dataset/database/dog_kennels/dog_kennels.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
easy pred: SELECT  state FROM Owners WHERE first_name = 'Jayson' OR last_name = 'Jayson'
easy gold: SELECT state FROM Professionals WHERE First_Name  =  "Jayson"

当前idx1
____________________
SELECT  DISTINCT car_makers.Maker FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker JOIN cars_data ON model_list.ModelId = cars_data.Id WHERE cars_data.Year = 1970
SELECT DISTINCT T1.Maker FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id   =   T2.Maker JOIN CAR_NAMES AS T3 ON T2.model   =   T3.model JOIN CARS_DATA AS T4 ON T3.MakeId   =   T4.id WHERE T4.year   =   '1970'
连接数据库../datasets/cosql_dataset/database/car_1/car_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:False
extra pred: SELECT  DISTINCT car_makers.Maker FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker JOIN cars_data ON model_list.ModelId = cars_data.Id WHERE cars_data.Year = 1970
extra gold: SELECT DISTINCT T1.Maker FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id   =   T2.Maker JOIN CAR_NAMES AS T3 ON T2.model   =   T3.model JOIN CARS_DATA AS T4 ON T3.MakeId   =   T4.id WHERE T4.year   =   '1970'

当前idx2
____________________
SELECT  car_names.Model, car_names.Make FROM car_names JOIN model_list ON car_names.MakeId = model_list.Maker JOIN cars_data ON model_list.ModelId = cars_data.Id WHERE cars_data.Year = 1970
SELECT T3.model, T3.make FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id   =   T2.Maker JOIN CAR_NAMES AS T3 ON T2.model   =   T3.model JOIN CARS_DATA AS T4 ON T3.MakeId   =   T4.id WHERE T4.year   =   '1970'
连接数据库../datasets/cosql_dataset/database/car_1/car_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:False
extra pred: SELECT  car_names.Model, car_names.Make FROM car_names JOIN model_list ON car_names.MakeId = model_list.Maker JOIN cars_data ON model_list.ModelId = cars_data.Id WHERE cars_data.Year = 1970
extra gold: SELECT T3.model, T3.make FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id   =   T2.Maker JOIN CAR_NAMES AS T3 ON T2.model   =   T3.model JOIN CARS_DATA AS T4 ON T3.MakeId   =   T4.id WHERE T4.year   =   '1970'

当前idx3
____________________
SELECT  car_makers.FullName FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker JOIN cars_data ON model_list.ModelId = cars_data.Id WHERE cars_data.Year = 1970 ORDER BY cars_data.Weight DESC LIMIT 1
SELECT T1.Fullname FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker JOIN CAR_NAMES AS T3 ON T2.model  =  T3.model JOIN CARS_DATA AS T4 ON T3.MakeId  =  T4.id WHERE T4.year  =  '1970' ORDER BY T4.weight DESC limit 1
连接数据库../datasets/cosql_dataset/database/car_1/car_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:False
extra pred: SELECT  car_makers.FullName FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker JOIN cars_data ON model_list.ModelId = cars_data.Id WHERE cars_data.Year = 1970 ORDER BY cars_data.Weight DESC LIMIT 1
extra gold: SELECT T1.Fullname FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker JOIN CAR_NAMES AS T3 ON T2.model  =  T3.model JOIN CARS_DATA AS T4 ON T3.MakeId  =  T4.id WHERE T4.year  =  '1970' ORDER BY T4.weight DESC limit 1

当前idx1
____________________
SELECT  Title FROM Cartoon WHERE Directed_by = 'Ben Jones'
SELECT channel, id FROM cartoon
连接数据库../datasets/cosql_dataset/database/tvshow/tvshow.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT  Title FROM Cartoon WHERE Directed_by = 'Ben Jones'
medium gold: SELECT channel, id FROM cartoon

当前idx2
____________________
SELECT  * FROM TV_Channel WHERE Language != 'Italian'
SELECT series_name FROM TV_Channel EXCEPT SELECT series_name FROM TV_channel WHERE language  =  'Italian'
连接数据库../datasets/cosql_dataset/database/tvshow/tvshow.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
hard pred: SELECT  * FROM TV_Channel WHERE Language != 'Italian'
hard gold: SELECT series_name FROM TV_Channel EXCEPT SELECT series_name FROM TV_channel WHERE language  =  'Italian'

当前idx3
____________________
SELECT  id FROM TV_Channel WHERE id NOT IN (SELECT DISTINCT Channel                  FROM Cartoon                  WHERE Directed_by = 'Ben Jones')
SELECT id FROM TV_Channel EXCEPT SELECT channel FROM cartoon WHERE directed_by  =  'Ben Jones'
连接数据库../datasets/cosql_dataset/database/tvshow/tvshow.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:0
hard pred: SELECT  id FROM TV_Channel WHERE id NOT IN (SELECT DISTINCT Channel                  FROM Cartoon                  WHERE Directed_by = 'Ben Jones')
hard gold: SELECT id FROM TV_Channel EXCEPT SELECT channel FROM cartoon WHERE directed_by  =  'Ben Jones'

当前idx1
eval_err_num:133
____________________
SELECT  AVG(Number_products) AS Average_Number_of_Products FROM shop
select avg ( Number_products )  from shop
连接数据库../datasets/cosql_dataset/database/employee_hire_evaluation/employee_hire_evaluation.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
easy pred: SELECT  AVG(Number_products) AS Average_Number_of_Products FROM shop
easy gold: select avg ( Number_products )  from shop

当前idx2
____________________
SELECT  Name FROM shop WHERE Number_products > 6685
select Name from shop where Number_products > 6685
连接数据库../datasets/cosql_dataset/database/employee_hire_evaluation/employee_hire_evaluation.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx3
eval_err_num:134
____________________
SELECT  COUNT(*) AS Total_Stores FROM shop
select count ( * )  from shop
连接数据库../datasets/cosql_dataset/database/employee_hire_evaluation/employee_hire_evaluation.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
easy pred: SELECT  COUNT(*) AS Total_Stores FROM shop
easy gold: select count ( * )  from shop

当前idx1
____________________
SELECT  COUNT(*) FROM flights
SELECT count ( * )  FROM flights
连接数据库../datasets/cosql_dataset/database/flight_2/flight_2.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
eval_err_num:135
____________________
SELECT  SourceAirport, COUNT(*) AS DepartingFlights FROM flights GROUP BY SourceAirport ORDER BY DepartingFlights LIMIT 1
SELECT T1.City FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode   =   T2.SourceAirport GROUP BY T1.City ORDER BY count ( * )  ASC LIMIT 1
连接数据库../datasets/cosql_dataset/database/flight_2/flight_2.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
extra pred: SELECT  SourceAirport, COUNT(*) AS DepartingFlights FROM flights GROUP BY SourceAirport ORDER BY DepartingFlights LIMIT 1
extra gold: SELECT T1.City FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode   =   T2.SourceAirport GROUP BY T1.City ORDER BY count ( * )  ASC LIMIT 1

当前idx3
____________________
SELECT  FlightNo FROM flights WHERE SourceAirport = 'APG'
SELECT FlightNo FROM flights WHERE SourceAirport = "APG"
连接数据库../datasets/cosql_dataset/database/flight_2/flight_2.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx4
____________________
SELECT  AirportName FROM airports WHERE AirportCode = 'DYS'
SELECT AirportName FROM airports WHERE AirportCode = "DYS"
连接数据库../datasets/cosql_dataset/database/flight_2/flight_2.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx>4
____________________
SELECT  City FROM airports WHERE AirportCode = 'ABR'
SELECT CITY FROM airports WHERE AirportCode = "ABR"
连接数据库../datasets/cosql_dataset/database/flight_2/flight_2.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx1
eval_err_num:136
____________________
SELECT  DISTINCT c.Name FROM country c JOIN countrylanguage cl ON c.Code = cl.CountryCode WHERE (cl.Language = 'English' OR cl.Language = 'Dutch') AND cl.IsOfficial = 'T'
SELECT * FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code   =   T2.CountryCode WHERE T2.Language   =   "English" AND IsOfficial   =   "T" UNION SELECT * FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code   =   T2.CountryCode WHERE T2.Language   =   "Dutch" AND IsOfficial   =   "T"
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
extra pred: SELECT  DISTINCT c.Name FROM country c JOIN countrylanguage cl ON c.Code = cl.CountryCode WHERE (cl.Language = 'English' OR cl.Language = 'Dutch') AND cl.IsOfficial = 'T'
extra gold: SELECT * FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code   =   T2.CountryCode WHERE T2.Language   =   "English" AND IsOfficial   =   "T" UNION SELECT * FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code   =   T2.CountryCode WHERE T2.Language   =   "Dutch" AND IsOfficial   =   "T"

当前idx2
eval_err_num:137
____________________
SELECT  cl.Language FROM countrylanguage cl WHERE cl.CountryCode = 'BEL' AND cl.IsOfficial = 'T'
SELECT T2.language FROM country as T1 join countrylanguage as T2 on T1.code  =  T2.countrycode where T1.name  =  "Belgium" and T2.isofficial  =  "T"
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT  cl.Language FROM countrylanguage cl WHERE cl.CountryCode = 'BEL' AND cl.IsOfficial = 'T'
medium gold: SELECT T2.language FROM country as T1 join countrylanguage as T2 on T1.code  =  T2.countrycode where T1.name  =  "Belgium" and T2.isofficial  =  "T"

当前idx3
eval_err_num:138
____________________
SELECT  DISTINCT c.Name FROM country c JOIN countrylanguage cl ON c.Code = cl.CountryCode WHERE cl.Language = 'Arabic'
SELECT T1.name FROM country as T1 join countrylanguage as T2 on T1.code  =  T2.countrycode where T2.language  =  "Arabic"
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT  DISTINCT c.Name FROM country c JOIN countrylanguage cl ON c.Code = cl.CountryCode WHERE cl.Language = 'Arabic'
medium gold: SELECT T1.name FROM country as T1 join countrylanguage as T2 on T1.code  =  T2.countrycode where T2.language  =  "Arabic"

当前idx4
eval_err_num:139
____________________
SELECT  cl.Language FROM countrylanguage cl WHERE cl.CountryCode = 'EGY'
SELECT T2.language FROM country as T1 join countrylanguage as T2 on T1.code  =  T2.countrycode where T1.name  =  "Egypt"
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT  cl.Language FROM countrylanguage cl WHERE cl.CountryCode = 'EGY'
medium gold: SELECT T2.language FROM country as T1 join countrylanguage as T2 on T1.code  =  T2.countrycode where T1.name  =  "Egypt"

当前idx>4
eval_err_num:140
____________________
SELECT  COUNT(DISTINCT c.Name) AS Num_Countries FROM country c JOIN countrylanguage cl ON c.Code = cl.CountryCode WHERE cl.Language = 'Arabic' AND cl.IsOfficial = 'T'
SELECT count ( T1.name )  FROM country as T1 join countrylanguage as T2 on T1.code  =  T2.countrycode where T2.Language  =  "Arabic" and T2.isOfficial  =  "T"
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT  COUNT(DISTINCT c.Name) AS Num_Countries FROM country c JOIN countrylanguage cl ON c.Code = cl.CountryCode WHERE cl.Language = 'Arabic' AND cl.IsOfficial = 'T'
medium gold: SELECT count ( T1.name )  FROM country as T1 join countrylanguage as T2 on T1.code  =  T2.countrycode where T2.Language  =  "Arabic" and T2.isOfficial  =  "T"

当前idx>4
eval_err_num:141
____________________
SELECT  DISTINCT c.Name FROM country c JOIN countrylanguage cl ON c.Code = cl.CountryCode WHERE cl.Language = 'Arabic' AND cl.IsOfficial = 'T'
SELECT T1.name FROM country as T1 join countrylanguage as T2 on T1.code  =  T2.countrycode where T2.Language  =  "Arabic" and T2.isOfficial  =  "T"
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT  DISTINCT c.Name FROM country c JOIN countrylanguage cl ON c.Code = cl.CountryCode WHERE cl.Language = 'Arabic' AND cl.IsOfficial = 'T'
medium gold: SELECT T1.name FROM country as T1 join countrylanguage as T2 on T1.code  =  T2.countrycode where T2.Language  =  "Arabic" and T2.isOfficial  =  "T"

当前idx1
____________________
SELECT  Name, Population FROM country WHERE Continent = 'Africa'
SELECT name,population FROM country WHERE Continent   =   "Africa"
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT  Name, Population FROM country WHERE Continent = 'Asia'
SELECT name,population FROM country WHERE Continent   =   "Asia"
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx3
eval_err_num:142
____________________
SELECT  c1.Name FROM country c1 WHERE c1.Continent = 'Asia' AND c1.Population > (SELECT MAX(c2.Population) FROM country c2 WHERE c2.Continent = 'Africa')
SELECT Name FROM country WHERE Continent   =   "Asia"  AND population  >   ( SELECT min ( population )  FROM country WHERE Continent   =   "Africa" ) 
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
extra pred: SELECT  c1.Name FROM country c1 WHERE c1.Continent = 'Asia' AND c1.Population > (SELECT MAX(c2.Population) FROM country c2 WHERE c2.Continent = 'Africa')
extra gold: SELECT Name FROM country WHERE Continent   =   "Asia"  AND population  >   ( SELECT min ( population )  FROM country WHERE Continent   =   "Africa" ) 

当前idx4
eval_err_num:143
____________________
SELECT  c1.Name, c1.Population FROM country c1 WHERE c1.Continent = 'Asia' AND c1.Population > (SELECT MAX(c2.Population) FROM country c2 WHERE c2.Continent = 'Africa')
SELECT Name,population FROM country WHERE Continent   =   "Asia"  AND population  >   ( SELECT min ( population )  FROM country WHERE Continent   =   "Africa" ) 
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
extra pred: SELECT  c1.Name, c1.Population FROM country c1 WHERE c1.Continent = 'Asia' AND c1.Population > (SELECT MAX(c2.Population) FROM country c2 WHERE c2.Continent = 'Africa')
extra gold: SELECT Name,population FROM country WHERE Continent   =   "Asia"  AND population  >   ( SELECT min ( population )  FROM country WHERE Continent   =   "Africa" ) 

当前idx>4
eval_err_num:144
____________________
SELECT  c1.Name, c1.GovernmentForm FROM country c1 WHERE c1.Continent = 'Asia' AND c1.Population > (SELECT MAX(c2.Population) FROM country c2 WHERE c2.Continent = 'Africa')
SELECT Name,GovernmentForm FROM country WHERE Continent   =   "Asia"  AND population  >   ( SELECT min ( population )  FROM country WHERE Continent   =   "Africa" ) 
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
extra pred: SELECT  c1.Name, c1.GovernmentForm FROM country c1 WHERE c1.Continent = 'Asia' AND c1.Population > (SELECT MAX(c2.Population) FROM country c2 WHERE c2.Continent = 'Africa')
extra gold: SELECT Name,GovernmentForm FROM country WHERE Continent   =   "Asia"  AND population  >   ( SELECT min ( population )  FROM country WHERE Continent   =   "Africa" ) 

当前idx1
eval_err_num:145
____________________
SELECT  c.Name FROM country c WHERE c.Continent = 'Asia' ORDER BY c.LifeExpectancy LIMIT 1
SELECT Name FROM country WHERE Continent   =   "Asia" ORDER BY LifeExpectancy LIMIT 1
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
hard pred: SELECT  c.Name FROM country c WHERE c.Continent = 'Asia' ORDER BY c.LifeExpectancy LIMIT 1
hard gold: SELECT Name FROM country WHERE Continent   =   "Asia" ORDER BY LifeExpectancy LIMIT 1

当前idx2
eval_err_num:146
____________________
SELECT  c.Name FROM country c WHERE c.Continent = 'Africa' ORDER BY c.LifeExpectancy LIMIT 1
SELECT Name FROM country WHERE Continent   =   "Africa" ORDER BY LifeExpectancy LIMIT 1
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
hard pred: SELECT  c.Name FROM country c WHERE c.Continent = 'Africa' ORDER BY c.LifeExpectancy LIMIT 1
hard gold: SELECT Name FROM country WHERE Continent   =   "Africa" ORDER BY LifeExpectancy LIMIT 1

当前idx3
eval_err_num:147
____________________
SELECT  c.GNP FROM country c WHERE c.Name = 'Afghanistan'
SELECT GNP FROM country WHERE name = "Afghanistan"
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
easy pred: SELECT  c.GNP FROM country c WHERE c.Name = 'Afghanistan'
easy gold: SELECT GNP FROM country WHERE name = "Afghanistan"

当前idx4
eval_err_num:148
____________________
SELECT  c.Population FROM country c WHERE c.Name = 'Afghanistan'
SELECT Population FROM country WHERE name = "Afghanistan"
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
easy pred: SELECT  c.Population FROM country c WHERE c.Name = 'Afghanistan'
easy gold: SELECT Population FROM country WHERE name = "Afghanistan"

当前idx1
____________________
SELECT  Earnings FROM poker_player WHERE Best_Finish = 1
SELECT Earnings FROM poker_player
连接数据库../datasets/cosql_dataset/database/poker_player/poker_player.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
easy pred: SELECT  Earnings FROM poker_player WHERE Best_Finish = 1
easy gold: SELECT Earnings FROM poker_player

当前idx2
____________________
SELECT  Earnings FROM poker_player ORDER BY Earnings DESC
SELECT Earnings FROM poker_player order by Earnings desc
连接数据库../datasets/cosql_dataset/database/poker_player/poker_player.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx3
____________________
SELECT  Final_Table_Made FROM poker_player WHERE Earnings = (SELECT MIN(Earnings) FROM poker_player)
SELECT Final_Table_Made FROM poker_player order by Earnings asc limit 1
连接数据库../datasets/cosql_dataset/database/poker_player/poker_player.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:0
medium pred: SELECT  Final_Table_Made FROM poker_player WHERE Earnings = (SELECT MIN(Earnings) FROM poker_player)
medium gold: SELECT Final_Table_Made FROM poker_player order by Earnings asc limit 1

当前idx4
____________________
SELECT  Final_Table_Made FROM poker_player WHERE Earnings = (SELECT MAX(Earnings) FROM poker_player)
SELECT Final_Table_Made FROM poker_player order by Earnings desc limit 1
连接数据库../datasets/cosql_dataset/database/poker_player/poker_player.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:0
medium pred: SELECT  Final_Table_Made FROM poker_player WHERE Earnings = (SELECT MAX(Earnings) FROM poker_player)
medium gold: SELECT Final_Table_Made FROM poker_player order by Earnings desc limit 1

当前idx1
____________________
SELECT  Templates.Template_ID, Documents.Document_ID FROM Templates JOIN Documents ON Templates.Template_ID = Documents.Template_ID
SELECT template_id FROM Documents
连接数据库../datasets/cosql_dataset/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
easy pred: SELECT  Templates.Template_ID, Documents.Document_ID FROM Templates JOIN Documents ON Templates.Template_ID = Documents.Template_ID
easy gold: SELECT template_id FROM Documents

当前idx2
____________________
SELECT  Templates.Template_ID, Documents.Document_ID FROM Templates JOIN Documents ON Templates.Template_ID = Documents.Template_ID
SELECT template_id ,Document_ID FROM Documents
连接数据库../datasets/cosql_dataset/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:False
medium pred: SELECT  Templates.Template_ID, Documents.Document_ID FROM Templates JOIN Documents ON Templates.Template_ID = Documents.Template_ID
medium gold: SELECT template_id ,Document_ID FROM Documents

当前idx3
eval_err_num:149
____________________
SELECT  Templates.Template_ID FROM Templates LEFT JOIN Documents ON Templates.Template_ID = Documents.Template_ID WHERE Documents.Document_ID IS NULL
SELECT template_id FROM Templates EXCEPT SELECT template_id FROM Documents
连接数据库../datasets/cosql_dataset/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
hard pred: SELECT  Templates.Template_ID FROM Templates LEFT JOIN Documents ON Templates.Template_ID = Documents.Template_ID WHERE Documents.Document_ID IS NULL
hard gold: SELECT template_id FROM Templates EXCEPT SELECT template_id FROM Documents

当前idx4
eval_err_num:150
____________________
SELECT  Templates.Template_ID, Templates.Template_Type_Code FROM Templates LEFT JOIN Documents ON Templates.Template_ID = Documents.Template_ID WHERE Documents.Document_ID IS NULL
SELECT T1.template_id ,T1.Template_Type_Code FROM Templates as T1 join Documents as T2 on T1.Template_ID = T2.Template_ID
连接数据库../datasets/cosql_dataset/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT  Templates.Template_ID, Templates.Template_Type_Code FROM Templates LEFT JOIN Documents ON Templates.Template_ID = Documents.Template_ID WHERE Documents.Document_ID IS NULL
medium gold: SELECT T1.template_id ,T1.Template_Type_Code FROM Templates as T1 join Documents as T2 on T1.Template_ID = T2.Template_ID

当前idx1
eval_err_num:151
____________________
SELECT  COUNT(DISTINCT dog_id) AS total_dogs_with_treatments FROM Treatments
SELECT count ( * )  FROM Dogs WHERE dog_id IN  (  SELECT dog_id FROM Treatments  ) 
连接数据库../datasets/cosql_dataset/database/dog_kennels/dog_kennels.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
hard pred: SELECT  COUNT(DISTINCT dog_id) AS total_dogs_with_treatments FROM Treatments
hard gold: SELECT count ( * )  FROM Dogs WHERE dog_id IN  (  SELECT dog_id FROM Treatments  ) 

当前idx2
eval_err_num:152
____________________
SELECT  MIN(age) AS youngest_age FROM Dogs WHERE dog_id IN (SELECT DISTINCT dog_id FROM Treatments)
SELECT min ( age )  FROM Dogs WHERE dog_id IN  (  SELECT dog_id FROM Treatments  ) 
连接数据库../datasets/cosql_dataset/database/dog_kennels/dog_kennels.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
hard pred: SELECT  MIN(age) AS youngest_age FROM Dogs WHERE dog_id IN (SELECT DISTINCT dog_id FROM Treatments)
hard gold: SELECT min ( age )  FROM Dogs WHERE dog_id IN  (  SELECT dog_id FROM Treatments  ) 

当前idx3
eval_err_num:153
____________________
SELECT  MAX(age) AS oldest_age FROM Dogs WHERE dog_id IN (SELECT DISTINCT dog_id FROM Treatments)
SELECT max ( age )  FROM Dogs WHERE dog_id IN  (  SELECT dog_id FROM Treatments  ) 
连接数据库../datasets/cosql_dataset/database/dog_kennels/dog_kennels.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
hard pred: SELECT  MAX(age) AS oldest_age FROM Dogs WHERE dog_id IN (SELECT DISTINCT dog_id FROM Treatments)
hard gold: SELECT max ( age )  FROM Dogs WHERE dog_id IN  (  SELECT dog_id FROM Treatments  ) 

当前idx4
eval_err_num:154
____________________
SELECT  AVG(age) AS average_age FROM Dogs WHERE dog_id IN (SELECT DISTINCT dog_id FROM Treatments)
SELECT avg ( age )  FROM Dogs WHERE dog_id IN  (  SELECT dog_id FROM Treatments  ) 
连接数据库../datasets/cosql_dataset/database/dog_kennels/dog_kennels.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
hard pred: SELECT  AVG(age) AS average_age FROM Dogs WHERE dog_id IN (SELECT DISTINCT dog_id FROM Treatments)
hard gold: SELECT avg ( age )  FROM Dogs WHERE dog_id IN  (  SELECT dog_id FROM Treatments  ) 

当前idx1
eval_err_num:155
____________________
SELECT  COUNT(DISTINCT semester_name) AS num_semester_types FROM Semesters
SELECT distinct semester_name FROM Semesters
连接数据库../datasets/cosql_dataset/database/student_transcripts_tracking/student_transcripts_tracking.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
easy pred: SELECT  COUNT(DISTINCT semester_name) AS num_semester_types FROM Semesters
easy gold: SELECT distinct semester_name FROM Semesters

当前idx2
____________________
SELECT  semester_name FROM Semesters WHERE semester_id NOT IN (     SELECT semester_id     FROM Student_Enrolment )
SELECT semester_name FROM Semesters WHERE semester_id NOT IN (  SELECT semester_id FROM Student_Enrolment  ) 
连接数据库../datasets/cosql_dataset/database/student_transcripts_tracking/student_transcripts_tracking.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx3
____________________
SELECT  semester_id, semester_name, semester_description FROM Semesters WHERE semester_id NOT IN (     SELECT semester_id     FROM Student_Enrolment )
SELECT semester_id,semester_name,semester_description FROM Semesters WHERE semester_id NOT IN (  SELECT semester_id FROM Student_Enrolment  ) 
连接数据库../datasets/cosql_dataset/database/student_transcripts_tracking/student_transcripts_tracking.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx1
____________________
SELECT  COUNT(*) FROM Student WHERE Sex = 'female'
SELECT count ( * ) FROM student WHERE Sex = "F"
连接数据库../datasets/cosql_dataset/database/pets_1/pets_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:True
当前idx2
eval_err_num:156
____________________
SELECT  Fname || ' ' || LName AS Full_Name FROM Student WHERE Age = (SELECT MIN(Age) FROM Student)
SELECT LName,Fname  FROM student order  by  Age  limit 1
连接数据库../datasets/cosql_dataset/database/pets_1/pets_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT  Fname || ' ' || LName AS Full_Name FROM Student WHERE Age = (SELECT MIN(Age) FROM Student)
medium gold: SELECT LName,Fname  FROM student order  by  Age  limit 1

当前idx3
____________________
SELECT  AVG(Age) FROM Student WHERE StuID NOT IN (SELECT StuID FROM Has_Pet)
SELECT avg ( age )  FROM student WHERE stuid NOT IN  ( SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid ) 
连接数据库../datasets/cosql_dataset/database/pets_1/pets_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:0
extra pred: SELECT  AVG(Age) FROM Student WHERE StuID NOT IN (SELECT StuID FROM Has_Pet)
extra gold: SELECT avg ( age )  FROM student WHERE stuid NOT IN  ( SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid ) 

当前idx4
____________________
SELECT  city_code FROM Student WHERE StuID = 1003
SELECT city_code  FROM student WHERE 
StuID = 1003
连接数据库../datasets/cosql_dataset/database/pets_1/pets_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx1
____________________
SELECT  TV_Channel.Country FROM TV_Channel JOIN Cartoon ON TV_Channel.id = Cartoon.id WHERE Cartoon.Written_by = 'Todd Casey'
SELECT T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id  =  T2.Channel WHERE T2.written_by   =   'Todd Casey'
连接数据库../datasets/cosql_dataset/database/tvshow/tvshow.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:True
当前idx2
____________________
SELECT  Cartoon.Title FROM Cartoon WHERE Cartoon.Written_by = 'Todd Casey'
SELECT title FROM cartoon  WHERE written_by   =   'Todd Casey'
连接数据库../datasets/cosql_dataset/database/tvshow/tvshow.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx3
____________________
SELECT  Cartoon.Directed_by FROM Cartoon WHERE Cartoon.Title = 'Enter the Outsiders'
SELECT directed_by FROM cartoon WHERE title  =  "Enter the Outsiders!"
连接数据库../datasets/cosql_dataset/database/tvshow/tvshow.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:True
当前idx1
eval_err_num:157
____________________
SELECT  COUNT(DISTINCT Language) AS TotalLanguages FROM countrylanguage
SELECT count ( distinct language )  from countrylanguage
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
easy pred: SELECT  COUNT(DISTINCT Language) AS TotalLanguages FROM countrylanguage
easy gold: SELECT count ( distinct language )  from countrylanguage

当前idx2
____________________
SELECT  Population FROM city WHERE Name = 'Aruba'
SELECT population from country where name  =  "Aruba"
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
easy pred: SELECT  Population FROM city WHERE Name = 'Aruba'
easy gold: SELECT population from country where name  =  "Aruba"

当前idx3
____________________
SELECT  GNPOld FROM country WHERE Name = 'Afghanistan'
SELECT GNPOLD from country where name  =  "Afghanistan"
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx1
____________________
SELECT  country_code FROM players GROUP BY country_code HAVING COUNT(player_id) > 50
SELECT country_code FROM players GROUP BY country_code HAVING count ( * )   >  50
连接数据库../datasets/cosql_dataset/database/wta_1/wta_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:0
easy pred: SELECT  country_code FROM players GROUP BY country_code HAVING COUNT(player_id) > 50
easy gold: SELECT country_code FROM players GROUP BY country_code HAVING count ( * )   >  50

当前idx2
____________________
SELECT  country_code FROM players GROUP BY country_code HAVING COUNT(player_id) < 40
SELECT country_code FROM players GROUP BY country_code HAVING count ( * )   <  40
连接数据库../datasets/cosql_dataset/database/wta_1/wta_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:0
easy pred: SELECT  country_code FROM players GROUP BY country_code HAVING COUNT(player_id) < 40
easy gold: SELECT country_code FROM players GROUP BY country_code HAVING count ( * )   <  40

当前idx3
____________________
SELECT  first_name, last_name FROM players WHERE country_code = 'AHO'
SELECT first_name,last_name FROM players where country_code = 'AHO'
连接数据库../datasets/cosql_dataset/database/wta_1/wta_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx4
____________________
SELECT  player_id FROM players WHERE country_code = 'AHO'
SELECT player_id FROM players where country_code = 'AHO'
连接数据库../datasets/cosql_dataset/database/wta_1/wta_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx>4
____________________
SELECT  hand FROM players WHERE player_id = 206449
SELECT hand FROM players where player_id = 206449
连接数据库../datasets/cosql_dataset/database/wta_1/wta_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx>4
____________________
SELECT  COUNT(*) FROM players WHERE hand = (SELECT hand FROM players WHERE player_id = 206449) AND player_id != 206449
SELECT count ( * )  FROM players where hand = 'U'
连接数据库../datasets/cosql_dataset/database/wta_1/wta_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
easy pred: SELECT  COUNT(*) FROM players WHERE hand = (SELECT hand FROM players WHERE player_id = 206449) AND player_id != 206449
easy gold: SELECT count ( * )  FROM players where hand = 'U'

当前idx1
eval_err_num:158
____________________
SELECT  b.name FROM battle b LEFT JOIN ship s ON b.id = s.lost_in_battle WHERE s.location != 'English Channel' OR s.location IS NULL
SELECT name FROM battle EXCEPT SELECT T1.name FROM battle AS T1 JOIN ship AS T2 ON T1.id   =   T2.lost_in_battle WHERE T2.location   =   'English Channel'
连接数据库../datasets/cosql_dataset/database/battle_death/battle_death.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
hard pred: SELECT  b.name FROM battle b LEFT JOIN ship s ON b.id = s.lost_in_battle WHERE s.location != 'English Channel' OR s.location IS NULL
hard gold: SELECT name FROM battle EXCEPT SELECT T1.name FROM battle AS T1 JOIN ship AS T2 ON T1.id   =   T2.lost_in_battle WHERE T2.location   =   'English Channel'

当前idx2
eval_err_num:159
____________________
SELECT  b.result FROM battle b LEFT JOIN ship s ON b.id = s.lost_in_battle WHERE (s.location != 'English Channel' OR s.location IS NULL) AND s.lost_in_battle IS NULL
SELECT RESULT  FROM battle where name not in  ( SELECT T1.name FROM battle AS T1 JOIN ship AS T2 ON T1.id   =   T2.lost_in_battle WHERE T2.location   =   'English Channel' ) 
连接数据库../datasets/cosql_dataset/database/battle_death/battle_death.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
hard pred: SELECT  b.result FROM battle b LEFT JOIN ship s ON b.id = s.lost_in_battle WHERE (s.location != 'English Channel' OR s.location IS NULL) AND s.lost_in_battle IS NULL
hard gold: SELECT RESULT  FROM battle where name not in  ( SELECT T1.name FROM battle AS T1 JOIN ship AS T2 ON T1.id   =   T2.lost_in_battle WHERE T2.location   =   'English Channel' ) 

当前idx3
eval_err_num:160
____________________
SELECT  b.bulgarian_commander FROM battle b LEFT JOIN ship s ON b.id = s.lost_in_battle WHERE (s.location != 'English Channel' OR s.location IS NULL) AND s.lost_in_battle IS NULL
SELECT bulgarian_commander FROM battle where name not in  ( SELECT T1.name FROM battle AS T1 JOIN ship AS T2 ON T1.id   =   T2.lost_in_battle WHERE T2.location   =   'English Channel' ) 
连接数据库../datasets/cosql_dataset/database/battle_death/battle_death.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
hard pred: SELECT  b.bulgarian_commander FROM battle b LEFT JOIN ship s ON b.id = s.lost_in_battle WHERE (s.location != 'English Channel' OR s.location IS NULL) AND s.lost_in_battle IS NULL
hard gold: SELECT bulgarian_commander FROM battle where name not in  ( SELECT T1.name FROM battle AS T1 JOIN ship AS T2 ON T1.id   =   T2.lost_in_battle WHERE T2.location   =   'English Channel' ) 

当前idx4
eval_err_num:161
____________________
SELECT  b.date FROM battle b LEFT JOIN ship s ON b.id = s.lost_in_battle WHERE (s.location != 'English Channel' OR s.location IS NULL) AND s.lost_in_battle IS NULL
SELECT date FROM battle where name not in  ( SELECT T1.name FROM battle AS T1 JOIN ship AS T2 ON T1.id   =   T2.lost_in_battle WHERE T2.location   =   'English Channel' ) 
连接数据库../datasets/cosql_dataset/database/battle_death/battle_death.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
hard pred: SELECT  b.date FROM battle b LEFT JOIN ship s ON b.id = s.lost_in_battle WHERE (s.location != 'English Channel' OR s.location IS NULL) AND s.lost_in_battle IS NULL
hard gold: SELECT date FROM battle where name not in  ( SELECT T1.name FROM battle AS T1 JOIN ship AS T2 ON T1.id   =   T2.lost_in_battle WHERE T2.location   =   'English Channel' ) 

当前idx>4
eval_err_num:162
____________________
SELECT  b.latin_commander FROM battle b LEFT JOIN ship s ON b.id = s.lost_in_battle WHERE (s.location != 'English Channel' OR s.location IS NULL) AND s.lost_in_battle IS NULL
SELECT  latin_commander  FROM battle where name not in  ( SELECT T1.name FROM battle AS T1 JOIN ship AS T2 ON T1.id   =   T2.lost_in_battle WHERE T2.location   =   'English Channel' ) 
连接数据库../datasets/cosql_dataset/database/battle_death/battle_death.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
hard pred: SELECT  b.latin_commander FROM battle b LEFT JOIN ship s ON b.id = s.lost_in_battle WHERE (s.location != 'English Channel' OR s.location IS NULL) AND s.lost_in_battle IS NULL
hard gold: SELECT  latin_commander  FROM battle where name not in  ( SELECT T1.name FROM battle AS T1 JOIN ship AS T2 ON T1.id   =   T2.lost_in_battle WHERE T2.location   =   'English Channel' ) 

当前idx1
eval_err_num:163
____________________
SELECT  COUNT(*) AS number_of_shops FROM shop
SELECT COUNT ( * )  FROM shop
连接数据库../datasets/cosql_dataset/database/employee_hire_evaluation/employee_hire_evaluation.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
easy pred: SELECT  COUNT(*) AS number_of_shops FROM shop
easy gold: SELECT COUNT ( * )  FROM shop

当前idx2
eval_err_num:164
____________________
SELECT  MAX(Number_products) AS max_products FROM shop
SELECT MAX ( Number_products )  FROM shop
连接数据库../datasets/cosql_dataset/database/employee_hire_evaluation/employee_hire_evaluation.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
easy pred: SELECT  MAX(Number_products) AS max_products FROM shop
easy gold: SELECT MAX ( Number_products )  FROM shop

当前idx3
eval_err_num:165
____________________
SELECT  MIN(Number_products) AS min_products FROM shop
SELECT MIN ( Number_products )  FROM shop
连接数据库../datasets/cosql_dataset/database/employee_hire_evaluation/employee_hire_evaluation.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
easy pred: SELECT  MIN(Number_products) AS min_products FROM shop
easy gold: SELECT MIN ( Number_products )  FROM shop

当前idx1
____________________
SELECT  breed_name FROM Breeds ORDER BY breed_code DESC LIMIT 1
SELECT T1.breed_name FROM Breeds AS T1 JOIN Dogs AS T2 ON T1.breed_code   =   T2.breed_code GROUP BY T1.breed_name ORDER BY count ( * )  DESC LIMIT 1
连接数据库../datasets/cosql_dataset/database/dog_kennels/dog_kennels.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
extra pred: SELECT  breed_name FROM Breeds ORDER BY breed_code DESC LIMIT 1
extra gold: SELECT T1.breed_name FROM Breeds AS T1 JOIN Dogs AS T2 ON T1.breed_code   =   T2.breed_code GROUP BY T1.breed_name ORDER BY count ( * )  DESC LIMIT 1

当前idx2
____________________
SELECT  COUNT(*) FROM Dogs WHERE breed_code = 'Bulldog'
SELECT count ( * )  FROM Breeds AS T1 JOIN Dogs AS T2 ON T1.breed_code   =   T2.breed_code where T1.breed_name  =  "Bulldog"
连接数据库../datasets/cosql_dataset/database/dog_kennels/dog_kennels.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT  COUNT(*) FROM Dogs WHERE breed_code = 'Bulldog'
medium gold: SELECT count ( * )  FROM Breeds AS T1 JOIN Dogs AS T2 ON T1.breed_code   =   T2.breed_code where T1.breed_name  =  "Bulldog"

当前idx1
____________________
SELECT  Fname FROM Student WHERE StuID IN (     SELECT StuID     FROM Has_Pet     WHERE PetID IN (         SELECT PetID         FROM Pets         WHERE PetType = 'cat'     ) )
SELECT T1.Fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid   =   T2.stuid JOIN pets AS T3 ON T3.petid   =   T2.petid WHERE T3.pettype   =   'dog'
连接数据库../datasets/cosql_dataset/database/pets_1/pets_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
hard pred: SELECT  Fname FROM Student WHERE StuID IN (     SELECT StuID     FROM Has_Pet     WHERE PetID IN (         SELECT PetID         FROM Pets         WHERE PetType = 'cat'     ) )
hard gold: SELECT T1.Fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid   =   T2.stuid JOIN pets AS T3 ON T3.petid   =   T2.petid WHERE T3.pettype   =   'dog'

当前idx2
____________________
SELECT  COUNT(DISTINCT StuID) FROM Has_Pet
SELECT count ( T2.StuId )  FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid   =   T2.stuid JOIN pets AS T3 ON T3.petid   =   T2.petid
连接数据库../datasets/cosql_dataset/database/pets_1/pets_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:False
medium pred: SELECT  COUNT(DISTINCT StuID) FROM Has_Pet
medium gold: SELECT count ( T2.StuId )  FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid   =   T2.stuid JOIN pets AS T3 ON T3.petid   =   T2.petid

当前idx3
____________________
SELECT  pet_age FROM Pets WHERE PetID IN (     SELECT PetID     FROM Has_Pet     WHERE StuID IN (         SELECT StuID         FROM Student         WHERE Fname = 'Linda'     ) )
SELECT T3.pet_age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid   =   T2.stuid JOIN pets AS T3 ON T3.petid   =   T2.petid WHERE T1.Fname  =  "Linda"
连接数据库../datasets/cosql_dataset/database/pets_1/pets_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:0
hard pred: SELECT  pet_age FROM Pets WHERE PetID IN (     SELECT PetID     FROM Has_Pet     WHERE StuID IN (         SELECT StuID         FROM Student         WHERE Fname = 'Linda'     ) )
hard gold: SELECT T3.pet_age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid   =   T2.stuid JOIN pets AS T3 ON T3.petid   =   T2.petid WHERE T1.Fname  =  "Linda"

当前idx1
____________________
SELECT  Name FROM visitor WHERE Level_of_membership > 4
SELECT name FROM visitor WHERE Level_of_membership  >  4
连接数据库../datasets/cosql_dataset/database/museum_visit/museum_visit.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT  Name, Age FROM visitor WHERE Level_of_membership > 4
SELECT name, age FROM visitor WHERE Level_of_membership  >  4
连接数据库../datasets/cosql_dataset/database/museum_visit/museum_visit.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx3
____________________
SELECT  Name, Age FROM visitor WHERE Level_of_membership > 4 ORDER BY Age DESC
SELECT name ,  age FROM visitor WHERE Level_of_membership  >  4 ORDER BY age DESC
连接数据库../datasets/cosql_dataset/database/museum_visit/museum_visit.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx4
____________________
SELECT  ID, Name, Age FROM visitor WHERE Level_of_membership > 4 ORDER BY Age DESC
SELECT id FROM visitor WHERE Level_of_membership  >  4 ORDER BY age DESC
连接数据库../datasets/cosql_dataset/database/museum_visit/museum_visit.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT  ID, Name, Age FROM visitor WHERE Level_of_membership > 4 ORDER BY Age DESC
medium gold: SELECT id FROM visitor WHERE Level_of_membership  >  4 ORDER BY age DESC

当前idx1
eval_err_num:166
____________________
SELECT  DISTINCT s.first_name, s.middle_name, s.last_name FROM Students s JOIN Student_Enrolment se ON s.student_id = se.student_id JOIN Degree_Programs dp ON se.degree_program_id = dp.degree_program_id JOIN Semesters sem ON se.semester_id = sem.semester_id WHERE dp.degree_program_id IN (1, 2) AND sem.semester_id = 1
SELECT T1.first_name ,  T1.middle_name ,  T1.last_name ,  T1.student_id FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id   =   T2.student_id GROUP BY T1.student_id HAVING count ( * )    =   2
连接数据库../datasets/cosql_dataset/database/student_transcripts_tracking/student_transcripts_tracking.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT  DISTINCT s.first_name, s.middle_name, s.last_name FROM Students s JOIN Student_Enrolment se ON s.student_id = se.student_id JOIN Degree_Programs dp ON se.degree_program_id = dp.degree_program_id JOIN Semesters sem ON se.semester_id = sem.semester_id WHERE dp.degree_program_id IN (1, 2) AND sem.semester_id = 1
medium gold: SELECT T1.first_name ,  T1.middle_name ,  T1.last_name ,  T1.student_id FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id   =   T2.student_id GROUP BY T1.student_id HAVING count ( * )    =   2

当前idx2
eval_err_num:167
____________________
SELECT  DISTINCT s.student_id FROM Students s JOIN Student_Enrolment se ON s.student_id = se.student_id JOIN Degree_Programs dp ON se.degree_program_id = dp.degree_program_id JOIN Semesters sem ON se.semester_id = sem.semester_id WHERE dp.degree_program_id IN (1, 2) AND sem.semester_id = 1
SELECT T1.student_id FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id   =   T2.student_id GROUP BY T1.student_id HAVING count ( * )    =   2
连接数据库../datasets/cosql_dataset/database/student_transcripts_tracking/student_transcripts_tracking.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT  DISTINCT s.student_id FROM Students s JOIN Student_Enrolment se ON s.student_id = se.student_id JOIN Degree_Programs dp ON se.degree_program_id = dp.degree_program_id JOIN Semesters sem ON se.semester_id = sem.semester_id WHERE dp.degree_program_id IN (1, 2) AND sem.semester_id = 1
medium gold: SELECT T1.student_id FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id   =   T2.student_id GROUP BY T1.student_id HAVING count ( * )    =   2

当前idx3
____________________
SELECT  email_address FROM Students WHERE student_id = 4
SELECT email_address FROM Students where student_id  =  4
连接数据库../datasets/cosql_dataset/database/student_transcripts_tracking/student_transcripts_tracking.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx4
____________________
SELECT  date_first_registered FROM Students WHERE first_name = 'Timothy' AND middle_name = 'Anna' AND last_name = 'Ward'
SELECT date_first_registered FROM Students where first_name  =  'Timmothy' and middle_name  =  'Anna' and last_name  =  'Ward'
连接数据库../datasets/cosql_dataset/database/student_transcripts_tracking/student_transcripts_tracking.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:True
当前idx1
____________________
SELECT  COUNT(*)  FROM Owners  WHERE state = 'Virginia'
SELECT count ( * )  FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id   =   T2.owner_id WHERE T1.state   =   'Virginia'
连接数据库../datasets/cosql_dataset/database/dog_kennels/dog_kennels.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:False
medium pred: SELECT  COUNT(*)  FROM Owners  WHERE state = 'Virginia'
medium gold: SELECT count ( * )  FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id   =   T2.owner_id WHERE T1.state   =   'Virginia'

当前idx2
____________________
SELECT  first_name, last_name  FROM Owners  WHERE state = 'Virginia'
SELECT T1.first_name, T1.last_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id   =   T2.owner_id WHERE T1.state   =   'Virginia'
连接数据库../datasets/cosql_dataset/database/dog_kennels/dog_kennels.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:False
medium pred: SELECT  first_name, last_name  FROM Owners  WHERE state = 'Virginia'
medium gold: SELECT T1.first_name, T1.last_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id   =   T2.owner_id WHERE T1.state   =   'Virginia'

当前idx3
eval_err_num:168
____________________
SELECT  o.first_name, o.last_name, d.name FROM Owners o JOIN Dogs d ON o.owner_id = d.owner_id WHERE o.state = 'Virginia'
SELECT T2.name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id   =   T2.owner_id WHERE T1.state   =   'Virginia'
连接数据库../datasets/cosql_dataset/database/dog_kennels/dog_kennels.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT  o.first_name, o.last_name, d.name FROM Owners o JOIN Dogs d ON o.owner_id = d.owner_id WHERE o.state = 'Virginia'
medium gold: SELECT T2.name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id   =   T2.owner_id WHERE T1.state   =   'Virginia'

当前idx4
eval_err_num:169
____________________
SELECT  d.name, b.breed_name FROM Dogs d JOIN Breeds b ON d.breed_code = b.breed_code WHERE d.name = 'Bessie'
SELECT T2.breed_code FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id   =   T2.owner_id WHERE T2.name  =  "Bessie"
连接数据库../datasets/cosql_dataset/database/dog_kennels/dog_kennels.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT  d.name, b.breed_name FROM Dogs d JOIN Breeds b ON d.breed_code = b.breed_code WHERE d.name = 'Bessie'
medium gold: SELECT T2.breed_code FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id   =   T2.owner_id WHERE T2.name  =  "Bessie"

当前idx>4
eval_err_num:170
____________________
SELECT  d.name, s.size_description FROM Dogs d JOIN Sizes s ON d.size_code = s.size_code WHERE d.name = 'Bessie'
SELECT T2.size_code FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id   =   T2.owner_id WHERE T2.name  =  "Bessie"
连接数据库../datasets/cosql_dataset/database/dog_kennels/dog_kennels.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT  d.name, s.size_description FROM Dogs d JOIN Sizes s ON d.size_code = s.size_code WHERE d.name = 'Bessie'
medium gold: SELECT T2.size_code FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id   =   T2.owner_id WHERE T2.name  =  "Bessie"

当前idx1
eval_err_num:171
____________________
SELECT  COUNT(DISTINCT Record_Company) AS Number_of_Record_Companies FROM orchestra
SELECT count ( Record_Company )  FROM orchestra
连接数据库../datasets/cosql_dataset/database/orchestra/orchestra.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
easy pred: SELECT  COUNT(DISTINCT Record_Company) AS Number_of_Record_Companies FROM orchestra
easy gold: SELECT count ( Record_Company )  FROM orchestra

当前idx2
eval_err_num:172
____________________
SELECT  COUNT(*) AS Number_of_Orchestras FROM orchestra
SELECT count ( Orchestra_ID )  FROM orchestra
连接数据库../datasets/cosql_dataset/database/orchestra/orchestra.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
easy pred: SELECT  COUNT(*) AS Number_of_Orchestras FROM orchestra
easy gold: SELECT count ( Orchestra_ID )  FROM orchestra

当前idx3
____________________
SELECT  Orchestra, Year_of_Founded FROM orchestra ORDER BY Year_of_Founded
select orchestra from orchestra order by Year_of_Founded
连接数据库../datasets/cosql_dataset/database/orchestra/orchestra.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
easy pred: SELECT  Orchestra, Year_of_Founded FROM orchestra ORDER BY Year_of_Founded
easy gold: select orchestra from orchestra order by Year_of_Founded

当前idx4
____________________
SELECT  Year_of_Founded FROM orchestra WHERE Orchestra = 'Royal Danish Orchestra'
select year_of_founded  from orchestra where orchestra = 'Royal Danish Orchestra'
连接数据库../datasets/cosql_dataset/database/orchestra/orchestra.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx>4
eval_err_num:173
____________________
SELECT  Record_Company, COUNT(Orchestra) AS Number_of_Orchestras FROM orchestra GROUP BY Record_Company ORDER BY Number_of_Orchestras DESC LIMIT 1
SELECT Record_Company FROM orchestra GROUP BY Record_Company ORDER BY COUNT ( * )  DESC LIMIT 1
连接数据库../datasets/cosql_dataset/database/orchestra/orchestra.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
hard pred: SELECT  Record_Company, COUNT(Orchestra) AS Number_of_Orchestras FROM orchestra GROUP BY Record_Company ORDER BY Number_of_Orchestras DESC LIMIT 1
hard gold: SELECT Record_Company FROM orchestra GROUP BY Record_Company ORDER BY COUNT ( * )  DESC LIMIT 1

当前idx1
____________________
SELECT  COUNT(*)  FROM flights  WHERE Airline = (SELECT uid FROM airlines WHERE Airline = 'United Airlines')  AND DestAirport = 'ASY'
SELECT count ( * )  FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T2.Airline   =   T1.uid WHERE T1.Airline   =   "United Airlines" AND T2.DestAirport   =   "ASY"
连接数据库../datasets/cosql_dataset/database/flight_2/flight_2.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:0
medium pred: SELECT  COUNT(*)  FROM flights  WHERE Airline = (SELECT uid FROM airlines WHERE Airline = 'United Airlines')  AND DestAirport = 'ASY'
medium gold: SELECT count ( * )  FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T2.Airline   =   T1.uid WHERE T1.Airline   =   "United Airlines" AND T2.DestAirport   =   "ASY"

当前idx2
____________________
SELECT  uid  FROM airlines  WHERE Airline = 'United Airlines'
select uid from airlines where airline  =  "United Airlines"
连接数据库../datasets/cosql_dataset/database/flight_2/flight_2.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx3
____________________
SELECT  COUNT(*)  FROM flights  WHERE Airline = 1  AND DestAirport = 'ASY'
SELECT count ( * )  FROM FLIGHTS WHERE airline  =  1 and DestAirport   =   " ASY"
连接数据库../datasets/cosql_dataset/database/flight_2/flight_2.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:True
当前idx1
____________________
SELECT  COUNT(*)  FROM car_makers  WHERE Maker = 'Volvo'
SELECT count ( * )  FROM CAR_names where model  =  "volvo"
连接数据库../datasets/cosql_dataset/database/car_1/car_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
easy pred: SELECT  COUNT(*)  FROM car_makers  WHERE Maker = 'Volvo'
easy gold: SELECT count ( * )  FROM CAR_names where model  =  "volvo"

当前idx2
____________________
SELECT  model_list.Model  FROM model_list  JOIN car_makers ON model_list.Maker = car_makers.Id  JOIN cars_data ON car_makers.Id = cars_data.Id  WHERE car_makers.Maker = 'Volvo'  ORDER BY cars_data.Accelerate  LIMIT 1
SELECT T1.id FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T2.Model  =  'volvo' ORDER BY T1.accelerate ASC LIMIT 1
连接数据库../datasets/cosql_dataset/database/car_1/car_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
extra pred: SELECT  model_list.Model  FROM model_list  JOIN car_makers ON model_list.Maker = car_makers.Id  JOIN cars_data ON car_makers.Id = cars_data.Id  WHERE car_makers.Maker = 'Volvo'  ORDER BY cars_data.Accelerate  LIMIT 1
extra gold: SELECT T1.id FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T2.Model  =  'volvo' ORDER BY T1.accelerate ASC LIMIT 1

当前idx3
____________________
SELECT  Cylinders  FROM cars_data  JOIN car_makers ON cars_data.Id = car_makers.Id  WHERE car_makers.Maker = 'Volvo'  ORDER BY Accelerate  LIMIT 1
SELECT T1.cylinders FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T2.Model  =  'volvo' ORDER BY T1.accelerate ASC LIMIT 1
连接数据库../datasets/cosql_dataset/database/car_1/car_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
extra pred: SELECT  Cylinders  FROM cars_data  JOIN car_makers ON cars_data.Id = car_makers.Id  WHERE car_makers.Maker = 'Volvo'  ORDER BY Accelerate  LIMIT 1
extra gold: SELECT T1.cylinders FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T2.Model  =  'volvo' ORDER BY T1.accelerate ASC LIMIT 1

当前idx1
____________________
SELECT  COUNT(ID) FROM Highschooler
SELECT count ( * )  FROM Highschooler
连接数据库../datasets/cosql_dataset/database/network_1/network_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
easy pred: SELECT  COUNT(ID) FROM Highschooler
easy gold: SELECT count ( * )  FROM Highschooler

当前idx2
____________________
SELECT  COUNT(*) FROM Friend
SELECT count ( * )  FROM Friend
连接数据库../datasets/cosql_dataset/database/network_1/network_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx3
eval_err_num:174
____________________
SELECT  DISTINCT h.name FROM Highschooler h JOIN Friend f ON h.ID = f.student_id
SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id   =   T2.id
连接数据库../datasets/cosql_dataset/database/network_1/network_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
easy pred: SELECT  DISTINCT h.name FROM Highschooler h JOIN Friend f ON h.ID = f.student_id
easy gold: SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id   =   T2.id

当前idx1
eval_err_num:175
____________________
SELECT  se.semester_id FROM Student_Enrolment se JOIN Degree_Programs dp ON se.degree_program_id = dp.degree_program_id WHERE dp.degree_summary_name LIKE '%bachelor%'
SELECT DISTINCT T2.semester_id FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id   =   T2.degree_program_id WHERE degree_summary_name   =   'Master'
连接数据库../datasets/cosql_dataset/database/student_transcripts_tracking/student_transcripts_tracking.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT  se.semester_id FROM Student_Enrolment se JOIN Degree_Programs dp ON se.degree_program_id = dp.degree_program_id WHERE dp.degree_summary_name LIKE '%bachelor%'
medium gold: SELECT DISTINCT T2.semester_id FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id   =   T2.degree_program_id WHERE degree_summary_name   =   'Master'

当前idx2
eval_err_num:176
____________________
SELECT  dp.degree_summary_description FROM Degree_Programs dp JOIN Student_Enrolment se ON dp.degree_program_id = se.degree_program_id WHERE se.student_id = 14
SELECT T1.degree_summary_description FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id WHERE T2.student_id  =  14
连接数据库../datasets/cosql_dataset/database/student_transcripts_tracking/student_transcripts_tracking.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT  dp.degree_summary_description FROM Degree_Programs dp JOIN Student_Enrolment se ON dp.degree_program_id = se.degree_program_id WHERE se.student_id = 14
medium gold: SELECT T1.degree_summary_description FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id WHERE T2.student_id  =  14

当前idx1
____________________
SELECT  model_list.Model FROM cars_data JOIN model_list ON cars_data.Id = model_list.ModelId WHERE MPG = (SELECT MAX(MPG) FROM cars_data)
SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId   =   T2.Id ORDER BY T2.mpg DESC LIMIT 1
连接数据库../datasets/cosql_dataset/database/car_1/car_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
hard pred: SELECT  model_list.Model FROM cars_data JOIN model_list ON cars_data.Id = model_list.ModelId WHERE MPG = (SELECT MAX(MPG) FROM cars_data)
hard gold: SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId   =   T2.Id ORDER BY T2.mpg DESC LIMIT 1

当前idx2
____________________
SELECT  model_list.Model FROM cars_data JOIN model_list ON cars_data.Id = model_list.ModelId WHERE Horsepower = (SELECT MAX(Horsepower) FROM cars_data)
SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId   =   T2.Id ORDER BY T2.horsepower DESC LIMIT 1
连接数据库../datasets/cosql_dataset/database/car_1/car_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
hard pred: SELECT  model_list.Model FROM cars_data JOIN model_list ON cars_data.Id = model_list.ModelId WHERE Horsepower = (SELECT MAX(Horsepower) FROM cars_data)
hard gold: SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId   =   T2.Id ORDER BY T2.horsepower DESC LIMIT 1

当前idx1
____________________
SELECT  Age  FROM employee  WHERE Name = 'George Chuter'
SELECT Age from employee where Name = 'George Chuter'
连接数据库../datasets/cosql_dataset/database/employee_hire_evaluation/employee_hire_evaluation.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT  Age  FROM employee  WHERE Name = 'Lee Mears'
SELECT Age from employee where Name = 'Lee Mears'
连接数据库../datasets/cosql_dataset/database/employee_hire_evaluation/employee_hire_evaluation.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx3
eval_err_num:177
____________________
SELECT  e.Name FROM employee e JOIN evaluation ev ON e.Employee_ID = ev.Employee_ID ORDER BY ev.Bonus DESC LIMIT 1
SELECT t1.name FROM employee AS t1 JOIN evaluation AS t2 ON t1.Employee_ID  =  t2.Employee_ID ORDER BY t2.bonus DESC LIMIT 1
连接数据库../datasets/cosql_dataset/database/employee_hire_evaluation/employee_hire_evaluation.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
hard pred: SELECT  e.Name FROM employee e JOIN evaluation ev ON e.Employee_ID = ev.Employee_ID ORDER BY ev.Bonus DESC LIMIT 1
hard gold: SELECT t1.name FROM employee AS t1 JOIN evaluation AS t2 ON t1.Employee_ID  =  t2.Employee_ID ORDER BY t2.bonus DESC LIMIT 1

当前idx1
____________________
SELECT  Name FROM people WHERE People_ID NOT IN (SELECT People_ID FROM poker_player)
SELECT Name FROM people WHERE People_ID NOT IN  ( SELECT People_ID FROM poker_player ) 
连接数据库../datasets/cosql_dataset/database/poker_player/poker_player.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT  Name FROM people WHERE People_ID IN (SELECT People_ID FROM poker_player)
SELECT Name FROM people WHERE People_ID IN  ( SELECT People_ID FROM poker_player ) 
连接数据库../datasets/cosql_dataset/database/poker_player/poker_player.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx1
eval_err_num:178
____________________
SELECT  COUNT(player_id) AS total_players FROM players
SELECT count ( * )  FROM players
连接数据库../datasets/cosql_dataset/database/wta_1/wta_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
easy pred: SELECT  COUNT(player_id) AS total_players FROM players
easy gold: SELECT count ( * )  FROM players

当前idx2
____________________
SELECT  first_name FROM players
SELECT first_name FROM players
连接数据库../datasets/cosql_dataset/database/wta_1/wta_1.sqlite
执行第一个查询
执行出错: Could not decode to UTF-8 column 'first_name' with text 'Selin G��Lseren'
eval_exec:False
exact_score:True
当前idx3
____________________
SELECT  country_code FROM players WHERE first_name = 'Mirjana'
SELECT country_code FROM players  where first_name  =  "Mirjana"
连接数据库../datasets/cosql_dataset/database/wta_1/wta_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx4
____________________
SELECT  birth_date FROM players WHERE first_name = 'Justine'
SELECT birth_date FROM players  where first_name  =  "Mirjana"
连接数据库../datasets/cosql_dataset/database/wta_1/wta_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:True
当前idx1
____________________
SELECT  model_list.Model FROM model_list JOIN car_makers ON model_list.Maker = car_makers.Id WHERE car_makers.Maker = 'General Motors'
SELECT DISTINCT T2.Model FROM CAR_NAMES AS T1 JOIN MODEL_LIST AS T2 ON T1.Model   =   T2.Model JOIN CAR_MAKERS AS T3 ON T2.Maker   =   T3.Id JOIN CARS_DATA AS T4 ON T1.MakeId   =   T4.Id WHERE T3.FullName   =   'General Motors'
连接数据库../datasets/cosql_dataset/database/car_1/car_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
extra pred: SELECT  model_list.Model FROM model_list JOIN car_makers ON model_list.Maker = car_makers.Id WHERE car_makers.Maker = 'General Motors'
extra gold: SELECT DISTINCT T2.Model FROM CAR_NAMES AS T1 JOIN MODEL_LIST AS T2 ON T1.Model   =   T2.Model JOIN CAR_MAKERS AS T3 ON T2.Maker   =   T3.Id JOIN CARS_DATA AS T4 ON T1.MakeId   =   T4.Id WHERE T3.FullName   =   'General Motors'

当前idx2
____________________
SELECT  Model FROM car_names JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE cars_data.Weight > 3500
SELECT DISTINCT T2.Model FROM CAR_NAMES AS T1 JOIN MODEL_LIST AS T2 ON T1.Model   =   T2.Model JOIN CAR_MAKERS AS T3 ON T2.Maker   =   T3.Id JOIN CARS_DATA AS T4 ON T1.MakeId   =   T4.Id WHERE T4.weight  >  3500
连接数据库../datasets/cosql_dataset/database/car_1/car_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:False
extra pred: SELECT  Model FROM car_names JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE cars_data.Weight > 3500
extra gold: SELECT DISTINCT T2.Model FROM CAR_NAMES AS T1 JOIN MODEL_LIST AS T2 ON T1.Model   =   T2.Model JOIN CAR_MAKERS AS T3 ON T2.Maker   =   T3.Id JOIN CARS_DATA AS T4 ON T1.MakeId   =   T4.Id WHERE T4.weight  >  3500

当前idx3
____________________
SELECT  DISTINCT Model FROM car_names JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE cars_data.Weight > 3500  UNION  SELECT DISTINCT model_list.Model FROM model_list JOIN car_makers ON model_list.Maker = car_makers.Id WHERE car_makers.Maker = 'General Motors'
SELECT DISTINCT T2.Model FROM CAR_NAMES AS T1 JOIN MODEL_LIST AS T2 ON T1.Model   =   T2.Model JOIN CAR_MAKERS AS T3 ON T2.Maker   =   T3.Id JOIN CARS_DATA AS T4 ON T1.MakeId   =   T4.Id WHERE T3.FullName   =   'General Motors' or T4.weight  < =   3500
连接数据库../datasets/cosql_dataset/database/car_1/car_1.sqlite
执行第一个查询
执行第二个查询
执行出错: near "=": syntax error
eval_exec:False
exact_score:0
extra pred: SELECT  DISTINCT Model FROM car_names JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE cars_data.Weight > 3500  UNION  SELECT DISTINCT model_list.Model FROM model_list JOIN car_makers ON model_list.Maker = car_makers.Id WHERE car_makers.Maker = 'General Motors'
extra gold: SELECT DISTINCT T2.Model FROM CAR_NAMES AS T1 JOIN MODEL_LIST AS T2 ON T1.Model   =   T2.Model JOIN CAR_MAKERS AS T3 ON T2.Maker   =   T3.Id JOIN CARS_DATA AS T4 ON T1.MakeId   =   T4.Id WHERE T3.FullName   =   'General Motors' or T4.weight  < =   3500

当前idx4
____________________
SELECT  DISTINCT Model FROM car_names JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE cars_data.Weight > 3500 AND car_names.Make NOT IN (SELECT Maker FROM car_makers WHERE Maker = 'General Motors')  UNION  SELECT DISTINCT model_list.Model FROM model_list JOIN car_makers ON model_list.Maker = car_makers.Id WHERE car_makers.Maker = 'General Motors' AND model_list.Model NOT IN (SELECT Model FROM car_names JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE cars_data.Weight > 3500)
SELECT DISTINCT T2.Model FROM CAR_NAMES AS T1 JOIN MODEL_LIST AS T2 ON T1.Model   =   T2.Model JOIN CAR_MAKERS AS T3 ON T2.Maker   =   T3.Id JOIN CARS_DATA AS T4 ON T1.MakeId   =   T4.Id WHERE T3.FullName   =   'General Motors' Or T4.weight  < =   3500 except SELECT DISTINCT T2.Model FROM CAR_NAMES AS T1 JOIN MODEL_LIST AS T2 ON T1.Model   =   T2.Model JOIN CAR_MAKERS AS T3 ON T2.Maker   =   T3.Id JOIN CARS_DATA AS T4 ON T1.MakeId   =   T4.Id WHERE T3.FullName   =   'General Motors' and T4.weight  < =   3500
连接数据库../datasets/cosql_dataset/database/car_1/car_1.sqlite
执行第一个查询
执行第二个查询
执行出错: near "=": syntax error
eval_exec:False
exact_score:0
extra pred: SELECT  DISTINCT Model FROM car_names JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE cars_data.Weight > 3500 AND car_names.Make NOT IN (SELECT Maker FROM car_makers WHERE Maker = 'General Motors')  UNION  SELECT DISTINCT model_list.Model FROM model_list JOIN car_makers ON model_list.Maker = car_makers.Id WHERE car_makers.Maker = 'General Motors' AND model_list.Model NOT IN (SELECT Model FROM car_names JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE cars_data.Weight > 3500)
extra gold: SELECT DISTINCT T2.Model FROM CAR_NAMES AS T1 JOIN MODEL_LIST AS T2 ON T1.Model   =   T2.Model JOIN CAR_MAKERS AS T3 ON T2.Maker   =   T3.Id JOIN CARS_DATA AS T4 ON T1.MakeId   =   T4.Id WHERE T3.FullName   =   'General Motors' Or T4.weight  < =   3500 except SELECT DISTINCT T2.Model FROM CAR_NAMES AS T1 JOIN MODEL_LIST AS T2 ON T1.Model   =   T2.Model JOIN CAR_MAKERS AS T3 ON T2.Maker   =   T3.Id JOIN CARS_DATA AS T4 ON T1.MakeId   =   T4.Id WHERE T3.FullName   =   'General Motors' and T4.weight  < =   3500

当前idx1
____________________
SELECT  Height FROM people WHERE Name = 'Aleksey Ostapenko'
SELECT height FROM people where name  =  "Aleksey Ostapenko"
连接数据库../datasets/cosql_dataset/database/poker_player/poker_player.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT  Name FROM people WHERE Birth_Date = 'August 16, 1982'
SELECT name FROM people where birth_date  =  "August 16, 1982"
连接数据库../datasets/cosql_dataset/database/poker_player/poker_player.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx3
____________________
SELECT  People_ID FROM people WHERE Nationality = 'Russia'
SELECT people_id FROM people where nationality  =  "Russia"
连接数据库../datasets/cosql_dataset/database/poker_player/poker_player.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx4
____________________
SELECT  Nationality FROM people GROUP BY Nationality HAVING COUNT(*) >= 2
SELECT Nationality FROM people GROUP BY Nationality HAVING COUNT ( * )    > =    2
连接数据库../datasets/cosql_dataset/database/poker_player/poker_player.sqlite
执行第一个查询
执行第二个查询
执行出错: near "=": syntax error
eval_exec:False
exact_score:True
当前idx1
____________________
SELECT  Population FROM country WHERE Name = 'Afghanistan'
SELECT Population FROM country where Name   =   "Afghanistan"
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT  Population FROM country WHERE Name = 'Aruba'
SELECT Population FROM country where Name   =   "Aruba"
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx3
____________________
SELECT  Language FROM countrylanguage WHERE CountryCode = 'ABW'
SELECT T2.language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code   =   T2.CountryCode WHERE T1.Name   =   "Aruba"
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:0
medium pred: SELECT  Language FROM countrylanguage WHERE CountryCode = 'ABW'
medium gold: SELECT T2.language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code   =   T2.CountryCode WHERE T1.Name   =   "Aruba"

当前idx4
____________________
SELECT  Language FROM countrylanguage WHERE CountryCode = 'ABW' AND IsOfficial = 'T'
SELECT T2.language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code   =   T2.CountryCode WHERE T1.Name   =   "Aruba" and T2.IsOfficial = 'T'
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:0
medium pred: SELECT  Language FROM countrylanguage WHERE CountryCode = 'ABW' AND IsOfficial = 'T'
medium gold: SELECT T2.language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code   =   T2.CountryCode WHERE T1.Name   =   "Aruba" and T2.IsOfficial = 'T'

当前idx>4
____________________
SELECT  Language FROM countrylanguage WHERE CountryCode = 'AFG' AND IsOfficial = 'T'
SELECT T2.language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code   =   T2.CountryCode WHERE T1.Name   =   "Afghanistan" and T2.IsOfficial = 'T'
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:0
medium pred: SELECT  Language FROM countrylanguage WHERE CountryCode = 'AFG' AND IsOfficial = 'T'
medium gold: SELECT T2.language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code   =   T2.CountryCode WHERE T1.Name   =   "Afghanistan" and T2.IsOfficial = 'T'

当前idx>4
____________________
SELECT  COUNT(*) FROM countrylanguage WHERE Language = 'Dari' AND IsOfficial = 'F'
SELECT count ( * )  FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code   =   T2.CountryCode WHERE T2.language = 'Dari' and T1.name ! =  'Afghanistan'
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
执行出错: unrecognized token: "!"
eval_exec:False
exact_score:0
medium pred: SELECT  COUNT(*) FROM countrylanguage WHERE Language = 'Dari' AND IsOfficial = 'F'
medium gold: SELECT count ( * )  FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code   =   T2.CountryCode WHERE T2.language = 'Dari' and T1.name ! =  'Afghanistan'

当前idx1
eval_err_num:179
____________________
SELECT  d.name, t.cost_of_treatment FROM Dogs d JOIN Treatments t ON d.dog_id = t.dog_id
SELECT name,cost_of_treatment  FROM Dogs join Treatments
连接数据库../datasets/cosql_dataset/database/dog_kennels/dog_kennels.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT  d.name, t.cost_of_treatment FROM Dogs d JOIN Treatments t ON d.dog_id = t.dog_id
medium gold: SELECT name,cost_of_treatment  FROM Dogs join Treatments

当前idx2
eval_err_num:180
____________________
SELECT  d.name, t.cost_of_treatment FROM Dogs d JOIN Treatments t ON d.dog_id = t.dog_id WHERE t.cost_of_treatment < 1000 ORDER BY t.cost_of_treatment DESC
SELECT name FROM Dogs WHERE dog_id NOT IN (  SELECT dog_id FROM Treatments GROUP BY dog_id HAVING sum ( cost_of_treatment )   <  1000  ) 
连接数据库../datasets/cosql_dataset/database/dog_kennels/dog_kennels.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
hard pred: SELECT  d.name, t.cost_of_treatment FROM Dogs d JOIN Treatments t ON d.dog_id = t.dog_id WHERE t.cost_of_treatment < 1000 ORDER BY t.cost_of_treatment DESC
hard gold: SELECT name FROM Dogs WHERE dog_id NOT IN (  SELECT dog_id FROM Treatments GROUP BY dog_id HAVING sum ( cost_of_treatment )   <  1000  ) 

当前idx1
____________________
SELECT  Age FROM visitor WHERE Name = 'Gonzalo Higuaín'
SELECT age FROM visitor where name  =  "Gonzalo Higuaín"
连接数据库../datasets/cosql_dataset/database/museum_visit/museum_visit.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT  Num_of_Ticket FROM visit WHERE visitor_ID = 5
SELECT num_of_ticket FROM visitor AS t1 JOIN visit AS t2 ON t1.id   =   t2.visitor_id where visitor_id  =  5
连接数据库../datasets/cosql_dataset/database/museum_visit/museum_visit.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:False
medium pred: SELECT  Num_of_Ticket FROM visit WHERE visitor_ID = 5
medium gold: SELECT num_of_ticket FROM visitor AS t1 JOIN visit AS t2 ON t1.id   =   t2.visitor_id where visitor_id  =  5

当前idx3
____________________
SELECT  Total_spent FROM visit JOIN visitor ON visit.visitor_ID = visitor.ID WHERE visitor.Name = 'Arjen Robben'
SELECT Total_spent FROM visitor AS t1 JOIN visit AS t2 ON t1.id   =   t2.visitor_id where name  =  "Arjen Robben"
连接数据库../datasets/cosql_dataset/database/museum_visit/museum_visit.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx4
____________________
SELECT  visitor.Name, visitor.Age FROM visit JOIN visitor ON visit.visitor_ID = visitor.ID WHERE Num_of_Ticket = (SELECT MAX(Num_of_Ticket) FROM visit)
SELECT t1.name ,  t1.age FROM visitor AS t1 JOIN visit AS t2 ON t1.id   =   t2.visitor_id ORDER BY t2.num_of_ticket DESC LIMIT 1
连接数据库../datasets/cosql_dataset/database/museum_visit/museum_visit.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:0
hard pred: SELECT  visitor.Name, visitor.Age FROM visit JOIN visitor ON visit.visitor_ID = visitor.ID WHERE Num_of_Ticket = (SELECT MAX(Num_of_Ticket) FROM visit)
hard gold: SELECT t1.name ,  t1.age FROM visitor AS t1 JOIN visit AS t2 ON t1.id   =   t2.visitor_id ORDER BY t2.num_of_ticket DESC LIMIT 1

当前idx1
eval_err_num:181
____________________
SELECT  DISTINCT c.Region FROM countrylanguage cl JOIN country c ON cl.CountryCode = c.Code WHERE cl.Language = 'English'
SELECT DISTINCT T1.Region FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code   =   T2.CountryCode WHERE T2.Language   =   "English"
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT  DISTINCT c.Region FROM countrylanguage cl JOIN country c ON cl.CountryCode = c.Code WHERE cl.Language = 'English'
medium gold: SELECT DISTINCT T1.Region FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code   =   T2.CountryCode WHERE T2.Language   =   "English"

当前idx2
eval_err_num:182
____________________
SELECT  DISTINCT c.Region FROM countrylanguage cl JOIN country c ON cl.CountryCode = c.Code WHERE cl.Language = 'Dutch'
SELECT DISTINCT T1.Region FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code   =   T2.CountryCode WHERE T2.Language   =   "Dutch"
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT  DISTINCT c.Region FROM countrylanguage cl JOIN country c ON cl.CountryCode = c.Code WHERE cl.Language = 'Dutch'
medium gold: SELECT DISTINCT T1.Region FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code   =   T2.CountryCode WHERE T2.Language   =   "Dutch"

当前idx3
eval_err_num:183
____________________
SELECT  DISTINCT c.Region, c.LifeExpectancy FROM countrylanguage cl JOIN country c ON cl.CountryCode = c.Code WHERE cl.Language = 'Dutch'
SELECT DISTINCT T1.LifeExpectancy FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code   =   T2.CountryCode WHERE T2.Language   =   "Dutch"
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT  DISTINCT c.Region, c.LifeExpectancy FROM countrylanguage cl JOIN country c ON cl.CountryCode = c.Code WHERE cl.Language = 'Dutch'
medium gold: SELECT DISTINCT T1.LifeExpectancy FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code   =   T2.CountryCode WHERE T2.Language   =   "Dutch"

当前idx1
____________________
SELECT winner_name
FROM matches
WHERE winner_age IN (SELECT winner_age
                     FROM matches
                     ORDER BY winner_age
                     LIMIT 3)
SELECT winner_name  FROM matches ORDER BY winner_age LIMIT 3
连接数据库../datasets/cosql_dataset/database/wta_1/wta_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:0
medium pred: SELECT winner_name
FROM matches
WHERE winner_age IN (SELECT winner_age
                     FROM matches
                     ORDER BY winner_age
                     LIMIT 3)
medium gold: SELECT winner_name  FROM matches ORDER BY winner_age LIMIT 3

当前idx2
eval_err_num:184
____________________
SELECT m.winner_name, m.winner_rank
FROM matches m
WHERE m.winner_age IN (SELECT winner_age
                       FROM matches
                       ORDER BY winner_age
                       LIMIT 3)
SELECT DISTINCT winner_name,  winner_rank FROM matches ORDER BY winner_age LIMIT 3
连接数据库../datasets/cosql_dataset/database/wta_1/wta_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT m.winner_name, m.winner_rank
FROM matches m
WHERE m.winner_age IN (SELECT winner_age
                       FROM matches
                       ORDER BY winner_age
                       LIMIT 3)
medium gold: SELECT DISTINCT winner_name,  winner_rank FROM matches ORDER BY winner_age LIMIT 3

当前idx3
eval_err_num:185
____________________
SELECT m.winner_name, m.winner_rank, m.loser_name
FROM matches m
WHERE m.winner_age IN (SELECT winner_age
                       FROM matches
                       ORDER BY winner_age
                       LIMIT 3)
SELECT loser_name FROM matches ORDER BY winner_age LIMIT 3
连接数据库../datasets/cosql_dataset/database/wta_1/wta_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT m.winner_name, m.winner_rank, m.loser_name
FROM matches m
WHERE m.winner_age IN (SELECT winner_age
                       FROM matches
                       ORDER BY winner_age
                       LIMIT 3)
medium gold: SELECT loser_name FROM matches ORDER BY winner_age LIMIT 3

当前idx1
____________________
SELECT  first_name, last_name FROM Professionals
SELECT first_name, last_name FROM professionals
连接数据库../datasets/cosql_dataset/database/dog_kennels/dog_kennels.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT  first_name, last_name FROM Professionals WHERE city LIKE '%West%'
SELECT first_name, last_name FROM professionals  WHERE city LIKE '%West%'
连接数据库../datasets/cosql_dataset/database/dog_kennels/dog_kennels.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx3
____________________
SELECT  role_code FROM Professionals WHERE first_name = 'Taryn'
SELECT role_code , street , city , state FROM professionals WHERE first_name  =  "Taryn"
连接数据库../datasets/cosql_dataset/database/dog_kennels/dog_kennels.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT  role_code FROM Professionals WHERE first_name = 'Taryn'
medium gold: SELECT role_code , street , city , state FROM professionals WHERE first_name  =  "Taryn"

当前idx4
____________________
SELECT  first_name, last_name, state FROM Professionals
SELECT first_name,state FROM professionals
连接数据库../datasets/cosql_dataset/database/dog_kennels/dog_kennels.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT  first_name, last_name, state FROM Professionals
medium gold: SELECT first_name,state FROM professionals

当前idx>4
____________________
SELECT  first_name, last_name FROM Professionals WHERE state = 'Indiana'
SELECT first_name FROM professionals WHERE state  =  "Indiana"
连接数据库../datasets/cosql_dataset/database/dog_kennels/dog_kennels.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
easy pred: SELECT  first_name, last_name FROM Professionals WHERE state = 'Indiana'
easy gold: SELECT first_name FROM professionals WHERE state  =  "Indiana"

当前idx1
____________________
SELECT  COUNT(*) FROM death
SELECT count ( * )  FROM death
连接数据库../datasets/cosql_dataset/database/battle_death/battle_death.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT  *  FROM death  WHERE killed = (SELECT MAX(killed) FROM death)
SELECT * FROM death where killed  =   ( select max ( killed )  from death ) 
连接数据库../datasets/cosql_dataset/database/battle_death/battle_death.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx3
____________________
SELECT  *  FROM death  WHERE killed = (SELECT MAX(killed) FROM death)
SELECT * FROM death where note like "%East%"
连接数据库../datasets/cosql_dataset/database/battle_death/battle_death.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT  *  FROM death  WHERE killed = (SELECT MAX(killed) FROM death)
medium gold: SELECT * FROM death where note like "%East%"

当前idx1
____________________
SELECT  *  FROM death  WHERE caused_by_ship_id IN (SELECT id                              FROM ship                              WHERE tonnage = 't')
SELECT T1.killed FROM death AS T1 JOIN ship AS t2 ON T1.caused_by_ship_id  =  T2.id WHERE T2.tonnage  =  't'
连接数据库../datasets/cosql_dataset/database/battle_death/battle_death.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT  *  FROM death  WHERE caused_by_ship_id IN (SELECT id                              FROM ship                              WHERE tonnage = 't')
medium gold: SELECT T1.killed FROM death AS T1 JOIN ship AS t2 ON T1.caused_by_ship_id  =  T2.id WHERE T2.tonnage  =  't'

当前idx2
____________________
SELECT  *  FROM death  WHERE caused_by_ship_id IN (SELECT id                              FROM ship                              WHERE tonnage = 't') AND injured > 0
SELECT T1.injured FROM death AS T1 JOIN ship AS t2 ON T1.caused_by_ship_id  =  T2.id WHERE T2.tonnage  =  't'
连接数据库../datasets/cosql_dataset/database/battle_death/battle_death.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT  *  FROM death  WHERE caused_by_ship_id IN (SELECT id                              FROM ship                              WHERE tonnage = 't') AND injured > 0
medium gold: SELECT T1.injured FROM death AS T1 JOIN ship AS t2 ON T1.caused_by_ship_id  =  T2.id WHERE T2.tonnage  =  't'

当前idx3
eval_err_num:186
____________________
SELECT  SUM(killed) AS total_deaths, SUM(injured) AS total_injuries FROM death  WHERE caused_by_ship_id IN (SELECT id                              FROM ship                              WHERE tonnage = 't')
SELECT COUNT ( T1.id )  FROM death AS T1 JOIN ship AS t2 ON T1.caused_by_ship_id  =  T2.id WHERE T2.tonnage  =  't'
连接数据库../datasets/cosql_dataset/database/battle_death/battle_death.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT  SUM(killed) AS total_deaths, SUM(injured) AS total_injuries FROM death  WHERE caused_by_ship_id IN (SELECT id                              FROM ship                              WHERE tonnage = 't')
medium gold: SELECT COUNT ( T1.id )  FROM death AS T1 JOIN ship AS t2 ON T1.caused_by_ship_id  =  T2.id WHERE T2.tonnage  =  't'

当前idx1
eval_err_num:187
____________________
SELECT  c.Continent, COUNT(cm.Id) AS NumCarMakers FROM continents c LEFT JOIN car_makers cm ON c.ContId = cm.Country GROUP BY c.Continent
SELECT T1.Continent ,  count ( * )  FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId   =   T2.continent JOIN car_makers AS T3 ON T2.CountryId   =   T3.Country GROUP BY T1.Continent
连接数据库../datasets/cosql_dataset/database/car_1/car_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
hard pred: SELECT  c.Continent, COUNT(cm.Id) AS NumCarMakers FROM continents c LEFT JOIN car_makers cm ON c.ContId = cm.Country GROUP BY c.Continent
hard gold: SELECT T1.Continent ,  count ( * )  FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId   =   T2.continent JOIN car_makers AS T3 ON T2.CountryId   =   T3.Country GROUP BY T1.Continent

当前idx2
eval_err_num:188
____________________
SELECT  COUNT(*) AS NumCarMakersInUSA FROM car_makers WHERE Country = 'USA'
seLECT count ( * )  FROM car_makers as T1 join countries as T2 on T2.CountryId   =   T1.Country where T2.countryname  =  "usa"
连接数据库../datasets/cosql_dataset/database/car_1/car_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT  COUNT(*) AS NumCarMakersInUSA FROM car_makers WHERE Country = 'USA'
medium gold: seLECT count ( * )  FROM car_makers as T1 join countries as T2 on T2.CountryId   =   T1.Country where T2.countryname  =  "usa"

当前idx3
eval_err_num:189
____________________
SELECT  COUNT(*) AS NumCarMakersInGermany FROM car_makers WHERE Country = 'Germany'
seLECT count ( * )  FROM car_makers as T1 join countries as T2 on T2.CountryId   =   T1.Country where T2.countryname  =  "germany"
连接数据库../datasets/cosql_dataset/database/car_1/car_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT  COUNT(*) AS NumCarMakersInGermany FROM car_makers WHERE Country = 'Germany'
medium gold: seLECT count ( * )  FROM car_makers as T1 join countries as T2 on T2.CountryId   =   T1.Country where T2.countryname  =  "germany"

当前idx4
eval_err_num:190
____________________
SELECT  COUNT(*) AS NumCarMakersInFrance FROM car_makers WHERE Country = 'France'
seLECT count ( * )  FROM car_makers as T1 join countries as T2 on T2.CountryId   =   T1.Country where T2.countryname  =  "france"
连接数据库../datasets/cosql_dataset/database/car_1/car_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT  COUNT(*) AS NumCarMakersInFrance FROM car_makers WHERE Country = 'France'
medium gold: seLECT count ( * )  FROM car_makers as T1 join countries as T2 on T2.CountryId   =   T1.Country where T2.countryname  =  "france"

当前idx1
eval_err_num:191
____________________
SELECT  COUNT(*) AS TotalCountries FROM country
SELECT count ( * )  FROM country
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
easy pred: SELECT  COUNT(*) AS TotalCountries FROM country
easy gold: SELECT count ( * )  FROM country

当前idx2
eval_err_num:192
____________________
SELECT  COUNT(*) AS TotalCities FROM city
SELECT count ( * )  FROM city
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
easy pred: SELECT  COUNT(*) AS TotalCities FROM city
easy gold: SELECT count ( * )  FROM city

当前idx3
eval_err_num:193
____________________
SELECT  c.Region FROM city ci JOIN country c ON ci.CountryCode = c.Code WHERE ci.Name = 'Kabul'
SELECT Region FROM country AS T1 JOIN city AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Name  =  "Kabul"
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT  c.Region FROM city ci JOIN country c ON ci.CountryCode = c.Code WHERE ci.Name = 'Kabul'
medium gold: SELECT Region FROM country AS T1 JOIN city AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Name  =  "Kabul"

当前idx4
eval_err_num:194
____________________
SELECT  COUNT(*) AS TotalCitiesInRegion FROM city ci JOIN country c ON ci.CountryCode = c.Code WHERE c.Region = (SELECT c.Region                   FROM city ci                   JOIN country c ON ci.CountryCode = c.Code                   WHERE ci.Name = 'Kabul')
SELECT count ( T2.name )  FROM country AS T1 JOIN city AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.region  =  "Southern and Central Asia"
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT  COUNT(*) AS TotalCitiesInRegion FROM city ci JOIN country c ON ci.CountryCode = c.Code WHERE c.Region = (SELECT c.Region                   FROM city ci                   JOIN country c ON ci.CountryCode = c.Code                   WHERE ci.Name = 'Kabul')
medium gold: SELECT count ( T2.name )  FROM country AS T1 JOIN city AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.region  =  "Southern and Central Asia"

当前idx1
eval_err_num:195
____________________
SELECT  COUNT(DISTINCT D.Document_ID) FROM Documents D JOIN Templates T ON D.Template_ID = T.Template_ID WHERE T.Template_Type_Code = 'BK'
SELECT count ( * )  FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id   =   T2.template_id WHERE T1.template_type_code   =   "BK"
连接数据库../datasets/cosql_dataset/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT  COUNT(DISTINCT D.Document_ID) FROM Documents D JOIN Templates T ON D.Template_ID = T.Template_ID WHERE T.Template_Type_Code = 'BK'
medium gold: SELECT count ( * )  FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id   =   T2.template_id WHERE T1.template_type_code   =   "BK"

当前idx2
eval_err_num:196
____________________
SELECT  D.Document_Name FROM Documents D JOIN Templates T ON D.Template_ID = T.Template_ID WHERE T.Template_Type_Code = 'BK'
SELECT T2.document_name FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id   =   T2.template_id WHERE T1.template_type_code   =   "BK"
连接数据库../datasets/cosql_dataset/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT  D.Document_Name FROM Documents D JOIN Templates T ON D.Template_ID = T.Template_ID WHERE T.Template_Type_Code = 'BK'
medium gold: SELECT T2.document_name FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id   =   T2.template_id WHERE T1.template_type_code   =   "BK"

当前idx3
eval_err_num:197
____________________
SELECT  COUNT(DISTINCT D.Document_ID) FROM Documents D JOIN Templates T ON D.Template_ID = T.Template_ID WHERE T.Template_Type_Code != 'BK'
Select count ( * )  from documents where document_name not in 
 ( SELECT T2.document_name FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id   =   T2.template_id WHERE T1.template_type_code   =   "BK" ) 
连接数据库../datasets/cosql_dataset/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
extra pred: SELECT  COUNT(DISTINCT D.Document_ID) FROM Documents D JOIN Templates T ON D.Template_ID = T.Template_ID WHERE T.Template_Type_Code != 'BK'
extra gold: Select count ( * )  from documents where document_name not in 
 ( SELECT T2.document_name FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id   =   T2.template_id WHERE T1.template_type_code   =   "BK" ) 

当前idx1
eval_err_num:198
____________________
SELECT  DISTINCT cl.CountryCode FROM countrylanguage cl WHERE cl.Language <> 'English'
SELECT CountryCode FROM countrylanguage WHERE LANGUAGE  ! =   "English"
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
执行出错: unrecognized token: "!"
eval_exec:False
exact_score:0
easy pred: SELECT  DISTINCT cl.CountryCode FROM countrylanguage cl WHERE cl.Language <> 'English'
easy gold: SELECT CountryCode FROM countrylanguage WHERE LANGUAGE  ! =   "English"

当前idx2
eval_err_num:199
____________________
SELECT  DISTINCT cl.CountryCode FROM countrylanguage cl JOIN country c ON cl.CountryCode = c.Code WHERE cl.Language <> 'English' AND c.GovernmentForm <> 'Republic'
SELECT Code FROM country WHERE GovernmentForm ! =  "Republic" EXCEPT SELECT CountryCode FROM countrylanguage WHERE LANGUAGE   =   "English"
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
执行出错: unrecognized token: "!"
eval_exec:False
exact_score:0
hard pred: SELECT  DISTINCT cl.CountryCode FROM countrylanguage cl JOIN country c ON cl.CountryCode = c.Code WHERE cl.Language <> 'English' AND c.GovernmentForm <> 'Republic'
hard gold: SELECT Code FROM country WHERE GovernmentForm ! =  "Republic" EXCEPT SELECT CountryCode FROM countrylanguage WHERE LANGUAGE   =   "English"

当前idx3
eval_err_num:200
____________________
SELECT  cl.CountryCode, cl.Language FROM countrylanguage cl JOIN country c ON cl.CountryCode = c.Code WHERE cl.Language <> 'English' AND c.GovernmentForm <> 'Republic'
select countrycode, language from countrylanguage where countrycode in  ( SELECT Code FROM country WHERE GovernmentForm ! =  "Republic" EXCEPT SELECT CountryCode FROM countrylanguage WHERE LANGUAGE   =   "English" ) 
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
执行出错: unrecognized token: "!"
eval_exec:False
exact_score:0
extra pred: SELECT  cl.CountryCode, cl.Language FROM countrylanguage cl JOIN country c ON cl.CountryCode = c.Code WHERE cl.Language <> 'English' AND c.GovernmentForm <> 'Republic'
extra gold: select countrycode, language from countrylanguage where countrycode in  ( SELECT Code FROM country WHERE GovernmentForm ! =  "Republic" EXCEPT SELECT CountryCode FROM countrylanguage WHERE LANGUAGE   =   "English" ) 

当前idx4
eval_err_num:201
____________________
SELECT  DISTINCT cl.CountryCode FROM countrylanguage cl JOIN country c ON cl.CountryCode = c.Code WHERE cl.Language <> 'English' AND c.GovernmentForm <> 'Republic' AND c.Continent = 'North America'
select code from country where continent  =  "North America" and code in  ( SELECT Code FROM country WHERE GovernmentForm ! =  "Republic" EXCEPT SELECT CountryCode FROM countrylanguage WHERE LANGUAGE   =   "English" ) 
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
执行出错: unrecognized token: "!"
eval_exec:False
exact_score:0
extra pred: SELECT  DISTINCT cl.CountryCode FROM countrylanguage cl JOIN country c ON cl.CountryCode = c.Code WHERE cl.Language <> 'English' AND c.GovernmentForm <> 'Republic' AND c.Continent = 'North America'
extra gold: select code from country where continent  =  "North America" and code in  ( SELECT Code FROM country WHERE GovernmentForm ! =  "Republic" EXCEPT SELECT CountryCode FROM countrylanguage WHERE LANGUAGE   =   "English" ) 

当前idx1
____________________
SELECT  *  FROM Professionals WHERE state = 'Indiana'
SELECT * FROM Professionals WHERE state   =   'Indiana'
连接数据库../datasets/cosql_dataset/database/dog_kennels/dog_kennels.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT  cell_number FROM Professionals WHERE first_name = 'Taryn'
SELECT cell_number FROM Professionals WHERE first_name  =  "Taryn"
连接数据库../datasets/cosql_dataset/database/dog_kennels/dog_kennels.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx1
eval_err_num:202
____________________
SELECT  COUNT(*) AS Total_Templates FROM Templates
SELECT count ( * )  FROM Templates
连接数据库../datasets/cosql_dataset/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
easy pred: SELECT  COUNT(*) AS Total_Templates FROM Templates
easy gold: SELECT count ( * )  FROM Templates

当前idx2
____________________
SELECT  Date_Effective_From, Date_Effective_To FROM Templates WHERE Template_ID = 1
SELECT Date_Effective_From, Date_Effective_To FROM Templates where Template_ID = 1
连接数据库../datasets/cosql_dataset/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx3
____________________
SELECT  Template_Type_Code FROM Templates WHERE Template_ID = 4
SELECT Template_Type_Code  FROM Templates where Template_ID = 4
连接数据库../datasets/cosql_dataset/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx4
____________________
SELECT  Version_Number FROM Templates WHERE Template_ID = 0
SELECT Version_Number  FROM Templates where Template_ID = 0
连接数据库../datasets/cosql_dataset/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx1
____________________
SELECT DISTINCT Country
FROM singer
WHERE Age > 40
SELECT country FROM singer WHERE age  >  40
连接数据库../datasets/cosql_dataset/database/concert_singer/concert_singer.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:True
当前idx2
____________________
SELECT DISTINCT Country
FROM singer
WHERE Age < 30
SELECT DISTINCT ( country )  FROM singer WHERE age  < 30
连接数据库../datasets/cosql_dataset/database/concert_singer/concert_singer.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx3
____________________
SELECT DISTINCT Country
FROM singer
WHERE Age > 40 OR Age < 30
SELECT country FROM singer WHERE age  >  40 INTERSECT SELECT country FROM singer WHERE age  <  30
连接数据库../datasets/cosql_dataset/database/concert_singer/concert_singer.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
hard pred: SELECT DISTINCT Country
FROM singer
WHERE Age > 40 OR Age < 30
hard gold: SELECT country FROM singer WHERE age  >  40 INTERSECT SELECT country FROM singer WHERE age  <  30

当前idx1
eval_err_num:203
____________________
SELECT  Accelerate  FROM cars_data  WHERE Id IN      (SELECT Id       FROM model_list       WHERE Maker =           (SELECT Id            FROM car_makers            WHERE Maker = 'AMC'            AND FullName = 'HORNET SPORTABOUT(SW)'))
SELECT T1.Accelerate FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id   =   T2.MakeId WHERE T2.Make   =   'amc hornet sportabout  ( sw ) '
连接数据库../datasets/cosql_dataset/database/car_1/car_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT  Accelerate  FROM cars_data  WHERE Id IN      (SELECT Id       FROM model_list       WHERE Maker =           (SELECT Id            FROM car_makers            WHERE Maker = 'AMC'            AND FullName = 'HORNET SPORTABOUT(SW)'))
medium gold: SELECT T1.Accelerate FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id   =   T2.MakeId WHERE T2.Make   =   'amc hornet sportabout  ( sw ) '

当前idx2
____________________
SELECT  Model  FROM model_list  WHERE ModelId =      (SELECT MAX(ModelId)       FROM model_list)
SELECT T2.Model FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id   =   T2.MakeId order by T1.Year desc limit 1
连接数据库../datasets/cosql_dataset/database/car_1/car_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
hard pred: SELECT  Model  FROM model_list  WHERE ModelId =      (SELECT MAX(ModelId)       FROM model_list)
hard gold: SELECT T2.Model FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id   =   T2.MakeId order by T1.Year desc limit 1

当前idx1
____________________
SELECT  Template_ID FROM Templates
SELECT template_id FROM Templates
连接数据库../datasets/cosql_dataset/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT  Template_ID FROM Templates WHERE Template_ID NOT IN (SELECT Template_ID FROM Documents)
SELECT template_id FROM Templates EXCEPT SELECT template_id FROM Documents
连接数据库../datasets/cosql_dataset/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:0
hard pred: SELECT  Template_ID FROM Templates WHERE Template_ID NOT IN (SELECT Template_ID FROM Documents)
hard gold: SELECT template_id FROM Templates EXCEPT SELECT template_id FROM Documents

当前idx3
eval_err_num:204
____________________
SELECT  Template_ID FROM Templates WHERE Date_Effective_To >= CURRENT_TIMESTAMP
SELECT Date_effective_to FROM Templates WHERE template_id IN  (  SELECT template_id FROM Templates EXCEPT SELECT template_id FROM Documents ) 
连接数据库../datasets/cosql_dataset/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
hard pred: SELECT  Template_ID FROM Templates WHERE Date_Effective_To >= CURRENT_TIMESTAMP
hard gold: SELECT Date_effective_to FROM Templates WHERE template_id IN  (  SELECT template_id FROM Templates EXCEPT SELECT template_id FROM Documents ) 

当前idx4
eval_err_num:205
____________________
SELECT  COUNT(DISTINCT Template_ID) AS Used_Templates FROM Documents  SELECT COUNT(Template_ID) - (SELECT COUNT(DISTINCT Template_ID) FROM Documents) AS Unused_Templates FROM Templates
SELECT count ( * )  FROM Templates WHERE template_id in  ( SELECT template_id FROM Templates EXCEPT SELECT template_id FROM Documents ) 
连接数据库../datasets/cosql_dataset/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite
执行第一个查询
执行出错: near "SELECT": syntax error
eval_exec:False
exact_score:0
hard pred: SELECT  COUNT(DISTINCT Template_ID) AS Used_Templates FROM Documents  SELECT COUNT(Template_ID) - (SELECT COUNT(DISTINCT Template_ID) FROM Documents) AS Unused_Templates FROM Templates
hard gold: SELECT count ( * )  FROM Templates WHERE template_id in  ( SELECT template_id FROM Templates EXCEPT SELECT template_id FROM Documents ) 

当前idx>4
____________________
SELECT  Template_ID FROM Templates WHERE Template_ID NOT IN (SELECT Template_ID FROM Documents)
SELECT template_id FROM Templates EXCEPT SELECT template_id FROM Documents
连接数据库../datasets/cosql_dataset/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:0
hard pred: SELECT  Template_ID FROM Templates WHERE Template_ID NOT IN (SELECT Template_ID FROM Documents)
hard gold: SELECT template_id FROM Templates EXCEPT SELECT template_id FROM Documents

当前idx1
eval_err_num:206
____________________
SELECT  c.concert_Name, c.Theme, COUNT(sic.Singer_ID) AS Number_of_Singers FROM concert c LEFT JOIN singer_in_concert sic ON c.concert_ID = sic.concert_ID GROUP BY c.concert_Name, c.Theme
SELECT T2.concert_name , T2.theme , count ( * )  FROM singer_in_concert AS T1 JOIN concert AS T2 ON T1.concert_id  =  T2.concert_id GROUP BY T2.concert_id
连接数据库../datasets/cosql_dataset/database/concert_singer/concert_singer.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT  c.concert_Name, c.Theme, COUNT(sic.Singer_ID) AS Number_of_Singers FROM concert c LEFT JOIN singer_in_concert sic ON c.concert_ID = sic.concert_ID GROUP BY c.concert_Name, c.Theme
medium gold: SELECT T2.concert_name , T2.theme , count ( * )  FROM singer_in_concert AS T1 JOIN concert AS T2 ON T1.concert_id  =  T2.concert_id GROUP BY T2.concert_id

当前idx2
____________________
SELECT  Year FROM concert WHERE concert_Name = 'Super Bootcamp'
SELECT Year FROM concert WHERE concert_Name  =  "Super bootcamp"
连接数据库../datasets/cosql_dataset/database/concert_singer/concert_singer.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:True
当前idx3
____________________
SELECT  Stadium_ID FROM concert WHERE concert_Name = 'Super Bootcamp'
SELECT Stadium_ID FROM concert WHERE concert_Name  =  "Super bootcamp"
连接数据库../datasets/cosql_dataset/database/concert_singer/concert_singer.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:True
当前idx1
____________________
SELECT  SUM(Population)  FROM country  WHERE Continent = 'Asia'
SELECT sum ( Population )  FROM country where Continent  =  'Asia'
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT  Language  FROM countrylanguage  WHERE Percentage = 9.5
SELECT Language FROM countrylanguage where Percentage  =  9.5
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx3
____________________
SELECT  LifeExpectancy  FROM country  WHERE Name = 'Angola'
SELECT LifeExpectancy FROM country where LocalName  =  'Angola'
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:0
easy pred: SELECT  LifeExpectancy  FROM country  WHERE Name = 'Angola'
easy gold: SELECT LifeExpectancy FROM country where LocalName  =  'Angola'

当前idx4
____________________
SELECT  GNP  FROM country  WHERE Name = 'Aruba'
SELECT GNP FROM country where LocalName  =  'Angola'
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
easy pred: SELECT  GNP  FROM country  WHERE Name = 'Aruba'
easy gold: SELECT GNP FROM country where LocalName  =  'Angola'

当前idx>4
____________________
SELECT  GNPOld  FROM country  WHERE Name = 'Afghanistan'
SELECT GNPOld FROM country where Name  =  'Afghanistan'
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx1
eval_err_num:207
____________________
SELECT  Name FROM singer WHERE Song_release_year > (SELECT AVG(CAST(Song_release_year AS INTEGER)) FROM singer)
SELECT song_name FROM singer WHERE song_release_year  >   ( SELECT avg ( song_release_year )  FROM singer ) 
连接数据库../datasets/cosql_dataset/database/concert_singer/concert_singer.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
hard pred: SELECT  Name FROM singer WHERE Song_release_year > (SELECT AVG(CAST(Song_release_year AS INTEGER)) FROM singer)
hard gold: SELECT song_name FROM singer WHERE song_release_year  >   ( SELECT avg ( song_release_year )  FROM singer ) 

当前idx2
eval_err_num:208
____________________
SELECT  AVG(CAST(Song_release_year AS INTEGER)) AS Average_Song_Release_Year FROM singer
SELECT avg ( song_release_year )  FROM singer
连接数据库../datasets/cosql_dataset/database/concert_singer/concert_singer.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
easy pred: SELECT  AVG(CAST(Song_release_year AS INTEGER)) AS Average_Song_Release_Year FROM singer
easy gold: SELECT avg ( song_release_year )  FROM singer

当前idx3
eval_err_num:209
____________________
SELECT  Song_Name, Song_release_year FROM singer ORDER BY CAST(Song_release_year AS INTEGER) ASC
SELECT song_name from singer order by song_release_year
连接数据库../datasets/cosql_dataset/database/concert_singer/concert_singer.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
easy pred: SELECT  Song_Name, Song_release_year FROM singer ORDER BY CAST(Song_release_year AS INTEGER) ASC
easy gold: SELECT song_name from singer order by song_release_year

当前idx4
____________________
SELECT  Song_Name FROM singer WHERE Age > (SELECT AVG(Age) FROM singer)
SELECT song_name FROM singer WHERE age  >   ( SELECT avg ( age )  FROM singer ) 
连接数据库../datasets/cosql_dataset/database/concert_singer/concert_singer.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx1
eval_err_num:210
____________________
SELECT  c.Name AS Conductor, o.Orchestra AS Orchestra FROM conductor c JOIN orchestra o ON c.Conductor_ID = o.Conductor_ID ORDER BY c.Name
SELECT T2.Orchestra FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID   =   T2.Conductor_ID
连接数据库../datasets/cosql_dataset/database/orchestra/orchestra.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
easy pred: SELECT  c.Name AS Conductor, o.Orchestra AS Orchestra FROM conductor c JOIN orchestra o ON c.Conductor_ID = o.Conductor_ID ORDER BY c.Name
easy gold: SELECT T2.Orchestra FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID   =   T2.Conductor_ID

当前idx2
____________________
SELECT  Name FROM conductor
SELECT Name FROM conductor
连接数据库../datasets/cosql_dataset/database/orchestra/orchestra.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx3
____________________
SELECT  Age FROM conductor WHERE Name = 'Colin Davis'
SELECT Age FROM conductor WHERE Name  =  "Colin Davis"
连接数据库../datasets/cosql_dataset/database/orchestra/orchestra.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx1
eval_err_num:211
____________________
SELECT  COUNT(student_id) AS total_students FROM Students
SELECT count ( * )  FROM Students
连接数据库../datasets/cosql_dataset/database/student_transcripts_tracking/student_transcripts_tracking.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
easy pred: SELECT  COUNT(student_id) AS total_students FROM Students
easy gold: SELECT count ( * )  FROM Students

当前idx2
____________________
SELECT  first_name FROM Students WHERE student_id = 3
SELECT first_name FROM Students where student_id = 3
连接数据库../datasets/cosql_dataset/database/student_transcripts_tracking/student_transcripts_tracking.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx3
____________________
SELECT  email_address FROM Students WHERE student_id = 2
SELECT email_address FROM Students where student_id = 2
连接数据库../datasets/cosql_dataset/database/student_transcripts_tracking/student_transcripts_tracking.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx4
eval_err_num:212
____________________
SELECT  COUNT(student_enrolment_id) AS total_student_enrolments FROM Student_Enrolment
SELECT count ( * )  FROM Student_Enrolment
连接数据库../datasets/cosql_dataset/database/student_transcripts_tracking/student_transcripts_tracking.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
easy pred: SELECT  COUNT(student_enrolment_id) AS total_student_enrolments FROM Student_Enrolment
easy gold: SELECT count ( * )  FROM Student_Enrolment

当前idx1
eval_err_num:213
____________________
SELECT  DISTINCT Templates.Template_ID FROM Templates INNER JOIN Documents ON Templates.Template_ID = Documents.Template_ID
SELECT * FROM Templates AS T1 JOIN Documents AS T2 ON T1.Template_ID   =   T2.template_ID
连接数据库../datasets/cosql_dataset/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
easy pred: SELECT  DISTINCT Templates.Template_ID FROM Templates INNER JOIN Documents ON Templates.Template_ID = Documents.Template_ID
easy gold: SELECT * FROM Templates AS T1 JOIN Documents AS T2 ON T1.Template_ID   =   T2.template_ID

当前idx2
eval_err_num:214
____________________
SELECT  DISTINCT Ref_Template_Types.Template_Type_Description FROM Ref_Template_Types INNER JOIN Templates ON Ref_Template_Types.Template_Type_Code = Templates.Template_Type_Code INNER JOIN Documents ON Templates.Template_ID = Documents.Template_ID
SELECT T1.template_type_description FROM Ref_template_types AS T1 JOIN Templates AS T2 ON T1.template_type_code  =  T2.template_type_code JOIN Documents AS T3 ON T2.Template_ID  =  T3.template_ID
连接数据库../datasets/cosql_dataset/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT  DISTINCT Ref_Template_Types.Template_Type_Description FROM Ref_Template_Types INNER JOIN Templates ON Ref_Template_Types.Template_Type_Code = Templates.Template_Type_Code INNER JOIN Documents ON Templates.Template_ID = Documents.Template_ID
medium gold: SELECT T1.template_type_description FROM Ref_template_types AS T1 JOIN Templates AS T2 ON T1.template_type_code  =  T2.template_type_code JOIN Documents AS T3 ON T2.Template_ID  =  T3.template_ID

当前idx3
eval_err_num:215
____________________
SELECT  DISTINCT Ref_Template_Types.Template_Type_Description FROM Ref_Template_Types INNER JOIN Templates ON Ref_Template_Types.Template_Type_Code = Templates.Template_Type_Code INNER JOIN Documents ON Templates.Template_ID = Documents.Template_ID
SELECT DISTINCT T1.template_type_description FROM Ref_template_types AS T1 JOIN Templates AS T2 ON T1.template_type_code  =  T2.template_type_code JOIN Documents AS T3 ON T2.Template_ID  =  T3.template_ID
连接数据库../datasets/cosql_dataset/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT  DISTINCT Ref_Template_Types.Template_Type_Description FROM Ref_Template_Types INNER JOIN Templates ON Ref_Template_Types.Template_Type_Code = Templates.Template_Type_Code INNER JOIN Documents ON Templates.Template_ID = Documents.Template_ID
medium gold: SELECT DISTINCT T1.template_type_description FROM Ref_template_types AS T1 JOIN Templates AS T2 ON T1.template_type_code  =  T2.template_type_code JOIN Documents AS T3 ON T2.Template_ID  =  T3.template_ID

当前idx1
eval_err_num:216
____________________
SELECT  c.Name AS Country, c.SurfaceArea AS Area, cl.Percentage AS Population FROM country c JOIN countrylanguage cl ON c.Code = cl.CountryCode WHERE c.SurfaceArea = (SELECT MAX(SurfaceArea) FROM country)
SELECT Population FROM country ORDER BY SurfaceArea DESC LIMIT 1
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT  c.Name AS Country, c.SurfaceArea AS Area, cl.Percentage AS Population FROM country c JOIN countrylanguage cl ON c.Code = cl.CountryCode WHERE c.SurfaceArea = (SELECT MAX(SurfaceArea) FROM country)
medium gold: SELECT Population FROM country ORDER BY SurfaceArea DESC LIMIT 1

当前idx2
____________________
SELECT  HeadOfState FROM country WHERE Name = 'Russian Federation'
SELECT HeadOfState FROM country ORDER BY SurfaceArea DESC LIMIT 1
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:0
medium pred: SELECT  HeadOfState FROM country WHERE Name = 'Russian Federation'
medium gold: SELECT HeadOfState FROM country ORDER BY SurfaceArea DESC LIMIT 1

当前idx3
____________________
SELECT  Continent FROM country WHERE Name = 'Russian Federation'
SELECT Continent FROM country ORDER BY SurfaceArea DESC LIMIT 1
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:0
medium pred: SELECT  Continent FROM country WHERE Name = 'Russian Federation'
medium gold: SELECT Continent FROM country ORDER BY SurfaceArea DESC LIMIT 1

当前idx1
eval_err_num:217
____________________
SELECT  p.Name FROM poker_player pp JOIN people p ON pp.People_ID = p.People_ID WHERE pp.Earnings > 300000
SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID   =   T2.People_ID WHERE T2.Earnings  >  300000
连接数据库../datasets/cosql_dataset/database/poker_player/poker_player.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT  p.Name FROM poker_player pp JOIN people p ON pp.People_ID = p.People_ID WHERE pp.Earnings > 300000
medium gold: SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID   =   T2.People_ID WHERE T2.Earnings  >  300000

当前idx2
eval_err_num:218
____________________
SELECT  COUNT(*) AS Total_Poker_Players FROM poker_player
SELECT count ( Poker_Player_ID )  from poker_player
连接数据库../datasets/cosql_dataset/database/poker_player/poker_player.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
easy pred: SELECT  COUNT(*) AS Total_Poker_Players FROM poker_player
easy gold: SELECT count ( Poker_Player_ID )  from poker_player

当前idx1
____________________
SELECT  COUNT(*)  FROM Students  JOIN Addresses ON Students.current_address_id = Addresses.address_id  WHERE Addresses.state_province_county = 'North Carolina'
SELECT count ( * )  FROM Students AS T1 JOIN Addresses AS T2 ON T1.current_address_id   =   T2.address_id WHERE T2.state_province_county   =   'NorthCarolina'
连接数据库../datasets/cosql_dataset/database/student_transcripts_tracking/student_transcripts_tracking.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:True
当前idx2
____________________
SELECT  first_name, last_name FROM Students  JOIN Addresses ON Students.current_address_id = Addresses.address_id  WHERE Addresses.state_province_county = 'North Carolina'
SELECT T1.first_name,T1.last_name FROM Students AS T1 JOIN Addresses AS T2 ON T1.current_address_id   =   T2.address_id WHERE T2.state_province_county   =   'NorthCarolina'
连接数据库../datasets/cosql_dataset/database/student_transcripts_tracking/student_transcripts_tracking.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:True
当前idx3
____________________
SELECT  first_name, last_name FROM Students  JOIN Addresses ON Students.current_address_id = Addresses.address_id  WHERE Addresses.state_province_county = 'North Carolina'  AND Students.student_id NOT IN (SELECT student_id FROM Student_Enrolment)
SELECT T1.first_name, T1.last_name FROM Students AS T1 JOIN Addresses AS T2 ON T1.current_address_id   =   T2.address_id WHERE T2.state_province_county   =   'NorthCarolina' EXCEPT SELECT T3.first_name, T3.last_name FROM Students AS T3 JOIN Student_Enrolment AS T4 ON T3.student_id   =   T4.student_id
连接数据库../datasets/cosql_dataset/database/student_transcripts_tracking/student_transcripts_tracking.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
extra pred: SELECT  first_name, last_name FROM Students  JOIN Addresses ON Students.current_address_id = Addresses.address_id  WHERE Addresses.state_province_county = 'North Carolina'  AND Students.student_id NOT IN (SELECT student_id FROM Student_Enrolment)
extra gold: SELECT T1.first_name, T1.last_name FROM Students AS T1 JOIN Addresses AS T2 ON T1.current_address_id   =   T2.address_id WHERE T2.state_province_county   =   'NorthCarolina' EXCEPT SELECT T3.first_name, T3.last_name FROM Students AS T3 JOIN Student_Enrolment AS T4 ON T3.student_id   =   T4.student_id

当前idx1
____________________
SELECT  area_code FROM AREA_CODE_STATE
select area_code from AREA_CODE_STATE
连接数据库../datasets/cosql_dataset/database/voter_1/voter_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
eval_err_num:219
____________________
SELECT  DISTINCT acs.area_code FROM AREA_CODE_STATE acs JOIN VOTES v ON acs.state = v.state JOIN CONTESTANTS c ON v.contestant_number = c.contestant_number WHERE c.contestant_name = 'Tabatha Gehling'
SELECT T3.area_code FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number JOIN area_code_state AS T3 ON T2.state  =  T3.state WHERE T1.contestant_name  =  'Tabatha Gehling'
连接数据库../datasets/cosql_dataset/database/voter_1/voter_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
hard pred: SELECT  DISTINCT acs.area_code FROM AREA_CODE_STATE acs JOIN VOTES v ON acs.state = v.state JOIN CONTESTANTS c ON v.contestant_number = c.contestant_number WHERE c.contestant_name = 'Tabatha Gehling'
hard gold: SELECT T3.area_code FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number JOIN area_code_state AS T3 ON T2.state  =  T3.state WHERE T1.contestant_name  =  'Tabatha Gehling'

当前idx3
eval_err_num:220
____________________
SELECT  DISTINCT acs.area_code FROM AREA_CODE_STATE acs JOIN VOTES v ON acs.state = v.state JOIN CONTESTANTS c ON v.contestant_number = c.contestant_number WHERE c.contestant_name = 'Kelly Clauss'
SELECT T3.area_code FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number JOIN area_code_state AS T3 ON T2.state  =  T3.state WHERE T1.contestant_name  =  'Kelly Clauss'
连接数据库../datasets/cosql_dataset/database/voter_1/voter_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
hard pred: SELECT  DISTINCT acs.area_code FROM AREA_CODE_STATE acs JOIN VOTES v ON acs.state = v.state JOIN CONTESTANTS c ON v.contestant_number = c.contestant_number WHERE c.contestant_name = 'Kelly Clauss'
hard gold: SELECT T3.area_code FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number JOIN area_code_state AS T3 ON T2.state  =  T3.state WHERE T1.contestant_name  =  'Kelly Clauss'

当前idx4
eval_err_num:221
____________________
SELECT  DISTINCT acs.area_code FROM AREA_CODE_STATE acs JOIN VOTES v ON acs.state = v.state JOIN CONTESTANTS c ON v.contestant_number = c.contestant_number WHERE c.contestant_name = 'Kelly Clauss' OR c.contestant_name = 'Tabatha Gehling' GROUP BY acs.area_code HAVING COUNT(DISTINCT c.contestant_number) = 2
SELECT T3.area_code FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number JOIN area_code_state AS T3 ON T2.state  =  T3.state WHERE T1.contestant_name  =  'Tabatha Gehling' INTERSECT SELECT T3.area_code FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number JOIN area_code_state AS T3 ON T2.state  =  T3.state WHERE T1.contestant_name  =  'Kelly Clauss'
连接数据库../datasets/cosql_dataset/database/voter_1/voter_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
extra pred: SELECT  DISTINCT acs.area_code FROM AREA_CODE_STATE acs JOIN VOTES v ON acs.state = v.state JOIN CONTESTANTS c ON v.contestant_number = c.contestant_number WHERE c.contestant_name = 'Kelly Clauss' OR c.contestant_name = 'Tabatha Gehling' GROUP BY acs.area_code HAVING COUNT(DISTINCT c.contestant_number) = 2
extra gold: SELECT T3.area_code FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number JOIN area_code_state AS T3 ON T2.state  =  T3.state WHERE T1.contestant_name  =  'Tabatha Gehling' INTERSECT SELECT T3.area_code FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number JOIN area_code_state AS T3 ON T2.state  =  T3.state WHERE T1.contestant_name  =  'Kelly Clauss'

当前idx1
eval_err_num:222
____________________
SELECT  COUNT(*) AS total_shops FROM shop
SELECT count ( * )  FROM shop
连接数据库../datasets/cosql_dataset/database/employee_hire_evaluation/employee_hire_evaluation.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
easy pred: SELECT  COUNT(*) AS total_shops FROM shop
easy gold: SELECT count ( * )  FROM shop

当前idx2
____________________
SELECT  Name FROM shop
SELECT name FROM shop
连接数据库../datasets/cosql_dataset/database/employee_hire_evaluation/employee_hire_evaluation.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx3
____________________
SELECT  Location FROM shop WHERE Name = 'FC Haka'
SELECT location FROM shop where name  =  "FC Haka"
连接数据库../datasets/cosql_dataset/database/employee_hire_evaluation/employee_hire_evaluation.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx4
____________________
SELECT  Number_products FROM shop WHERE Name = 'HJK'
SELECT Number_products FROM shop where name  =  "HJK"
连接数据库../datasets/cosql_dataset/database/employee_hire_evaluation/employee_hire_evaluation.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx1
____________________
SELECT  department_id, department_name FROM Departments
select department_id,department_name from Departments
连接数据库../datasets/cosql_dataset/database/student_transcripts_tracking/student_transcripts_tracking.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT  department_id, degree_summary_name FROM Degree_Programs
select T2.degree_summary_name from Departments as T1 JOIN Degree_Programs as T2 on T1.department_id  =  T2.department_id where T1.department_name  =  'statistics'
连接数据库../datasets/cosql_dataset/database/student_transcripts_tracking/student_transcripts_tracking.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT  department_id, degree_summary_name FROM Degree_Programs
medium gold: select T2.degree_summary_name from Departments as T1 JOIN Degree_Programs as T2 on T1.department_id  =  T2.department_id where T1.department_name  =  'statistics'

当前idx1
____________________
SELECT  professional_id FROM Professionals
SELECT professional_id  FROM Professionals
连接数据库../datasets/cosql_dataset/database/dog_kennels/dog_kennels.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT  professional_id, role_code FROM Professionals
SELECT professional_id, role_code  FROM Professionals
连接数据库../datasets/cosql_dataset/database/dog_kennels/dog_kennels.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx3
____________________
SELECT  email_address FROM Professionals WHERE professional_id NOT IN (SELECT professional_id FROM Treatments)
SELECT professional_id , role_code , email_address FROM Professionals EXCEPT SELECT T1.professional_id , T1.role_code , T1.email_address FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id
连接数据库../datasets/cosql_dataset/database/dog_kennels/dog_kennels.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
extra pred: SELECT  email_address FROM Professionals WHERE professional_id NOT IN (SELECT professional_id FROM Treatments)
extra gold: SELECT professional_id , role_code , email_address FROM Professionals EXCEPT SELECT T1.professional_id , T1.role_code , T1.email_address FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id

当前idx1
____________________
SELECT  Id FROM car_makers WHERE Country = 'USA'
SELECT Id FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id   =   T2.Maker WHERE T1.FullName   =   'American Motor Company'
连接数据库../datasets/cosql_dataset/database/car_1/car_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT  Id FROM car_makers WHERE Country = 'USA'
medium gold: SELECT Id FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id   =   T2.Maker WHERE T1.FullName   =   'American Motor Company'

当前idx2
____________________
SELECT  ModelId FROM model_list WHERE Maker = (SELECT Id FROM car_makers WHERE Maker = 'amc')
SELECT ModelId FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id   =   T2.Maker WHERE T1.Maker   =   'amc'
连接数据库../datasets/cosql_dataset/database/car_1/car_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:0
medium pred: SELECT  ModelId FROM model_list WHERE Maker = (SELECT Id FROM car_makers WHERE Maker = 'amc')
medium gold: SELECT ModelId FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id   =   T2.Maker WHERE T1.Maker   =   'amc'

当前idx3
____________________
SELECT  Maker FROM car_makers WHERE Id = 2
SELECT DISTINCT ( T1.Maker )  FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id   =   T2.Maker WHERE T1.Id  =  2
连接数据库../datasets/cosql_dataset/database/car_1/car_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:False
medium pred: SELECT  Maker FROM car_makers WHERE Id = 2
medium gold: SELECT DISTINCT ( T1.Maker )  FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id   =   T2.Maker WHERE T1.Id  =  2

当前idx4
____________________
SELECT  COUNT(*) FROM model_list WHERE Maker = (SELECT Id FROM car_makers WHERE FullName = 'American Motor Company')
SELECT count ( * )  FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id   =   T2.Maker WHERE T1.FullName   =   'American Motor Company'
连接数据库../datasets/cosql_dataset/database/car_1/car_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:0
  0%|          | 0/278 [00:00<?, ?it/s]  3%|▎         | 9/278 [00:00<00:03, 77.89it/s]  7%|▋         | 19/278 [00:00<00:03, 84.83it/s] 10%|█         | 29/278 [00:00<00:02, 89.74it/s] 14%|█▍        | 39/278 [00:00<00:02, 79.79it/s] 18%|█▊        | 49/278 [00:00<00:02, 83.84it/s] 22%|██▏       | 60/278 [00:00<00:02, 88.70it/s] 26%|██▌       | 72/278 [00:00<00:02, 89.68it/s] 29%|██▉       | 82/278 [00:00<00:02, 80.39it/s] 33%|███▎      | 91/278 [00:01<00:02, 80.89it/s] 36%|███▌      | 100/278 [00:01<00:02, 81.29it/s] 39%|███▉      | 109/278 [00:01<00:02, 77.89it/s] 42%|████▏     | 117/278 [00:01<00:02, 63.53it/s] 45%|████▍     | 125/278 [00:01<00:02, 66.89it/s] 48%|████▊     | 133/278 [00:01<00:02, 69.49it/s] 51%|█████     | 141/278 [00:01<00:01, 70.49it/s] 54%|█████▍    | 151/278 [00:01<00:01, 76.66it/s] 58%|█████▊    | 161/278 [00:02<00:01, 80.62it/s] 62%|██████medium pred: SELECT  COUNT(*) FROM model_list WHERE Maker = (SELECT Id FROM car_makers WHERE FullName = 'American Motor Company')
medium gold: SELECT count ( * )  FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id   =   T2.Maker WHERE T1.FullName   =   'American Motor Company'

当前idx1
____________________
SELECT  teacher.Name, course.Course FROM teacher JOIN course_arrange ON teacher.Teacher_ID = course_arrange.Teacher_ID JOIN course ON course_arrange.Course_ID = course.Course_ID
SELECT T3.Name ,  T2.Course FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID   =   T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID   =   T3.Teacher_ID
连接数据库../datasets/cosql_dataset/database/course_teach/course_teach.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT  teacher.Name, course.Course FROM teacher JOIN course_arrange ON teacher.Teacher_ID = course_arrange.Teacher_ID JOIN course ON course_arrange.Course_ID = course.Course_ID ORDER BY teacher.Name ASC
SELECT T3.Name ,  T2.Course FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID   =   T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID   =   T3.Teacher_ID ORDER BY T3.Name
连接数据库../datasets/cosql_dataset/database/course_teach/course_teach.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx3
____________________
SELECT  teacher.Teacher_ID, teacher.Name, course.Course FROM teacher JOIN course_arrange ON teacher.Teacher_ID = course_arrange.Teacher_ID JOIN course ON course_arrange.Course_ID = course.Course_ID ORDER BY teacher.Name ASC
SELECT T3.Name ,  T2.Course, T1.teacher_ID FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID   =   T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID   =   T3.Teacher_ID ORDER BY T3.Name
连接数据库../datasets/cosql_dataset/database/course_teach/course_teach.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx1
____________________
SELECT  Name FROM country
SELECT Name FROM country
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT  Name, GovernmentForm FROM country
SELECT GovernmentForm FROM country
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
easy pred: SELECT  Name, GovernmentForm FROM country
easy gold: SELECT GovernmentForm FROM country

当前idx3
____________________
SELECT  Name, SurfaceArea FROM country
SELECT SurfaceArea FROM country
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
easy pred: SELECT  Name, SurfaceArea FROM country
easy gold: SELECT SurfaceArea FROM country

当前idx1
____________________
SELECT  Language FROM TV_Channel WHERE series_name = 'Sky Music'
SELECT Language FROM TV_Channel where series_name = 'Sky Music'
连接数据库../datasets/cosql_dataset/database/tvshow/tvshow.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT  Package_Option FROM TV_Channel
SELECT distinct Package_Option FROM TV_Channel
连接数据库../datasets/cosql_dataset/database/tvshow/tvshow.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:True
当前idx3
____________________
SELECT  Content FROM TV_Channel
SELECT distinct  Content FROM TV_Channel
连接数据库../datasets/cosql_dataset/database/tvshow/tvshow.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:True
当前idx1
____________________
SELECT  Orchestra, Major_Record_Format FROM orchestra
SELECT orchestra, Major_Record_Format  FROM orchestra
连接数据库../datasets/cosql_dataset/database/orchestra/orchestra.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT  Orchestra FROM orchestra ORDER BY Orchestra ASC
SELECT orchestra FROM orchestra order by orchestra
连接数据库../datasets/cosql_dataset/database/orchestra/orchestra.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx3
eval_err_num:223
____________________
SELECT  Major_Record_Format, COUNT(*) AS Count FROM orchestra GROUP BY Major_Record_Format ORDER BY Count ASC
SELECT Major_Record_Format FROM orchestra GROUP BY Major_Record_Format ORDER BY COUNT ( * )  ASC
连接数据库../datasets/cosql_dataset/database/orchestra/orchestra.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT  Major_Record_Format, COUNT(*) AS Count FROM orchestra GROUP BY Major_Record_Format ORDER BY Count ASC
medium gold: SELECT Major_Record_Format FROM orchestra GROUP BY Major_Record_Format ORDER BY COUNT ( * )  ASC

当前idx1
eval_err_num:224
____________________
SELECT  COUNT(DISTINCT Museum_ID) AS Num_of_Museums FROM museum
SELECT count ( Museum_ID  )  FROM museum
连接数据库../datasets/cosql_dataset/database/museum_visit/museum_visit.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
easy pred: SELECT  COUNT(DISTINCT Museum_ID) AS Num_of_Museums FROM museum
easy gold: SELECT count ( Museum_ID  )  FROM museum

当前idx2
____________________
SELECT  Num_of_Staff FROM museum WHERE Museum_ID = 3
SELECT Num_of_Staff FROM museum where museum.Museum_ID  =  3
连接数据库../datasets/cosql_dataset/database/museum_visit/museum_visit.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx3
____________________
SELECT  Open_Year FROM museum WHERE Name = 'Capital Plaza Museum'
SELECT Open_year FROM museum where Name = 'Capital Plaza Museum'
连接数据库../datasets/cosql_dataset/database/museum_visit/museum_visit.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx1
eval_err_num:225
____________________
SELECT  DISTINCT v.Name FROM visitor v JOIN visit vi ON v.ID = vi.visitor_ID GROUP BY vi.visitor_ID HAVING COUNT(DISTINCT vi.Museum_ID) > 1
SELECT  t1.name FROM visitor AS t1 JOIN visit AS t2 ON t1.id   =   t2.visitor_id GROUP BY t1.id HAVING count ( * )   >  1
连接数据库../datasets/cosql_dataset/database/museum_visit/museum_visit.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT  DISTINCT v.Name FROM visitor v JOIN visit vi ON v.ID = vi.visitor_ID GROUP BY vi.visitor_ID HAVING COUNT(DISTINCT vi.Museum_ID) > 1
medium gold: SELECT  t1.name FROM visitor AS t1 JOIN visit AS t2 ON t1.id   =   t2.visitor_id GROUP BY t1.id HAVING count ( * )   >  1

当前idx2
eval_err_num:226
____________________
SELECT  v.ID, v.Age, v.Name FROM visitor v JOIN visit vi ON v.ID = vi.visitor_ID GROUP BY vi.visitor_ID HAVING COUNT(DISTINCT vi.Museum_ID) > 1
SELECT  t1.name, t1.id, t1.age FROM visitor AS t1 JOIN visit AS t2 ON t1.id   =   t2.visitor_id GROUP BY t1.id HAVING count ( * )   >  1
连接数据库../datasets/cosql_dataset/database/museum_visit/museum_visit.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT  v.ID, v.Age, v.Name FROM visitor v JOIN visit vi ON v.ID = vi.visitor_ID GROUP BY vi.visitor_ID HAVING COUNT(DISTINCT vi.Museum_ID) > 1
medium gold: SELECT  t1.name, t1.id, t1.age FROM visitor AS t1 JOIN visit AS t2 ON t1.id   =   t2.visitor_id GROUP BY t1.id HAVING count ( * )   >  1

当前idx3
eval_err_num:227
____________________
SELECT  v.Name, v.Level_of_membership FROM visitor v WHERE v.Age > 20
SELECT  name, Level_of_membership FROM visitor where age > 20
连接数据库../datasets/cosql_dataset/database/museum_visit/museum_visit.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT  v.Name, v.Level_of_membership FROM visitor v WHERE v.Age > 20
medium gold: SELECT  name, Level_of_membership FROM visitor where age > 20

当前idx4
eval_err_num:228
____________________
SELECT  v.Name, v.Age FROM visitor v JOIN visit vi ON v.ID = vi.visitor_ID WHERE vi.Total_spent > 100
SELECT  t1.name , t1.age FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id where t2.total_spent > 100
连接数据库../datasets/cosql_dataset/database/museum_visit/museum_visit.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT  v.Name, v.Age FROM visitor v JOIN visit vi ON v.ID = vi.visitor_ID WHERE vi.Total_spent > 100
medium gold: SELECT  t1.name , t1.age FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id where t2.total_spent > 100

当前idx1
eval_err_num:229
____________________
SELECT  COUNT(DISTINCT GovernmentForm) AS NumberOfGovernmentForms FROM country
SELECT count ( GovernmentForm )  FROM country
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
easy pred: SELECT  COUNT(DISTINCT GovernmentForm) AS NumberOfGovernmentForms FROM country
easy gold: SELECT count ( GovernmentForm )  FROM country

当前idx2
eval_err_num:230
____________________
SELECT  COUNT(DISTINCT GovernmentForm) AS NumberOfGovernmentForms FROM country WHERE LifeExpectancy > 72
SELECT GovernmentForm FROM country GROUP BY GovernmentForm HAVING avg ( LifeExpectancy )   >  72
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
easy pred: SELECT  COUNT(DISTINCT GovernmentForm) AS NumberOfGovernmentForms FROM country WHERE LifeExpectancy > 72
easy gold: SELECT GovernmentForm FROM country GROUP BY GovernmentForm HAVING avg ( LifeExpectancy )   >  72

当前idx3
eval_err_num:231
____________________
SELECT  GovernmentForm, SUM(Population) AS TotalPopulation FROM country GROUP BY GovernmentForm
SELECT sum ( Population )  ,  GovernmentForm FROM country GROUP BY GovernmentForm HAVING avg ( LifeExpectancy )   >  72
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT  GovernmentForm, SUM(Population) AS TotalPopulation FROM country GROUP BY GovernmentForm
medium gold: SELECT sum ( Population )  ,  GovernmentForm FROM country GROUP BY GovernmentForm HAVING avg ( LifeExpectancy )   >  72

当前idx4
eval_err_num:232
____________________
SELECT  GovernmentForm, AVG(LifeExpectancy) AS AverageLifeExpectancy FROM country GROUP BY GovernmentForm
SELECT avg ( LifeExpectancy )  FROM country GROUP BY GovernmentForm HAVING avg ( LifeExpectancy )   >  72
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
easy pred: SELECT  GovernmentForm, AVG(LifeExpectancy) AS AverageLifeExpectancy FROM country GROUP BY GovernmentForm
easy gold: SELECT avg ( LifeExpectancy )  FROM country GROUP BY GovernmentForm HAVING avg ( LifeExpectancy )   >  72

当前idx>4
eval_err_num:233
____________________
SELECT  GovernmentForm, SUM(Population) AS TotalPopulation FROM country WHERE LifeExpectancy > 72 GROUP BY GovernmentForm
SELECT sum ( Population )  ,  GovernmentForm FROM country GROUP BY GovernmentForm HAVING avg ( LifeExpectancy )   >  72
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT  GovernmentForm, SUM(Population) AS TotalPopulation FROM country WHERE LifeExpectancy > 72 GROUP BY GovernmentForm
medium gold: SELECT sum ( Population )  ,  GovernmentForm FROM country GROUP BY GovernmentForm HAVING avg ( LifeExpectancy )   >  72

当前idx1
____________________
SELECT  Level_of_membership FROM visitor WHERE ID = 1
SELECT Level_of_membership FROM visitor WHERE ID  =  1
连接数据库../datasets/cosql_dataset/database/museum_visit/museum_visit.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT  Name FROM visitor WHERE ID = 1
SELECT Name FROM visitor WHERE ID  =  1
连接数据库../datasets/cosql_dataset/database/museum_visit/museum_visit.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx3
____________________
SELECT  Age FROM visitor WHERE ID = 1
SELECT Age FROM visitor WHERE ID  =  1
连接数据库../datasets/cosql_dataset/database/museum_visit/museum_visit.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx1
eval_err_num:234
____________________
SELECT  Airline, COUNT(*) AS NumFlights FROM flights GROUP BY Airline ORDER BY NumFlights DESC LIMIT 1
SELECT T1.airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid   =   T2.Airline GROUP BY T1.Airline ORDER BY count ( * )  desc LIMIT 1
连接数据库../datasets/cosql_dataset/database/flight_2/flight_2.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
extra pred: SELECT  Airline, COUNT(*) AS NumFlights FROM flights GROUP BY Airline ORDER BY NumFlights DESC LIMIT 1
extra gold: SELECT T1.airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid   =   T2.Airline GROUP BY T1.Airline ORDER BY count ( * )  desc LIMIT 1

当前idx2
eval_err_num:235
____________________
SELECT  Airline, COUNT(*) AS NumFlights FROM flights GROUP BY Airline ORDER BY NumFlights LIMIT 1
SELECT T1.airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid   =   T2.Airline GROUP BY T1.Airline ORDER BY count ( * )  asc LIMIT 1
连接数据库../datasets/cosql_dataset/database/flight_2/flight_2.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
extra pred: SELECT  Airline, COUNT(*) AS NumFlights FROM flights GROUP BY Airline ORDER BY NumFlights LIMIT 1
extra gold: SELECT T1.airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid   =   T2.Airline GROUP BY T1.Airline ORDER BY count ( * )  asc LIMIT 1

当前idx3
____________________
SELECT  Abbreviation FROM airlines WHERE Airline = 'AirTran Airways'
SELECT abbreviation from airlines where airline =  "AirTran Airways"
连接数据库../datasets/cosql_dataset/database/flight_2/flight_2.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx4
____________________
SELECT  Country FROM airlines WHERE Airline = 'AirTran Airways'
SELECT country from airlines where airline =  "AirTran Airways"
连接数据库../datasets/cosql_dataset/database/flight_2/flight_2.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx1
____________________
SELECT  id, name FROM battle
SELECT T1.id ,  T1.name FROM battle AS T1
连接数据库../datasets/cosql_dataset/database/battle_death/battle_death.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
eval_err_num:236
____________________
SELECT  b.id, b.name FROM battle b JOIN death d ON b.id = d.caused_by_ship_id GROUP BY b.id, b.name HAVING SUM(d.killed) > 10
SELECT T1.id ,  T1.name FROM battle AS T1 JOIN ship AS T2 ON T1.id   =   T2.lost_in_battle JOIN death AS T3 ON T2.id   =   T3.caused_by_ship_id GROUP BY T1.id HAVING sum ( T3.killed )   >  10
连接数据库../datasets/cosql_dataset/database/battle_death/battle_death.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
hard pred: SELECT  b.id, b.name FROM battle b JOIN death d ON b.id = d.caused_by_ship_id GROUP BY b.id, b.name HAVING SUM(d.killed) > 10
hard gold: SELECT T1.id ,  T1.name FROM battle AS T1 JOIN ship AS T2 ON T1.id   =   T2.lost_in_battle JOIN death AS T3 ON T2.id   =   T3.caused_by_ship_id GROUP BY T1.id HAVING sum ( T3.killed )   >  10

当前idx3
eval_err_num:237
____________________
SELECT  b.id, b.name, b.date FROM battle b JOIN death d ON b.id = d.caused_by_ship_id GROUP BY b.id, b.name, b.date HAVING SUM(d.killed) > 10
SELECT T1.id ,  T1.name ,T1.date FROM battle AS T1 JOIN ship AS T2 ON T1.id   =   T2.lost_in_battle JOIN death AS T3 ON T2.id   =   T3.caused_by_ship_id GROUP BY T1.id HAVING sum ( T3.killed )   >  10
连接数据库../datasets/cosql_dataset/database/battle_death/battle_death.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
hard pred: SELECT  b.id, b.name, b.date FROM battle b JOIN death d ON b.id = d.caused_by_ship_id GROUP BY b.id, b.name, b.date HAVING SUM(d.killed) > 10
hard gold: SELECT T1.id ,  T1.name ,T1.date FROM battle AS T1 JOIN ship AS T2 ON T1.id   =   T2.lost_in_battle JOIN death AS T3 ON T2.id   =   T3.caused_by_ship_id GROUP BY T1.id HAVING sum ( T3.killed )   >  10

当前idx1
eval_err_num:238
____________________
SELECT  AVG(pet_age) AS average_age FROM Pets WHERE PetType = 'cat'
SELECT avg ( pet_age )  FROM pets WHERE PetType  =  'cat'
连接数据库../datasets/cosql_dataset/database/pets_1/pets_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
easy pred: SELECT  AVG(pet_age) AS average_age FROM Pets WHERE PetType = 'cat'
easy gold: SELECT avg ( pet_age )  FROM pets WHERE PetType  =  'cat'

当前idx2
eval_err_num:239
____________________
SELECT  AVG(pet_age) AS average_age FROM Pets WHERE PetType = 'dog'
SELECT avg ( pet_age )  FROM pets WHERE PetType  =  'dog'
连接数据库../datasets/cosql_dataset/database/pets_1/pets_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
easy pred: SELECT  AVG(pet_age) AS average_age FROM Pets WHERE PetType = 'dog'
easy gold: SELECT avg ( pet_age )  FROM pets WHERE PetType  =  'dog'

当前idx3
eval_err_num:240
____________________
SELECT  MAX(pet_age) AS max_age FROM Pets WHERE PetType = 'dog'
SELECT max ( pet_age )  FROM pets WHERE PetType  =  'dog'
连接数据库../datasets/cosql_dataset/database/pets_1/pets_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
easy pred: SELECT  MAX(pet_age) AS max_age FROM Pets WHERE PetType = 'dog'
easy gold: SELECT max ( pet_age )  FROM pets WHERE PetType  =  'dog'

当前idx4
eval_err_num:241
____________________
SELECT  PetType, MAX(pet_age) AS max_age FROM Pets WHERE PetType IN ('cat', 'dog') GROUP BY PetType
SELECT max ( pet_age )  ,  pettype FROM pets GROUP BY pettype
连接数据库../datasets/cosql_dataset/database/pets_1/pets_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT  PetType, MAX(pet_age) AS max_age FROM Pets WHERE PetType IN ('cat', 'dog') GROUP BY PetType
medium gold: SELECT max ( pet_age )  ,  pettype FROM pets GROUP BY pettype

当前idx>4
eval_err_num:242
____________________
SELECT  MAX(pet_age) AS max_age FROM Pets WHERE PetType = 'cat'
SELECT max ( pet_age )  FROM pets WHERE PetType  =  'cat'
连接数据库../datasets/cosql_dataset/database/pets_1/pets_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
easy pred: SELECT  MAX(pet_age) AS max_age FROM Pets WHERE PetType = 'cat'
easy gold: SELECT max ( pet_age )  FROM pets WHERE PetType  =  'cat'

当前idx1
____________________
SELECT  FullName FROM car_makers WHERE Maker = 'amc'
select fullname from car_makers where maker  =  "amc"
连接数据库../datasets/cosql_dataset/database/car_1/car_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT  DISTINCT model_list.Model FROM model_list JOIN car_makers ON model_list.Maker = car_makers.Id WHERE car_makers.Country = 'Germany'
SELECT T3.model FROM Countries AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId   =   T2.Country JOIN MODEL_LIST AS T3 ON T2.Id   =   T3.Maker WHERE T1.countryname  =  "germany"
连接数据库../datasets/cosql_dataset/database/car_1/car_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
hard pred: SELECT  DISTINCT model_list.Model FROM model_list JOIN car_makers ON model_list.Maker = car_makers.Id WHERE car_makers.Country = 'Germany'
hard gold: SELECT T3.model FROM Countries AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId   =   T2.Country JOIN MODEL_LIST AS T3 ON T2.Id   =   T3.Maker WHERE T1.countryname  =  "germany"

当前idx3
____________________
SELECT  ModelId FROM model_list JOIN car_makers ON model_list.Maker = car_makers.Id WHERE car_makers.Maker = 'BMW'
SELECT modelid from model_list where model  =  "bmw"
连接数据库../datasets/cosql_dataset/database/car_1/car_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
easy pred: SELECT  ModelId FROM model_list JOIN car_makers ON model_list.Maker = car_makers.Id WHERE car_makers.Maker = 'BMW'
easy gold: SELECT modelid from model_list where model  =  "bmw"

当前idx4
eval_err_num:243
____________________
SELECT  DISTINCT countries.CountryId, countries.CountryName FROM countries JOIN car_makers ON countries.CountryName = car_makers.Country WHERE car_makers.Country IN (     SELECT Country     FROM car_makers     GROUP BY Country     HAVING COUNT(DISTINCT Maker) > 3     OR EXISTS (         SELECT 1         FROM model_list         WHERE model_list.Model = 'flat'         AND model_list.Maker = car_makers.Id     ) )
SELECT T1.countryId ,  T1.CountryName FROM Countries AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId   =   T2.Country GROUP BY T1.countryId HAVING count ( * )   >  3 UNION SELECT T1.countryId ,  T1.CountryName FROM Countries AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId   =   T2.Country JOIN MODEL_LIST AS T3 ON T2.Id   =   T3.Maker WHERE T3.Model   =   'fiat'
连接数据库../datasets/cosql_dataset/database/car_1/car_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
extra pred: SELECT  DISTINCT countries.CountryId, countries.CountryName FROM countries JOIN car_makers ON countries.CountryName = car_makers.Country WHERE car_makers.Country IN (     SELECT Country     FROM car_makers     GROUP BY Country     HAVING COUNT(DISTINCT Maker) > 3     OR EXISTS (         SELECT 1         FROM model_list         WHERE model_list.Model = 'flat'         AND model_list.Maker = car_makers.Id     ) )
extra gold: SELECT T1.countryId ,  T1.CountryName FROM Countries AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId   =   T2.Country GROUP BY T1.countryId HAVING count ( * )   >  3 UNION SELECT T1.countryId ,  T1.CountryName FROM Countries AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId   =   T2.Country JOIN MODEL_LIST AS T3 ON T2.Id   =   T3.Maker WHERE T3.Model   =   'fiat'

当前idx1
eval_err_num:244
____________________
SELECT  p.home_phone FROM Professionals p JOIN Treatments t ON p.professional_id = t.professional_id GROUP BY p.professional_id ORDER BY COUNT(t.treatment_id) DESC LIMIT 1
SELECT T1.cell_number FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id   =   T2.professional_id GROUP BY T1.professional_id order by count ( * )   desc limit 1
连接数据库../datasets/cosql_dataset/database/dog_kennels/dog_kennels.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
extra pred: SELECT  p.home_phone FROM Professionals p JOIN Treatments t ON p.professional_id = t.professional_id GROUP BY p.professional_id ORDER BY COUNT(t.treatment_id) DESC LIMIT 1
extra gold: SELECT T1.cell_number FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id   =   T2.professional_id GROUP BY T1.professional_id order by count ( * )   desc limit 1

当前idx2
____________________
SELECT  professional_id FROM Treatments GROUP BY professional_id HAVING COUNT(DISTINCT treatment_type_code) >= 2
SELECT T1.professional_id  FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id   =   T2.professional_id GROUP BY T1.professional_id HAVING count ( * )    > =    2
连接数据库../datasets/cosql_dataset/database/dog_kennels/dog_kennels.sqlite
执行第一个查询
执行第二个查询
执行出错: near "=": syntax error
eval_exec:False
exact_score:0
medium pred: SELECT  professional_id FROM Treatments GROUP BY professional_id HAVING COUNT(DISTINCT treatment_type_code) >= 2
medium gold: SELECT T1.professional_id  FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id   =   T2.professional_id GROUP BY T1.professional_id HAVING count ( * )    > =    2

当前idx3
eval_err_num:245
____________________
SELECT  COUNT(professional_id) FROM (     SELECT professional_id     FROM Treatments     GROUP BY professional_id     HAVING COUNT(treatment_id) = 1 ) AS subquery
select count ( * )  from  ( SELECT *  FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id   =   T2.professional_id GROUP BY T1.professional_id HAVING count ( * )    =  1 ) 
连接数据库../datasets/cosql_dataset/database/dog_kennels/dog_kennels.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
easy pred: SELECT  COUNT(professional_id) FROM (     SELECT professional_id     FROM Treatments     GROUP BY professional_id     HAVING COUNT(treatment_id) = 1 ) AS subquery
easy gold: select count ( * )  from  ( SELECT *  FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id   =   T2.professional_id GROUP BY T1.professional_id HAVING count ( * )    =  1 ) 

当前idx1
eval_err_num:246
____________________
SELECT  Document_ID FROM (     SELECT Document_ID, COUNT(Paragraph_ID) AS Paragraph_Count     FROM Paragraphs     GROUP BY Document_ID ) AS Paragraph_Counts WHERE Paragraph_Count BETWEEN 1 AND 2
SELECT document_id FROM Paragraphs GROUP BY document_id HAVING count ( * )  BETWEEN 1 AND 2
连接数据库../datasets/cosql_dataset/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
easy pred: SELECT  Document_ID FROM (     SELECT Document_ID, COUNT(Paragraph_ID) AS Paragraph_Count     FROM Paragraphs     GROUP BY Document_ID ) AS Paragraph_Counts WHERE Paragraph_Count BETWEEN 1 AND 2
easy gold: SELECT document_id FROM Paragraphs GROUP BY document_id HAVING count ( * )  BETWEEN 1 AND 2

当前idx2
eval_err_num:247
____________________
SELECT  p.Paragraph_Text FROM Paragraphs p WHERE p.Document_ID IN (     SELECT Document_ID     FROM (         SELECT Document_ID, COUNT(Paragraph_ID) AS Paragraph_Count         FROM Paragraphs         GROUP BY Document_ID     ) AS Paragraph_Counts     WHERE Paragraph_Count BETWEEN 1 AND 2 )
SELECT Paragraph_Text FROM Paragraphs GROUP BY document_id HAVING count ( * )  BETWEEN 1 AND 2
连接数据库../datasets/cosql_dataset/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
easy pred: SELECT  p.Paragraph_Text FROM Paragraphs p WHERE p.Document_ID IN (     SELECT Document_ID     FROM (         SELECT Document_ID, COUNT(Paragraph_ID) AS Paragraph_Count         FROM Paragraphs         GROUP BY Document_ID     ) AS Paragraph_Counts     WHERE Paragraph_Count BETWEEN 1 AND 2 )
easy gold: SELECT Paragraph_Text FROM Paragraphs GROUP BY document_id HAVING count ( * )  BETWEEN 1 AND 2

当前idx1
____________________
SELECT  Name FROM teacher ORDER BY Age ASC LIMIT 1
select name from teacher order by Age asc limit 1
连接数据库../datasets/cosql_dataset/database/course_teach/course_teach.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT  Hometown FROM teacher ORDER BY Age ASC LIMIT 1
select Hometown from teacher order by Age asc limit 1
连接数据库../datasets/cosql_dataset/database/course_teach/course_teach.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx3
____________________
SELECT  Age FROM teacher WHERE Name = 'Vicente Carretero'
select Age from teacher where Name = 'Vicente Carretero'
连接数据库../datasets/cosql_dataset/database/course_teach/course_teach.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx1
eval_err_num:248
____________________
SELECT  *  FROM Student WHERE StuID IN (SELECT StuID FROM Has_Pet) AND StuID IN (SELECT StuID FROM Pets)
SELECT fname, lname FROM student WHERE sex   =   'F'
连接数据库../datasets/cosql_dataset/database/pets_1/pets_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT  *  FROM Student WHERE StuID IN (SELECT StuID FROM Has_Pet) AND StuID IN (SELECT StuID FROM Pets)
medium gold: SELECT fname, lname FROM student WHERE sex   =   'F'

当前idx2
eval_err_num:249
____________________
SELECT  DISTINCT city_code FROM Student WHERE StuID IN (SELECT StuID FROM Has_Pet) AND StuID IN (SELECT StuID FROM Pets)
SELECT DISTINCT city_code FROM student
连接数据库../datasets/cosql_dataset/database/pets_1/pets_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
easy pred: SELECT  DISTINCT city_code FROM Student WHERE StuID IN (SELECT StuID FROM Has_Pet) AND StuID IN (SELECT StuID FROM Pets)
easy gold: SELECT DISTINCT city_code FROM student

当前idx3
eval_err_num:250
____________________
SELECT  p.weight FROM Pets p JOIN Has_Pet hp ON p.PetID = hp.PetID JOIN Student s ON hp.StuID = s.StuID WHERE s.Sex = 'female'
SELECT T3.weight FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid   =   T2.stuid JOIN pets AS T3 ON T2.petid   =   T3.petid WHERE T1.sex   =   'F'
连接数据库../datasets/cosql_dataset/database/pets_1/pets_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
hard pred: SELECT  p.weight FROM Pets p JOIN Has_Pet hp ON p.PetID = hp.PetID JOIN Student s ON hp.StuID = s.StuID WHERE s.Sex = 'female'
hard gold: SELECT T3.weight FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid   =   T2.stuid JOIN pets AS T3 ON T2.petid   =   T3.petid WHERE T1.sex   =   'F'

当前idx1
____________________
SELECT  Id FROM cars_data WHERE Horsepower = (SELECT MIN(Horsepower) FROM cars_data)
SELECT id from cars_data order by horsepower limit 1
连接数据库../datasets/cosql_dataset/database/car_1/car_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT  Id FROM cars_data WHERE Horsepower = (SELECT MIN(Horsepower) FROM cars_data)
medium gold: SELECT id from cars_data order by horsepower limit 1

当前idx2
eval_err_num:251
____________________
SELECT  AVG(Horsepower) AS AverageHorsepower FROM cars_data
SELECT avg ( horsepower ) from cars_data
连接数据库../datasets/cosql_dataset/database/car_1/car_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
easy pred: SELECT  AVG(Horsepower) AS AverageHorsepower FROM cars_data
easy gold: SELECT avg ( horsepower ) from cars_data

当前idx3
____________________
SELECT  Id FROM cars_data WHERE Horsepower < (SELECT AVG(Horsepower) FROM cars_data)
SELECT T1.Id FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id   =   T2.MakeId WHERE T1.Horsepower <  ( SELECT avg ( Horsepower )  FROM CARS_DATA ) 
连接数据库../datasets/cosql_dataset/database/car_1/car_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:False
extra pred: SELECT  Id FROM cars_data WHERE Horsepower < (SELECT AVG(Horsepower) FROM cars_data)
extra gold: SELECT T1.Id FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id   =   T2.MakeId WHERE T1.Horsepower <  ( SELECT avg ( Horsepower )  FROM CARS_DATA ) 

当前idx4
eval_err_num:252
____________________
SELECT  c.Id, m.Model, cm.Maker FROM cars_data c JOIN model_list m ON c.Id = m.ModelId JOIN car_names cn ON m.Maker = cn.MakeId JOIN car_makers cm ON cn.Make = cm.Maker WHERE c.Horsepower < (SELECT AVG(Horsepower) FROM cars_data)
SELECT T1.Id ,T2.model FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id   =   T2.MakeId WHERE T1.Horsepower <  ( SELECT avg ( Horsepower )  FROM CARS_DATA ) 
连接数据库../datasets/cosql_dataset/database/car_1/car_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
extra pred: SELECT  c.Id, m.Model, cm.Maker FROM cars_data c JOIN model_list m ON c.Id = m.ModelId JOIN car_names cn ON m.Maker = cn.MakeId JOIN car_makers cm ON cn.Make = cm.Maker WHERE c.Horsepower < (SELECT AVG(Horsepower) FROM cars_data)
extra gold: SELECT T1.Id ,T2.model FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id   =   T2.MakeId WHERE T1.Horsepower <  ( SELECT avg ( Horsepower )  FROM CARS_DATA ) 

当前idx1
____________________
SELECT  * FROM Transcripts ORDER BY transcript_date DESC LIMIT 1
SELECT transcript_id FROM Transcripts ORDER BY transcript_date DESC LIMIT 1
连接数据库../datasets/cosql_dataset/database/student_transcripts_tracking/student_transcripts_tracking.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT  * FROM Transcripts ORDER BY transcript_date DESC LIMIT 1
medium gold: SELECT transcript_id FROM Transcripts ORDER BY transcript_date DESC LIMIT 1

当前idx2
____________________
SELECT  transcript_date FROM Transcripts WHERE transcript_id = 5
SELECT transcript_date FROM Transcripts WHERE transcript_id  =  5
连接数据库../datasets/cosql_dataset/database/student_transcripts_tracking/student_transcripts_tracking.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx1
eval_err_num:253
____________________
SELECT  t.transcript_id, t.transcript_date FROM Transcripts t JOIN Transcript_Contents tc ON t.transcript_id = tc.transcript_id GROUP BY t.transcript_id HAVING COUNT(tc.student_course_id) >= 2
SELECT T2.transcript_date ,  T1.transcript_id FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id   =   T2.transcript_id GROUP BY T1.transcript_id HAVING count ( * )    > =    2
连接数据库../datasets/cosql_dataset/database/student_transcripts_tracking/student_transcripts_tracking.sqlite
执行第一个查询
执行第二个查询
执行出错: near "=": syntax error
eval_exec:False
exact_score:0
medium pred: SELECT  t.transcript_id, t.transcript_date FROM Transcripts t JOIN Transcript_Contents tc ON t.transcript_id = tc.transcript_id GROUP BY t.transcript_id HAVING COUNT(tc.student_course_id) >= 2
medium gold: SELECT T2.transcript_date ,  T1.transcript_id FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id   =   T2.transcript_id GROUP BY T1.transcript_id HAVING count ( * )    > =    2

当前idx2
eval_err_num:254
____________________
SELECT  t.transcript_id, t.transcript_date, t.other_details FROM Transcripts t JOIN Transcript_Contents tc ON t.transcript_id = tc.transcript_id GROUP BY t.transcript_id HAVING COUNT(tc.student_course_id) >= 2
SELECT T2.other_details FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id   =   T2.transcript_id GROUP BY T1.transcript_id HAVING count ( * )    > =    2
连接数据库../datasets/cosql_dataset/database/student_transcripts_tracking/student_transcripts_tracking.sqlite
执行第一个查询
执行第二个查询
执行出错: near "=": syntax error
eval_exec:False
exact_score:0
medium pred: SELECT  t.transcript_id, t.transcript_date, t.other_details FROM Transcripts t JOIN Transcript_Contents tc ON t.transcript_id = tc.transcript_id GROUP BY t.transcript_id HAVING COUNT(tc.student_course_id) >= 2
medium gold: SELECT T2.other_details FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id   =   T2.transcript_id GROUP BY T1.transcript_id HAVING count ( * )    > =    2

当前idx3
eval_err_num:255
____________________
SELECT  t.transcript_date FROM Transcripts t JOIN Transcript_Contents tc ON t.transcript_id = tc.transcript_id GROUP BY t.transcript_id HAVING COUNT(tc.student_course_id) >= 2
SELECT T2.transcript_date FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id   =   T2.transcript_id GROUP BY T1.transcript_id HAVING count ( * )    > =    2
连接数据库../datasets/cosql_dataset/database/student_transcripts_tracking/student_transcripts_tracking.sqlite
执行第一个查询
执行第二个查询
执行出错: near "=": syntax error
eval_exec:False
exact_score:0
medium pred: SELECT  t.transcript_date FROM Transcripts t JOIN Transcript_Contents tc ON t.transcript_id = tc.transcript_id GROUP BY t.transcript_id HAVING COUNT(tc.student_course_id) >= 2
medium gold: SELECT T2.transcript_date FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id   =   T2.transcript_id GROUP BY T1.transcript_id HAVING count ( * )    > =    2

当前idx1
____________________
SELECT  ID FROM Highschooler
select student_id from Friend
连接数据库../datasets/cosql_dataset/database/network_1/network_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:False
easy pred: SELECT  ID FROM Highschooler
easy gold: select student_id from Friend

当前idx1
____________________
SELECT  email_address FROM Professionals WHERE state = 'Hawaii'
SELECT email_address FROM Professionals WHERE state   =   'Hawaii'
连接数据库../datasets/cosql_dataset/database/dog_kennels/dog_kennels.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT  email_address FROM Professionals WHERE state = 'Wisconsin'
SELECT email_address FROM Professionals WHERE state   =   'Wisconsin'
连接数据库../datasets/cosql_dataset/database/dog_kennels/dog_kennels.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx3
____________________
SELECT  first_name FROM Professionals WHERE role_code = 'Employee'
SELECT first_name FROM Professionals WHERE role_code   =   'Employee'
连接数据库../datasets/cosql_dataset/database/dog_kennels/dog_kennels.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx1
eval_err_num:256
____________________
SELECT  s.semester_name, COUNT(se.student_enrolment_id) AS enrollment_count FROM Semesters s LEFT JOIN Student_Enrolment se ON s.semester_id = se.semester_id GROUP BY s.semester_name
SELECT T1.semester_name, count ( * )  from semesters as T1 join student_enrolment as T2 on T1.semester_id  =  T2.semester_id group by T2.semester_id
连接数据库../datasets/cosql_dataset/database/student_transcripts_tracking/student_transcripts_tracking.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT  s.semester_name, COUNT(se.student_enrolment_id) AS enrollment_count FROM Semesters s LEFT JOIN Student_Enrolment se ON s.semester_id = se.semester_id GROUP BY s.semester_name
medium gold: SELECT T1.semester_name, count ( * )  from semesters as T1 join student_enrolment as T2 on T1.semester_id  =  T2.semester_id group by T2.semester_id

当前idx2
eval_err_num:257
____________________
SELECT  s.semester_name, COUNT(se.student_enrolment_id) AS enrollment_count FROM Semesters s LEFT JOIN Student_Enrolment se ON s.semester_id = se.semester_id GROUP BY s.semester_name ORDER BY enrollment_count DESC LIMIT 1
SELECT T1.semester_name from semesters as T1 join student_enrolment as T2 on T1.semester_id  =  T2.semester_id group by T2.semester_id order by count ( * )  desc limit 1
连接数据库../datasets/cosql_dataset/database/student_transcripts_tracking/student_transcripts_tracking.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
extra pred: SELECT  s.semester_name, COUNT(se.student_enrolment_id) AS enrollment_count FROM Semesters s LEFT JOIN Student_Enrolment se ON s.semester_id = se.semester_id GROUP BY s.semester_name ORDER BY enrollment_count DESC LIMIT 1
extra gold: SELECT T1.semester_name from semesters as T1 join student_enrolment as T2 on T1.semester_id  =  T2.semester_id group by T2.semester_id order by count ( * )  desc limit 1

当前idx3
____________________
SELECT  student_enrolment_id, degree_program_id FROM Student_Enrolment
SELECT student_enrolment_id, degree_program_id from  Student_Enrolment
连接数据库../datasets/cosql_dataset/database/student_transcripts_tracking/student_transcripts_tracking.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx4
eval_err_num:258
____________________
SELECT  s.semester_name FROM Semesters s LEFT JOIN Student_Enrolment se ON s.semester_id = se.semester_id WHERE se.student_enrolment_id IS NULL
sELECT semester_name FROM Semesters WHERE semester_id NOT IN (  SELECT semester_id FROM Student_Enrolment  ) 
连接数据库../datasets/cosql_dataset/database/student_transcripts_tracking/student_transcripts_tracking.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
hard pred: SELECT  s.semester_name FROM Semesters s LEFT JOIN Student_Enrolment se ON s.semester_id = se.semester_id WHERE se.student_enrolment_id IS NULL
hard gold: sELECT semester_name FROM Semesters WHERE semester_id NOT IN (  SELECT semester_id FROM Student_Enrolment  ) 

当前idx1
eval_err_num:259
____________________
SELECT DISTINCT c.Name
FROM country c
WHERE c.Code NOT IN (
    SELECT cl.CountryCode
    FROM countrylanguage cl
    WHERE cl.Language = 'English' AND cl.IsOfficial = 'T'
)
SELECT name FROM country WHERE Name NOT IN  ( SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code   =   T2.CountryCode WHERE T2.Language   =   "English" AND T2.IsOfficial   =   "T" ) 
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
hard pred: SELECT DISTINCT c.Name
FROM country c
WHERE c.Code NOT IN (
    SELECT cl.CountryCode
    FROM countrylanguage cl
    WHERE cl.Language = 'English' AND cl.IsOfficial = 'T'
)
hard gold: SELECT name FROM country WHERE Name NOT IN  ( SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code   =   T2.CountryCode WHERE T2.Language   =   "English" AND T2.IsOfficial   =   "T" ) 

当前idx2
eval_err_num:260
____________________
SELECT c.Name, AVG(c.LifeExpectancy) AS AverageLifeExpectancy
FROM country c
WHERE c.Code NOT IN (
    SELECT cl.CountryCode
    FROM countrylanguage cl
    WHERE cl.Language = 'English' AND cl.IsOfficial = 'T'
)
GROUP BY c.Name
SELECT avg ( LifeExpectancy )  FROM country WHERE Name NOT IN  ( SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code   =   T2.CountryCode WHERE T2.Language   =   "English" AND T2.IsOfficial   =   "T" ) 
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
extra pred: SELECT c.Name, AVG(c.LifeExpectancy) AS AverageLifeExpectancy
FROM country c
WHERE c.Code NOT IN (
    SELECT cl.CountryCode
    FROM countrylanguage cl
    WHERE cl.Language = 'English' AND cl.IsOfficial = 'T'
)
GROUP BY c.Name
extra gold: SELECT avg ( LifeExpectancy )  FROM country WHERE Name NOT IN  ( SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code   =   T2.CountryCode WHERE T2.Language   =   "English" AND T2.IsOfficial   =   "T" ) 

当前idx3
eval_err_num:261
____________________
SELECT c.Name, AVG(c.LifeExpectancy) AS AverageLifeExpectancy
FROM country c
WHERE c.Code NOT IN (
    SELECT cl.CountryCode
    FROM countrylanguage cl
    WHERE cl.Language = 'English' AND cl.IsOfficial = 'T'
)
GROUP BY c.Name
SELECT avg ( LifeExpectancy )  FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code   =   T2.CountryCode WHERE T2.Language   =   "English" AND T2.IsOfficial   =   "T"
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT c.Name, AVG(c.LifeExpectancy) AS AverageLifeExpectancy
FROM country c
WHERE c.Code NOT IN (
    SELECT cl.CountryCode
    FROM countrylanguage cl
    WHERE cl.Language = 'English' AND cl.IsOfficial = 'T'
)
GROUP BY c.Name
medium gold: SELECT avg ( LifeExpectancy )  FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code   =   T2.CountryCode WHERE T2.Language   =   "English" AND T2.IsOfficial   =   "T"

当前idx1
____________________
SELECT  *  FROM flights  WHERE SourceAirport = 'CVO' AND DestAirport = 'SNA'
SELECT FlightNo FROM flights where SourceAirport = "CVO" and DestAirport = "SNA"
连接数据库../datasets/cosql_dataset/database/flight_2/flight_2.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT  *  FROM flights  WHERE SourceAirport = 'CVO' AND DestAirport = 'SNA'
medium gold: SELECT FlightNo FROM flights where SourceAirport = "CVO" and DestAirport = "SNA"

当前idx2
____________________
SELECT  *  FROM flights  WHERE SourceAirport = 'CVO' AND DestAirport = 'DFW'
SELECT * FROM flights where SourceAirport = "CVO" and DestAirport = "DFW"
连接数据库../datasets/cosql_dataset/database/flight_2/flight_2.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx3
____________________
SELECT  DISTINCT Airline FROM flights WHERE SourceAirport = 'CVO'
SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid   =   T2.Airline WHERE T2.SourceAirport   =   " CVO"
连接数据库../datasets/cosql_dataset/database/flight_2/flight_2.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT  DISTINCT Airline FROM flights WHERE SourceAirport = 'CVO'
medium gold: SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid   =   T2.Airline WHERE T2.SourceAirport   =   " CVO"

当前idx1
____________________
SELECT  Channel FROM TV_series WHERE Episode = 'A love of a lifetime'
SELECT T1.series_name FROM TV_Channel AS T1 JOIN TV_series AS T2 ON T1.id  =  T2.Channel WHERE T2.Episode  =  "A Love of a Lifetime"
连接数据库../datasets/cosql_dataset/database/tvshow/tvshow.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT  Channel FROM TV_series WHERE Episode = 'A love of a lifetime'
medium gold: SELECT T1.series_name FROM TV_Channel AS T1 JOIN TV_series AS T2 ON T1.id  =  T2.Channel WHERE T2.Episode  =  "A Love of a Lifetime"

当前idx2
____________________
SELECT  Viewers_m FROM TV_series WHERE Episode = 'A love of a lifetime'
SELECT  Viewers_m FROM  TV_series  where Episode  =  "A Love of a Lifetime"
连接数据库../datasets/cosql_dataset/database/tvshow/tvshow.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:True
当前idx3
____________________
SELECT  Rating FROM TV_series WHERE Episode = 'A love of a lifetime'
SELECT  Weekly_Rank  FROM  TV_series  where Episode  =  "A Love of a Lifetime"
连接数据库../datasets/cosql_dataset/database/tvshow/tvshow.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
easy pred: SELECT  Rating FROM TV_series WHERE Episode = 'A love of a lifetime'
easy gold: SELECT  Weekly_Rank  FROM  TV_series  where Episode  =  "A Love of a Lifetime"

当前idx4
____________________
SELECT  Air_Date FROM TV_series WHERE Episode = 'A love of a lifetime'
SELECT  Air_Date  FROM  TV_series  where Episode  =  "A Love of a Lifetime"
连接数据库../datasets/cosql_dataset/database/tvshow/tvshow.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:True
当前idx1
____________________
SELECT  player_id FROM players ORDER BY birth_date DESC LIMIT 1
SELECT player_id FROM players ORDER BY birth_date desc LIMIT 1
连接数据库../datasets/cosql_dataset/database/wta_1/wta_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT  player_id FROM players ORDER BY birth_date LIMIT 1
SELECT player_id FROM players ORDER BY birth_date LIMIT 1
连接数据库../datasets/cosql_dataset/database/wta_1/wta_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx3
____________________
SELECT  first_name, country_code FROM players WHERE player_id = (SELECT player_id                    FROM players                    ORDER BY birth_date DESC                    LIMIT 1)
SELECT first_name, country_code FROM players ORDER BY birth_date LIMIT 1
连接数据库../datasets/cosql_dataset/database/wta_1/wta_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT  first_name, country_code FROM players WHERE player_id = (SELECT player_id                    FROM players                    ORDER BY birth_date DESC                    LIMIT 1)
medium gold: SELECT first_name, country_code FROM players ORDER BY birth_date LIMIT 1

当前idx1
____________________
SELECT  Name FROM teacher WHERE Teacher_ID IN (     SELECT Teacher_ID     FROM course_arrange     GROUP BY Teacher_ID     HAVING COUNT(Course_ID) >= 2 )
SELECT T2.Name FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID   =   T2.Teacher_ID GROUP BY T2.Name HAVING COUNT ( * )    > =    2
连接数据库../datasets/cosql_dataset/database/course_teach/course_teach.sqlite
执行第一个查询
执行第二个查询
执行出错: near "=": syntax error
eval_exec:False
exact_score:0
medium pred: SELECT  Name FROM teacher WHERE Teacher_ID IN (     SELECT Teacher_ID     FROM course_arrange     GROUP BY Teacher_ID     HAVING COUNT(Course_ID) >= 2 )
medium gold: SELECT T2.Name FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID   =   T2.Teacher_ID GROUP BY T2.Name HAVING COUNT ( * )    > =    2

当前idx2
____________________
SELECT  Age, Hometown FROM teacher WHERE Teacher_ID IN (     SELECT Teacher_ID     FROM course_arrange     GROUP BY Teacher_ID     HAVING COUNT(Course_ID) >= 2 )
SELECT T2.age, t2.hometown FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID   =   T2.Teacher_ID GROUP BY T2.Name HAVING COUNT ( * )    > =    2
连接数据库../datasets/cosql_dataset/database/course_teach/course_teach.sqlite
执行第一个查询
执行第二个查询
执行出错: near "=": syntax error
eval_exec:False
exact_score:0
medium pred: SELECT  Age, Hometown FROM teacher WHERE Teacher_ID IN (     SELECT Teacher_ID     FROM course_arrange     GROUP BY Teacher_ID     HAVING COUNT(Course_ID) >= 2 )
medium gold: SELECT T2.age, t2.hometown FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID   =   T2.Teacher_ID GROUP BY T2.Name HAVING COUNT ( * )    > =    2

当前idx3
____________________
SELECT  Grade FROM course_arrange WHERE Teacher_ID = (     SELECT Teacher_ID     FROM teacher     WHERE Age = (         SELECT MAX(Age)         FROM teacher     ) )
SELECT t1.grade FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID   =   T2.Teacher_ID order by t2.age desc limit 1
连接数据库../datasets/cosql_dataset/database/course_teach/course_teach.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:0
hard pred: SELECT  Grade FROM course_arrange WHERE Teacher_ID = (     SELECT Teacher_ID     FROM teacher     WHERE Age = (         SELECT MAX(Age)         FROM teacher     ) )
hard gold: SELECT t1.grade FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID   =   T2.Teacher_ID order by t2.age desc limit 1

当前idx1
eval_err_num:262
____________________
SELECT  SUM(Num_of_Ticket) AS Total_Tickets_Bought,        MAX(Num_of_Ticket) AS Max_Tickets_Bought FROM visit
SELECT max ( num_of_ticket )  FROM visit
连接数据库../datasets/cosql_dataset/database/museum_visit/museum_visit.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
easy pred: SELECT  SUM(Num_of_Ticket) AS Total_Tickets_Bought,        MAX(Num_of_Ticket) AS Max_Tickets_Bought FROM visit
easy gold: SELECT max ( num_of_ticket )  FROM visit

当前idx2
eval_err_num:263
____________________
SELECT  AVG(Num_of_Ticket) AS Average_Tickets_Bought FROM visit
SELECT avg ( num_of_ticket )  FROM visit
连接数据库../datasets/cosql_dataset/database/museum_visit/museum_visit.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
easy pred: SELECT  AVG(Num_of_Ticket) AS Average_Tickets_Bought FROM visit
easy gold: SELECT avg ( num_of_ticket )  FROM visit

当前idx1
____________________
SELECT  COUNT(*) FROM ship
SELECT   count ( * )   from ship
连接数据库../datasets/cosql_dataset/database/battle_death/battle_death.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT  name FROM ship
SELECT  name  from ship
连接数据库../datasets/cosql_dataset/database/battle_death/battle_death.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx1
____________________
SELECT  Name FROM singer ORDER BY Age LIMIT 1
SELECT Name FROM singer ORDER BY age LIMIT 1
连接数据库../datasets/cosql_dataset/database/concert_singer/concert_singer.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT  Song_Name FROM singer WHERE Name = 'Tribal King'
SELECT Song_Name FROM singer where name  =  'Tribal King'
连接数据库../datasets/cosql_dataset/database/concert_singer/concert_singer.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx3
____________________
SELECT  Song_release_year FROM singer WHERE Name = 'Tribal King'
SELECT song_release_year FROM singer where name  =  'Tribal King'
连接数据库../datasets/cosql_dataset/database/concert_singer/concert_singer.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx1
____________________
SELECT  Name FROM country WHERE Continent = 'Europe'
SELECT Name FROM country WHERE continent   =   "Europe"
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT  Name FROM country WHERE Population = 80000
SELECT Name FROM country WHERE continent   =   "Europe" AND Population   =   "80000"
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:0
medium pred: SELECT  Name FROM country WHERE Population = 80000
medium gold: SELECT Name FROM country WHERE continent   =   "Europe" AND Population   =   "80000"

当前idx1
____________________
SELECT  Name FROM singer
SELECT Name FROM singer
连接数据库../datasets/cosql_dataset/database/singer/singer.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx1
____________________
SELECT  department_name FROM Departments WHERE department_name LIKE '%computer%'
SELECT department_name FROM Departments WHERE department_name LIKE '%computer%'
连接数据库../datasets/cosql_dataset/database/student_transcripts_tracking/student_transcripts_tracking.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT  department_description FROM Departments WHERE department_name LIKE '%computer%'
SELECT department_description FROM Departments WHERE department_name LIKE '%computer%'
连接数据库../datasets/cosql_dataset/database/student_transcripts_tracking/student_transcripts_tracking.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx3
____________________
SELECT  department_id FROM Departments WHERE department_name LIKE '%computer%'
SELECT department_id FROM Departments WHERE department_name LIKE '%computer%'
连接数据库../datasets/cosql_dataset/database/student_transcripts_tracking/student_transcripts_tracking.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx4
____________________
SELECT  department_id FROM Departments WHERE department_name = 'History'
SELECT other_details FROM Departments WHERE department_name  =  "history"
连接数据库../datasets/cosql_dataset/database/student_transcripts_tracking/student_transcripts_tracking.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
easy pred: SELECT  department_id FROM Departments WHERE department_name = 'History'
easy gold: SELECT other_details FROM Departments WHERE department_name  =  "history"

当前idx1
eval_err_num:264
____________________
SELECT  COUNT(DISTINCT Cylinders) AS TotalCylinders FROM cars_data
SELECT sum ( Cylinders )  FROM cars_data
连接数据库../datasets/cosql_dataset/database/car_1/car_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
easy pred: SELECT  COUNT(DISTINCT Cylinders) AS TotalCylinders FROM cars_data
easy gold: SELECT sum ( Cylinders )  FROM cars_data

当前idx2
eval_err_num:265
____________________
SELECT  MAX(Weight) AS HighestWeight FROM cars_data
SELECT Weight FROM cars_data ORDER BY Weight DESC LIMIT 1
连接数据库../datasets/cosql_dataset/database/car_1/car_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT  MAX(Weight) AS HighestWeight FROM cars_data
medium gold: SELECT Weight FROM cars_data ORDER BY Weight DESC LIMIT 1

当前idx3
eval_err_num:266
____________________
SELECT  COUNT(DISTINCT Year) AS TotalYears FROM cars_data
SELECT count ( * )  FROM cars_data
连接数据库../datasets/cosql_dataset/database/car_1/car_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
easy pred: SELECT  COUNT(DISTINCT Year) AS TotalYears FROM cars_data
easy gold: SELECT count ( * )  FROM cars_data

当前idx4
eval_err_num:267
____________________
SELECT  MAX(Accelerate) AS HighestAcceleration FROM cars_data
SELECT accelerate FROM cars_data ORDER BY accelerate DESC LIMIT 1
连接数据库../datasets/cosql_dataset/database/car_1/car_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT  MAX(Accelerate) AS HighestAcceleration FROM cars_data
medium gold: SELECT accelerate FROM cars_data ORDER BY accelerate DESC LIMIT 1

当前idx>4
eval_err_num:268
____________________
SELECT  MAX(Edispl) AS HighestEdispl FROM cars_data
SELECT T1.horsepower FROM CARS_DATA AS T1 ORDER BY T1.accelerate DESC LIMIT 1
连接数据库../datasets/cosql_dataset/database/car_1/car_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT  MAX(Edispl) AS HighestEdispl FROM cars_data
medium gold: SELECT T1.horsepower FROM CARS_DATA AS T1 ORDER BY T1.accelerate DESC LIMIT 1

当前idx1
____________________
SELECT  Age FROM singer WHERE Name = 'Joe Sharp'
SELECT age from singer where name  =  "Joe Sharp"
连接数据库../datasets/cosql_dataset/database/concert_singer/concert_singer.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT  COUNT(*) FROM singer WHERE Country = 'US'
select count ( * )  from singer where country  =  "United States"
连接数据库../datasets/cosql_dataset/database/concert_singer/concert_singer.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:True
当前idx3
____________________
SELECT  COUNT(*) FROM singer WHERE Is_male = 'Male'
select count ( * )  from singer where Is_male  =  "True"
连接数据库../datasets/cosql_dataset/database/concert_singer/concert_singer.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx1
____________________
SELECT  model_list.Model FROM model_list JOIN car_makers ON model_list.Maker = car_makers.Id WHERE car_makers.Maker = 'General Motors'
SELECT DISTINCT T2.Model FROM CAR_NAMES AS T1 JOIN MODEL_LIST AS T2 ON T1.Model   =   T2.Model JOIN CAR_MAKERS AS T3 ON T2.Maker   =   T3.Id JOIN CARS_DATA AS T4 ON T1.MakeId   =   T4.Id WHERE T3.FullName   =   'General Motors'
连接数据库../datasets/cosql_dataset/database/car_1/car_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
extra pred: SELECT  model_list.Model FROM model_list JOIN car_makers ON model_list.Maker = car_makers.Id WHERE car_makers.Maker = 'General Motors'
extra gold: SELECT DISTINCT T2.Model FROM CAR_NAMES AS T1 JOIN MODEL_LIST AS T2 ON T1.Model   =   T2.Model JOIN CAR_MAKERS AS T3 ON T2.Maker   =   T3.Id JOIN CARS_DATA AS T4 ON T1.MakeId   =   T4.Id WHERE T3.FullName   =   'General Motors'

当前idx2
____________________
SELECT  model_list.Model FROM model_list JOIN cars_data ON model_list.ModelId = cars_data.Id WHERE cars_data.Weight > 3500
SELECT DISTINCT T2.Model FROM CAR_NAMES AS T1 JOIN MODEL_LIST AS T2 ON T1.Model   =   T2.Model JOIN CAR_MAKERS AS T3 ON T2.Maker   =   T3.Id JOIN CARS_DATA AS T4 ON T1.MakeId   =   T4.Id WHERE T4.weight  >  3500
连接数据库../datasets/cosql_dataset/database/car_1/car_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:False
extra pred: SELECT  model_list.Model FROM model_list JOIN cars_data ON model_list.ModelId = cars_data.Id WHERE cars_data.Weight > 3500
extra gold: SELECT DISTINCT T2.Model FROM CAR_NAMES AS T1 JOIN MODEL_LIST AS T2 ON T1.Model   =   T2.Model JOIN CAR_MAKERS AS T3 ON T2.Maker   =   T3.Id JOIN CARS_DATA AS T4 ON T1.MakeId   =   T4.Id WHERE T4.weight  >  3500

当前idx3
____________________
SELECT  car_names.Make, car_names.Model FROM cars_data JOIN car_names ON cars_data.Id = car_names.MakeId WHERE cars_data.Horsepower = (SELECT MAX(Horsepower) FROM cars_data)
SELECT DISTINCT T2.Model, T3.maker FROM CAR_NAMES AS T1 JOIN MODEL_LIST AS T2 ON T1.Model   =   T2.Model JOIN CAR_MAKERS AS T3 ON T2.Maker   =   T3.Id JOIN CARS_DATA AS T4 ON T1.MakeId   =   T4.Id WHERE T3.FullName   =   'General Motors' order by t4.horsepower desc limit 1
连接数据库../datasets/cosql_dataset/database/car_1/car_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
extra pred: SELECT  car_names.Make, car_names.Model FROM cars_data JOIN car_names ON cars_data.Id = car_names.MakeId WHERE cars_data.Horsepower = (SELECT MAX(Horsepower) FROM cars_data)
extra gold: SELECT DISTINCT T2.Model, T3.maker FROM CAR_NAMES AS T1 JOIN MODEL_LIST AS T2 ON T1.Model   =   T2.Model JOIN CAR_MAKERS AS T3 ON T2.Maker   =   T3.Id JOIN CARS_DATA AS T4 ON T1.MakeId   =   T4.Id WHERE T3.FullName   =   'General Motors' order by t4.horsepower desc limit 1

当前idx4
____________________
SELECT  COUNT(*) FROM cars_data JOIN model_list ON cars_data.Id = model_list.ModelId JOIN car_makers ON model_list.Maker = car_makers.Id WHERE car_makers.Maker = 'General Motors' AND cars_data.MPG > 15
SELECT count ( * )  FROM CAR_NAMES AS T1 JOIN MODEL_LIST AS T2 ON T1.Model   =   T2.Model JOIN CAR_MAKERS AS T3 ON T2.Maker   =   T3.Id JOIN CARS_DATA AS T4 ON T1.MakeId   =   T4.Id WHERE T3.FullName   =   'General Motors' and t4.mpg > 15
连接数据库../datasets/cosql_dataset/database/car_1/car_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
extra pred: SELECT  COUNT(*) FROM cars_data JOIN model_list ON cars_data.Id = model_list.ModelId JOIN car_makers ON model_list.Maker = car_makers.Id WHERE car_makers.Maker = 'General Motors' AND cars_data.MPG > 15
extra gold: SELECT count ( * )  FROM CAR_NAMES AS T1 JOIN MODEL_LIST AS T2 ON T1.Model   =   T2.Model JOIN CAR_MAKERS AS T3 ON T2.Maker   =   T3.Id JOIN CARS_DATA AS T4 ON T1.MakeId   =   T4.Id WHERE T3.FullName   =   'General Motors' and t4.mpg > 15

当前idx>4
____________________
SELECT  car_names.Make, car_names.Model FROM cars_data JOIN model_list ON cars_data.Id = model_list.ModelId JOIN car_makers ON model_list.Maker = car_makers.Id JOIN car_names ON cars_data.Id = car_names.MakeId WHERE car_makers.Maker = 'General Motors' ORDER BY cars_data.MPG DESC LIMIT 1
SELECT DISTINCT t1.make, t1.model FROM CAR_NAMES AS T1 JOIN MODEL_LIST AS T2 ON T1.Model   =   T2.Model JOIN CAR_MAKERS AS T3 ON T2.Maker   =   T3.Id JOIN CARS_DATA AS T4 ON T1.MakeId   =   T4.Id WHERE T3.FullName   =   'General Motors' order by t4.mpg desc limit 1
连接数据库../datasets/cosql_dataset/database/car_1/car_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
extra pred: SELECT  car_names.Make, car_names.Model FROM cars_data JOIN model_list ON cars_data.Id = model_list.ModelId JOIN car_makers ON model_list.Maker = car_makers.Id JOIN car_names ON cars_data.Id = car_names.MakeId WHERE car_makers.Maker = 'General Motors' ORDER BY cars_data.MPG DESC LIMIT 1
extra gold: SELECT DISTINCT t1.make, t1.model FROM CAR_NAMES AS T1 JOIN MODEL_LIST AS T2 ON T1.Model   =   T2.Model JOIN CAR_MAKERS AS T3 ON T2.Maker   =   T3.Id JOIN CARS_DATA AS T4 ON T1.MakeId   =   T4.Id WHERE T3.FullName   =   'General Motors' order by t4.mpg desc limit 1

当前idx1
____________________
SELECT  COUNT(ID) FROM Highschooler
SELECT count ( * )  FROM Highschooler
连接数据库../datasets/cosql_dataset/database/network_1/network_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
easy pred: SELECT  COUNT(ID) FROM Highschooler
easy gold: SELECT count ( * )  FROM Highschooler

当前idx2
____________________
SELECT  AVG(grade) FROM Highschooler
SELECT avg ( grade )  FROM Highschooler
连接数据库../datasets/cosql_dataset/database/network_1/network_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx3
____________________
SELECT  MAX(grade) FROM Highschooler
SELECT grade FROM Highschooler order by grade desc limit 1
连接数据库../datasets/cosql_dataset/database/network_1/network_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:0
medium pred: SELECT  MAX(grade) FROM Highschooler
medium gold: SELECT grade FROM Highschooler order by grade desc limit 1

当前idx4
____________________
SELECT  MIN(grade) FROM Highschooler
SELECT grade FROM Highschooler order by grade limit 1
连接数据库../datasets/cosql_dataset/database/network_1/network_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:0
medium pred: SELECT  MIN(grade) FROM Highschooler
medium gold: SELECT grade FROM Highschooler order by grade limit 1

当前idx1
____________________
SELECT  DISTINCT Country FROM car_makers
SELECT T1.CountryName FROM countries AS T1 JOIN CAR_MAKERS AS T2 ON T1.countryId   =   T2.Country
连接数据库../datasets/cosql_dataset/database/car_1/car_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
easy pred: SELECT  DISTINCT Country FROM car_makers
easy gold: SELECT T1.CountryName FROM countries AS T1 JOIN CAR_MAKERS AS T2 ON T1.countryId   =   T2.Country

当前idx2
eval_err_num:269
____________________
SELECT  DISTINCT countries.CountryName FROM countries LEFT JOIN car_makers ON countries.CountryName = car_makers.Country WHERE car_makers.Country IS NULL
SELECT CountryName FROM countries EXCEPT SELECT T1.CountryName FROM countries AS T1 JOIN CAR_MAKERS AS T2 ON T1.countryId   =   T2.Country
连接数据库../datasets/cosql_dataset/database/car_1/car_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
hard pred: SELECT  DISTINCT countries.CountryName FROM countries LEFT JOIN car_makers ON countries.CountryName = car_makers.Country WHERE car_makers.Country IS NULL
hard gold: SELECT CountryName FROM countries EXCEPT SELECT T1.CountryName FROM countries AS T1 JOIN CAR_MAKERS AS T2 ON T1.countryId   =   T2.Country

当前idx1
____________________
SELECT  student_id, friend_id FROM Friend
SELECT student_id, friend_id FROM Friend
连接数据库../datasets/cosql_dataset/database/network_1/network_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT  ID FROM Highschooler
SELECT id FROM Highschooler
连接数据库../datasets/cosql_dataset/database/network_1/network_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx3
eval_err_num:270
____________________
SELECT  COUNT(ID) AS total_students FROM Highschooler
SELECT count ( id )  FROM Highschooler
连接数据库../datasets/cosql_dataset/database/network_1/network_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
easy pred: SELECT  COUNT(ID) AS total_students FROM Highschooler
easy gold: SELECT count ( id )  FROM Highschooler

当前idx4
eval_err_num:271
____________________
SELECT  COUNT(*) AS total_friends FROM Friend
SELECT count ( distinct friend_id )  FROM Friend
连接数据库../datasets/cosql_dataset/database/network_1/network_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
easy pred: SELECT  COUNT(*) AS total_friends FROM Friend
easy gold: SELECT count ( distinct friend_id )  FROM Friend

当前idx>4
____________________
SELECT  ID FROM Highschooler WHERE ID NOT IN (SELECT student_id FROM Friend)
SELECT id FROM Highschooler EXCEPT SELECT friend_id FROM Friend
连接数据库../datasets/cosql_dataset/database/network_1/network_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
hard pred: SELECT  ID FROM Highschooler WHERE ID NOT IN (SELECT student_id FROM Friend)
hard gold: SELECT id FROM Highschooler EXCEPT SELECT friend_id FROM Friend

当前idx>4
____________________
SELECT  name, grade FROM Highschooler WHERE ID = 1510
SELECT name, grade FROM Highschooler where id  =  1510
连接数据库../datasets/cosql_dataset/database/network_1/network_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx1
____________________
SELECT  DISTINCT City FROM employee
SELECT city FROM employee
连接数据库../datasets/cosql_dataset/database/employee_hire_evaluation/employee_hire_evaluation.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:True
当前idx2
____________________
SELECT  City FROM employee WHERE Age < 30 GROUP BY City HAVING COUNT(Employee_ID) > 1
SELECT city FROM employee WHERE age  <  30 GROUP BY city HAVING count ( * )   >  1
连接数据库../datasets/cosql_dataset/database/employee_hire_evaluation/employee_hire_evaluation.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:0
medium pred: SELECT  City FROM employee WHERE Age < 30 GROUP BY City HAVING COUNT(Employee_ID) > 1
medium gold: SELECT city FROM employee WHERE age  <  30 GROUP BY city HAVING count ( * )   >  1

当前idx3
____________________
SELECT  Name, Age FROM employee WHERE City = 'Bath'
SELECT Age FROM employee WHERE city  =  'Bath'
连接数据库../datasets/cosql_dataset/database/employee_hire_evaluation/employee_hire_evaluation.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
easy pred: SELECT  Name, Age FROM employee WHERE City = 'Bath'
easy gold: SELECT Age FROM employee WHERE city  =  'Bath'

当前idx1
____________________
SELECT  COUNT(*) FROM Student WHERE Age > 20
SELECT count ( * )  FROM student WHERE age  >  20
连接数据库../datasets/cosql_dataset/database/pets_1/pets_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT  COUNT(DISTINCT StuID) FROM Has_Pet WHERE StuID IN (SELECT StuID FROM Student WHERE Age > 20)
SELECT count ( * )  FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid   =   T2.stuid WHERE T1.age  >  20
连接数据库../datasets/cosql_dataset/database/pets_1/pets_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT  COUNT(DISTINCT StuID) FROM Has_Pet WHERE StuID IN (SELECT StuID FROM Student WHERE Age > 20)
medium gold: SELECT count ( * )  FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid   =   T2.stuid WHERE T1.age  >  20

当前idx1
____________________
SELECT  loser_name FROM matches WHERE loser_age = 24.626967830300003
SELECT distinct loser_name from matches where loser_age  =  24.626967830300003
连接数据库../datasets/cosql_dataset/database/wta_1/wta_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:True
当前idx2
____________________
SELECT  COUNT(*) FROM matches WHERE winner_name = 'Petra Kvitova' OR loser_name = 'Petra Kvitova'
SELECT count ( * )  from matches where loser_name  =  "Petra Kvitova" or winner_name  =  "Petra Kvitova"
连接数据库../datasets/cosql_dataset/database/wta_1/wta_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx3
____________________
SELECT  first_name, last_name, hand, birth_date, country_code FROM players WHERE player_id IN (     SELECT loser_id     FROM matches     WHERE loser_rank_points > 3500 )
SELECT distinct loser_id from matches where loser_rank_points > 3500
连接数据库../datasets/cosql_dataset/database/wta_1/wta_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
easy pred: SELECT  first_name, last_name, hand, birth_date, country_code FROM players WHERE player_id IN (     SELECT loser_id     FROM matches     WHERE loser_rank_points > 3500 )
easy gold: SELECT distinct loser_id from matches where loser_rank_points > 3500

当前idx4
eval_err_num:272
____________________
SELECT  winner_name, MAX(wins) AS max_wins FROM (     SELECT winner_name, COUNT(*) AS wins     FROM matches     GROUP BY winner_name ) GROUP BY winner_name
SELECT winner_name , winner_rank_points FROM matches GROUP BY winner_name ORDER BY count ( * )  DESC LIMIT 1
连接数据库../datasets/cosql_dataset/database/wta_1/wta_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
hard pred: SELECT  winner_name, MAX(wins) AS max_wins FROM (     SELECT winner_name, COUNT(*) AS wins     FROM matches     GROUP BY winner_name ) GROUP BY winner_name
hard gold: SELECT winner_name , winner_rank_points FROM matches GROUP BY winner_name ORDER BY count ( * )  DESC LIMIT 1

当前idx1
____________________
SELECT  name FROM Highschooler
SELECT name FROM Highschooler
连接数据库../datasets/cosql_dataset/database/network_1/network_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
eval_err_num:273
____________________
SELECT  student_id, MAX(count_likes) AS max_likes FROM (SELECT student_id, COUNT(liked_id) AS count_likes       FROM Likes       GROUP BY student_id) AS like_counts GROUP BY student_id
SELECT count ( * )  from  Likes  group by student_id order by  count ( * )  desc limit  1
连接数据库../datasets/cosql_dataset/database/network_1/network_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
hard pred: SELECT  student_id, MAX(count_likes) AS max_likes FROM (SELECT student_id, COUNT(liked_id) AS count_likes       FROM Likes       GROUP BY student_id) AS like_counts GROUP BY student_id
hard gold: SELECT count ( * )  from  Likes  group by student_id order by  count ( * )  desc limit  1

当前idx3
eval_err_num:274
____________________
SELECT  H.name FROM Highschooler H JOIN (SELECT student_id, COUNT(liked_id) AS count_likes       FROM Likes       GROUP BY student_id       ORDER BY count_likes DESC       LIMIT 1) AS max_likes ON H.ID = max_likes.student_id
SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id ORDER BY count ( * )  DESC limit 1
连接数据库../datasets/cosql_dataset/database/network_1/network_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
extra pred: SELECT  H.name FROM Highschooler H JOIN (SELECT student_id, COUNT(liked_id) AS count_likes       FROM Likes       GROUP BY student_id       ORDER BY count_likes DESC       LIMIT 1) AS max_likes ON H.ID = max_likes.student_id
extra gold: SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id ORDER BY count ( * )  DESC limit 1

当前idx1
____________________
SELECT  feature_type_name FROM Ref_Feature_Types WHERE feature_type_code = 'AirCon'
SELECT T2.feature_type_name FROM Other_Available_Features AS T1 JOIN Ref_Feature_Types AS T2 ON T1.feature_type_code   =   T2.feature_type_code WHERE T1.feature_name   =   "AirCon"
连接数据库../datasets/cosql_dataset/database/real_estate_properties/real_estate_properties.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT  feature_type_name FROM Ref_Feature_Types WHERE feature_type_code = 'AirCon'
medium gold: SELECT T2.feature_type_name FROM Other_Available_Features AS T1 JOIN Ref_Feature_Types AS T2 ON T1.feature_type_code   =   T2.feature_type_code WHERE T1.feature_name   =   "AirCon"

当前idx2
____________________
SELECT  feature_description FROM Other_Available_Features WHERE feature_name = 'AirCon'
select feature_description from Other_Available_Features  where feature_name  =  "AirCon"
连接数据库../datasets/cosql_dataset/database/real_estate_properties/real_estate_properties.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx3
eval_err_num:275
____________________
SELECT  COUNT(DISTINCT feature_id) as num_feature_ids FROM Other_Available_Features
select count ( * )  from  ( select distinct feature_id from Other_Available_Features  ) 
连接数据库../datasets/cosql_dataset/database/real_estate_properties/real_estate_properties.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
easy pred: SELECT  COUNT(DISTINCT feature_id) as num_feature_ids FROM Other_Available_Features
easy gold: select count ( * )  from  ( select distinct feature_id from Other_Available_Features  ) 

当前idx4
____________________
SELECT  feature_type_code FROM Other_Available_Features WHERE feature_name = 'AirCon'
select feature_type_code from Other_Available_Features  where feature_name  =  "AirCon"
连接数据库../datasets/cosql_dataset/database/real_estate_properties/real_estate_properties.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx1
eval_err_num:276
____________________
SELECT  transcript_date, COUNT(transcript_date) AS frequency FROM Transcripts GROUP BY transcript_date ORDER BY frequency LIMIT 1
SELECT transcript_date FROM Transcripts group by transcript_date order by count ( * )  asc limit 1
连接数据库../datasets/cosql_dataset/database/student_transcripts_tracking/student_transcripts_tracking.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
hard pred: SELECT  transcript_date, COUNT(transcript_date) AS frequency FROM Transcripts GROUP BY transcript_date ORDER BY frequency LIMIT 1
hard gold: SELECT transcript_date FROM Transcripts group by transcript_date order by count ( * )  asc limit 1

当前idx2
____________________
SELECT  COUNT(*) FROM Transcripts WHERE transcript_date = '1975-05-06 12:04:47'
SELECT count ( * )  FROM Transcripts Where transcript_date  =  "1975-05-06 12:04:47"
连接数据库../datasets/cosql_dataset/database/student_transcripts_tracking/student_transcripts_tracking.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx3
eval_err_num:277
____________________
SELECT  transcript_date, COUNT(transcript_date) AS frequency FROM Transcripts GROUP BY transcript_date ORDER BY frequency DESC LIMIT 1
SELECT transcript_date FROM Transcripts GROUP BY transcript_date ORDER BY count ( * )  desc limit 1
连接数据库../datasets/cosql_dataset/database/student_transcripts_tracking/student_transcripts_tracking.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
hard pred: SELECT  transcript_date, COUNT(transcript_date) AS frequency FROM Transcripts GROUP BY transcript_date ORDER BY frequency DESC LIMIT 1
hard gold: SELECT transcript_date FROM Transcripts GROUP BY transcript_date ORDER BY count ( * )  desc limit 1

当前idx1
____________________
SELECT  DestAirport FROM flights WHERE Airline = (SELECT uid FROM airlines WHERE Airline = 'United Airlines')
SELECT T2.DestAirport FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T1.Airline  =  "United Airlines"
连接数据库../datasets/cosql_dataset/database/flight_2/flight_2.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:0
medium pred: SELECT  DestAirport FROM flights WHERE Airline = (SELECT uid FROM airlines WHERE Airline = 'United Airlines')
medium gold: SELECT T2.DestAirport FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T1.Airline  =  "United Airlines"

当前idx2
____________________
SELECT  COUNT(DISTINCT Airline) FROM flights WHERE SourceAirport = 'APG'
SELECT COUNT ( T1.Airline )  FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.sourceAirport like "%APG%"
连接数据库../datasets/cosql_dataset/database/flight_2/flight_2.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
hard pred: SELECT  COUNT(DISTINCT Airline) FROM flights WHERE SourceAirport = 'APG'
hard gold: SELECT COUNT ( T1.Airline )  FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.sourceAirport like "%APG%"

当前idx3
____________________
SELECT  FlightNo FROM flights WHERE Airline = (SELECT uid FROM airlines WHERE Airline = 'Delta Airlines')
SELECT T2.FlightNo FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T1.Airline  =  "Delta Airlines"
连接数据库../datasets/cosql_dataset/database/flight_2/flight_2.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:0
medium pred: SELECT  FlightNo FROM flights WHERE Airline = (SELECT uid FROM airlines WHERE Airline = 'Delta Airlines')
medium gold: SELECT T2.FlightNo FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T1.Airline  =  "Delta Airlines"

当前idx1
____________________
SELECT  COUNT(DISTINCT model_list.Model) FROM model_list JOIN car_makers ON model_list.Maker = car_makers.Id WHERE car_makers.Country = 'USA'
SELECT count ( * )  FROM MODEL_LIST AS T1 JOIN CAR_MAKERS AS T2 ON T1.Maker   =   T2.Id JOIN COUNTRIES AS T3 ON T2.Country   =   T3.CountryId WHERE T3.CountryName   =   'usa'
连接数据库../datasets/cosql_dataset/database/car_1/car_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
hard pred: SELECT  COUNT(DISTINCT model_list.Model) FROM model_list JOIN car_makers ON model_list.Maker = car_makers.Id WHERE car_makers.Country = 'USA'
hard gold: SELECT count ( * )  FROM MODEL_LIST AS T1 JOIN CAR_MAKERS AS T2 ON T1.Maker   =   T2.Id JOIN COUNTRIES AS T3 ON T2.Country   =   T3.CountryId WHERE T3.CountryName   =   'usa'

当前idx2
____________________
SELECT  DISTINCT car_makers.Maker FROM model_list JOIN car_makers ON model_list.Maker = car_makers.Id WHERE car_makers.Country = 'USA'
SELECT distinct t1.maker FROM CAR_MAKERS AS T1 JOIN COUNTRIES AS T2 ON T1.Country   =   T2.CountryId WHERE T2.CountryName   =   'usa'
连接数据库../datasets/cosql_dataset/database/car_1/car_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT  DISTINCT car_makers.Maker FROM model_list JOIN car_makers ON model_list.Maker = car_makers.Id WHERE car_makers.Country = 'USA'
medium gold: SELECT distinct t1.maker FROM CAR_MAKERS AS T1 JOIN COUNTRIES AS T2 ON T1.Country   =   T2.CountryId WHERE T2.CountryName   =   'usa'

当前idx3
____________________
SELECT  COUNT(*) FROM model_list JOIN car_makers ON model_list.Maker = car_makers.Id WHERE car_makers.Maker = 'Ford'
select count (  * )  from model_list as t1 join car_makers as t2 where t1.maker  =  t2.id and t2.maker  =  "ford"
连接数据库../datasets/cosql_dataset/database/car_1/car_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT  COUNT(*) FROM model_list JOIN car_makers ON model_list.Maker = car_makers.Id WHERE car_makers.Maker = 'Ford'
medium gold: select count (  * )  from model_list as t1 join car_makers as t2 where t1.maker  =  t2.id and t2.maker  =  "ford"

当前idx1
eval_err_num:278
____________________
SELECT  h.name FROM Highschooler h JOIN Likes l ON h.ID = l.student_id GROUP BY h.ID HAVING COUNT(l.liked_id) >= 2
SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id   =   T2.id GROUP BY T1.student_id HAVING count ( * )    > =    2
连接数据库../datasets/cosql_dataset/database/network_1/network_1.sqlite
执行第一个查询
执行第二个查询
执行出错: near "=": syntax error
eval_exec:False
exact_score:0
medium pred: SELECT  h.name FROM Highschooler h JOIN Likes l ON h.ID = l.student_id GROUP BY h.ID HAVING COUNT(l.liked_id) >= 2
medium gold: SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id   =   T2.id GROUP BY T1.student_id HAVING count ( * )    > =    2

当前idx2
eval_err_num:279
____________________
SELECT  h.name FROM Highschooler h JOIN Likes l ON h.ID = l.student_id GROUP BY h.ID HAVING COUNT(l.liked_id) = 1
SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id   =   T2.id GROUP BY T1.student_id HAVING count ( * )    > =    1
连接数据库../datasets/cosql_dataset/database/network_1/network_1.sqlite
执行第一个查询
执行第二个查询
执行出错: near "=": syntax error
eval_exec:False
exact_score:0
medium pred: SELECT  h.name FROM Highschooler h JOIN Likes l ON h.ID = l.student_id GROUP BY h.ID HAVING COUNT(l.liked_id) = 1
medium gold: SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id   =   T2.id GROUP BY T1.student_id HAVING count ( * )    > =    1

当前idx3
eval_err_num:280
____________________
SELECT  h.ID FROM Highschooler h JOIN Likes l ON h.ID = l.student_id GROUP BY h.ID HAVING COUNT(l.liked_id) = 1
SELECT T2.id FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id   =   T2.id GROUP BY T1.student_id HAVING count ( * )    > =    1
连接数据库../datasets/cosql_dataset/database/network_1/network_1.sqlite
执行第一个查询
执行第二个查询
执行出错: near "=": syntax error
eval_exec:False
exact_score:0
medium pred: SELECT  h.ID FROM Highschooler h JOIN Likes l ON h.ID = l.student_id GROUP BY h.ID HAVING COUNT(l.liked_id) = 1
medium gold: SELECT T2.id FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id   =   T2.id GROUP BY T1.student_id HAVING count ( * )    > =    1

当前idx1
____________________
SELECT  DestAirport FROM flights WHERE Airline = 1
SELECT DestAirport FROM flights WHERE airline   =   "1"
连接数据库../datasets/cosql_dataset/database/flight_2/flight_2.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT  Country FROM airlines WHERE Airline = 'United Airlines'
SELECT COUNTRY FROM AIRLINES WHERE AIRLINE   =   "United Airlines"
连接数据库../datasets/cosql_dataset/database/flight_2/flight_2.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx3
____________________
SELECT  SourceAirport FROM flights WHERE Airline = (SELECT uid FROM airlines WHERE Abbreviation = 'ASY')
SELECT SourceAirport FROM flights WHERE DestAirport   =   "ASY"
连接数据库../datasets/cosql_dataset/database/flight_2/flight_2.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:0
easy pred: SELECT  SourceAirport FROM flights WHERE Airline = (SELECT uid FROM airlines WHERE Abbreviation = 'ASY')
easy gold: SELECT SourceAirport FROM flights WHERE DestAirport   =   "ASY"

当前idx4
____________________
SELECT  Country FROM airlines WHERE Airline = 'US Airways'
SELECT country FROM Airlines WHERE Airline   =   "US Airways"
连接数据库../datasets/cosql_dataset/database/flight_2/flight_2.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx>4
____________________
SELECT  Airline FROM airlines WHERE Country = 'USA'
SELECT Airline FROM Airlines WHERE country   =   "USA"
连接数据库../datasets/cosql_dataset/database/flight_2/flight_2.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx1
eval_err_num:281
____________________
SELECT  AVG(grade) AS average_grade FROM Highschooler
SELECT AVG ( grade )  FROM Highschooler
连接数据库../datasets/cosql_dataset/database/network_1/network_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
easy pred: SELECT  AVG(grade) AS average_grade FROM Highschooler
easy gold: SELECT AVG ( grade )  FROM Highschooler

当前idx2
____________________
SELECT  name FROM Highschooler WHERE name LIKE 'A%'
SELECT AVG ( grade )  FROM Highschooler
连接数据库../datasets/cosql_dataset/database/network_1/network_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
easy pred: SELECT  name FROM Highschooler WHERE name LIKE 'A%'
easy gold: SELECT AVG ( grade )  FROM Highschooler

当前idx3
eval_err_num:282
____________________
SELECT  MAX(grade) AS best_grade FROM Highschooler
SELECT MAX ( grade )  FROM Highschooler
连接数据库../datasets/cosql_dataset/database/network_1/network_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
easy pred: SELECT  MAX(grade) AS best_grade FROM Highschooler
easy gold: SELECT MAX ( grade )  FROM Highschooler

当前idx1
eval_err_num:283
____________________
SELECT  p.Name FROM poker_player pp JOIN people p ON pp.People_ID = p.People_ID ORDER BY pp.Final_Table_Made ASC
SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID   =   T2.People_ID ORDER BY T2.Final_Table_Made
连接数据库../datasets/cosql_dataset/database/poker_player/poker_player.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT  p.Name FROM poker_player pp JOIN people p ON pp.People_ID = p.People_ID ORDER BY pp.Final_Table_Made ASC
medium gold: SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID   =   T2.People_ID ORDER BY T2.Final_Table_Made

当前idx2
eval_err_num:284
____________________
SELECT  DISTINCT p.Nationality FROM poker_player pp JOIN people p ON pp.People_ID = p.People_ID ORDER BY pp.Final_Table_Made ASC
SELECT T1.Nationality FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID   =   T2.People_ID ORDER BY T2.Final_Table_Made
连接数据库../datasets/cosql_dataset/database/poker_player/poker_player.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT  DISTINCT p.Nationality FROM poker_player pp JOIN people p ON pp.People_ID = p.People_ID ORDER BY pp.Final_Table_Made ASC
medium gold: SELECT T1.Nationality FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID   =   T2.People_ID ORDER BY T2.Final_Table_Made

当前idx3
eval_err_num:285
____________________
SELECT  p.Name FROM poker_player pp JOIN people p ON pp.People_ID = p.People_ID ORDER BY pp.Earnings DESC LIMIT 1
SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID   =   T2.People_ID ORDER BY T2.Earnings desc limit 1
连接数据库../datasets/cosql_dataset/database/poker_player/poker_player.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
hard pred: SELECT  p.Name FROM poker_player pp JOIN people p ON pp.People_ID = p.People_ID ORDER BY pp.Earnings DESC LIMIT 1
hard gold: SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID   =   T2.People_ID ORDER BY T2.Earnings desc limit 1

当前idx4
eval_err_num:286
____________________
SELECT  p.Name FROM poker_player pp JOIN people p ON pp.People_ID = p.People_ID WHERE pp.Earnings IS NOT NULL ORDER BY pp.Earnings ASC LIMIT 1
SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID   =   T2.People_ID ORDER BY T2.Earnings limit 1
连接数据库../datasets/cosql_dataset/database/poker_player/poker_player.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
hard pred: SELECT  p.Name FROM poker_player pp JOIN people p ON pp.People_ID = p.People_ID WHERE pp.Earnings IS NOT NULL ORDER BY pp.Earnings ASC LIMIT 1
hard gold: SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID   =   T2.People_ID ORDER BY T2.Earnings limit 1

当前idx>4
eval_err_num:287
____________________
SELECT  pp.Best_Finish FROM poker_player pp JOIN people p ON pp.People_ID = p.People_ID WHERE p.Name = (SELECT p.Name                 FROM poker_player pp                 JOIN people p ON pp.People_ID = p.People_ID                 WHERE pp.Earnings IS NOT NULL                 ORDER BY pp.Earnings ASC                 LIMIT 1)
SELECT T2.Best_Finish FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID   =   T2.People_ID ORDER BY T2.Earnings  limit 1
连接数据库../datasets/cosql_dataset/database/poker_player/poker_player.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
hard pred: SELECT  pp.Best_Finish FROM poker_player pp JOIN people p ON pp.People_ID = p.People_ID WHERE p.Name = (SELECT p.Name                 FROM poker_player pp                 JOIN people p ON pp.People_ID = p.People_ID                 WHERE pp.Earnings IS NOT NULL                 ORDER BY pp.Earnings ASC                 LIMIT 1)
hard gold: SELECT T2.Best_Finish FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID   =   T2.People_ID ORDER BY T2.Earnings  limit 1

当前idx1
____________________
SELECT  transcript_date FROM Transcripts
select transcript_date from Transcripts
连接数据库../datasets/cosql_dataset/database/student_transcripts_tracking/student_transcripts_tracking.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
eval_err_num:288
____________________
SELECT  MAX(transcript_date) AS most_recent_release_date FROM Transcripts
SELECT transcript_date FROM Transcripts ORDER BY transcript_date DESC LIMIT 1
连接数据库../datasets/cosql_dataset/database/student_transcripts_tracking/student_transcripts_tracking.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT  MAX(transcript_date) AS most_recent_release_date FROM Transcripts
medium gold: SELECT transcript_date FROM Transcripts ORDER BY transcript_date DESC LIMIT 1

当前idx3
____________________
SELECT  transcript_date FROM Transcripts ORDER BY transcript_date DESC LIMIT 1
SELECT transcript_date FROM Transcripts ORDER BY transcript_date DESC LIMIT 1
连接数据库../datasets/cosql_dataset/database/student_transcripts_tracking/student_transcripts_tracking.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx1
____________________
SELECT  Title  FROM Cartoon  ORDER BY Original_air_date DESC  LIMIT 1
SELECT Title FROM cartoon ORDER BY original_air_date LIMIT 1
连接数据库../datasets/cosql_dataset/database/tvshow/tvshow.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT  Title  FROM Cartoon  ORDER BY Original_air_date DESC  LIMIT 1
medium gold: SELECT Title FROM cartoon ORDER BY original_air_date LIMIT 1

当前idx2
____________________
SELECT  Channel  FROM Cartoon  ORDER BY Original_air_date DESC  LIMIT 1
SELECT Channel FROM cartoon ORDER BY original_air_date LIMIT 1
连接数据库../datasets/cosql_dataset/database/tvshow/tvshow.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT  Channel  FROM Cartoon  ORDER BY Original_air_date DESC  LIMIT 1
medium gold: SELECT Channel FROM cartoon ORDER BY original_air_date LIMIT 1

当前idx3
____________________
SELECT  Production_code, Channel  FROM Cartoon  ORDER BY Original_air_date DESC  LIMIT 1
SELECT production_code ,  channel, original_air_date FROM cartoon ORDER BY original_air_date desc LIMIT 1
连接数据库../datasets/cosql_dataset/database/tvshow/tvshow.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT  Production_code, Channel  FROM Cartoon  ORDER BY Original_air_date DESC  LIMIT 1
medium gold: SELECT production_code ,  channel, original_air_date FROM cartoon ORDER BY original_air_date desc LIMIT 1

当前idx1
____________________
SELECT  Version_Number FROM Templates WHERE Template_ID = 3
SELECT Version_Number from Templates where Template_ID  =  3
连接数据库../datasets/cosql_dataset/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT  Document_Name FROM Documents WHERE Template_ID = 25
SELECT t2.Document_Name from Templates as t1 join Documents as t2 on t1.Template_ID  =  t2.Template_ID where t1.Template_ID  =  25
连接数据库../datasets/cosql_dataset/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:False
medium pred: SELECT  Document_Name FROM Documents WHERE Template_ID = 25
medium gold: SELECT t2.Document_Name from Templates as t1 join Documents as t2 on t1.Template_ID  =  t2.Template_ID where t1.Template_ID  =  25

当前idx3
eval_err_num:289
____________________
SELECT  Template_Type_Code FROM Ref_Template_Types WHERE Template_Type_Code NOT IN (     SELECT DISTINCT Templates.Template_Type_Code     FROM Templates     INNER JOIN Documents ON Templates.Template_ID = Documents.Template_ID )
SELECT template_type_code FROM Templates EXCEPT SELECT template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id
连接数据库../datasets/cosql_dataset/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
hard pred: SELECT  Template_Type_Code FROM Ref_Template_Types WHERE Template_Type_Code NOT IN (     SELECT DISTINCT Templates.Template_Type_Code     FROM Templates     INNER JOIN Documents ON Templates.Template_ID = Documents.Template_ID )
hard gold: SELECT template_type_code FROM Templates EXCEPT SELECT template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id

当前idx4
____________________
SELECT  Version_Number FROM Templates WHERE Template_ID = 4
SELECT Version_Number from Templates where Template_ID  =  4
连接数据库../datasets/cosql_dataset/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx1
____________________
SELECT  FlightNo FROM flights WHERE SourceAirport = 'AHD'
SELECT FlightNo FROM FLIGHTS WHERE SourceAirport   =  "AHD"
连接数据库../datasets/cosql_dataset/database/flight_2/flight_2.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT  DISTINCT airlines.Airline FROM flights JOIN airlines ON flights.Airline = airlines.uid WHERE flights.SourceAirport = 'AHD'
SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid   =   T2.Airline WHERE T2.SourceAirport   =   " AHD"
连接数据库../datasets/cosql_dataset/database/flight_2/flight_2.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:True
当前idx1
____________________
SELECT  COUNT(*)  FROM stadium  WHERE Average > 1000
SELECT count ( * )  FROM stadium WHERE average > 1000
连接数据库../datasets/cosql_dataset/database/concert_singer/concert_singer.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT  Name  FROM stadium  WHERE Average = (SELECT MIN(Average) FROM stadium)
SELECT name FROM stadium ORDER BY average LIMIT 1
连接数据库../datasets/cosql_dataset/database/concert_singer/concert_singer.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:0
medium pred: SELECT  Name  FROM stadium  WHERE Average = (SELECT MIN(Average) FROM stadium)
medium gold: SELECT name FROM stadium ORDER BY average LIMIT 1

当前idx3
____________________
SELECT  Name  FROM stadium  WHERE Average = (SELECT MAX(Average) FROM stadium)
SELECT name FROM stadium ORDER BY average DESC LIMIT 1
连接数据库../datasets/cosql_dataset/database/concert_singer/concert_singer.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:0
medium pred: SELECT  Name  FROM stadium  WHERE Average = (SELECT MAX(Average) FROM stadium)
medium gold: SELECT name FROM stadium ORDER BY average DESC LIMIT 1

当前idx1
eval_err_num:290
____________________
SELECT  c1.Name AS AfricanCountry FROM country c1 WHERE c1.Continent = 'Africa' AND c1.Population < (SELECT MIN(c2.Population)                      FROM country c2                      WHERE c2.Continent = 'Asia')
SELECT Name FROM country WHERE Continent   =   "Africa"  AND population  <   ( SELECT min ( population )  FROM country WHERE Continent   =   "Asia" ) 
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
extra pred: SELECT  c1.Name AS AfricanCountry FROM country c1 WHERE c1.Continent = 'Africa' AND c1.Population < (SELECT MIN(c2.Population)                      FROM country c2                      WHERE c2.Continent = 'Asia')
extra gold: SELECT Name FROM country WHERE Continent   =   "Africa"  AND population  <   ( SELECT min ( population )  FROM country WHERE Continent   =   "Asia" ) 

当前idx2
eval_err_num:291
____________________
SELECT  c1.Name AS AsianCountry FROM country c1 WHERE c1.Continent = 'Asia' AND c1.Population < (SELECT MIN(c2.Population)                      FROM country c2                      WHERE c2.Continent = 'Africa')
SELECT Name FROM country WHERE Continent   =   "Asia"  AND population  <   ( SELECT min ( population )  FROM country WHERE Continent   =   "Africa" ) 
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
extra pred: SELECT  c1.Name AS AsianCountry FROM country c1 WHERE c1.Continent = 'Asia' AND c1.Population < (SELECT MIN(c2.Population)                      FROM country c2                      WHERE c2.Continent = 'Africa')
extra gold: SELECT Name FROM country WHERE Continent   =   "Asia"  AND population  <   ( SELECT min ( population )  FROM country WHERE Continent   =   "Africa" ) 

当前idx3
eval_err_num:292
____________________
SELECT  c.Name AS AsianCountry FROM country c WHERE c.Continent = 'Asia' ORDER BY c.LifeExpectancy DESC LIMIT 1
SELECT Name FROM country WHERE Continent  =  "Asia" ORDER BY LifeExpectancy DESC LIMIT 1
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
hard pred: SELECT  c.Name AS AsianCountry FROM country c WHERE c.Continent = 'Asia' ORDER BY c.LifeExpectancy DESC LIMIT 1
hard gold: SELECT Name FROM country WHERE Continent  =  "Asia" ORDER BY LifeExpectancy DESC LIMIT 1

当前idx1
eval_err_num:293
____________________
SELECT  COUNT(*) AS num_dogs_without_treatment FROM Dogs WHERE dog_id NOT IN (SELECT DISTINCT dog_id FROM Treatments)
SELECT count ( * )  FROM Dogs WHERE dog_id NOT IN  (  SELECT dog_id FROM Treatments  ) 
连接数据库../datasets/cosql_dataset/database/dog_kennels/dog_kennels.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
extra pred: SELECT  COUNT(*) AS num_dogs_without_treatment FROM Dogs WHERE dog_id NOT IN (SELECT DISTINCT dog_id FROM Treatments)
extra gold: SELECT count ( * )  FROM Dogs WHERE dog_id NOT IN  (  SELECT dog_id FROM Treatments  ) 

当前idx2
eval_err_num:294
____________________
SELECT  COUNT(*) AS num_abandoned_dogs_without_treatment FROM Dogs WHERE dog_id NOT IN (SELECT DISTINCT dog_id FROM Treatments) AND abandoned_yn = 'yes'
SELECT count ( * )  FROM Dogs WHERE abandoned_yn  =  1 AND dog_id NOT IN  (  SELECT dog_id FROM Treatments  ) 
连接数据库../datasets/cosql_dataset/database/dog_kennels/dog_kennels.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
extra pred: SELECT  COUNT(*) AS num_abandoned_dogs_without_treatment FROM Dogs WHERE dog_id NOT IN (SELECT DISTINCT dog_id FROM Treatments) AND abandoned_yn = 'yes'
extra gold: SELECT count ( * )  FROM Dogs WHERE abandoned_yn  =  1 AND dog_id NOT IN  (  SELECT dog_id FROM Treatments  ) 

当前idx3
eval_err_num:295
____________________
SELECT  d.dog_id, t.treatment_type_code FROM Dogs d LEFT JOIN Treatments t ON d.dog_id = t.dog_id WHERE d.abandoned_yn = 'yes'
SELECT T1.dog_id, T2.treatment_type_code FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id  =  T2.dog_id WHERE abandoned_yn  =  1
连接数据库../datasets/cosql_dataset/database/dog_kennels/dog_kennels.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT  d.dog_id, t.treatment_type_code FROM Dogs d LEFT JOIN Treatments t ON d.dog_id = t.dog_id WHERE d.abandoned_yn = 'yes'
medium gold: SELECT T1.dog_id, T2.treatment_type_code FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id  =  T2.dog_id WHERE abandoned_yn  =  1

当前idx1
____________________
SELECT  Age  FROM employee  WHERE Name = 'George Chuter'
select age from employee where name  =  "George Chuter"
连接数据库../datasets/cosql_dataset/database/employee_hire_evaluation/employee_hire_evaluation.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT  Bonus  FROM evaluation  WHERE Employee_ID = 1  SELECT City  FROM employee  WHERE Name = 'Lee Mears'
select city from employee where name  =  "Lee Mears"
连接数据库../datasets/cosql_dataset/database/employee_hire_evaluation/employee_hire_evaluation.sqlite
执行第一个查询
执行出错: near "SELECT": syntax error
eval_exec:False
exact_score:0
easy pred: SELECT  Bonus  FROM evaluation  WHERE Employee_ID = 1  SELECT City  FROM employee  WHERE Name = 'Lee Mears'
easy gold: select city from employee where name  =  "Lee Mears"

当前idx1
____________________
SELECT  degree_program_id, degree_summary_name FROM Degree_Programs WHERE degree_program_id = (     SELECT degree_program_id     FROM Student_Enrolment     GROUP BY degree_program_id     ORDER BY COUNT(student_id) DESC     LIMIT 1 )
SELECT T1.degree_program_id ,  T1.degree_summary_name FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id   =   T2.degree_program_id GROUP BY T1.degree_program_id ORDER BY count ( * )  DESC LIMIT 1
连接数据库../datasets/cosql_dataset/database/student_transcripts_tracking/student_transcripts_tracking.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:0
extra pred: SELECT  degree_program_id, degree_summary_name FROM Degree_Programs WHERE degree_program_id = (     SELECT degree_program_id     FROM Student_Enrolment     GROUP BY degree_program_id     ORDER BY COUNT(student_id) DESC     LIMIT 1 )
extra gold: SELECT T1.degree_program_id ,  T1.degree_summary_name FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id   =   T2.degree_program_id GROUP BY T1.degree_program_id ORDER BY count ( * )  DESC LIMIT 1

当前idx2
____________________
SELECT  degree_program_id, degree_summary_name FROM Degree_Programs WHERE degree_program_id = (     SELECT degree_program_id     FROM Student_Enrolment     GROUP BY degree_program_id     ORDER BY COUNT(student_id) DESC     LIMIT 1 )
SELECT T1.degree_program_id  FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id   =   T2.degree_program_id GROUP BY T1.degree_program_id ORDER BY count ( * )  DESC LIMIT 1
连接数据库../datasets/cosql_dataset/database/student_transcripts_tracking/student_transcripts_tracking.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
extra pred: SELECT  degree_program_id, degree_summary_name FROM Degree_Programs WHERE degree_program_id = (     SELECT degree_program_id     FROM Student_Enrolment     GROUP BY degree_program_id     ORDER BY COUNT(student_id) DESC     LIMIT 1 )
extra gold: SELECT T1.degree_program_id  FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id   =   T2.degree_program_id GROUP BY T1.degree_program_id ORDER BY count ( * )  DESC LIMIT 1

当前idx3
eval_err_num:296
____________________
SELECT  COUNT(student_id) AS total_students FROM Student_Enrolment WHERE degree_program_id = 9
SELECT COUNT ( * )  FROM Student_Enrolment WHERE degree_program_id  =  "9"
连接数据库../datasets/cosql_dataset/database/student_transcripts_tracking/student_transcripts_tracking.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
easy pred: SELECT  COUNT(student_id) AS total_students FROM Student_Enrolment WHERE degree_program_id = 9
easy gold: SELECT COUNT ( * )  FROM Student_Enrolment WHERE degree_program_id  =  "9"

当前idx4
eval_err_num:297
____________________
SELECT  COUNT(se.student_id) AS total_master_students FROM Student_Enrolment se JOIN Degree_Programs dp ON se.degree_program_id = dp.degree_program_id WHERE dp.degree_summary_name = 'Master' AND dp.degree_program_id = 9
SELECT COUNT ( * )  FROM Degree_Programs WHERE degree_summary_name  =  "Master" AND degree_program_id  =  "9"
连接数据库../datasets/cosql_dataset/database/student_transcripts_tracking/student_transcripts_tracking.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT  COUNT(se.student_id) AS total_master_students FROM Student_Enrolment se JOIN Degree_Programs dp ON se.degree_program_id = dp.degree_program_id WHERE dp.degree_summary_name = 'Master' AND dp.degree_program_id = 9
medium gold: SELECT COUNT ( * )  FROM Degree_Programs WHERE degree_summary_name  =  "Master" AND degree_program_id  =  "9"

当前idx>4
____________________
SELECT  degree_program_id, degree_summary_name FROM Degree_Programs WHERE degree_program_id = (     SELECT degree_program_id     FROM Student_Enrolment     GROUP BY degree_program_id     ORDER BY COUNT(student_id) ASC     LIMIT 1 )
SELECT T1.degree_program_id ,  T1.degree_summary_name FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id   =   T2.degree_program_id GROUP BY T1.degree_program_id ORDER BY count ( * )  limit 1
连接数据库../datasets/cosql_dataset/database/student_transcripts_tracking/student_transcripts_tracking.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:0
extra pred: SELECT  degree_program_id, degree_summary_name FROM Degree_Programs WHERE degree_program_id = (     SELECT degree_program_id     FROM Student_Enrolment     GROUP BY degree_program_id     ORDER BY COUNT(student_id) ASC     LIMIT 1 )
extra gold: SELECT T1.degree_program_id ,  T1.degree_summary_name FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id   =   T2.degree_program_id GROUP BY T1.degree_program_id ORDER BY count ( * )  limit 1

当前idx>4
eval_err_num:298
____________________
SELECT  COUNT(student_id) AS total_students FROM Student_Enrolment WHERE degree_program_id = 3
SELECT COUNT ( * )  FROM Student_Enrolment where degree_program_id  =  "3"
连接数据库../datasets/cosql_dataset/database/student_transcripts_tracking/student_transcripts_tracking.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
easy pred: SELECT  COUNT(student_id) AS total_students FROM Student_Enrolment WHERE degree_program_id = 3
easy gold: SELECT COUNT ( * )  FROM Student_Enrolment where degree_program_id  =  "3"

当前idx1
eval_err_num:299
____________________
SELECT  SUM(cost_of_treatment) AS total_cost_of_treatment FROM Treatments
SELECT sum ( cost_of_treatment )  from treatments
连接数据库../datasets/cosql_dataset/database/dog_kennels/dog_kennels.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
easy pred: SELECT  SUM(cost_of_treatment) AS total_cost_of_treatment FROM Treatments
easy gold: SELECT sum ( cost_of_treatment )  from treatments

当前idx2
eval_err_num:300
____________________
SELECT  p.first_name, p.last_name, MIN(t.cost_of_treatment) AS lowest_cost_of_treatment FROM Treatments t JOIN Professionals p ON t.professional_id = p.professional_id WHERE t.cost_of_treatment = (SELECT MIN(cost_of_treatment) FROM Treatments)
select T1.first_name, T1.last_name from Professionals as T1 join Treatments as T2 on T1.professional_id  =  T2.professional_id order by T2.cost_of_treatment asc limit 1
连接数据库../datasets/cosql_dataset/database/dog_kennels/dog_kennels.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
hard pred: SELECT  p.first_name, p.last_name, MIN(t.cost_of_treatment) AS lowest_cost_of_treatment FROM Treatments t JOIN Professionals p ON t.professional_id = p.professional_id WHERE t.cost_of_treatment = (SELECT MIN(cost_of_treatment) FROM Treatments)
hard gold: select T1.first_name, T1.last_name from Professionals as T1 join Treatments as T2 on T1.professional_id  =  T2.professional_id order by T2.cost_of_treatment asc limit 1

当前idx3
eval_err_num:301
____________________
SELECT  t.dog_id FROM Treatments t WHERE t.cost_of_treatment = (SELECT MIN(cost_of_treatment) FROM Treatments)
select dog_id from treatments order by cost_of_treatment asc limit 1
连接数据库../datasets/cosql_dataset/database/dog_kennels/dog_kennels.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT  t.dog_id FROM Treatments t WHERE t.cost_of_treatment = (SELECT MIN(cost_of_treatment) FROM Treatments)
medium gold: select dog_id from treatments order by cost_of_treatment asc limit 1

当前idx1
____________________
SELECT  ContId, Continent FROM continents
SELECT ContId ,  Continent  FROM CONTINENTS
连接数据库../datasets/cosql_dataset/database/car_1/car_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
eval_err_num:302
____________________
SELECT  c.Continent, COUNT(*) AS NumCountries FROM continents c JOIN countries co ON c.ContId = co.Continent GROUP BY c.Continent
SELECT T1.Continent ,  count ( * )  FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId   =   T2.Continent GROUP BY T1.ContId
连接数据库../datasets/cosql_dataset/database/car_1/car_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT  c.Continent, COUNT(*) AS NumCountries FROM continents c JOIN countries co ON c.ContId = co.Continent GROUP BY c.Continent
medium gold: SELECT T1.Continent ,  count ( * )  FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId   =   T2.Continent GROUP BY T1.ContId

当前idx3
eval_err_num:303
____________________
SELECT  c.Continent, COUNT(*) AS NumCountries FROM continents c JOIN countries co ON c.ContId = co.Continent GROUP BY c.Continent ORDER BY NumCountries DESC LIMIT 1
SELECT T1.Continent ,  count ( * )  FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId   =   T2.Continent GROUP BY T1.ContId ORDER BY count ( * )  DESC LIMIT 1
连接数据库../datasets/cosql_dataset/database/car_1/car_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
extra pred: SELECT  c.Continent, COUNT(*) AS NumCountries FROM continents c JOIN countries co ON c.ContId = co.Continent GROUP BY c.Continent ORDER BY NumCountries DESC LIMIT 1
extra gold: SELECT T1.Continent ,  count ( * )  FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId   =   T2.Continent GROUP BY T1.ContId ORDER BY count ( * )  DESC LIMIT 1

当前idx1
eval_err_num:304
____________________
SELECT  d.Document_ID, d.Document_Name, COUNT(p.Paragraph_ID) AS Number_of_Paragraphs FROM Documents d LEFT JOIN Paragraphs p ON d.Document_ID = p.Document_ID GROUP BY d.Document_ID, d.Document_Name
SELECT T1.document_id ,  T2.document_name ,  count ( * )  FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id   =   T2.document_id GROUP BY T1.document_id
连接数据库../datasets/cosql_dataset/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT  d.Document_ID, d.Document_Name, COUNT(p.Paragraph_ID) AS Number_of_Paragraphs FROM Documents d LEFT JOIN Paragraphs p ON d.Document_ID = p.Document_ID GROUP BY d.Document_ID, d.Document_Name
medium gold: SELECT T1.document_id ,  T2.document_name ,  count ( * )  FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id   =   T2.document_id GROUP BY T1.document_id

当前idx2
____________________
SELECT  Paragraph_Text FROM Paragraphs
SELECT Paragraph_Text FROM Paragraphs
连接数据库../datasets/cosql_dataset/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx3
eval_err_num:305
____________________
SELECT  Paragraph_Text FROM Paragraphs WHERE Other_Details IS NOT NULL
SELECT Paragraph_Text FROM Paragraphs WHERE Other_Details ! =  "NULL"
连接数据库../datasets/cosql_dataset/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite
执行第一个查询
执行第二个查询
执行出错: unrecognized token: "!"
eval_exec:False
exact_score:0
easy pred: SELECT  Paragraph_Text FROM Paragraphs WHERE Other_Details IS NOT NULL
easy gold: SELECT Paragraph_Text FROM Paragraphs WHERE Other_Details ! =  "NULL"

当前idx1
____________________
SELECT  Title FROM Cartoon WHERE Written_by = 'Todd Casey'
select * from Cartoon where Written_by  =  'Todd Casey'
连接数据库../datasets/cosql_dataset/database/tvshow/tvshow.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
easy pred: SELECT  Title FROM Cartoon WHERE Written_by = 'Todd Casey'
easy gold: select * from Cartoon where Written_by  =  'Todd Casey'

当前idx2
____________________
SELECT  Title FROM Cartoon WHERE Written_by = 'Todd Casey'
select Title from Cartoon where Written_by  =  'Todd Casey'
连接数据库../datasets/cosql_dataset/database/tvshow/tvshow.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx3
____________________
SELECT  Cartoon.Title, Cartoon.Channel FROM Cartoon WHERE Cartoon.Written_by = 'Todd Casey'
SELECT T1.id FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id  =  T2.Channel WHERE T2.written_by  =  'Todd Casey'
连接数据库../datasets/cosql_dataset/database/tvshow/tvshow.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT  Cartoon.Title, Cartoon.Channel FROM Cartoon WHERE Cartoon.Written_by = 'Todd Casey'
medium gold: SELECT T1.id FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id  =  T2.Channel WHERE T2.written_by  =  'Todd Casey'

当前idx1
eval_err_num:306
____________________
SELECT  SUM(Total_spent) AS Total_Amount_Spent FROM visit JOIN visitor ON visit.visitor_ID = visitor.ID WHERE visitor.Level_of_membership = 1
SELECT sum ( t2.Total_spent )  FROM visitor AS t1 JOIN visit AS t2 ON t1.id   =   t2.visitor_id WHERE t1.Level_of_membership   =   1
连接数据库../datasets/cosql_dataset/database/museum_visit/museum_visit.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT  SUM(Total_spent) AS Total_Amount_Spent FROM visit JOIN visitor ON visit.visitor_ID = visitor.ID WHERE visitor.Level_of_membership = 1
medium gold: SELECT sum ( t2.Total_spent )  FROM visitor AS t1 JOIN visit AS t2 ON t1.id   =   t2.visitor_id WHERE t1.Level_of_membership   =   1

当前idx2
eval_err_num:307
____________________
SELECT  COUNT(*) AS Total_Visitors_Level_1 FROM visitor WHERE Level_of_membership = 1
SELECT COUNT ( id )  FROM visitor WHERE Level_of_membership  =  1
连接数据库../datasets/cosql_dataset/database/museum_visit/museum_visit.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
easy pred: SELECT  COUNT(*) AS Total_Visitors_Level_1 FROM visitor WHERE Level_of_membership = 1
easy gold: SELECT COUNT ( id )  FROM visitor WHERE Level_of_membership  =  1

当前idx3
eval_err_num:308
____________________
SELECT  COUNT(DISTINCT Level_of_membership) AS Total_Membership_Levels FROM visitor
SELECT COUNT ( DISTINCT level_of_membership )  FROM visitor
连接数据库../datasets/cosql_dataset/database/museum_visit/museum_visit.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
easy pred: SELECT  COUNT(DISTINCT Level_of_membership) AS Total_Membership_Levels FROM visitor
easy gold: SELECT COUNT ( DISTINCT level_of_membership )  FROM visitor

当前idx4
____________________
SELECT  Name FROM visitor WHERE Level_of_membership = 1
SELECT name FROM visitor WHERE Level_of_membership  =  1
连接数据库../datasets/cosql_dataset/database/museum_visit/museum_visit.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx>4
eval_err_num:309
____________________
SELECT  Level_of_membership, SUM(Total_spent) AS Total_Amount_Spent FROM visit JOIN visitor ON visit.visitor_ID = visitor.ID GROUP BY Level_of_membership
SELECT  t1.level_of_membership, sum ( Total_spent )  FROM visitor AS t1 JOIN visit AS t2 ON t1.id   =   t2.visitor_id group by Level_of_membership
连接数据库../datasets/cosql_dataset/database/museum_visit/museum_visit.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT  Level_of_membership, SUM(Total_spent) AS Total_Amount_Spent FROM visit JOIN visitor ON visit.visitor_ID = visitor.ID GROUP BY Level_of_membership
medium gold: SELECT  t1.level_of_membership, sum ( Total_spent )  FROM visitor AS t1 JOIN visit AS t2 ON t1.id   =   t2.visitor_id group by Level_of_membership

当前idx1
____________________
SELECT  first_name FROM players WHERE player_id = 200001
SELECT first_name FROM players WHERE player_id  =  200001
连接数据库../datasets/cosql_dataset/database/wta_1/wta_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT  birth_date FROM players WHERE player_id = 200001
SELECT birth_date FROM players WHERE player_id  =  200001
连接数据库../datasets/cosql_dataset/database/wta_1/wta_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx3
____________________
SELECT  country_code FROM players WHERE player_id = 200003
SELECT country_code FROM players WHERE player_id  =  200003
连接数据库../datasets/cosql_dataset/database/wta_1/wta_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx4
____________________
SELECT  last_name FROM players WHERE player_id = 200003
SELECT last_name FROM players WHERE player_id  =  200003
连接数据库../datasets/cosql_dataset/database/wta_1/wta_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx1
eval_err_num:310
____________________
SELECT  COUNT(Paragraph_ID) AS Number_of_Paragraphs FROM Paragraphs WHERE Document_ID = (SELECT Document_ID                      FROM Documents                      WHERE Document_Name = 'Welcome to NY')
SELECT count ( * )  FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id   =   T2.document_id WHERE T2.Document_Name   =   'Welcome to NY'
连接数据库../datasets/cosql_dataset/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT  COUNT(Paragraph_ID) AS Number_of_Paragraphs FROM Paragraphs WHERE Document_ID = (SELECT Document_ID                      FROM Documents                      WHERE Document_Name = 'Welcome to NY')
medium gold: SELECT count ( * )  FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id   =   T2.document_id WHERE T2.Document_Name   =   'Welcome to NY'

当前idx2
____________________
SELECT  Paragraph_Text FROM Paragraphs WHERE Document_ID = (SELECT Document_ID                      FROM Documents                      WHERE Document_Name = 'Welcome to NY')
SELECT T1.paragraph_text FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id   =   T2.document_id WHERE T2.Document_Name   =   'Welcome to NY'
连接数据库../datasets/cosql_dataset/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:0
medium pred: SELECT  Paragraph_Text FROM Paragraphs WHERE Document_ID = (SELECT Document_ID                      FROM Documents                      WHERE Document_Name = 'Welcome to NY')
medium gold: SELECT T1.paragraph_text FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id   =   T2.document_id WHERE T2.Document_Name   =   'Welcome to NY'

当前idx3
____________________
SELECT  Paragraph_ID FROM Paragraphs WHERE Document_ID = (SELECT Document_ID                      FROM Documents                      WHERE Document_Name = 'Welcome to NY')
SELECT T1.paragraph_id FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id   =   T2.document_id WHERE T2.Document_Name   =   'Welcome to NY'
连接数据库../datasets/cosql_dataset/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:0
medium pred: SELECT  Paragraph_ID FROM Paragraphs WHERE Document_ID = (SELECT Document_ID                      FROM Documents                      WHERE Document_Name = 'Welcome to NY')
medium gold: SELECT T1.paragraph_id FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id   =   T2.document_id WHERE T2.Document_Name   =   'Welcome to NY'

当前idx1
eval_err_num:311
____________________
SELECT  p.first_name, SUM(r.ranking_points) AS total_ranking_points FROM players p JOIN rankings r ON p.player_id = r.player_id GROUP BY p.player_id, p.first_name
SELECT sum ( ranking_points )  ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id   =   T2.player_id GROUP BY T1.first_name
连接数据库../datasets/cosql_dataset/database/wta_1/wta_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT  p.first_name, SUM(r.ranking_points) AS total_ranking_points FROM players p JOIN rankings r ON p.player_id = r.player_id GROUP BY p.player_id, p.first_name
medium gold: SELECT sum ( ranking_points )  ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id   =   T2.player_id GROUP BY T1.first_name

当前idx2
eval_err_num:312
____________________
SELECT  p.first_name FROM players p JOIN rankings r ON p.player_id = r.player_id WHERE r.ranking = 1
SELECT distinct T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id   =   T2.player_id WHERE T2.ranking  =  1
连接数据库../datasets/cosql_dataset/database/wta_1/wta_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT  p.first_name FROM players p JOIN rankings r ON p.player_id = r.player_id WHERE r.ranking = 1
medium gold: SELECT distinct T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id   =   T2.player_id WHERE T2.ranking  =  1

当前idx1
____________________
SELECT  Name FROM country WHERE Continent = 'Africa' ORDER BY Population DESC LIMIT 1
SELECT Name FROM country WHERE Continent  =  "Africa" order by population desc limit 1
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT  Population FROM country WHERE Name = 'Nigeria'
select population from country where Name  =  'Nigeria'
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx3
____________________
SELECT  Name FROM country WHERE Continent = 'Asia' ORDER BY Population DESC LIMIT 1
SELECT Name FROM country WHERE Continent   =   "Asia"  order by population desc limit 1
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx4
____________________
SELECT  Population FROM country WHERE Name = 'China'
SELECT population from country where name  =  'China'
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx>4
____________________
SELECT  COUNT(*) FROM country WHERE Continent = 'Asia' AND Population > (SELECT Population FROM country WHERE Name = 'Nigeria')
SELECT count ( Name )  FROM country WHERE Continent   =   "Asia"  AND population >  ( SELECT population FROM country WHERE name  =  'Nigeria' ) 
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
extra pred: SELECT  COUNT(*) FROM country WHERE Continent = 'Asia' AND Population > (SELECT Population FROM country WHERE Name = 'Nigeria')
extra gold: SELECT count ( Name )  FROM country WHERE Continent   =   "Asia"  AND population >  ( SELECT population FROM country WHERE name  =  'Nigeria' ) 

当前idx>4
____________________
SELECT  Name FROM country WHERE Continent = 'Asia' AND Population > (SELECT Population FROM country WHERE Name = 'Nigeria')
SELECT Name FROM country WHERE Continent   =   "Asia"  AND population >  ( SELECT population FROM country WHERE name  =  'Nigeria' ) 
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx1
____________________
SELECT  DISTINCT city.Name FROM city JOIN country ON city.CountryCode = country.Code WHERE country.Continent = 'Asia'
SELECT DISTINCT T3.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code   =   T2.CountryCode JOIN city AS T3 ON T1.Code   =   T3.CountryCode WHERE T1.Continent   =   "Asia"
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:False
hard pred: SELECT  DISTINCT city.Name FROM city JOIN country ON city.CountryCode = country.Code WHERE country.Continent = 'Asia'
hard gold: SELECT DISTINCT T3.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code   =   T2.CountryCode JOIN city AS T3 ON T1.Code   =   T3.CountryCode WHERE T1.Continent   =   "Asia"

当前idx2
____________________
SELECT  DISTINCT city.Name FROM city JOIN country ON city.CountryCode = country.Code WHERE country.Continent = 'Asia' AND city.Population > 200000
SELECT DISTINCT T3.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code   =   T2.CountryCode JOIN city AS T3 ON T1.Code   =   T3.CountryCode WHERE T3.Population >200000
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
hard pred: SELECT  DISTINCT city.Name FROM city JOIN country ON city.CountryCode = country.Code WHERE country.Continent = 'Asia' AND city.Population > 200000
hard gold: SELECT DISTINCT T3.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code   =   T2.CountryCode JOIN city AS T3 ON T1.Code   =   T3.CountryCode WHERE T3.Population >200000

当前idx3
____________________
SELECT  AVG(Population) FROM city WHERE CountryCode = 'CHN'
SELECT avg ( T3.Population )  FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code   =   T2.CountryCode JOIN city AS T3 ON T1.Code   =   T3.CountryCode WHERE T1.Name  =  "China"
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:0
hard pred: SELECT  AVG(Population) FROM city WHERE CountryCode = 'CHN'
hard gold: SELECT avg ( T3.Population )  FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code   =   T2.CountryCode JOIN city AS T3 ON T1.Code   =   T3.CountryCode WHERE T1.Name  =  "China"

当前idx4
____________________
SELECT  AVG(city.Population) FROM city JOIN countrylanguage ON city.CountryCode = countrylanguage.CountryCode WHERE countrylanguage.Language = 'Dutch'
SELECT avg ( T3.Population )  FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code   =   T2.CountryCode JOIN city AS T3 ON T1.Code   =   T3.CountryCode WHERE T2.Language  =  "Dutch"
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:False
hard pred: SELECT  AVG(city.Population) FROM city JOIN countrylanguage ON city.CountryCode = countrylanguage.CountryCode WHERE countrylanguage.Language = 'Dutch'
hard gold: SELECT avg ( T3.Population )  FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code   =   T2.CountryCode JOIN city AS T3 ON T1.Code   =   T3.CountryCode WHERE T2.Language  =  "Dutch"

当前idx1
____________________
SELECT  COUNT(*)  FROM visitor
SELECT count ( * )  from visitor
连接数据库../datasets/cosql_dataset/database/museum_visit/museum_visit.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT  COUNT(*) FROM visitor WHERE Level_of_membership > 4
SELECT count ( * )  FROM visitor WHERE Level_of_membership  >  4
连接数据库../datasets/cosql_dataset/database/museum_visit/museum_visit.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx3
____________________
SELECT  Name FROM visitor WHERE Level_of_membership > 4
SELECT name FROM visitor WHERE Level_of_membership  >  4
连接数据库../datasets/cosql_dataset/database/museum_visit/museum_visit.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx4
____________________
SELECT  Name, Level_of_membership FROM visitor WHERE Level_of_membership > 4 ORDER BY Level_of_membership DESC
SELECT name FROM visitor WHERE Level_of_membership  >  4 ORDER BY Level_of_membership DESC
连接数据库../datasets/cosql_dataset/database/museum_visit/museum_visit.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT  Name, Level_of_membership FROM visitor WHERE Level_of_membership > 4 ORDER BY Level_of_membership DESC
medium gold: SELECT name FROM visitor WHERE Level_of_membership  >  4 ORDER BY Level_of_membership DESC

当前idx1
eval_err_num:313
____________________
SELECT  p.first_name, AVG(r.ranking) AS average_ranking FROM players p JOIN rankings r ON p.player_id = r.player_id GROUP BY p.first_name
SELECT avg ( ranking )  ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id   =   T2.player_id GROUP BY T1.player_id
连接数据库../datasets/cosql_dataset/database/wta_1/wta_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT  p.first_name, AVG(r.ranking) AS average_ranking FROM players p JOIN rankings r ON p.player_id = r.player_id GROUP BY p.first_name
medium gold: SELECT avg ( ranking )  ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id   =   T2.player_id GROUP BY T1.player_id

当前idx2
eval_err_num:314
____________________
SELECT  p.first_name, p.last_name, AVG(r.ranking) AS average_ranking FROM players p JOIN rankings r ON p.player_id = r.player_id GROUP BY p.first_name, p.last_name
SELECT avg ( ranking )  ,  T1.first_name, t1.last_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id   =   T2.player_id GROUP BY T1.player_id
连接数据库../datasets/cosql_dataset/database/wta_1/wta_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT  p.first_name, p.last_name, AVG(r.ranking) AS average_ranking FROM players p JOIN rankings r ON p.player_id = r.player_id GROUP BY p.first_name, p.last_name
medium gold: SELECT avg ( ranking )  ,  T1.first_name, t1.last_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id   =   T2.player_id GROUP BY T1.player_id

当前idx3
eval_err_num:315
____________________
SELECT  first_name || ' ' || last_name AS full_name FROM players WHERE hand = 'L'
SELECT  T1.first_name, t1.last_name FROM players AS T1 where t1.hand  =  "L"
连接数据库../datasets/cosql_dataset/database/wta_1/wta_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT  first_name || ' ' || last_name AS full_name FROM players WHERE hand = 'L'
medium gold: SELECT  T1.first_name, t1.last_name FROM players AS T1 where t1.hand  =  "L"

当前idx4
____________________
SELECT  last_name FROM players WHERE hand = 'L'
SELECT T1.last_name FROM players AS T1 where t1.hand  =  "L"
连接数据库../datasets/cosql_dataset/database/wta_1/wta_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx>4
eval_err_num:316
____________________
SELECT  p.last_name, AVG(r.ranking) AS average_ranking FROM players p JOIN rankings r ON p.player_id = r.player_id WHERE p.hand = 'L' GROUP BY p.last_name
SELECT avg ( ranking )  ,  T1.last_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id   =   T2.player_id where T1.hand  =  "L" GROUP BY T1.first_name
连接数据库../datasets/cosql_dataset/database/wta_1/wta_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
hard pred: SELECT  p.last_name, AVG(r.ranking) AS average_ranking FROM players p JOIN rankings r ON p.player_id = r.player_id WHERE p.hand = 'L' GROUP BY p.last_name
hard gold: SELECT avg ( ranking )  ,  T1.last_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id   =   T2.player_id where T1.hand  =  "L" GROUP BY T1.first_name

当前idx1
____________________
SELECT  AVG(grade) FROM Highschooler WHERE ID IN (SELECT student_id FROM Friend)
SELECT avg ( grade )  FROM Highschooler WHERE id IN  ( SELECT T1.student_id FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id   =   T2.id ) 
连接数据库../datasets/cosql_dataset/database/network_1/network_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:0
hard pred: SELECT  AVG(grade) FROM Highschooler WHERE ID IN (SELECT student_id FROM Friend)
hard gold: SELECT avg ( grade )  FROM Highschooler WHERE id IN  ( SELECT T1.student_id FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id   =   T2.id ) 

当前idx2
____________________
SELECT  * FROM Highschooler WHERE ID NOT IN (SELECT student_id FROM Friend)
SELECT * FROM Highschooler WHERE id not IN  ( SELECT student_id FROM Friend ) 
连接数据库../datasets/cosql_dataset/database/network_1/network_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx3
____________________
SELECT  ID, grade FROM Highschooler WHERE ID NOT IN (SELECT student_id FROM Friend)
SELECT grade FROM Highschooler WHERE id not IN  ( SELECT student_id FROM Friend ) 
连接数据库../datasets/cosql_dataset/database/network_1/network_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
hard pred: SELECT  ID, grade FROM Highschooler WHERE ID NOT IN (SELECT student_id FROM Friend)
hard gold: SELECT grade FROM Highschooler WHERE id not IN  ( SELECT student_id FROM Friend ) 

当前idx4
____________________
SELECT  name FROM Highschooler WHERE ID NOT IN (SELECT student_id FROM Friend)
SELECT name FROM Highschooler WHERE id not IN  ( SELECT student_id FROM Friend ) 
连接数据库../datasets/cosql_dataset/database/network_1/network_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx>4
____________________
SELECT  name FROM Highschooler WHERE ID IN (SELECT student_id FROM Friend)
SELECT name FROM Highschooler WHERE id IN  ( SELECT student_id FROM Friend ) 
连接数据库../datasets/cosql_dataset/database/network_1/network_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx1
eval_err_num:317
____________________
SELECT  COUNT(*) AS total_students FROM Highschooler
select count ( * )  from highschooler
连接数据库../datasets/cosql_dataset/database/network_1/network_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
easy pred: SELECT  COUNT(*) AS total_students FROM Highschooler
easy gold: select count ( * )  from highschooler

当前idx2
____________________
SELECT  COUNT(*) FROM Highschooler WHERE grade = 9
SELECT count ( * )  FROM highschooler WHERE grade   =   9
连接数据库../datasets/cosql_dataset/database/network_1/network_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx3
____________________
SELECT  grade FROM Highschooler WHERE name = 'John'
SELECT grade from highschooler where name  =  "Kyle"
连接数据库../datasets/cosql_dataset/database/network_1/network_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx1
____________________
SELECT  Name FROM stadium
SELECT name FROM stadium WHERE stadium_id NOT IN  ( SELECT stadium_id FROM concert ) 
连接数据库../datasets/cosql_dataset/database/concert_singer/concert_singer.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
hard pred: SELECT  Name FROM stadium
hard gold: SELECT name FROM stadium WHERE stadium_id NOT IN  ( SELECT stadium_id FROM concert ) 

当前idx2
____________________
SELECT  Name FROM stadium WHERE Capacity = (SELECT MAX(Capacity) FROM stadium)
SELECT name FROM stadium ORDER BY Highest DESC LIMIT 1
连接数据库../datasets/cosql_dataset/database/concert_singer/concert_singer.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT  Name FROM stadium WHERE Capacity = (SELECT MAX(Capacity) FROM stadium)
medium gold: SELECT name FROM stadium ORDER BY Highest DESC LIMIT 1

当前idx1
eval_err_num:318
____________________
SELECT  Citizenship, COUNT(*) AS Count FROM singer GROUP BY Citizenship ORDER BY Count DESC LIMIT 1
SELECT Citizenship FROM singer GROUP BY Citizenship ORDER BY COUNT ( * )  DESC LIMIT 1
连接数据库../datasets/cosql_dataset/database/singer/singer.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
hard pred: SELECT  Citizenship, COUNT(*) AS Count FROM singer GROUP BY Citizenship ORDER BY Count DESC LIMIT 1
hard gold: SELECT Citizenship FROM singer GROUP BY Citizenship ORDER BY COUNT ( * )  DESC LIMIT 1

当前idx2
eval_err_num:319
____________________
SELECT  Citizenship, COUNT(*) AS Count FROM singer GROUP BY Citizenship ORDER BY Count LIMIT 1
SELECT Citizenship FROM singer GROUP BY Citizenship ORDER BY COUNT ( * )  ASC LIMIT 1
连接数据库../datasets/cosql_dataset/database/singer/singer.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
hard pred: SELECT  Citizenship, COUNT(*) AS Count FROM singer GROUP BY Citizenship ORDER BY Count LIMIT 1
hard gold: SELECT Citizenship FROM singer GROUP BY Citizenship ORDER BY COUNT ( * )  ASC LIMIT 1

当前idx3
____________________
SELECT  Name FROM singer WHERE Citizenship = 'Australia'
SELECT name FROM singer where Citizenship = 'Australia'
连接数据库../datasets/cosql_dataset/database/singer/singer.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx1
____________________
SELECT  Nationality FROM people WHERE People_ID = 1
SELECT Nationality FROM people where People_ID = 1
连接数据库../datasets/cosql_dataset/database/poker_player/poker_player.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT  Birth_Date FROM people WHERE Name = 'Teodor Salparov'
SELECT Birth_Date FROM people where Name = "Teodor Salparov"
连接数据库../datasets/cosql_dataset/database/poker_player/poker_player.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx3
____________________
SELECT  Earnings FROM poker_player WHERE People_ID = 5
SELECT Earnings FROM poker_player where People_ID   =   5
连接数据库../datasets/cosql_dataset/database/poker_player/poker_player.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx4
____________________
SELECT  Money_Rank FROM poker_player JOIN people ON poker_player.People_ID = people.People_ID WHERE Height = (SELECT MAX(Height) FROM people)
SELECT T2.Money_Rank FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID   =   T2.People_ID ORDER BY T1.Height DESC LIMIT 1
连接数据库../datasets/cosql_dataset/database/poker_player/poker_player.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:0
hard pred: SELECT  Money_Rank FROM poker_player JOIN people ON poker_player.People_ID = people.People_ID WHERE Height = (SELECT MAX(Height) FROM people)
hard gold: SELECT T2.Money_Rank FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID   =   T2.People_ID ORDER BY T1.Height DESC LIMIT 1

当前idx1
eval_err_num:320
____________________
SELECT  dp.degree_summary_name AS program_name, COUNT(se.student_id) AS num_students_enrolled FROM Degree_Programs dp LEFT JOIN Student_Enrolment se ON dp.degree_program_id = se.degree_program_id GROUP BY dp.degree_program_id ORDER BY num_students_enrolled LIMIT 1
SELECT T1.degree_summary_name FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id   =   T2.degree_program_id GROUP BY T1.degree_summary_name ORDER BY count ( * )  DESC LIMIT 1
连接数据库../datasets/cosql_dataset/database/student_transcripts_tracking/student_transcripts_tracking.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
extra pred: SELECT  dp.degree_summary_name AS program_name, COUNT(se.student_id) AS num_students_enrolled FROM Degree_Programs dp LEFT JOIN Student_Enrolment se ON dp.degree_program_id = se.degree_program_id GROUP BY dp.degree_program_id ORDER BY num_students_enrolled LIMIT 1
extra gold: SELECT T1.degree_summary_name FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id   =   T2.degree_program_id GROUP BY T1.degree_summary_name ORDER BY count ( * )  DESC LIMIT 1

当前idx2
____________________
SELECT  degree_program_id FROM Degree_Programs WHERE degree_summary_name = 'Architecto'
SELECT degree_program_id from Degree_Programs where degree_summary_description  =  'architecto'
连接数据库../datasets/cosql_dataset/database/student_transcripts_tracking/student_transcripts_tracking.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
easy pred: SELECT  degree_program_id FROM Degree_Programs WHERE degree_summary_name = 'Architecto'
easy gold: SELECT degree_program_id from Degree_Programs where degree_summary_description  =  'architecto'

当前idx1
eval_err_num:321
____________________
SELECT  dp.degree_summary_name FROM Degree_Programs dp JOIN Student_Enrolment se ON dp.degree_program_id = se.degree_program_id JOIN Students s ON se.student_id = s.student_id WHERE s.first_name = 'Timmothy'
SELECT T2.degree_program_id FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id WHERE T1.first_name  =  "Timmothy"
连接数据库../datasets/cosql_dataset/database/student_transcripts_tracking/student_transcripts_tracking.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT  dp.degree_summary_name FROM Degree_Programs dp JOIN Student_Enrolment se ON dp.degree_program_id = se.degree_program_id JOIN Students s ON se.student_id = s.student_id WHERE s.first_name = 'Timmothy'
medium gold: SELECT T2.degree_program_id FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id WHERE T1.first_name  =  "Timmothy"

当前idx2
eval_err_num:322
____________________
SELECT  s.date_first_registered, s.date_left FROM Students s WHERE s.first_name = 'Timmothy'
SELECT date_first_registered, date_left FROM Students WHERE first_name  =  "Timmothy"
连接数据库../datasets/cosql_dataset/database/student_transcripts_tracking/student_transcripts_tracking.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT  s.date_first_registered, s.date_left FROM Students s WHERE s.first_name = 'Timmothy'
medium gold: SELECT date_first_registered, date_left FROM Students WHERE first_name  =  "Timmothy"

当前idx3
eval_err_num:323
____________________
SELECT  s.middle_name FROM Students s WHERE s.email_address = 'johns.unique@example.net'
SELECT middle_name FROM Students WHERE email_address  =  "johns.unique@example.net"
连接数据库../datasets/cosql_dataset/database/student_transcripts_tracking/student_transcripts_tracking.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
easy pred: SELECT  s.middle_name FROM Students s WHERE s.email_address = 'johns.unique@example.net'
easy gold: SELECT middle_name FROM Students WHERE email_address  =  "johns.unique@example.net"

当前idx1
____________________
SELECT  DISTINCT PetType FROM Pets
SELECT distinct PetType from Pets
连接数据库../datasets/cosql_dataset/database/pets_1/pets_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT  COUNT(*) FROM Pets WHERE PetType = 'Dog'
SELECT count ( * )   from Pets where PetType = "dog"
连接数据库../datasets/cosql_dataset/database/pets_1/pets_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:True
当前idx3
____________________
SELECT  pet_age FROM Pets WHERE PetType = 'Dog' LIMIT 2
SELECT pet_age  from Pets where PetType = "dog"
连接数据库../datasets/cosql_dataset/database/pets_1/pets_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
easy pred: SELECT  pet_age FROM Pets WHERE PetType = 'Dog' LIMIT 2
easy gold: SELECT pet_age  from Pets where PetType = "dog"

当前idx4
____________________
SELECT  weight FROM Pets WHERE PetType = 'Dog' AND pet_age = 1
SELECT weight  from Pets where PetType = "dog" and pet_age  =   ( select min ( pet_age )  from Pets where PetType = "dog" ) 
连接数据库../datasets/cosql_dataset/database/pets_1/pets_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
extra pred: SELECT  weight FROM Pets WHERE PetType = 'Dog' AND pet_age = 1
extra gold: SELECT weight  from Pets where PetType = "dog" and pet_age  =   ( select min ( pet_age )  from Pets where PetType = "dog" ) 

当前idx1
____________________
SELECT  last_name FROM Students JOIN Addresses ON Students.current_address_id = Addresses.address_id WHERE Addresses.state_province_county = 'North Carolina'
SELECT T1.last_name FROM Students AS T1 JOIN Addresses AS T2 ON T1.current_address_id   =   T2.address_id WHERE T2.state_province_county   =   'NorthCarolina'
连接数据库../datasets/cosql_dataset/database/student_transcripts_tracking/student_transcripts_tracking.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:True
当前idx2
____________________
SELECT  first_name FROM Students JOIN Addresses ON Students.current_address_id = Addresses.address_id WHERE Addresses.state_province_county = 'North Carolina'
SELECT T1.first_name FROM Students AS T1 JOIN Addresses AS T2 ON T1.current_address_id   =   T2.address_id WHERE T2.state_province_county   =   'NorthCarolina'
连接数据库../datasets/cosql_dataset/database/student_transcripts_tracking/student_transcripts_tracking.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:True
当前idx3
____________________
SELECT  last_name FROM Students JOIN Addresses ON Students.current_address_id = Addresses.address_id WHERE Addresses.state_province_county = 'North Carolina' AND Students.student_id NOT IN (SELECT student_id FROM Student_Enrolment)
SELECT T1.last_name FROM Students AS T1 JOIN Addresses AS T2 ON T1.current_address_id   =   T2.address_id WHERE T2.state_province_county   =   'NorthCarolina' EXCEPT SELECT DISTINCT T3.last_name FROM Students AS T3 JOIN Student_Enrolment AS T4 ON T3.student_id   =   T4.student_id
连接数据库../datasets/cosql_dataset/database/student_transcripts_tracking/student_transcripts_tracking.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
extra pred: SELECT  last_name FROM Students JOIN Addresses ON Students.current_address_id = Addresses.address_id WHERE Addresses.state_province_county = 'North Carolina' AND Students.student_id NOT IN (SELECT student_id FROM Student_Enrolment)
extra gold: SELECT T1.last_name FROM Students AS T1 JOIN Addresses AS T2 ON T1.current_address_id   =   T2.address_id WHERE T2.state_province_county   =   'NorthCarolina' EXCEPT SELECT DISTINCT T3.last_name FROM Students AS T3 JOIN Student_Enrolment AS T4 ON T3.student_id   =   T4.student_id

当前idx4
____________________
SELECT  first_name FROM Students JOIN Addresses ON Students.current_address_id = Addresses.address_id WHERE Addresses.state_province_county = 'North Carolina' AND Students.student_id NOT IN (SELECT student_id FROM Student_Enrolment)
SELECT T1.first_name FROM Students AS T1 JOIN Addresses AS T2 ON T1.current_address_id   =   T2.address_id WHERE T2.state_province_county   =   'NorthCarolina' EXCEPT SELECT DISTINCT T3.last_name FROM Students AS T3 JOIN Student_Enrolment AS T4 ON T3.student_id   =   T4.student_id
连接数据库../datasets/cosql_dataset/database/student_transcripts_tracking/student_transcripts_tracking.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
extra pred: SELECT  first_name FROM Students JOIN Addresses ON Students.current_address_id = Addresses.address_id WHERE Addresses.state_province_county = 'North Carolina' AND Students.student_id NOT IN (SELECT student_id FROM Student_Enrolment)
extra gold: SELECT T1.first_name FROM Students AS T1 JOIN Addresses AS T2 ON T1.current_address_id   =   T2.address_id WHERE T2.state_province_county   =   'NorthCarolina' EXCEPT SELECT DISTINCT T3.last_name FROM Students AS T3 JOIN Student_Enrolment AS T4 ON T3.student_id   =   T4.student_id

当前idx1
____________________
SELECT  loser_name, winner_name FROM matches WHERE minutes = (SELECT MAX(minutes) FROM matches)
SELECT winner_name ,  loser_name FROM matches ORDER BY minutes DESC LIMIT 1
连接数据库../datasets/cosql_dataset/database/wta_1/wta_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:0
medium pred: SELECT  loser_name, winner_name FROM matches WHERE minutes = (SELECT MAX(minutes) FROM matches)
medium gold: SELECT winner_name ,  loser_name FROM matches ORDER BY minutes DESC LIMIT 1

当前idx2
____________________
SELECT  score FROM matches WHERE minutes = (SELECT MAX(minutes) FROM matches)
SELECT score FROM matches ORDER BY minutes DESC LIMIT 1
连接数据库../datasets/cosql_dataset/database/wta_1/wta_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:0
medium pred: SELECT  score FROM matches WHERE minutes = (SELECT MAX(minutes) FROM matches)
medium gold: SELECT score FROM matches ORDER BY minutes DESC LIMIT 1

当前idx1
____________________
SELECT  Model FROM model_list
select distinct Model from car_names
连接数据库../datasets/cosql_dataset/database/car_1/car_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:False
easy pred: SELECT  Model FROM model_list
easy gold: select distinct Model from car_names

当前idx2
eval_err_num:324
____________________
SELECT  DISTINCT Model FROM model_list WHERE ModelId IN (SELECT ModelId FROM cars_data WHERE Year > 1980)
SELECT DISTINCT T1.model FROM MODEL_LIST AS T1 JOIN CAR_NAMES AS T2 ON T1.model   =   T2.model JOIN CARS_DATA AS T3 ON T2.MakeId   =   T3.id WHERE T3.year  >  1980
连接数据库../datasets/cosql_dataset/database/car_1/car_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
hard pred: SELECT  DISTINCT Model FROM model_list WHERE ModelId IN (SELECT ModelId FROM cars_data WHERE Year > 1980)
hard gold: SELECT DISTINCT T1.model FROM MODEL_LIST AS T1 JOIN CAR_NAMES AS T2 ON T1.model   =   T2.model JOIN CARS_DATA AS T3 ON T2.MakeId   =   T3.id WHERE T3.year  >  1980

当前idx1
eval_err_num:325
____________________
SELECT  grade, COUNT(*) AS num_highschoolers FROM Highschooler GROUP BY grade ORDER BY num_highschoolers DESC LIMIT 1
SELECT grade FROM Highschooler GROUP BY grade ORDER BY count ( * )  DESC LIMIT 1
连接数据库../datasets/cosql_dataset/database/network_1/network_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
hard pred: SELECT  grade, COUNT(*) AS num_highschoolers FROM Highschooler GROUP BY grade ORDER BY num_highschoolers DESC LIMIT 1
hard gold: SELECT grade FROM Highschooler GROUP BY grade ORDER BY count ( * )  DESC LIMIT 1

当前idx2
____________________
SELECT  name FROM Highschooler WHERE grade = 9
SELECT name FROM Highschooler WHERE grade  =  9
连接数据库../datasets/cosql_dataset/database/network_1/network_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx3
____________________
SELECT  grade FROM Highschooler WHERE name = 'Tiffany'
SELECT grade FROM Highschooler WHERE name  =  "Tiffany"
连接数据库../datasets/cosql_dataset/database/network_1/network_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx4
eval_err_num:326
____________________
SELECT  COUNT(*) AS num_highschoolers_grade_9 FROM Highschooler WHERE grade = 9
SELECT count ( * )  FROM Highschooler WHERE grade  =  9
连接数据库../datasets/cosql_dataset/database/network_1/network_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
easy pred: SELECT  COUNT(*) AS num_highschoolers_grade_9 FROM Highschooler WHERE grade = 9
easy gold: SELECT count ( * )  FROM Highschooler WHERE grade  =  9

当前idx>4
____________________
SELECT  grade FROM Highschooler WHERE ID = 1689
SELECT grade FROM Highschooler WHERE name  =  "Gabriel" AND ID  =  1689
连接数据库../datasets/cosql_dataset/database/network_1/network_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:0
medium pred: SELECT  grade FROM Highschooler WHERE ID = 1689
medium gold: SELECT grade FROM Highschooler WHERE name  =  "Gabriel" AND ID  =  1689

当前idx>4
____________________
SELECT  ID FROM Highschooler WHERE name = 'Tiffany'
SELECT ID FROM Highschooler WHERE name  =  "Tiffany"
连接数据库../datasets/cosql_dataset/database/network_1/network_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx>4
____________________
SELECT  name FROM Highschooler WHERE ID = 1510
SELECT name FROM Highschooler WHERE ID  =  1510
连接数据库../datasets/cosql_dataset/database/network_1/network_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx1
____________________
SELECT  first_name, last_name FROM Owners WHERE owner_id = 1
SELECT T1.first_name , T1.last_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id   =   T2.owner_id WHERE T1.owner_id   =  1
连接数据库../datasets/cosql_dataset/database/dog_kennels/dog_kennels.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:False
medium pred: SELECT  first_name, last_name FROM Owners WHERE owner_id = 1
medium gold: SELECT T1.first_name , T1.last_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id   =   T2.owner_id WHERE T1.owner_id   =  1

当前idx2
____________________
SELECT  name FROM Dogs WHERE age = 6
SELECT name  FROM Dogs  WHERE age  =  6
连接数据库../datasets/cosql_dataset/database/dog_kennels/dog_kennels.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx3
____________________
SELECT  name FROM Dogs WHERE age > 5
SELECT  name  FROM  Dogs WHERE age >5
连接数据库../datasets/cosql_dataset/database/dog_kennels/dog_kennels.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx4
eval_err_num:327
____________________
SELECT  d.name FROM Dogs d JOIN Owners o ON d.owner_id = o.owner_id WHERE o.state = 'Virginia'
SELECT T2.name  FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id   =   T2.owner_id WHERE T1.state   = "Virginia"
连接数据库../datasets/cosql_dataset/database/dog_kennels/dog_kennels.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT  d.name FROM Dogs d JOIN Owners o ON d.owner_id = o.owner_id WHERE o.state = 'Virginia'
medium gold: SELECT T2.name  FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id   =   T2.owner_id WHERE T1.state   = "Virginia"

当前idx1
eval_err_num:328
____________________
SELECT  c.course_name, COUNT(sec_c.student_enrolment_id) AS enrolment_count FROM Courses c LEFT JOIN Sections sec ON c.course_id = sec.course_id LEFT JOIN Student_Enrolment_Courses sec_c ON c.course_id = sec_c.course_id GROUP BY c.course_name ORDER BY enrolment_count LIMIT 1
SELECT  T1.course_name FROM Courses AS T1 JOIN Student_Enrolment_Courses AS T2 ON T1.course_id   =   T2.course_id GROUP BY T1.course_name ORDER BY count ( * )  LIMIT 1
连接数据库../datasets/cosql_dataset/database/student_transcripts_tracking/student_transcripts_tracking.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
extra pred: SELECT  c.course_name, COUNT(sec_c.student_enrolment_id) AS enrolment_count FROM Courses c LEFT JOIN Sections sec ON c.course_id = sec.course_id LEFT JOIN Student_Enrolment_Courses sec_c ON c.course_id = sec_c.course_id GROUP BY c.course_name ORDER BY enrolment_count LIMIT 1
extra gold: SELECT  T1.course_name FROM Courses AS T1 JOIN Student_Enrolment_Courses AS T2 ON T1.course_id   =   T2.course_id GROUP BY T1.course_name ORDER BY count ( * )  LIMIT 1

当前idx2
____________________
SELECT  course_id FROM Courses WHERE course_name = 'Math'
SELECT course_id from courses where course_name  =  "math"
连接数据库../datasets/cosql_dataset/database/student_transcripts_tracking/student_transcripts_tracking.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:True
当前idx3
eval_err_num:329
____________________
SELECT  COUNT(*) AS student_count FROM Student_Enrolment_Courses WHERE course_id = 14
SELECT  count ( * )  FROM Courses AS T1 JOIN Student_Enrolment_Courses AS T2 ON T1.course_id   =   T2.course_id GROUP BY T1.course_name having T1.course_id  =  14
连接数据库../datasets/cosql_dataset/database/student_transcripts_tracking/student_transcripts_tracking.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT  COUNT(*) AS student_count FROM Student_Enrolment_Courses WHERE course_id = 14
medium gold: SELECT  count ( * )  FROM Courses AS T1 JOIN Student_Enrolment_Courses AS T2 ON T1.course_id   =   T2.course_id GROUP BY T1.course_name having T1.course_id  =  14

当前idx1
eval_err_num:330
____________________
SELECT  COUNT(DISTINCT CountryCode) AS NumCountryCodes FROM city
SELECT count ( distinct  Language )  from countrylanguage
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
easy pred: SELECT  COUNT(DISTINCT CountryCode) AS NumCountryCodes FROM city
easy gold: SELECT count ( distinct  Language )  from countrylanguage

当前idx2
eval_err_num:331
____________________
SELECT  MAX(Percentage) AS HighestPercentage FROM countrylanguage
SELECT max ( Percentage )  from countrylanguage
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
easy pred: SELECT  MAX(Percentage) AS HighestPercentage FROM countrylanguage
easy gold: SELECT max ( Percentage )  from countrylanguage

当前idx1
____________________
SELECT  name FROM Highschooler
select name from highschooler
连接数据库../datasets/cosql_dataset/database/network_1/network_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
eval_err_num:332
____________________
SELECT  h.name FROM Highschooler h JOIN Friend f ON h.ID = f.student_id WHERE f.friend_id = (SELECT ID FROM Highschooler WHERE name = 'Kyle')
SELECT T3.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id JOIN Highschooler AS T3 ON T1.friend_id  =  T3.id WHERE T2.name  =  "Kyle"
连接数据库../datasets/cosql_dataset/database/network_1/network_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
hard pred: SELECT  h.name FROM Highschooler h JOIN Friend f ON h.ID = f.student_id WHERE f.friend_id = (SELECT ID FROM Highschooler WHERE name = 'Kyle')
hard gold: SELECT T3.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id JOIN Highschooler AS T3 ON T1.friend_id  =  T3.id WHERE T2.name  =  "Kyle"

当前idx3
____________________
SELECT  ID FROM Highschooler WHERE name = 'Kyle'
SELECT id FROM highschooler where name  =  "Kyle"
连接数据库../datasets/cosql_dataset/database/network_1/network_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx4
____________________
SELECT  name FROM Highschooler WHERE ID = 1709
SELECT name FROM highschooler where id  =  1709
连接数据库../datasets/cosql_dataset/database/network_1/network_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx>4
eval_err_num:333
____________________
SELECT  h.name FROM Highschooler h JOIN Friend f ON h.ID = f.friend_id WHERE f.student_id = (SELECT ID FROM Highschooler WHERE name = 'Jordan') AND h.name != 'Jordan'
SELECT T3.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id JOIN Highschooler AS T3 ON T1.friend_id  =  T3.id WHERE T2.name  =  "Jordan"
连接数据库../datasets/cosql_dataset/database/network_1/network_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
hard pred: SELECT  h.name FROM Highschooler h JOIN Friend f ON h.ID = f.friend_id WHERE f.student_id = (SELECT ID FROM Highschooler WHERE name = 'Jordan') AND h.name != 'Jordan'
hard gold: SELECT T3.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id JOIN Highschooler AS T3 ON T1.friend_id  =  T3.id WHERE T2.name  =  "Jordan"

当前idx>4
eval_err_num:334
____________________
SELECT  h.name FROM Highschooler h JOIN Friend f ON h.ID = f.student_id WHERE f.friend_id = (SELECT ID FROM Highschooler WHERE name = 'Gabriel')
SELECT T3.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id JOIN Highschooler AS T3 ON T1.friend_id  =  T3.id WHERE T2.name  =  "Gabriel"
连接数据库../datasets/cosql_dataset/database/network_1/network_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
hard pred: SELECT  h.name FROM Highschooler h JOIN Friend f ON h.ID = f.student_id WHERE f.friend_id = (SELECT ID FROM Highschooler WHERE name = 'Gabriel')
hard gold: SELECT T3.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id JOIN Highschooler AS T3 ON T1.friend_id  =  T3.id WHERE T2.name  =  "Gabriel"

当前idx1
____________________
SELECT  CountryName FROM countries WHERE Continent = (SELECT ContId FROM continents WHERE Continent = 'Europe')
SELECT distinct T1.CountryName FROM COUNTRIES AS T1 JOIN CONTINENTS AS T2 ON T1.Continent   =   T2.ContId JOIN CAR_MAKERS AS T3 ON T1.CountryId   =   T3.Country WHERE T2.Continent   =   'europe'
连接数据库../datasets/cosql_dataset/database/car_1/car_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
hard pred: SELECT  CountryName FROM countries WHERE Continent = (SELECT ContId FROM continents WHERE Continent = 'Europe')
hard gold: SELECT distinct T1.CountryName FROM COUNTRIES AS T1 JOIN CONTINENTS AS T2 ON T1.Continent   =   T2.ContId JOIN CAR_MAKERS AS T3 ON T1.CountryId   =   T3.Country WHERE T2.Continent   =   'europe'

当前idx2
eval_err_num:335
____________________
SELECT  c.CountryName, COUNT(cm.Id) AS NumCarMakers FROM countries c LEFT JOIN car_makers cm ON c.CountryName = cm.Country WHERE c.Continent = (SELECT ContId FROM continents WHERE Continent = 'Europe') GROUP BY c.CountryName
SELECT T1.CountryName, count ( * )  FROM COUNTRIES AS T1 JOIN CONTINENTS AS T2 ON T1.Continent   =   T2.ContId JOIN CAR_MAKERS AS T3 ON T1.CountryId   =   T3.Country WHERE T2.Continent   =   'europe' GROUP BY T1.CountryName
连接数据库../datasets/cosql_dataset/database/car_1/car_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
extra pred: SELECT  c.CountryName, COUNT(cm.Id) AS NumCarMakers FROM countries c LEFT JOIN car_makers cm ON c.CountryName = cm.Country WHERE c.Continent = (SELECT ContId FROM continents WHERE Continent = 'Europe') GROUP BY c.CountryName
extra gold: SELECT T1.CountryName, count ( * )  FROM COUNTRIES AS T1 JOIN CONTINENTS AS T2 ON T1.Continent   =   T2.ContId JOIN CAR_MAKERS AS T3 ON T1.CountryId   =   T3.Country WHERE T2.Continent   =   'europe' GROUP BY T1.CountryName

当前idx3
eval_err_num:336
____________________
SELECT  c.CountryName, COUNT(cm.Id) AS NumCarMakers FROM countries c LEFT JOIN car_makers cm ON c.CountryName = cm.Country WHERE c.Continent = (SELECT ContId FROM continents WHERE Continent = 'Europe') GROUP BY c.CountryName HAVING COUNT(cm.Id) >= 3
SELECT T1.CountryName FROM COUNTRIES AS T1 JOIN CONTINENTS AS T2 ON T1.Continent   =   T2.ContId JOIN CAR_MAKERS AS T3 ON T1.CountryId   =   T3.Country WHERE T2.Continent   =   'europe' GROUP BY T1.CountryName HAVING count ( * )    > =    3
连接数据库../datasets/cosql_dataset/database/car_1/car_1.sqlite
执行第一个查询
执行第二个查询
执行出错: near "=": syntax error
eval_exec:False
exact_score:0
extra pred: SELECT  c.CountryName, COUNT(cm.Id) AS NumCarMakers FROM countries c LEFT JOIN car_makers cm ON c.CountryName = cm.Country WHERE c.Continent = (SELECT ContId FROM continents WHERE Continent = 'Europe') GROUP BY c.CountryName HAVING COUNT(cm.Id) >= 3
extra gold: SELECT T1.CountryName FROM COUNTRIES AS T1 JOIN CONTINENTS AS T2 ON T1.Continent   =   T2.ContId JOIN CAR_MAKERS AS T3 ON T1.CountryId   =   T3.Country WHERE T2.Continent   =   'europe' GROUP BY T1.CountryName HAVING count ( * )    > =    3

当前idx4
eval_err_num:337
____________________
SELECT  c.CountryName, COUNT(cm.Id) AS NumCarMakers FROM countries c LEFT JOIN car_makers cm ON c.CountryName = cm.Country WHERE c.Continent = (SELECT ContId FROM continents WHERE Continent = 'Europe') GROUP BY c.CountryName HAVING COUNT(cm.Id) >= 3
SELECT T1.CountryName, count ( * )  FROM COUNTRIES AS T1 JOIN CONTINENTS AS T2 ON T1.Continent   =   T2.ContId JOIN CAR_MAKERS AS T3 ON T1.CountryId   =   T3.Country WHERE T2.Continent   =   'europe' GROUP BY T1.CountryName HAVING count ( * )    > =    3
连接数据库../datasets/cosql_dataset/database/car_1/car_1.sqlite
执行第一个查询
执行第二个查询
执行出错: near "=": syntax error
eval_exec:False
exact_score:0
extra pred: SELECT  c.CountryName, COUNT(cm.Id) AS NumCarMakers FROM countries c LEFT JOIN car_makers cm ON c.CountryName = cm.Country WHERE c.Continent = (SELECT ContId FROM continents WHERE Continent = 'Europe') GROUP BY c.CountryName HAVING COUNT(cm.Id) >= 3
extra gold: SELECT T1.CountryName, count ( * )  FROM COUNTRIES AS T1 JOIN CONTINENTS AS T2 ON T1.Continent   =   T2.ContId JOIN CAR_MAKERS AS T3 ON T1.CountryId   =   T3.Country WHERE T2.Continent   =   'europe' GROUP BY T1.CountryName HAVING count ( * )    > =    3

当前idx>4
eval_err_num:338
____________________
SELECT  COUNT(DISTINCT cm.Id) AS TotalCarMakers FROM car_makers cm WHERE cm.Country IN (SELECT CountryName FROM countries WHERE Continent = (SELECT ContId FROM continents WHERE Continent = 'Europe'))
SELECT count ( * )  FROM COUNTRIES AS T1 JOIN CONTINENTS AS T2 ON T1.Continent   =   T2.ContId JOIN CAR_MAKERS AS T3 ON T1.CountryId   =   T3.Country WHERE T2.Continent   =   'europe'
连接数据库../datasets/cosql_dataset/database/car_1/car_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
hard pred: SELECT  COUNT(DISTINCT cm.Id) AS TotalCarMakers FROM car_makers cm WHERE cm.Country IN (SELECT CountryName FROM countries WHERE Continent = (SELECT ContId FROM continents WHERE Continent = 'Europe'))
hard gold: SELECT count ( * )  FROM COUNTRIES AS T1 JOIN CONTINENTS AS T2 ON T1.Continent   =   T2.ContId JOIN CAR_MAKERS AS T3 ON T1.CountryId   =   T3.Country WHERE T2.Continent   =   'europe'

当前idx>4
eval_err_num:339
____________________
SELECT  COUNT(DISTINCT cm.Id) AS TotalCarMakers FROM car_makers cm WHERE cm.Country IN (SELECT CountryName FROM countries WHERE Continent = (SELECT ContId FROM continents WHERE Continent = 'America'))
SELECT count ( * )  FROM COUNTRIES AS T1 JOIN CONTINENTS AS T2 ON T1.Continent   =   T2.ContId JOIN CAR_MAKERS AS T3 ON T1.CountryId   =   T3.Country WHERE T2.Continent   =   'america'
连接数据库../datasets/cosql_dataset/database/car_1/car_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
hard pred: SELECT  COUNT(DISTINCT cm.Id) AS TotalCarMakers FROM car_makers cm WHERE cm.Country IN (SELECT CountryName FROM countries WHERE Continent = (SELECT ContId FROM continents WHERE Continent = 'America'))
hard gold: SELECT count ( * )  FROM COUNTRIES AS T1 JOIN CONTINENTS AS T2 ON T1.Continent   =   T2.ContId JOIN CAR_MAKERS AS T3 ON T1.CountryId   =   T3.Country WHERE T2.Continent   =   'america'

当前idx>4
____________________
SELECT  CountryName FROM countries WHERE Continent = (SELECT ContId FROM continents WHERE Continent = 'America')
SELECT T3.Fullname FROM COUNTRIES AS T1 JOIN CONTINENTS AS T2 ON T1.Continent   =   T2.ContId JOIN CAR_MAKERS AS T3 ON T1.CountryId   =   T3.Country WHERE T2.Continent   =   'america'
连接数据库../datasets/cosql_dataset/database/car_1/car_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
hard pred: SELECT  CountryName FROM countries WHERE Continent = (SELECT ContId FROM continents WHERE Continent = 'America')
hard gold: SELECT T3.Fullname FROM COUNTRIES AS T1 JOIN CONTINENTS AS T2 ON T1.Continent   =   T2.ContId JOIN CAR_MAKERS AS T3 ON T1.CountryId   =   T3.Country WHERE T2.Continent   =   'america'

当前idx1
eval_err_num:340
____________________
SELECT  COUNT(DISTINCT v.ID) AS Total_Visitors FROM visitor v WHERE v.ID NOT IN (     SELECT visitor_ID     FROM visit     JOIN museum ON visit.Museum_ID = museum.Museum_ID     WHERE CAST(museum.Open_Year AS INTEGER) > 2010 )
SELECT count ( * )  FROM visitor WHERE id NOT IN  ( SELECT t2.visitor_id FROM museum AS t1 JOIN visit AS t2 ON t1.Museum_ID   =   t2.Museum_ID WHERE t1.open_year  >  2010 ) 
连接数据库../datasets/cosql_dataset/database/museum_visit/museum_visit.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
extra pred: SELECT  COUNT(DISTINCT v.ID) AS Total_Visitors FROM visitor v WHERE v.ID NOT IN (     SELECT visitor_ID     FROM visit     JOIN museum ON visit.Museum_ID = museum.Museum_ID     WHERE CAST(museum.Open_Year AS INTEGER) > 2010 )
extra gold: SELECT count ( * )  FROM visitor WHERE id NOT IN  ( SELECT t2.visitor_id FROM museum AS t1 JOIN visit AS t2 ON t1.Museum_ID   =   t2.Museum_ID WHERE t1.open_year  >  2010 ) 

当前idx2
eval_err_num:341
____________________
SELECT  v.Name, v.Level_of_membership FROM visitor v WHERE v.ID NOT IN (     SELECT visitor_ID     FROM visit     JOIN museum ON visit.Museum_ID = museum.Museum_ID     WHERE CAST(museum.Open_Year AS INTEGER) > 2010 ) LIMIT 3
SELECT name, level_of_membership FROM visitor WHERE id NOT IN  ( SELECT t2.visitor_id FROM museum AS t1 JOIN visit AS t2 ON t1.Museum_ID   =   t2.Museum_ID WHERE t1.open_year  >  2010 ) 
连接数据库../datasets/cosql_dataset/database/museum_visit/museum_visit.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
extra pred: SELECT  v.Name, v.Level_of_membership FROM visitor v WHERE v.ID NOT IN (     SELECT visitor_ID     FROM visit     JOIN museum ON visit.Museum_ID = museum.Museum_ID     WHERE CAST(museum.Open_Year AS INTEGER) > 2010 ) LIMIT 3
extra gold: SELECT name, level_of_membership FROM visitor WHERE id NOT IN  ( SELECT t2.visitor_id FROM museum AS t1 JOIN visit AS t2 ON t1.Museum_ID   =   t2.Museum_ID WHERE t1.open_year  >  2010 ) 

当前idx1
eval_err_num:342
____________________
SELECT COUNT(*) AS num_owners_without_dogs
FROM Owners
WHERE owner_id NOT IN (SELECT owner_id FROM Dogs WHERE date_departed IS NULL)
SELECT count ( * )  FROM Owners WHERE owner_id NOT IN  (  SELECT owner_id FROM Dogs  ) 
连接数据库../datasets/cosql_dataset/database/dog_kennels/dog_kennels.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
extra pred: SELECT COUNT(*) AS num_owners_without_dogs
FROM Owners
WHERE owner_id NOT IN (SELECT owner_id FROM Dogs WHERE date_departed IS NULL)
extra gold: SELECT count ( * )  FROM Owners WHERE owner_id NOT IN  (  SELECT owner_id FROM Dogs  ) 

当前idx2
eval_err_num:343
____________________
SELECT first_name || ' ' || last_name AS full_name
FROM Owners
WHERE owner_id NOT IN (SELECT owner_id FROM Dogs WHERE date_departed IS NULL)
SELECT count ( * )  FROM Owners WHERE owner_id NOT IN  (  SELECT owner_id FROM Dogs  ) 
连接数据库../datasets/cosql_dataset/database/dog_kennels/dog_kennels.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
extra pred: SELECT first_name || ' ' || last_name AS full_name
FROM Owners
WHERE owner_id NOT IN (SELECT owner_id FROM Dogs WHERE date_departed IS NULL)
extra gold: SELECT count ( * )  FROM Owners WHERE owner_id NOT IN  (  SELECT owner_id FROM Dogs  ) 

当前idx1
eval_err_num:344
____________________
SELECT  Title, MIN(Original_air_date) AS First_Air_Date FROM Cartoon
SELECT title  FROM cartoon ORDER BY original_air_date LIMIT 1
连接数据库../datasets/cosql_dataset/database/tvshow/tvshow.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT  Title, MIN(Original_air_date) AS First_Air_Date FROM Cartoon
medium gold: SELECT title  FROM cartoon ORDER BY original_air_date LIMIT 1

当前idx2
eval_err_num:345
____________________
SELECT  Title, MAX(Original_air_date) AS Last_Air_Date FROM Cartoon
SELECT title  FROM cartoon ORDER BY original_air_date desc LIMIT 1
连接数据库../datasets/cosql_dataset/database/tvshow/tvshow.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT  Title, MAX(Original_air_date) AS Last_Air_Date FROM Cartoon
medium gold: SELECT title  FROM cartoon ORDER BY original_air_date desc LIMIT 1

当前idx3
____________________
SELECT  Title, Channel FROM Cartoon WHERE Original_air_date = (SELECT MAX(Original_air_date) FROM Cartoon)
SELECT channel FROM cartoon ORDER BY original_air_date desc LIMIT 1
连接数据库../datasets/cosql_dataset/database/tvshow/tvshow.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT  Title, Channel FROM Cartoon WHERE Original_air_date = (SELECT MAX(Original_air_date) FROM Cartoon)
medium gold: SELECT channel FROM cartoon ORDER BY original_air_date desc LIMIT 1

当前idx4
____________________
SELECT  Title, Production_code FROM Cartoon WHERE Original_air_date = (SELECT MAX(Original_air_date) FROM Cartoon)
SELECT production_code FROM cartoon ORDER BY original_air_date desc LIMIT 1
连接数据库../datasets/cosql_dataset/database/tvshow/tvshow.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT  Title, Production_code FROM Cartoon WHERE Original_air_date = (SELECT MAX(Original_air_date) FROM Cartoon)
medium gold: SELECT production_code FROM cartoon ORDER BY original_air_date desc LIMIT 1

当前idx1
____________________
SELECT  Name FROM singer WHERE Birth_Year < 1945
SELECT * FROM singer WHERE Birth_Year  <  1945
连接数据库../datasets/cosql_dataset/database/singer/singer.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
easy pred: SELECT  Name FROM singer WHERE Birth_Year < 1945
easy gold: SELECT * FROM singer WHERE Birth_Year  <  1945

当前idx2
____________________
SELECT  Name FROM singer WHERE Birth_Year > 1955
SELECT * FROM singer WHERE Birth_Year  >  1955
连接数据库../datasets/cosql_dataset/database/singer/singer.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
easy pred: SELECT  Name FROM singer WHERE Birth_Year > 1955
easy gold: SELECT * FROM singer WHERE Birth_Year  >  1955

当前idx3
eval_err_num:346
____________________
SELECT  Name FROM singer WHERE (Birth_Year < 1945 OR Birth_Year > 1955) AND Citizenship IN (     SELECT Citizenship     FROM singer     GROUP BY Citizenship     HAVING COUNT(*) > 1 )
SELECT Citizenship FROM singer WHERE Birth_Year  <  1945
连接数据库../datasets/cosql_dataset/database/singer/singer.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
easy pred: SELECT  Name FROM singer WHERE (Birth_Year < 1945 OR Birth_Year > 1955) AND Citizenship IN (     SELECT Citizenship     FROM singer     GROUP BY Citizenship     HAVING COUNT(*) > 1 )
easy gold: SELECT Citizenship FROM singer WHERE Birth_Year  <  1945

当前idx4
____________________
SELECT  Name FROM singer WHERE Birth_Year > 1955 AND Citizenship IN (     SELECT Citizenship     FROM singer     WHERE Birth_Year > 1955     GROUP BY Citizenship     HAVING COUNT(*) > 1 )
SELECT Citizenship FROM singer WHERE Birth_Year  <  1945 or Birth_Year  >  1955
连接数据库../datasets/cosql_dataset/database/singer/singer.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT  Name FROM singer WHERE Birth_Year > 1955 AND Citizenship IN (     SELECT Citizenship     FROM singer     WHERE Birth_Year > 1955     GROUP BY Citizenship     HAVING COUNT(*) > 1 )
medium gold: SELECT Citizenship FROM singer WHERE Birth_Year  <  1945 or Birth_Year  >  1955

当前idx>4
____________________
SELECT  Name FROM singer WHERE Birth_Year < 1945 AND Citizenship = 'United States'
SELECT * FROM singer WHERE Birth_Year  <  1945 and Citizenship  =  'United States'
连接数据库../datasets/cosql_dataset/database/singer/singer.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT  Name FROM singer WHERE Birth_Year < 1945 AND Citizenship = 'United States'
medium gold: SELECT * FROM singer WHERE Birth_Year  <  1945 and Citizenship  =  'United States'

当前idx>4
____________________
SELECT  Name FROM singer WHERE Birth_Year > 1955 AND Citizenship = 'United States'
SELECT * FROM singer WHERE Birth_Year  <  1945 and Citizenship  =  'United States' UNION SELECT * FROM singer WHERE Birth_Year  >  1955 and Citizenship  =  'United States'
连接数据库../datasets/cosql_dataset/database/singer/singer.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
extra pred: SELECT  Name FROM singer WHERE Birth_Year > 1955 AND Citizenship = 'United States'
extra gold: SELECT * FROM singer WHERE Birth_Year  <  1945 and Citizenship  =  'United States' UNION SELECT * FROM singer WHERE Birth_Year  >  1955 and Citizenship  =  'United States'

当前idx>4
____________________
SELECT  Name FROM singer WHERE Birth_Year < 1945 AND Citizenship = 'France'
SELECT * FROM singer WHERE Birth_Year  <  1945 and Citizenship  =  'France'
连接数据库../datasets/cosql_dataset/database/singer/singer.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT  Name FROM singer WHERE Birth_Year < 1945 AND Citizenship = 'France'
medium gold: SELECT * FROM singer WHERE Birth_Year  <  1945 and Citizenship  =  'France'

当前idx>4
____________________
SELECT  Name FROM singer WHERE Birth_Year > 1955 AND Citizenship = 'France'
SELECT * FROM singer WHERE Birth_Year  <  1945 and Citizenship  =  'France' UNION SELECT * FROM singer WHERE Birth_Year  >  1955 and Citizenship  =  'France'
连接数据库../datasets/cosql_dataset/database/singer/singer.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
extra pred: SELECT  Name FROM singer WHERE Birth_Year > 1955 AND Citizenship = 'France'
extra gold: SELECT * FROM singer WHERE Birth_Year  <  1945 and Citizenship  =  'France' UNION SELECT * FROM singer WHERE Birth_Year  >  1955 and Citizenship  =  'France'

当前idx>4
eval_err_num:347
____________________
SELECT  Name FROM singer WHERE (Birth_Year < 1945 OR Birth_Year > 1955) AND Citizenship = 'Chile'
SELECT * FROM singer WHERE Birth_Year  <  1945 and Citizenship  =  'Chile' UNION SELECT * FROM singer WHERE Birth_Year  >  1955 and Citizenship  =  'Chile'
连接数据库../datasets/cosql_dataset/database/singer/singer.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
extra pred: SELECT  Name FROM singer WHERE (Birth_Year < 1945 OR Birth_Year > 1955) AND Citizenship = 'Chile'
extra gold: SELECT * FROM singer WHERE Birth_Year  <  1945 and Citizenship  =  'Chile' UNION SELECT * FROM singer WHERE Birth_Year  >  1955 and Citizenship  =  'Chile'

当前idx1
____________________
SELECT  COUNT(*) FROM country
select count ( * )  from Country
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT  COUNT(*) FROM countrylanguage
select count ( distinct Language )  from countrylanguage
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
easy pred: SELECT  COUNT(*) FROM countrylanguage
easy gold: select count ( distinct Language )  from countrylanguage

当前idx3
____________________
SELECT  SurfaceArea FROM country WHERE Code = 'AFG'
select SurfaceArea from Country where Code  =  'AFG'
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx1
____________________
SELECT  SUM(Population)  FROM country  WHERE Continent = 'North America'  OR Continent = 'South America'
SELECT sum ( Population )  FROM country WHERE Region  =  "Caribbean"
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
easy pred: SELECT  SUM(Population)  FROM country  WHERE Continent = 'North America'  OR Continent = 'South America'
easy gold: SELECT sum ( Population )  FROM country WHERE Region  =  "Caribbean"

当前idx2
____________________
SELECT  Continent FROM country GROUP BY Continent HAVING AVG(LifeExpectancy) < 72
SELECT Continent FROM country GROUP BY Continent HAVING avg ( LifeExpectancy )   <  72
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx3
eval_err_num:348
____________________
SELECT  Continent, SUM(Population) as TotalPopulation FROM country GROUP BY Continent HAVING AVG(LifeExpectancy) < 72
SELECT sum ( Population ) ,  Continent FROM country GROUP BY Continent HAVING avg ( LifeExpectancy )   <  72
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT  Continent, SUM(Population) as TotalPopulation FROM country GROUP BY Continent HAVING AVG(LifeExpectancy) < 72
medium gold: SELECT sum ( Population ) ,  Continent FROM country GROUP BY Continent HAVING avg ( LifeExpectancy )   <  72

当前idx4
eval_err_num:349
____________________
SELECT  AVG(LifeExpectancy) as AverageLifeExpectancy FROM country WHERE Continent IN (     SELECT Continent     FROM country     GROUP BY Continent     HAVING AVG(LifeExpectancy) < 72 )
SELECT avg ( LifeExpectancy )  ,  Continent FROM country GROUP BY Continent HAVING avg ( LifeExpectancy )   <  72
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT  AVG(LifeExpectancy) as AverageLifeExpectancy FROM country WHERE Continent IN (     SELECT Continent     FROM country     GROUP BY Continent     HAVING AVG(LifeExpectancy) < 72 )
medium gold: SELECT avg ( LifeExpectancy )  ,  Continent FROM country GROUP BY Continent HAVING avg ( LifeExpectancy )   <  72

当前idx>4
eval_err_num:350
____________________
SELECT  Continent, AVG(LifeExpectancy) as AverageLifeExpectancy, SUM(Population) as TotalPopulation FROM country GROUP BY Continent HAVING AVG(LifeExpectancy) < 72
SELECT sum ( Population )  ,  avg ( LifeExpectancy )  ,  Continent FROM country GROUP BY Continent HAVING avg ( LifeExpectancy )   <  72
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT  Continent, AVG(LifeExpectancy) as AverageLifeExpectancy, SUM(Population) as TotalPopulation FROM country GROUP BY Continent HAVING AVG(LifeExpectancy) < 72
medium gold: SELECT sum ( Population )  ,  avg ( LifeExpectancy )  ,  Continent FROM country GROUP BY Continent HAVING avg ( LifeExpectancy )   <  72

当前idx1
____________________
SELECT  street FROM Owners WHERE first_name = 'Nora' AND last_name = 'Haley'
SELECT street FROM Owners WHERE first_name  =  "Nora" and last_name  =  "Haley"
连接数据库../datasets/cosql_dataset/database/dog_kennels/dog_kennels.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT  home_phone FROM Owners WHERE first_name = 'Nora' AND last_name = 'Haley'
SELECT home_phone FROM Owners WHERE first_name  =  "Nora" and last_name  =  "Haley"
连接数据库../datasets/cosql_dataset/database/dog_kennels/dog_kennels.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx3
____________________
SELECT  email_address FROM Owners WHERE first_name = 'Jaclyn' AND last_name = 'Stoltenberg'
SELECT email_address FROM Owners WHERE first_name  =  "Jaclyn" and last_name  =  "Stoltenberg"
连接数据库../datasets/cosql_dataset/database/dog_kennels/dog_kennels.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx4
____________________
SELECT  first_name FROM Owners WHERE last_name = 'DuBuque'
SELECT first_name FROM Owners WHERE last_name  =  "DuBuque"
连接数据库../datasets/cosql_dataset/database/dog_kennels/dog_kennels.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx1
eval_err_num:351
____________________
SELECT  Document_ID, COUNT(Paragraph_ID) AS Paragraph_Count FROM Paragraphs GROUP BY Document_ID ORDER BY Paragraph_Count LIMIT 1
SELECT document_id FROM Paragraphs GROUP BY document_id ORDER BY count ( * )  ASC LIMIT 1
连接数据库../datasets/cosql_dataset/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
hard pred: SELECT  Document_ID, COUNT(Paragraph_ID) AS Paragraph_Count FROM Paragraphs GROUP BY Document_ID ORDER BY Paragraph_Count LIMIT 1
hard gold: SELECT document_id FROM Paragraphs GROUP BY document_id ORDER BY count ( * )  ASC LIMIT 1

当前idx2
eval_err_num:352
____________________
SELECT  Document_ID, COUNT(Paragraph_ID) AS Paragraph_Count FROM Paragraphs GROUP BY Document_ID ORDER BY Paragraph_Count DESC LIMIT 1
SELECT document_id FROM Paragraphs GROUP BY document_id ORDER BY count ( * )  desc LIMIT 1
连接数据库../datasets/cosql_dataset/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
hard pred: SELECT  Document_ID, COUNT(Paragraph_ID) AS Paragraph_Count FROM Paragraphs GROUP BY Document_ID ORDER BY Paragraph_Count DESC LIMIT 1
hard gold: SELECT document_id FROM Paragraphs GROUP BY document_id ORDER BY count ( * )  desc LIMIT 1

当前idx3
eval_err_num:353
____________________
SELECT  COUNT(Paragraph_ID) AS Paragraph_Count FROM Paragraphs WHERE Document_ID = 2394
select count ( paragraph_id )  from Paragraphs where Document_ID  =  2394
连接数据库../datasets/cosql_dataset/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
easy pred: SELECT  COUNT(Paragraph_ID) AS Paragraph_Count FROM Paragraphs WHERE Document_ID = 2394
easy gold: select count ( paragraph_id )  from Paragraphs where Document_ID  =  2394

当前idx4
____________________
SELECT  Paragraph_Text FROM Paragraphs WHERE Document_ID = 2394 LIMIT 3
select Paragraph_Text from Paragraphs where Document_ID  =  2394
连接数据库../datasets/cosql_dataset/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:0
easy pred: SELECT  Paragraph_Text FROM Paragraphs WHERE Document_ID = 2394 LIMIT 3
easy gold: select Paragraph_Text from Paragraphs where Document_ID  =  2394

当前idx1
____________________
SELECT  email_address FROM Owners WHERE owner_id = 1
SELECT email_address from owners where owner_id  =  1
连接数据库../datasets/cosql_dataset/database/dog_kennels/dog_kennels.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT  weight FROM Dogs WHERE dog_id = 1
SELECT weight from dogs where dog_id  =  1
连接数据库../datasets/cosql_dataset/database/dog_kennels/dog_kennels.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx3
____________________
SELECT  age FROM Dogs WHERE dog_id = 1
SELECT age from dogs where dog_id  =  1
连接数据库../datasets/cosql_dataset/database/dog_kennels/dog_kennels.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx4
eval_err_num:354
____________________
SELECT  o.owner_id, o.last_name FROM Owners o JOIN Dogs d ON o.owner_id = d.owner_id JOIN Treatments t ON d.dog_id = t.dog_id GROUP BY o.owner_id, o.last_name ORDER BY COUNT(t.treatment_id) DESC LIMIT 1
SELECT T1.owner_id ,  T1.last_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id   =   T2.owner_id JOIN Treatments AS T3 ON T2.dog_id   =   T3.dog_id GROUP BY T1.owner_id ORDER BY count ( * )  DESC LIMIT 1
连接数据库../datasets/cosql_dataset/database/dog_kennels/dog_kennels.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
extra pred: SELECT  o.owner_id, o.last_name FROM Owners o JOIN Dogs d ON o.owner_id = d.owner_id JOIN Treatments t ON d.dog_id = t.dog_id GROUP BY o.owner_id, o.last_name ORDER BY COUNT(t.treatment_id) DESC LIMIT 1
extra gold: SELECT T1.owner_id ,  T1.last_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id   =   T2.owner_id JOIN Treatments AS T3 ON T2.dog_id   =   T3.dog_id GROUP BY T1.owner_id ORDER BY count ( * )  DESC LIMIT 1

当前idx1
eval_err_num:355
____________________
SELECT  COUNT(*) AS total_matches FROM matches WHERE year = 2013
SELECT count ( * )  FROM matches WHERE YEAR   =   2013
连接数据库../datasets/cosql_dataset/database/wta_1/wta_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
easy pred: SELECT  COUNT(*) AS total_matches FROM matches WHERE year = 2013
easy gold: SELECT count ( * )  FROM matches WHERE YEAR   =   2013

当前idx2
eval_err_num:356
____________________
SELECT  COUNT(*) AS total_matches FROM matches WHERE year = 2016
SELECT count ( * )  FROM matches WHERE YEAR   =   2016
连接数据库../datasets/cosql_dataset/database/wta_1/wta_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
easy pred: SELECT  COUNT(*) AS total_matches FROM matches WHERE year = 2016
easy gold: SELECT count ( * )  FROM matches WHERE YEAR   =   2016

当前idx3
eval_err_num:357
____________________
SELECT  player_id AS loser_id FROM players WHERE first_name = 'Petra' AND last_name = 'Kvitova'
SELECT distinct loser_id  FROM  matches where loser_name   = "Petra Kvitova"
连接数据库../datasets/cosql_dataset/database/wta_1/wta_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
easy pred: SELECT  player_id AS loser_id FROM players WHERE first_name = 'Petra' AND last_name = 'Kvitova'
easy gold: SELECT distinct loser_id  FROM  matches where loser_name   = "Petra Kvitova"

当前idx1
eval_err_num:358
____________________
SELECT  DISTINCT Country FROM TV_Channel WHERE id NOT IN (     SELECT c.id     FROM Cartoon c     WHERE Written_by = 'Todd Casey' )
SELECT country FROM TV_Channel EXCEPT SELECT T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id  =  T2.Channel WHERE T2.written_by   =   'Todd Casey'
连接数据库../datasets/cosql_dataset/database/tvshow/tvshow.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
hard pred: SELECT  DISTINCT Country FROM TV_Channel WHERE id NOT IN (     SELECT c.id     FROM Cartoon c     WHERE Written_by = 'Todd Casey' )
hard gold: SELECT country FROM TV_Channel EXCEPT SELECT T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id  =  T2.Channel WHERE T2.written_by   =   'Todd Casey'

当前idx2
____________________
SELECT  Directed_by FROM Cartoon WHERE Title = 'The Rise of Blue Beetle' AND Written_by = 'Michael Jelenic'
SELECT directed_by from cartoon where title  =  "The Rise of the Blue Beetle!" and written_by  =  "Michael Jelenic"
连接数据库../datasets/cosql_dataset/database/tvshow/tvshow.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:True
当前idx3
____________________
SELECT  Package_Option FROM TV_Channel WHERE Country = 'Italy'
SELECT Package_Option from tv_channel where country  =  "Italy"
连接数据库../datasets/cosql_dataset/database/tvshow/tvshow.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx1
eval_err_num:359
____________________
SELECT  s.Name, s.Song_release_year FROM singer s WHERE s.Age = (SELECT MIN(Age) FROM singer)
SELECT song_name ,  song_release_year FROM singer ORDER BY age LIMIT 1
连接数据库../datasets/cosql_dataset/database/concert_singer/concert_singer.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT  s.Name, s.Song_release_year FROM singer s WHERE s.Age = (SELECT MIN(Age) FROM singer)
medium gold: SELECT song_name ,  song_release_year FROM singer ORDER BY age LIMIT 1

当前idx2
eval_err_num:360
____________________
SELECT  s.Name, s.Song_release_year FROM singer s WHERE s.Age = (SELECT MAX(Age) FROM singer)
SELECT song_name ,  song_release_year FROM singer ORDER BY age desc LIMIT 1
连接数据库../datasets/cosql_dataset/database/concert_singer/concert_singer.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT  s.Name, s.Song_release_year FROM singer s WHERE s.Age = (SELECT MAX(Age) FROM singer)
medium gold: SELECT song_name ,  song_release_year FROM singer ORDER BY age desc LIMIT 1

当前idx3
eval_err_num:361
____________________
SELECT  s.Name FROM singer s WHERE s.Age = (SELECT MIN(Age) FROM singer)
SELECT Name FROM singer ORDER BY age LIMIT 1
连接数据库../datasets/cosql_dataset/database/concert_singer/concert_singer.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT  s.Name FROM singer s WHERE s.Age = (SELECT MIN(Age) FROM singer)
medium gold: SELECT Name FROM singer ORDER BY age LIMIT 1

当前idx4
eval_err_num:362
____________________
SELECT  s.Name, s.Age FROM singer s WHERE s.Age = (SELECT MAX(Age) FROM singer)
SELECT Name, age FROM singer ORDER BY age desc LIMIT 1
连接数据库../datasets/cosql_dataset/database/concert_singer/concert_singer.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT  s.Name, s.Age FROM singer s WHERE s.Age = (SELECT MAX(Age) FROM singer)
medium gold: SELECT Name, age FROM singer ORDER BY age desc LIMIT 1

当前idx>4
eval_err_num:363
____________________
SELECT  s.Country FROM singer s WHERE s.Age = (SELECT MAX(Age) FROM singer)
SELECT Country FROM singer ORDER BY age desc LIMIT 1
连接数据库../datasets/cosql_dataset/database/concert_singer/concert_singer.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT  s.Country FROM singer s WHERE s.Age = (SELECT MAX(Age) FROM singer)
medium gold: SELECT Country FROM singer ORDER BY age desc LIMIT 1

当前idx>4
____________________
SELECT  Name FROM singer WHERE Country = 'United States'
SELECT Name FROM singer where country  =  'United States'
连接数据库../datasets/cosql_dataset/database/concert_singer/concert_singer.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx1
____________________
SELECT  COUNT(DISTINCT StuID) FROM Has_Pet JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE PetType = 'dog'
SELECT count ( * )  FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid   =   T2.stuid JOIN pets AS T3 ON T3.petid   =   T2.petid WHERE T3.pettype   =   'dog'
连接数据库../datasets/cosql_dataset/database/pets_1/pets_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
hard pred: SELECT  COUNT(DISTINCT StuID) FROM Has_Pet JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE PetType = 'dog'
hard gold: SELECT count ( * )  FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid   =   T2.stuid JOIN pets AS T3 ON T3.petid   =   T2.petid WHERE T3.pettype   =   'dog'

当前idx2
____________________
SELECT  COUNT(DISTINCT StuID) FROM Has_Pet JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE PetType = 'cat'
SELECT count ( * )  FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid   =   T2.stuid JOIN pets AS T3 ON T3.petid   =   T2.petid WHERE T3.pettype   =   'cat'
连接数据库../datasets/cosql_dataset/database/pets_1/pets_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
hard pred: SELECT  COUNT(DISTINCT StuID) FROM Has_Pet JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE PetType = 'cat'
hard gold: SELECT count ( * )  FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid   =   T2.stuid JOIN pets AS T3 ON T3.petid   =   T2.petid WHERE T3.pettype   =   'cat'

当前idx3
____________________
SELECT  DISTINCT Fname FROM Student WHERE StuID IN (     SELECT StuID     FROM Has_Pet     JOIN Pets ON Has_Pet.PetID = Pets.PetID     WHERE PetType = 'cat'     LIMIT 3 )
SELECT DISTINCT T1.Fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid   =   T2.stuid JOIN pets AS T3 ON T3.petid   =   T2.petid WHERE T3.pettype   =   'cat' OR T3.pettype   =   'dog'
连接数据库../datasets/cosql_dataset/database/pets_1/pets_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
extra pred: SELECT  DISTINCT Fname FROM Student WHERE StuID IN (     SELECT StuID     FROM Has_Pet     JOIN Pets ON Has_Pet.PetID = Pets.PetID     WHERE PetType = 'cat'     LIMIT 3 )
extra gold: SELECT DISTINCT T1.Fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid   =   T2.stuid JOIN pets AS T3 ON T3.petid   =   T2.petid WHERE T3.pettype   =   'cat' OR T3.pettype   =   'dog'

当前idx1
____________________
SELECT  DISTINCT state FROM Professionals
SELECT state FROM Professionals
连接数据库../datasets/cosql_dataset/database/dog_kennels/dog_kennels.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:True
当前idx2
____________________
SELECT  DISTINCT state FROM Owners WHERE state IN (SELECT DISTINCT state FROM Professionals)
SELECT state FROM Owners INTERSECT SELECT state FROM Professionals
连接数据库../datasets/cosql_dataset/database/dog_kennels/dog_kennels.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
hard pred: SELECT  DISTINCT state FROM Owners WHERE state IN (SELECT DISTINCT state FROM Professionals)
hard gold: SELECT state FROM Owners INTERSECT SELECT state FROM Professionals

当前idx1
____________________
SELECT  first_name FROM Professionals
SELECT DISTINCT first_name FROM professionals
连接数据库../datasets/cosql_dataset/database/dog_kennels/dog_kennels.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT  first_name, role_code FROM Professionals
SELECT DISTINCT T1.first_name ,  T3.treatment_type_description FROM professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id   =   T2.professional_id JOIN Treatment_types AS T3 ON T2.treatment_type_code   =   T3.treatment_type_code
连接数据库../datasets/cosql_dataset/database/dog_kennels/dog_kennels.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT  first_name, role_code FROM Professionals
medium gold: SELECT DISTINCT T1.first_name ,  T3.treatment_type_description FROM professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id   =   T2.professional_id JOIN Treatment_types AS T3 ON T2.treatment_type_code   =   T3.treatment_type_code

当前idx3
____________________
SELECT  P.first_name, T.treatment_type_code FROM Professionals AS P JOIN Treatments AS T ON P.professional_id = T.professional_id
SELECT DISTINCT T1.first_name ,  T3.treatment_type_description FROM professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id   =   T2.professional_id JOIN Treatment_types AS T3 ON T2.treatment_type_code   =   T3.treatment_type_code
连接数据库../datasets/cosql_dataset/database/dog_kennels/dog_kennels.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT  P.first_name, T.treatment_type_code FROM Professionals AS P JOIN Treatments AS T ON P.professional_id = T.professional_id
medium gold: SELECT DISTINCT T1.first_name ,  T3.treatment_type_description FROM professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id   =   T2.professional_id JOIN Treatment_types AS T3 ON T2.treatment_type_code   =   T3.treatment_type_code

当前idx1
eval_err_num:364
____________________
SELECT  COUNT(DISTINCT Course_ID) AS Number_of_Course_IDs FROM course
SELECT count ( Course_ID )  FROM course
连接数据库../datasets/cosql_dataset/database/course_teach/course_teach.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
easy pred: SELECT  COUNT(DISTINCT Course_ID) AS Number_of_Course_IDs FROM course
easy gold: SELECT count ( Course_ID )  FROM course

当前idx2
____________________
SELECT  Course FROM course
SELECT Course FROM course
连接数据库../datasets/cosql_dataset/database/course_teach/course_teach.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx3
eval_err_num:365
____________________
SELECT  COUNT(DISTINCT Teacher_ID) AS Number_of_Teachers FROM course_arrange
SELECT count ( Teacher_ID )  FROM teacher
连接数据库../datasets/cosql_dataset/database/course_teach/course_teach.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
easy pred: SELECT  COUNT(DISTINCT Teacher_ID) AS Number_of_Teachers FROM course_arrange
easy gold: SELECT count ( Teacher_ID )  FROM teacher

当前idx4
eval_err_num:366
____________________
SELECT  t.Name FROM teacher t JOIN course_arrange ca ON t.Teacher_ID = ca.Teacher_ID JOIN course c ON ca.Course_ID = c.Course_ID WHERE c.Course = 'Math'
SELECT T3.Name FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID   =   T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID   =   T3.Teacher_ID WHERE T2.Course   =   "Math"
连接数据库../datasets/cosql_dataset/database/course_teach/course_teach.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
hard pred: SELECT  t.Name FROM teacher t JOIN course_arrange ca ON t.Teacher_ID = ca.Teacher_ID JOIN course c ON ca.Course_ID = c.Course_ID WHERE c.Course = 'Math'
hard gold: SELECT T3.Name FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID   =   T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID   =   T3.Teacher_ID WHERE T2.Course   =   "Math"

当前idx1
eval_err_num:367
____________________
SELECT  c.Continent, COUNT(cm.Id) AS CarMakersCount FROM continents c LEFT JOIN car_makers cm ON c.ContId = cm.Country GROUP BY c.Continent
SELECT T1.Continent ,  count ( * )  FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId   =   T2.continent JOIN car_makers AS T3 ON T2.CountryId   =   T3.Country GROUP BY T1.Continent
连接数据库../datasets/cosql_dataset/database/car_1/car_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
hard pred: SELECT  c.Continent, COUNT(cm.Id) AS CarMakersCount FROM continents c LEFT JOIN car_makers cm ON c.ContId = cm.Country GROUP BY c.Continent
hard gold: SELECT T1.Continent ,  count ( * )  FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId   =   T2.continent JOIN car_makers AS T3 ON T2.CountryId   =   T3.Country GROUP BY T1.Continent

当前idx2
____________________
SELECT  FullName, Country FROM car_makers WHERE Country = 'Asia'
SELECT T3.fullname,  T2.countryName FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId   =   T2.continent JOIN car_makers AS T3 ON T2.CountryId   =   T3.Country where T1.continent  =  "asia"
连接数据库../datasets/cosql_dataset/database/car_1/car_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
hard pred: SELECT  FullName, Country FROM car_makers WHERE Country = 'Asia'
hard gold: SELECT T3.fullname,  T2.countryName FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId   =   T2.continent JOIN car_makers AS T3 ON T2.CountryId   =   T3.Country where T1.continent  =  "asia"

当前idx3
____________________
SELECT  FullName, Country FROM car_makers WHERE Country = 'Europe'
SELECT T3.fullname,  T2.countryName FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId   =   T2.continent JOIN car_makers AS T3 ON T2.CountryId   =   T3.Country where T1.continent  =  "europe"
连接数据库../datasets/cosql_dataset/database/car_1/car_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
hard pred: SELECT  FullName, Country FROM car_makers WHERE Country = 'Europe'
hard gold: SELECT T3.fullname,  T2.countryName FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId   =   T2.continent JOIN car_makers AS T3 ON T2.CountryId   =   T3.Country where T1.continent  =  "europe"

当前idx4
____________________
SELECT  FullName, Country FROM car_makers WHERE Country = 'America'
SELECT T3.fullname,  T2.countryName FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId   =   T2.continent JOIN car_makers AS T3 ON T2.CountryId   =   T3.Country where T1.continent  =  "america"
连接数据库../datasets/cosql_dataset/database/car_1/car_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
hard pred: SELECT  FullName, Country FROM car_makers WHERE Country = 'America'
hard gold: SELECT T3.fullname,  T2.countryName FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId   =   T2.continent JOIN car_makers AS T3 ON T2.CountryId   =   T3.Country where T1.continent  =  "america"

当前idx>4
eval_err_num:368
____________________
SELECT  COUNT(Id) AS TotalCarMakers FROM car_makers
select count ( * )  from car_makers
连接数据库../datasets/cosql_dataset/database/car_1/car_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
easy pred: SELECT  COUNT(Id) AS TotalCarMakers FROM car_makers
easy gold: select count ( * )  from car_makers

当前idx1
eval_err_num:369
____________________
SELECT  COUNT(DISTINCT professional_id) AS total_professional_ids FROM Professionals
SELECT count ( distinct professional_id )  from professionals
连接数据库../datasets/cosql_dataset/database/dog_kennels/dog_kennels.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
easy pred: SELECT  COUNT(DISTINCT professional_id) AS total_professional_ids FROM Professionals
easy gold: SELECT count ( distinct professional_id )  from professionals

当前idx2
eval_err_num:370
____________________
SELECT  p.professional_id, p.first_name, t.treatment_type_code FROM Professionals p JOIN Treatments tr ON p.professional_id = tr.professional_id JOIN Treatment_Types t ON tr.treatment_type_code = t.treatment_type_code
SELECT T1.professional_id, T1.first_name ,  T3.treatment_type_code FROM professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id   =   T2.professional_id JOIN Treatment_types AS T3 ON T2.treatment_type_code   =   T3.treatment_type_code
连接数据库../datasets/cosql_dataset/database/dog_kennels/dog_kennels.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT  p.professional_id, p.first_name, t.treatment_type_code FROM Professionals p JOIN Treatments tr ON p.professional_id = tr.professional_id JOIN Treatment_Types t ON tr.treatment_type_code = t.treatment_type_code
medium gold: SELECT T1.professional_id, T1.first_name ,  T3.treatment_type_code FROM professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id   =   T2.professional_id JOIN Treatment_types AS T3 ON T2.treatment_type_code   =   T3.treatment_type_code

当前idx3
eval_err_num:371
____________________
SELECT  p.professional_id, p.first_name, t.treatment_type_code FROM Professionals p JOIN Treatments tr ON p.professional_id = tr.professional_id JOIN Treatment_Types t ON tr.treatment_type_code = t.treatment_type_code ORDER BY tr.date_of_treatment DESC LIMIT 5
SELECT T1.professional_id, T1.first_name, T3.treatment_type_code FROM professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id   =   T2.professional_id JOIN Treatment_types AS T3 ON T2.treatment_type_code   =   T3.treatment_type_code order by T2.date_of_treatment desc limit 5
连接数据库../datasets/cosql_dataset/database/dog_kennels/dog_kennels.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
extra pred: SELECT  p.professional_id, p.first_name, t.treatment_type_code FROM Professionals p JOIN Treatments tr ON p.professional_id = tr.professional_id JOIN Treatment_Types t ON tr.treatment_type_code = t.treatment_type_code ORDER BY tr.date_of_treatment DESC LIMIT 5
extra gold: SELECT T1.professional_id, T1.first_name, T3.treatment_type_code FROM professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id   =   T2.professional_id JOIN Treatment_types AS T3 ON T2.treatment_type_code   =   T3.treatment_type_code order by T2.date_of_treatment desc limit 5

当前idx1
____________________
SELECT  name FROM battle
SELECT name  FROM battle
连接数据库../datasets/cosql_dataset/database/battle_death/battle_death.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT  name, bulgarian_commander FROM battle
SELECT name, bulgarian_commander FROM battle
连接数据库../datasets/cosql_dataset/database/battle_death/battle_death.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx3
eval_err_num:372
____________________
SELECT  b.name FROM battle b LEFT JOIN ship s ON b.id = s.lost_in_battle WHERE s.location IS NULL OR s.location != 'English Channel'
SELECT name  FROM battle EXCEPT SELECT T1.name FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle WHERE T2.location  =  'English Channel'
连接数据库../datasets/cosql_dataset/database/battle_death/battle_death.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
hard pred: SELECT  b.name FROM battle b LEFT JOIN ship s ON b.id = s.lost_in_battle WHERE s.location IS NULL OR s.location != 'English Channel'
hard gold: SELECT name  FROM battle EXCEPT SELECT T1.name FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle WHERE T2.location  =  'English Channel'

当前idx4
eval_err_num:373
____________________
SELECT  b.name, b.result FROM battle b LEFT JOIN ship s ON b.id = s.lost_in_battle WHERE s.location IS NULL OR s.location != 'English Channel'
SELECT name , RESULT FROM battle EXCEPT SELECT T1.name , T1.result  FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle WHERE T2.location  =  'English Channel'
连接数据库../datasets/cosql_dataset/database/battle_death/battle_death.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
extra pred: SELECT  b.name, b.result FROM battle b LEFT JOIN ship s ON b.id = s.lost_in_battle WHERE s.location IS NULL OR s.location != 'English Channel'
extra gold: SELECT name , RESULT FROM battle EXCEPT SELECT T1.name , T1.result  FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle WHERE T2.location  =  'English Channel'

当前idx>4
eval_err_num:374
____________________
SELECT  b.name, b.result, b.bulgarian_commander FROM battle b LEFT JOIN ship s ON b.id = s.lost_in_battle WHERE s.location IS NULL OR s.location != 'English Channel'
SELECT name , RESULT , bulgarian_commander FROM battle EXCEPT SELECT T1.name , T1.result , T1.bulgarian_commander FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle WHERE T2.location  =  'English Channel'
连接数据库../datasets/cosql_dataset/database/battle_death/battle_death.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
extra pred: SELECT  b.name, b.result, b.bulgarian_commander FROM battle b LEFT JOIN ship s ON b.id = s.lost_in_battle WHERE s.location IS NULL OR s.location != 'English Channel'
extra gold: SELECT name , RESULT , bulgarian_commander FROM battle EXCEPT SELECT T1.name , T1.result , T1.bulgarian_commander FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle WHERE T2.location  =  'English Channel'

当前idx>4
____________________
SELECT  date FROM battle WHERE result = 'Bulgarian victory'
SELECT date FROM battle WHERE result  =  "Bulgarian victory"
连接数据库../datasets/cosql_dataset/database/battle_death/battle_death.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx1
____________________
SELECT  COUNT(*)  FROM Likes
SELECT count ( * )  FROM Likes
连接数据库../datasets/cosql_dataset/database/network_1/network_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT  COUNT(*)  FROM Friend
SELECT count ( * )  FROM friend
连接数据库../datasets/cosql_dataset/database/network_1/network_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx3
____________________
SELECT  student_id FROM Friend WHERE friend_id = 1689
SELECT student_id FROM friend where friend_id  =  1689
连接数据库../datasets/cosql_dataset/database/network_1/network_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx1
____________________
SELECT  * FROM Documents
SELECT * FROM Documents
连接数据库../datasets/cosql_dataset/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
eval_err_num:375
____________________
SELECT  d.Document_ID, d.Document_Name, d.Document_Description, d.Other_Details, t.Template_ID, t.Version_Number, t.Template_Type_Code, t.Date_Effective_From, t.Date_Effective_To, t.Template_Details FROM Documents d JOIN Templates t ON d.Template_ID = t.Template_ID
SELECT * FROM Documents AS T1 JOIN Templates AS T2 ON T1.Template_ID   =   T2.Template_ID
连接数据库../datasets/cosql_dataset/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
▏   | 171/278 [00:02<00:01, 85.24it/s] 65%|██████▍   | 180/278 [00:02<00:01, 85.20it/s] 68%|██████▊   | 190/278 [00:02<00:00, 88.76it/s] 72%|███████▏  | 200/278 [00:02<00:00, 88.99it/s] 76%|███████▌  | 210/278 [00:02<00:00, 89.27it/s] 79%|███████▉  | 220/278 [00:02<00:00, 90.66it/s] 83%|████████▎ | 230/278 [00:02<00:00, 91.85it/s] 86%|████████▋ | 240/278 [00:11<00:10,  3.68it/s] 90%|████████▉ | 250/278 [00:11<00:05,  5.18it/s] 93%|█████████▎| 258/278 [00:11<00:02,  6.82it/s] 96%|█████████▌| 266/278 [00:11<00:01,  8.98it/s] 99%|█████████▊| 274/278 [00:11<00:00, 11.90it/s]100%|██████████| 278/278 [00:11<00:00, 23.18it/s]
easy pred: SELECT  d.Document_ID, d.Document_Name, d.Document_Description, d.Other_Details, t.Template_ID, t.Version_Number, t.Template_Type_Code, t.Date_Effective_From, t.Date_Effective_To, t.Template_Details FROM Documents d JOIN Templates t ON d.Template_ID = t.Template_ID
easy gold: SELECT * FROM Documents AS T1 JOIN Templates AS T2 ON T1.Template_ID   =   T2.Template_ID

当前idx3
eval_err_num:376
____________________
SELECT  COUNT(*)  FROM Documents d JOIN Templates t ON d.Template_ID = t.Template_ID WHERE t.Template_Type_Code = 'PPT'
SELECT count ( * )  FROM Documents AS T1 JOIN Templates AS T2 ON T1.Template_ID   =   T2.Template_ID WHERE T2.Template_Type_Code   =   'PPT'
连接数据库../datasets/cosql_dataset/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT  COUNT(*)  FROM Documents d JOIN Templates t ON d.Template_ID = t.Template_ID WHERE t.Template_Type_Code = 'PPT'
medium gold: SELECT count ( * )  FROM Documents AS T1 JOIN Templates AS T2 ON T1.Template_ID   =   T2.Template_ID WHERE T2.Template_Type_Code   =   'PPT'

当前idx1
eval_err_num:377
____________________
SELECT  AVG(Accelerate) AS AverageAcceleration FROM cars_data
SELECT AVG ( Accelerate )  FROM cars_data
连接数据库../datasets/cosql_dataset/database/car_1/car_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
easy pred: SELECT  AVG(Accelerate) AS AverageAcceleration FROM cars_data
easy gold: SELECT AVG ( Accelerate )  FROM cars_data

当前idx2
eval_err_num:378
____________________
SELECT  AVG(Horsepower) AS AverageHorsepower FROM cars_data
SELECT AVG ( Horsepower )  FROM cars_data
连接数据库../datasets/cosql_dataset/database/car_1/car_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
easy pred: SELECT  AVG(Horsepower) AS AverageHorsepower FROM cars_data
easy gold: SELECT AVG ( Horsepower )  FROM cars_data

当前idx3
eval_err_num:379
____________________
SELECT  Model FROM cars_data WHERE Cylinders = 4 ORDER BY Horsepower DESC LIMIT 1
SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.Cylinders  =  4 ORDER BY T2.horsepower DESC LIMIT 1
连接数据库../datasets/cosql_dataset/database/car_1/car_1.sqlite
执行第一个查询
执行出错: no such column: Model
eval_exec:False
exact_score:0
extra pred: SELECT  Model FROM cars_data WHERE Cylinders = 4 ORDER BY Horsepower DESC LIMIT 1
extra gold: SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.Cylinders  =  4 ORDER BY T2.horsepower DESC LIMIT 1

当前idx1
____________________
SELECT  DISTINCT Language FROM countrylanguage WHERE IsOfficial = 'T'
SELECT count ( DISTINCT T2.Language )  FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code   =   T2.CountryCode WHERE  IndepYear  <  1930 AND T2.IsOfficial   =   "T"
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT  DISTINCT Language FROM countrylanguage WHERE IsOfficial = 'T'
medium gold: SELECT count ( DISTINCT T2.Language )  FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code   =   T2.CountryCode WHERE  IndepYear  <  1930 AND T2.IsOfficial   =   "T"

当前idx2
____________________
SELECT  COUNT(DISTINCT Language) FROM countrylanguage WHERE CountryCode IN (     SELECT Code     FROM country     WHERE IndepYear < 1930 )
SELECT count ( DISTINCT T2.Language )  FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code   =   T2.CountryCode WHERE  IndepYear  <  1930 AND T2.IsOfficial   =   "T"
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT  COUNT(DISTINCT Language) FROM countrylanguage WHERE CountryCode IN (     SELECT Code     FROM country     WHERE IndepYear < 1930 )
medium gold: SELECT count ( DISTINCT T2.Language )  FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code   =   T2.CountryCode WHERE  IndepYear  <  1930 AND T2.IsOfficial   =   "T"

210
395
106
302
34
152
13
101
363
950
35
278
                     easy                 medium               hard                 extra                all                  joint_all           
count                395                  302                  152                  101                  950                  278                 
=====================   EXECUTION ACCURACY     =====================
execution            0.532                0.351                0.224                0.129                0.382                0.126               

====================== EXACT MATCHING ACCURACY =====================
exact match          0.565                0.205                0.105                0.050                0.322                0.104               


                     turn 1               turn 2               turn 3               turn 4               turn >4             
count                278                  270                  229                  106                  67                  
=====================   TRUN EXECUTION ACCURACY     =====================
execution            0.367                0.400                0.393                0.377                0.343               

====================== TRUN EXACT MATCHING ACCURACY =====================
exact match          0.353                0.352                0.284                0.311                0.224               
符合条件对话总数：278
