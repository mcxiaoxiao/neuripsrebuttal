nohup: ignoring input
0it [00:00, ?it/s]293it [00:00, 31731.55it/s]
当前idx1
____________________
SELECT count(*) ,  T1.FullName FROM car_makers AS T1 JOIN model_list AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id
SELECT Count ( * )  ,  T2.FullName  FROM MODEL_LIST AS T1 JOIN CAR_MAKERS AS T2 ON T1.Maker   =   T2.Id GROUP BY T2.id
连接数据库../datasets/cosql_dataset/database/car_1/car_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
eval_err_num:1
____________________
SELECT T1.Model FROM model_list AS T1 JOIN car_names AS T2 ON T1.ModelId  =  T2.ModelId GROUP BY T1.ModelId ORDER BY count(*) DESC LIMIT 1
SELECT T1.model FROM MODEL_LIST AS T1 JOIN CAR_MAKERS AS T2 ON T1.Maker   =   T2.Id GROUP BY T2.id order by count ( * )  desc limit 1
连接数据库../datasets/cosql_dataset/database/car_1/car_1.sqlite
执行第一个查询
执行出错: no such column: T2.ModelId
eval_exec:False
exact_score:0
extra pred: SELECT T1.Model FROM model_list AS T1 JOIN car_names AS T2 ON T1.ModelId  =  T2.ModelId GROUP BY T1.ModelId ORDER BY count(*) DESC LIMIT 1
extra gold: SELECT T1.model FROM MODEL_LIST AS T1 JOIN CAR_MAKERS AS T2 ON T1.Maker   =   T2.Id GROUP BY T2.id order by count ( * )  desc limit 1

当前idx3
____________________
SELECT T1.FullName FROM car_makers AS T1 JOIN model_list AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id HAVING count(*)  >=  3
SELECT Count ( * )  ,  T2.FullName ,  T2.id FROM MODEL_LIST AS T1 JOIN CAR_MAKERS AS T2 ON T1.Maker   =   T2.Id GROUP BY T2.id having count ( * )   > =  3
连接数据库../datasets/cosql_dataset/database/car_1/car_1.sqlite
执行第一个查询
执行第二个查询
执行出错: near "=": syntax error
eval_exec:False
exact_score:0
medium pred: SELECT T1.FullName FROM car_makers AS T1 JOIN model_list AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id HAVING count(*)  >=  3
medium gold: SELECT Count ( * )  ,  T2.FullName ,  T2.id FROM MODEL_LIST AS T1 JOIN CAR_MAKERS AS T2 ON T1.Maker   =   T2.Id GROUP BY T2.id having count ( * )   > =  3

当前idx1
eval_err_num:2
____________________

SELECT name FROM singer
连接数据库../datasets/cosql_dataset/database/concert_singer/concert_singer.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
easy pred: 
easy gold: SELECT name FROM singer

当前idx2
eval_err_num:3
____________________

SELECT T2.name ,  count ( * )  FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id   =   T2.singer_id GROUP BY T2.singer_id
连接数据库../datasets/cosql_dataset/database/concert_singer/concert_singer.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: 
medium gold: SELECT T2.name ,  count ( * )  FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id   =   T2.singer_id GROUP BY T2.singer_id

当前idx1
____________________
SELECT count(distinct template_id) FROM Documents
SELECT count ( distinct template_id )  FROM Documents
连接数据库../datasets/cosql_dataset/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT count(*) FROM (SELECT template_id FROM Documents GROUP BY template_id HAVING count(*)  >  1)
SELECT count ( template_id )  FROM Documents GROUP BY template_id HAVING count ( * )   >  1
连接数据库../datasets/cosql_dataset/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
easy pred: SELECT count(*) FROM (SELECT template_id FROM Documents GROUP BY template_id HAVING count(*)  >  1)
easy gold: SELECT count ( template_id )  FROM Documents GROUP BY template_id HAVING count ( * )   >  1

当前idx3
____________________
SELECT document_name FROM Documents WHERE template_id IN (SELECT template_id FROM Documents GROUP BY template_id HAVING count(*)  >  1)
SELECT document_id FROM Documents GROUP BY template_id HAVING count ( * )   >  1
连接数据库../datasets/cosql_dataset/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
easy pred: SELECT document_name FROM Documents WHERE template_id IN (SELECT template_id FROM Documents GROUP BY template_id HAVING count(*)  >  1)
easy gold: SELECT document_id FROM Documents GROUP BY template_id HAVING count ( * )   >  1

当前idx1
____________________
SELECT T1.first_name FROM Students AS T1 JOIN Addresses AS T2 ON T1.permanent_address_id  =  T2.address_id WHERE T2.country  =  "Haiti"
SELECT T1.first_name FROM Students AS T1 JOIN Addresses AS T2 ON T1.permanent_address_id   =   T2.address_id WHERE T2.country   =   'Haiti'
连接数据库../datasets/cosql_dataset/database/student_transcripts_tracking/student_transcripts_tracking.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
eval_err_num:4
____________________
SELECT T1.first_name FROM Students AS T1 JOIN Addresses AS T2 ON T1.permanent_address_id  =  T2.address_id WHERE T2.country  =  "Haiti" OR T2.country  =  "Indonesia" OR T2.country  =  "Pakistan" OR T2.country  =  "South Africa" OR T2.country  =  "Tanzania" OR T2.country  =  "Uganda" OR T2.country  =  "Zambia" OR T2.country  =  "Zimbabwe" OR T2.country  =  "Bangladesh" OR T2.country  =  "Bhutan" OR T2.country  =  "Brunei" OR T2.country  =  "Cambodia" OR T2.country  =  "China" OR T2.country  =  "India" OR T2.country  =  "Japan" OR T2.country  =  "Korea" OR T2.country  =  "Laos" OR T2.country  =  "Malaysia" OR T2.country  =  "Mongolia" OR T2.country  =  "Myanmar" OR T2.country  =  "Nepal" OR T2.country  =  "Pakistan" OR T2.country  =  "Philippines" OR T2.country  =  "Singapore" OR T2.country  =  "Sri Lanka" OR T2.country  =  "Thailand" OR T2.country  =  "Timor-Leste" OR T2.country  =  "Vietnam" OR T2.country  =  "Afghanistan" OR T2.country  =  "Armenia" OR T2.country  =  "Azerbaijan" OR T2.country  =  "Bahrain" OR T2.country  =  "Cyprus" OR T2.country  =  "Georgia" OR T2.country  =  "Iran" OR T2
SELECT first_name FROM Students WHERE cell_mobile_number  =  '09700166582'
连接数据库../datasets/cosql_dataset/database/student_transcripts_tracking/student_transcripts_tracking.sqlite
执行第一个查询
执行出错: no such column: T2
eval_exec:False
exact_score:0
easy pred: SELECT T1.first_name FROM Students AS T1 JOIN Addresses AS T2 ON T1.permanent_address_id  =  T2.address_id WHERE T2.country  =  "Haiti" OR T2.country  =  "Indonesia" OR T2.country  =  "Pakistan" OR T2.country  =  "South Africa" OR T2.country  =  "Tanzania" OR T2.country  =  "Uganda" OR T2.country  =  "Zambia" OR T2.country  =  "Zimbabwe" OR T2.country  =  "Bangladesh" OR T2.country  =  "Bhutan" OR T2.country  =  "Brunei" OR T2.country  =  "Cambodia" OR T2.country  =  "China" OR T2.country  =  "India" OR T2.country  =  "Japan" OR T2.country  =  "Korea" OR T2.country  =  "Laos" OR T2.country  =  "Malaysia" OR T2.country  =  "Mongolia" OR T2.country  =  "Myanmar" OR T2.country  =  "Nepal" OR T2.country  =  "Pakistan" OR T2.country  =  "Philippines" OR T2.country  =  "Singapore" OR T2.country  =  "Sri Lanka" OR T2.country  =  "Thailand" OR T2.country  =  "Timor-Leste" OR T2.country  =  "Vietnam" OR T2.country  =  "Afghanistan" OR T2.country  =  "Armenia" OR T2.country  =  "Azerbaijan" OR T2.country  =  "Bahrain" OR T2.country  =  "Cyprus" OR T2.country  =  "Georgia" OR T2.country  =  "Iran" OR T2
easy gold: SELECT first_name FROM Students WHERE cell_mobile_number  =  '09700166582'

当前idx3
____________________
SELECT T1.last_name, T2.line_1, T2.line_2, T2.line_3, T2.city, T2.zip_postcode, T2.state_province_county, T2.country FROM Students AS T1 JOIN Addresses AS T2 ON T1.current_address_id  =  T2.address_id WHERE T1.cell_mobile_number  =  "09700166582"
SELECT T1.last_name, * FROM Students as T1 join addresses as T2 on T1.current_address_id  =  T2.address_id WHERE T1.cell_mobile_number  =  '09700166582'
连接数据库../datasets/cosql_dataset/database/student_transcripts_tracking/student_transcripts_tracking.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT T1.last_name, T2.line_1, T2.line_2, T2.line_3, T2.city, T2.zip_postcode, T2.state_province_county, T2.country FROM Students AS T1 JOIN Addresses AS T2 ON T1.current_address_id  =  T2.address_id WHERE T1.cell_mobile_number  =  "09700166582"
medium gold: SELECT T1.last_name, * FROM Students as T1 join addresses as T2 on T1.current_address_id  =  T2.address_id WHERE T1.cell_mobile_number  =  '09700166582'

当前idx4
____________________
SELECT T1.email_address FROM Students AS T1 JOIN Addresses AS T2 ON T1.current_address_id  =  T2.address_id WHERE T1.cell_mobile_number  =  "09700166582"
SELECT email_address FROM Students where cell_mobile_number  =  '09700166582'
连接数据库../datasets/cosql_dataset/database/student_transcripts_tracking/student_transcripts_tracking.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:False
easy pred: SELECT T1.email_address FROM Students AS T1 JOIN Addresses AS T2 ON T1.current_address_id  =  T2.address_id WHERE T1.cell_mobile_number  =  "09700166582"
easy gold: SELECT email_address FROM Students where cell_mobile_number  =  '09700166582'

当前idx1
____________________
SELECT Stadium_ID FROM stadium EXCEPT SELECT Stadium_ID FROM concert WHERE YEAR = 2014
SELECT name FROM stadium EXCEPT SELECT T2.name FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id   =   T2.stadium_id WHERE T1.year   =   2014
连接数据库../datasets/cosql_dataset/database/concert_singer/concert_singer.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
hard pred: SELECT Stadium_ID FROM stadium EXCEPT SELECT Stadium_ID FROM concert WHERE YEAR = 2014
hard gold: SELECT name FROM stadium EXCEPT SELECT T2.name FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id   =   T2.stadium_id WHERE T1.year   =   2014

当前idx2
____________________
SELECT Capacity FROM stadium WHERE Name = "Balmoor"
select Capacity from stadium where name  =  'Balmoor'
连接数据库../datasets/cosql_dataset/database/concert_singer/concert_singer.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx3
____________________
SELECT T1.Theme FROM concert AS T1 JOIN stadium AS T2 ON T1.Stadium_ID  =  T2.Stadium_ID WHERE T2.Name  =  "Balmoor"
select T2.Theme from stadium as T1 join concert as T2 on T1.Stadium_ID  =  T2.Stadium_ID where T1.Name  =  'Balmoor'
连接数据库../datasets/cosql_dataset/database/concert_singer/concert_singer.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx1
____________________
SELECT count(*) FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id  =  T2.dog_id JOIN Breeds AS T3 ON T1.breed_code  =  T3.breed_code WHERE T3.breed_name  =  "Poodle" AND T1.gender  =  "F"
SELECT count ( * )  FROM Dogs WHERE dog_id IN  (  SELECT dog_id FROM Treatments  ) 
连接数据库../datasets/cosql_dataset/database/dog_kennels/dog_kennels.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
hard pred: SELECT count(*) FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id  =  T2.dog_id JOIN Breeds AS T3 ON T1.breed_code  =  T3.breed_code WHERE T3.breed_name  =  "Poodle" AND T1.gender  =  "F"
hard gold: SELECT count ( * )  FROM Dogs WHERE dog_id IN  (  SELECT dog_id FROM Treatments  ) 

当前idx2
____________________
SELECT T1.age FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id  =  T2.dog_id JOIN Breeds AS T3 ON T1.breed_code  =  T3.breed_code WHERE T3.breed_name  =  "Poodle" AND T1.gender  =  "F"
SELECT age FROM Dogs WHERE dog_id IN  (  SELECT dog_id FROM Treatments  ) 
连接数据库../datasets/cosql_dataset/database/dog_kennels/dog_kennels.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
hard pred: SELECT T1.age FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id  =  T2.dog_id JOIN Breeds AS T3 ON T1.breed_code  =  T3.breed_code WHERE T3.breed_name  =  "Poodle" AND T1.gender  =  "F"
hard gold: SELECT age FROM Dogs WHERE dog_id IN  (  SELECT dog_id FROM Treatments  ) 

当前idx3
____________________
SELECT max(weight) FROM Dogs WHERE age = 2
SELECT weight FROM Dogs WHERE age = 2 ORDER BY weight DESC LIMIT 1
连接数据库../datasets/cosql_dataset/database/dog_kennels/dog_kennels.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:0
hard pred: SELECT max(weight) FROM Dogs WHERE age = 2
hard gold: SELECT weight FROM Dogs WHERE age = 2 ORDER BY weight DESC LIMIT 1

当前idx1
____________________
SELECT count(*) FROM teacher
SELECT COUNT ( * )  FROM teacher
连接数据库../datasets/cosql_dataset/database/course_teach/course_teach.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT count(*) FROM course
SELECT COUNT ( * )  FROM course_arrange
连接数据库../datasets/cosql_dataset/database/course_teach/course_teach.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:False
easy pred: SELECT count(*) FROM course
easy gold: SELECT COUNT ( * )  FROM course_arrange

当前idx3
____________________
SELECT T1.name ,  count(*) FROM teacher AS T1 JOIN course_arrange AS T2 ON T1.teacher_id  =  T2.teacher_id GROUP BY T1.teacher_id
SELECT T2.Name , COUNT ( * )  FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID  =  T2.Teacher_ID GROUP BY T2.Name
连接数据库../datasets/cosql_dataset/database/course_teach/course_teach.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT T1.name ,  count(*) FROM teacher AS T1 JOIN course_arrange AS T2 ON T1.teacher_id  =  T2.teacher_id GROUP BY T1.teacher_id
medium gold: SELECT T2.Name , COUNT ( * )  FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID  =  T2.Teacher_ID GROUP BY T2.Name

当前idx4
____________________
SELECT name ,  age FROM teacher
SELECT Name , age FROM teacher
连接数据库../datasets/cosql_dataset/database/course_teach/course_teach.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx1
____________________
SELECT latin_commander FROM battle WHERE name = "Battle of Serres"
SELECT latin_commander FROM battle WHERE name  =  "Battle of Serres"
连接数据库../datasets/cosql_dataset/database/battle_death/battle_death.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT result FROM battle WHERE date = "31-01-1206"
SELECT result FROM battle WHERE date  =  "31 January 1206"
连接数据库../datasets/cosql_dataset/database/battle_death/battle_death.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:True
当前idx3
____________________
SELECT bulgarian_commander FROM battle WHERE date = "12-06-1205"
SELECT bulgarian_commander FROM battle WHERE date  =  "June 1205"
连接数据库../datasets/cosql_dataset/database/battle_death/battle_death.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:True
当前idx4
____________________
SELECT name FROM battle WHERE latin_commander = "Baldwin 1"
SELECT name FROM battle WHERE latin_commander  =  "Baldwin I"
连接数据库../datasets/cosql_dataset/database/battle_death/battle_death.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:True
当前idx1
____________________
SELECT count(*) FROM TV_Channel
SELECT count ( * )  FROM TV_Channel
连接数据库../datasets/cosql_dataset/database/tvshow/tvshow.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT Language FROM TV_Channel where series_name = "Sky Music"
SELECT language FROM TV_Channel where series_name = 'Sky Music'
连接数据库../datasets/cosql_dataset/database/tvshow/tvshow.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx3
____________________
SELECT Title FROM Cartoon where id = 2.0
SELECT title FROM Cartoon where id = 2.0
连接数据库../datasets/cosql_dataset/database/tvshow/tvshow.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx1
____________________
SELECT horsepower FROM cars_data ORDER BY horsepower DESC LIMIT 1
SELECT Horsepower FROM CARS_DATA ORDER BY Horsepower DESC LIMIT 1
连接数据库../datasets/cosql_dataset/database/car_1/car_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT count(*) FROM cars_data
SELECT count ( * )  FROM CARS_DATA
连接数据库../datasets/cosql_dataset/database/car_1/car_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx3
____________________
SELECT count(cylinders) FROM cars_data
SELECT sum ( cylinders )  FROM CARS_DATA
连接数据库../datasets/cosql_dataset/database/car_1/car_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
easy pred: SELECT count(cylinders) FROM cars_data
easy gold: SELECT sum ( cylinders )  FROM CARS_DATA

当前idx1
____________________
SELECT district FROM shop ORDER BY Number_products DESC LIMIT 1
SELECT district FROM shop ORDER BY number_products DESC LIMIT 1
连接数据库../datasets/cosql_dataset/database/employee_hire_evaluation/employee_hire_evaluation.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT manager_name FROM shop ORDER BY Number_products DESC LIMIT 1
SELECT manager_name FROM shop ORDER BY number_products DESC LIMIT 1
连接数据库../datasets/cosql_dataset/database/employee_hire_evaluation/employee_hire_evaluation.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx3
____________________
SELECT Number_products FROM shop ORDER BY Number_products DESC LIMIT 1
SELECT number_products FROM shop ORDER BY number_products DESC LIMIT 1
连接数据库../datasets/cosql_dataset/database/employee_hire_evaluation/employee_hire_evaluation.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx4
____________________
SELECT location FROM shop ORDER BY Number_products DESC LIMIT 1
SELECT location FROM shop ORDER BY number_products DESC LIMIT 1
连接数据库../datasets/cosql_dataset/database/employee_hire_evaluation/employee_hire_evaluation.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx>4
____________________
SELECT shop_id FROM shop ORDER BY Number_products DESC LIMIT 1
SELECT shop_ID FROM shop ORDER BY number_products DESC LIMIT 1
连接数据库../datasets/cosql_dataset/database/employee_hire_evaluation/employee_hire_evaluation.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx1
____________________
SELECT avg(Population) FROM city
SELECT avg ( Population )  FROM city
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT District FROM city WHERE Population  >  (SELECT avg(Population) FROM city)
SELECT District FROM city WHERE Population  >   ( SELECT avg ( Population )  FROM city ) 
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx3
____________________
SELECT District ,  count(*) FROM city WHERE Population  >  (SELECT avg(Population) FROM city) GROUP BY District
SELECT count ( * )  ,  District FROM city WHERE Population  >   ( SELECT avg ( Population )  FROM city )  GROUP BY District
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx1
____________________
SELECT Name FROM country WHERE GovernmentForm  =  "US territory"
SELECT Name FROM country WHERE GovernmentForm   =   "US Territory"
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:True
当前idx2
____________________
SELECT Name,GNP,Population FROM country WHERE GovernmentForm  =  "US territory"
SELECT GNP, population FROM country WHERE GovernmentForm   =   "US Territory"
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT Name,GNP,Population FROM country WHERE GovernmentForm  =  "US territory"
medium gold: SELECT GNP, population FROM country WHERE GovernmentForm   =   "US Territory"

当前idx3
____________________
SELECT avg(GNP) ,  sum(Population) FROM country WHERE GovernmentForm  =  "US territory"
SELECT avg ( GNP )  ,  sum ( population )  FROM country WHERE GovernmentForm   =   "US Territory"
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:True
当前idx1
____________________
SELECT sum(SurfaceArea) FROM country WHERE Continent = "Asia"
SELECT sum ( SurfaceArea )  FROM country WHERE Continent  =  "Asia"
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT LocalName FROM country
SELECT LocalName FROM country
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx3
____________________
SELECT Code FROM country WHERE Name = "Aruba"
SELECT Code FROM country WHERE Name  =  "Aruba"
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx1
____________________
SELECT count(*) FROM shop
SELECT count ( * )  FROM shop
连接数据库../datasets/cosql_dataset/database/employee_hire_evaluation/employee_hire_evaluation.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT name FROM shop
SELECT * FROM shop
连接数据库../datasets/cosql_dataset/database/employee_hire_evaluation/employee_hire_evaluation.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
easy pred: SELECT name FROM shop
easy gold: SELECT * FROM shop

当前idx3
____________________
SELECT count(*) ,  shop.name FROM employee JOIN hiring ON employee.Employee_ID  =  hiring.Employee_ID JOIN shop ON hiring.Shop_ID  =  shop.Shop_ID GROUP BY shop.name
SELECT count ( * )  FROM hiring AS t1 JOIN shop AS t2 ON t1.shop_id   =   t2.shop_id GROUP BY t2.name
连接数据库../datasets/cosql_dataset/database/employee_hire_evaluation/employee_hire_evaluation.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT count(*) ,  shop.name FROM employee JOIN hiring ON employee.Employee_ID  =  hiring.Employee_ID JOIN shop ON hiring.Shop_ID  =  shop.Shop_ID GROUP BY shop.name
medium gold: SELECT count ( * )  FROM hiring AS t1 JOIN shop AS t2 ON t1.shop_id   =   t2.shop_id GROUP BY t2.name

当前idx1
____________________
SELECT name FROM singer
SELECT name from singer
连接数据库../datasets/cosql_dataset/database/concert_singer/concert_singer.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT song_release_year FROM singer WHERE name = "Joe Sharp" AND song_name = "You"
SELECT song_release_year from singer where Name  =  "Joe Sharp" and Song_Name  =  "You"
连接数据库../datasets/cosql_dataset/database/concert_singer/concert_singer.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx3
____________________
SELECT count(*) FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id  =  T2.singer_id WHERE T2.name = "Joe Sharp"
SELECT count ( * )  FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id   =   T2.singer_id where T2.name  =  "Joe Sharp" GROUP BY T2.singer_id
连接数据库../datasets/cosql_dataset/database/concert_singer/concert_singer.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
hard pred: SELECT count(*) FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id  =  T2.singer_id WHERE T2.name = "Joe Sharp"
hard gold: SELECT count ( * )  FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id   =   T2.singer_id where T2.name  =  "Joe Sharp" GROUP BY T2.singer_id

当前idx4
____________________
SELECT country FROM singer WHERE name = "Joe Sharp"
SELECT country from singer where name  =  "Joe Sharp"
连接数据库../datasets/cosql_dataset/database/concert_singer/concert_singer.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx1
____________________
SELECT Continent FROM continents
SELECT Continent FROM CONTINENTS
连接数据库../datasets/cosql_dataset/database/car_1/car_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT Continent ,  count(*) FROM countries GROUP BY Continent
SELECT T1.ContId ,  T1.Continent ,  count ( * )  FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId   =   T2.Continent GROUP BY T1.ContId
连接数据库../datasets/cosql_dataset/database/car_1/car_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT Continent ,  count(*) FROM countries GROUP BY Continent
medium gold: SELECT T1.ContId ,  T1.Continent ,  count ( * )  FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId   =   T2.Continent GROUP BY T1.ContId

当前idx1
eval_err_num:5
____________________
SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.Make = T2.Make AND T1.Model = T2.Model WHERE T2.Weight  <  3500
SELECT DISTINCT T1.model FROM MODEL_LIST AS T1 JOIN CAR_NAMES AS T2 ON T1.Model   =   T2.Model JOIN CARS_DATA AS T3 ON T2.MakeId   =   T3.Id JOIN CAR_MAKERS AS T4 ON T1.Maker   =   T4.Id WHERE T3.weight  <  3500
连接数据库../datasets/cosql_dataset/database/car_1/car_1.sqlite
执行第一个查询
执行出错: no such column: T2.Make
eval_exec:False
exact_score:0
extra pred: SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.Make = T2.Make AND T1.Model = T2.Model WHERE T2.Weight  <  3500
extra gold: SELECT DISTINCT T1.model FROM MODEL_LIST AS T1 JOIN CAR_NAMES AS T2 ON T1.Model   =   T2.Model JOIN CARS_DATA AS T3 ON T2.MakeId   =   T3.Id JOIN CAR_MAKERS AS T4 ON T1.Maker   =   T4.Id WHERE T3.weight  <  3500

当前idx2
eval_err_num:6
____________________
SELECT T1.Model,T2.Weight FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.Make = T2.Make AND T1.Model = T2.Model WHERE T1.Model = "BMW"
SELECT DISTINCT T3.Weight FROM MODEL_LIST AS T1 JOIN CAR_NAMES AS T2 ON T1.Model   =   T2.Model JOIN CARS_DATA AS T3 ON T2.MakeId   =   T3.Id JOIN CAR_MAKERS AS T4 ON T1.Maker   =   T4.Id WHERE T1.Model = "bmw"
连接数据库../datasets/cosql_dataset/database/car_1/car_1.sqlite
执行第一个查询
执行出错: no such column: T2.Make
eval_exec:False
exact_score:0
extra pred: SELECT T1.Model,T2.Weight FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.Make = T2.Make AND T1.Model = T2.Model WHERE T1.Model = "BMW"
extra gold: SELECT DISTINCT T3.Weight FROM MODEL_LIST AS T1 JOIN CAR_NAMES AS T2 ON T1.Model   =   T2.Model JOIN CARS_DATA AS T3 ON T2.MakeId   =   T3.Id JOIN CAR_MAKERS AS T4 ON T1.Maker   =   T4.Id WHERE T1.Model = "bmw"

当前idx3
eval_err_num:7
____________________
SELECT T1.Model,T2.Weight FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.Make = T2.Make AND T1.Model = T2.Model WHERE T1.ModelId = 2
SELECT Model FROM car_names WHERE MakeId = 2
连接数据库../datasets/cosql_dataset/database/car_1/car_1.sqlite
执行第一个查询
执行出错: no such column: T1.ModelId
eval_exec:False
exact_score:0
easy pred: SELECT T1.Model,T2.Weight FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.Make = T2.Make AND T1.Model = T2.Model WHERE T1.ModelId = 2
easy gold: SELECT Model FROM car_names WHERE MakeId = 2

当前idx1
____________________
SELECT count(*) FROM country
SELECT count ( * )  from country
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT governmentform FROM country GROUP BY governmentform
SELECT count ( distinct GovernmentForm )  from country
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
easy pred: SELECT governmentform FROM country GROUP BY governmentform
easy gold: SELECT count ( distinct GovernmentForm )  from country

当前idx3
____________________
SELECT DISTINCT governmentform FROM country
SELECT distinct GovernmentForm from country
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx4
____________________
SELECT count(*) FROM country WHERE governmentform  =  'Republic'
SELECT count ( * )  from country where GovernmentForm  =  "Republic"
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx>4
____________________
SELECT name FROM country WHERE governmentform  =  'Republic'
SELECT name from country where GovernmentForm  =  "Republic"
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx>4
eval_err_num:8
____________________
SELECT T1.language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.code  =  T2.countrycode WHERE T2.countrycode  =  'LVA'
SELECT T2.language from country as T1 join countrylanguage as T2 on T1.Code  =  T2.CountryCode where  T1.name  =  "Latvia"
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行出错: no such column: T1.language
eval_exec:False
exact_score:0
medium pred: SELECT T1.language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.code  =  T2.countrycode WHERE T2.countrycode  =  'LVA'
medium gold: SELECT T2.language from country as T1 join countrylanguage as T2 on T1.Code  =  T2.CountryCode where  T1.name  =  "Latvia"

当前idx1
____________________
SELECT count(*) FROM airlines
SELECT count ( * )  FROM AIRLINES
连接数据库../datasets/cosql_dataset/database/flight_2/flight_2.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT Airline FROM airlines WHERE Country = "USA"
SELECT Airline FROM AIRLINES WHERE Airline = "United Airlines"
连接数据库../datasets/cosql_dataset/database/flight_2/flight_2.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
easy pred: SELECT Airline FROM airlines WHERE Country = "USA"
easy gold: SELECT Airline FROM AIRLINES WHERE Airline = "United Airlines"

当前idx3
____________________
SELECT Abbreviation FROM airlines WHERE Airline = "US Airways"
SELECT Abbreviation FROM AIRLINES WHERE Airline = "US Airways"
连接数据库../datasets/cosql_dataset/database/flight_2/flight_2.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx1
____________________
SELECT count(*) FROM singer
SELECT count ( * )  from singer
连接数据库../datasets/cosql_dataset/database/singer/singer.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT Citizenship FROM singer where name = "Alice Walton"
SELECT citizenship from singer where name  =  "Alice Walton"
连接数据库../datasets/cosql_dataset/database/singer/singer.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx3
____________________
SELECT Sales FROM song where song_id = 3
SELECT Sales from song where song_id  =  3
连接数据库../datasets/cosql_dataset/database/singer/singer.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx1
____________________
SELECT country FROM airlines WHERE Airline = "Delta Air Lines"
SELECT country FROM AIRLINES where Airline  =  'Delta Airlines'
连接数据库../datasets/cosql_dataset/database/flight_2/flight_2.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:True
当前idx2
____________________
SELECT DestAirport FROM flights WHERE FlightNo = 44
SELECT DestAirport FROM flights where FlightNo  =  44
连接数据库../datasets/cosql_dataset/database/flight_2/flight_2.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx3
____________________
SELECT Airline FROM flights GROUP BY Airline ORDER BY count(*) DESC LIMIT 1
SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid   =   T2.Airline GROUP BY T1.Airline ORDER BY count ( * )  DESC LIMIT 1
连接数据库../datasets/cosql_dataset/database/flight_2/flight_2.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
extra pred: SELECT Airline FROM flights GROUP BY Airline ORDER BY count(*) DESC LIMIT 1
extra gold: SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid   =   T2.Airline GROUP BY T1.Airline ORDER BY count ( * )  DESC LIMIT 1

当前idx1
____________________
SELECT count(*) FROM Courses
SELECT  count ( distinct course_id )  from courses
连接数据库../datasets/cosql_dataset/database/student_transcripts_tracking/student_transcripts_tracking.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
easy pred: SELECT count(*) FROM Courses
easy gold: SELECT  count ( distinct course_id )  from courses

当前idx2
____________________
SELECT T1.course_name FROM Courses AS T1 JOIN Student_Enrolment_Courses AS T2 ON T1.course_id  =  T2.course_id GROUP BY T1.course_id ORDER BY count(*) ASC LIMIT 1
SELECT  T1.course_name FROM Courses AS T1 JOIN Student_Enrolment_Courses AS T2 ON T1.course_id   =   T2.course_id GROUP BY T1.course_name ORDER BY count ( * )  LIMIT 1
连接数据库../datasets/cosql_dataset/database/student_transcripts_tracking/student_transcripts_tracking.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
extra pred: SELECT T1.course_name FROM Courses AS T1 JOIN Student_Enrolment_Courses AS T2 ON T1.course_id  =  T2.course_id GROUP BY T1.course_id ORDER BY count(*) ASC LIMIT 1
extra gold: SELECT  T1.course_name FROM Courses AS T1 JOIN Student_Enrolment_Courses AS T2 ON T1.course_id   =   T2.course_id GROUP BY T1.course_name ORDER BY count ( * )  LIMIT 1

当前idx1
____________________
SELECT count(*) FROM concert
SELECT  count ( * )  FROM concert
连接数据库../datasets/cosql_dataset/database/concert_singer/concert_singer.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT T1.Name ,  count(*) FROM stadium AS T1 JOIN concert AS T2 ON T1.Stadium_ID  =  T2.Stadium_ID GROUP BY T2.Stadium_ID
SELECT T2.name , count ( * )  FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id GROUP BY T1.stadium_id
连接数据库../datasets/cosql_dataset/database/concert_singer/concert_singer.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx3
eval_err_num:9
____________________
SELECT Capacity FROM stadium WHERE Name = "Stark's Park"
SELECT capacity from stadium where name  =  "Stark s Park"
连接数据库../datasets/cosql_dataset/database/concert_singer/concert_singer.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
easy pred: SELECT Capacity FROM stadium WHERE Name = "Stark's Park"
easy gold: SELECT capacity from stadium where name  =  "Stark s Park"

当前idx4
____________________
SELECT concert_Name FROM concert
SELECT concert_name from concert
连接数据库../datasets/cosql_dataset/database/concert_singer/concert_singer.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx1
____________________
SELECT count(*) FROM Treatments
select count ( * )  from  ( SELECT distinct treatment_type_code from treatments ) 
连接数据库../datasets/cosql_dataset/database/dog_kennels/dog_kennels.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:False
easy pred: SELECT count(*) FROM Treatments
easy gold: select count ( * )  from  ( SELECT distinct treatment_type_code from treatments ) 

当前idx2
____________________
SELECT * FROM Treatments ORDER BY cost_of_treatment DESC LIMIT 1
SELECT * FROM Treatments ORDER BY cost_of_treatment DESC LIMIT 1
连接数据库../datasets/cosql_dataset/database/dog_kennels/dog_kennels.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx3
____________________
SELECT cost_of_treatment FROM Treatments ORDER BY date_of_treatment DESC LIMIT 1
SELECT cost_of_treatment FROM Treatments ORDER BY date_of_treatment DESC LIMIT 1
连接数据库../datasets/cosql_dataset/database/dog_kennels/dog_kennels.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx1
____________________
SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline HAVING count(*)  <  200
SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid   =   T2.Airline GROUP BY T1.Airline HAVING count ( * )   <  200
连接数据库../datasets/cosql_dataset/database/flight_2/flight_2.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT T1.Country FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline HAVING count(*)  <  200 ORDER BY T1.Country LIMIT 3
SELECT T1.Airline, T2.DestAirport FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid   =   T2.Airline GROUP BY T1.Airline HAVING count ( * )   <  200 limit 3
连接数据库../datasets/cosql_dataset/database/flight_2/flight_2.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
hard pred: SELECT T1.Country FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline HAVING count(*)  <  200 ORDER BY T1.Country LIMIT 3
hard gold: SELECT T1.Airline, T2.DestAirport FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid   =   T2.Airline GROUP BY T1.Airline HAVING count ( * )   <  200 limit 3

当前idx1
____________________
SELECT Nationality FROM people GROUP BY Nationality HAVING COUNT(*)  >  1
SELECT Nationality FROM people GROUP BY Nationality HAVING COUNT ( * )   >  1
连接数据库../datasets/cosql_dataset/database/poker_player/poker_player.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT People_ID FROM people WHERE Nationality = "Russia"
SELECT People_ID FROM people WHERE Nationality  =  'Russia'
连接数据库../datasets/cosql_dataset/database/poker_player/poker_player.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx3
____________________
SELECT Name FROM people WHERE Nationality = "Russia"
SELECT People_ID, name FROM people WHERE Nationality  =  'Russia'
连接数据库../datasets/cosql_dataset/database/poker_player/poker_player.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT Name FROM people WHERE Nationality = "Russia"
medium gold: SELECT People_ID, name FROM people WHERE Nationality  =  'Russia'

当前idx1
____________________
SELECT avg(loser_age) FROM matches
SELECT avg ( loser_age )  FROM matches
连接数据库../datasets/cosql_dataset/database/wta_1/wta_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT avg(winner_age) FROM matches
SELECT avg ( winner_age )  FROM matches
连接数据库../datasets/cosql_dataset/database/wta_1/wta_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx3
____________________
SELECT avg(minutes) FROM matches
SELECT avg ( minutes )  FROM matches
连接数据库../datasets/cosql_dataset/database/wta_1/wta_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx4
____________________
SELECT max(minutes) FROM matches
SELECT max ( minutes )  FROM matches
连接数据库../datasets/cosql_dataset/database/wta_1/wta_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx>4
____________________
SELECT min(minutes) FROM matches
SELECT min ( minutes )  FROM matches
连接数据库../datasets/cosql_dataset/database/wta_1/wta_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx1
____________________
SELECT count(*) FROM flights AS T1 JOIN airports AS T2 ON T1.SourceAirport  =  T2.AirportCode WHERE T2.City  =  "Aberdeen" OR T2.City  =  "Abilene"
SELECT count ( * )  FROM Flights AS T1 JOIN Airports AS T2 ON T1.DestAirport   =   T2.AirportCode WHERE T2.city  like  "%Aberdeen%" OR T2.city  like  "%Abilene%"
连接数据库../datasets/cosql_dataset/database/flight_2/flight_2.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:0
extra pred: SELECT count(*) FROM flights AS T1 JOIN airports AS T2 ON T1.SourceAirport  =  T2.AirportCode WHERE T2.City  =  "Aberdeen" OR T2.City  =  "Abilene"
extra gold: SELECT count ( * )  FROM Flights AS T1 JOIN Airports AS T2 ON T1.DestAirport   =   T2.AirportCode WHERE T2.city  like  "%Aberdeen%" OR T2.city  like  "%Abilene%"

当前idx1
____________________
SELECT name FROM museum
SELECT name from museum
连接数据库../datasets/cosql_dataset/database/museum_visit/museum_visit.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx1
____________________
SELECT title FROM Cartoon WHERE directed_by  =  "Ben Jones" OR directed_by  =  "Brandon Vietti"
SELECT Title FROM Cartoon WHERE Directed_by  =  "Ben Jones" OR Directed_by  =  "Brandon Vietti"
连接数据库../datasets/cosql_dataset/database/tvshow/tvshow.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT original_air_date FROM Cartoon WHERE directed_by  =  "Ben Jones" OR directed_by  =  "Brandon Vietti"
SELECT Title, original_air_date FROM Cartoon WHERE Directed_by  =  "Ben Jones" OR Directed_by  =  "Brandon Vietti"
连接数据库../datasets/cosql_dataset/database/tvshow/tvshow.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
extra pred: SELECT original_air_date FROM Cartoon WHERE directed_by  =  "Ben Jones" OR directed_by  =  "Brandon Vietti"
extra gold: SELECT Title, original_air_date FROM Cartoon WHERE Directed_by  =  "Ben Jones" OR Directed_by  =  "Brandon Vietti"

当前idx3
____________________
SELECT written_by FROM Cartoon WHERE directed_by  =  "Ben Jones" OR directed_by  =  "Brandon Vietti"
SELECT Title, written_by FROM Cartoon WHERE Directed_by  =  "Ben Jones" OR Directed_by  =  "Brandon Vietti"
连接数据库../datasets/cosql_dataset/database/tvshow/tvshow.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
extra pred: SELECT written_by FROM Cartoon WHERE directed_by  =  "Ben Jones" OR directed_by  =  "Brandon Vietti"
extra gold: SELECT Title, written_by FROM Cartoon WHERE Directed_by  =  "Ben Jones" OR Directed_by  =  "Brandon Vietti"

当前idx1
____________________
SELECT * FROM Documents WHERE Document_Description LIKE "%w%"
SELECT * from Documents WHERE Document_Description LIKE "%w%"
连接数据库../datasets/cosql_dataset/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT Document_Name FROM Documents WHERE Document_Description LIKE "%w%"
SELECT document_name from Documents WHERE Document_Description LIKE "%w%"
连接数据库../datasets/cosql_dataset/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx3
____________________
SELECT Document_Name ,  Template_ID FROM Documents WHERE Document_Description LIKE "%w%"
SELECT document_name , template_id FROM Documents WHERE Document_Description LIKE "%w%"
连接数据库../datasets/cosql_dataset/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx1
____________________
SELECT avg(loser_age) FROM matches
SELECT avg ( loser_age )   FROM matches
连接数据库../datasets/cosql_dataset/database/wta_1/wta_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT avg(winner_age) FROM matches
SELECT avg ( winner_age )   FROM matches
连接数据库../datasets/cosql_dataset/database/wta_1/wta_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx3
____________________
SELECT count(*) FROM matches WHERE winner_hand  =  'L'
SELECT count ( * )  from matches where winner_hand  =  "L"
连接数据库../datasets/cosql_dataset/database/wta_1/wta_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx4
____________________
SELECT winner_name ,  loser_name FROM matches ORDER BY minutes DESC LIMIT 1
SELECT winner_name, loser_name from matches where minutes  =   ( select max ( minutes )  from matches ) 
连接数据库../datasets/cosql_dataset/database/wta_1/wta_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:0
extra pred: SELECT winner_name ,  loser_name FROM matches ORDER BY minutes DESC LIMIT 1
extra gold: SELECT winner_name, loser_name from matches where minutes  =   ( select max ( minutes )  from matches ) 

当前idx1
____________________
SELECT name FROM Dogs
SELECT name FROM Dogs
连接数据库../datasets/cosql_dataset/database/dog_kennels/dog_kennels.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT breed_code FROM Dogs GROUP BY breed_code ORDER BY count(*) ASC LIMIT 1
SELECT name FROM Dogs WHERE breed_code   =    (  SELECT breed_code FROM Dogs GROUP BY breed_code ORDER BY count ( * )  ASC LIMIT 1  ) 
连接数据库../datasets/cosql_dataset/database/dog_kennels/dog_kennels.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
hard pred: SELECT breed_code FROM Dogs GROUP BY breed_code ORDER BY count(*) ASC LIMIT 1
hard gold: SELECT name FROM Dogs WHERE breed_code   =    (  SELECT breed_code FROM Dogs GROUP BY breed_code ORDER BY count ( * )  ASC LIMIT 1  ) 

当前idx3
____________________
SELECT gender FROM Dogs GROUP BY breed_code ORDER BY count(*) ASC LIMIT 1
SELECT name, gender FROM Dogs WHERE breed_code   =    (  SELECT breed_code FROM Dogs GROUP BY breed_code ORDER BY count ( * )  ASC LIMIT 1  ) 
连接数据库../datasets/cosql_dataset/database/dog_kennels/dog_kennels.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
extra pred: SELECT gender FROM Dogs GROUP BY breed_code ORDER BY count(*) ASC LIMIT 1
extra gold: SELECT name, gender FROM Dogs WHERE breed_code   =    (  SELECT breed_code FROM Dogs GROUP BY breed_code ORDER BY count ( * )  ASC LIMIT 1  ) 

当前idx4
____________________
SELECT T1.date_of_treatment FROM Treatments AS T1 JOIN Dogs AS T2 ON T1.dog_id  =  T2.dog_id GROUP BY T2.breed_code ORDER BY count(*) ASC LIMIT 1
SELECT T1.name ,  T2.date_of_treatment FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id   =   T2.dog_id WHERE T1.breed_code   =    (  SELECT breed_code FROM Dogs GROUP BY breed_code ORDER BY count ( * )  ASC LIMIT 1  ) 
连接数据库../datasets/cosql_dataset/database/dog_kennels/dog_kennels.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
extra pred: SELECT T1.date_of_treatment FROM Treatments AS T1 JOIN Dogs AS T2 ON T1.dog_id  =  T2.dog_id GROUP BY T2.breed_code ORDER BY count(*) ASC LIMIT 1
extra gold: SELECT T1.name ,  T2.date_of_treatment FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id   =   T2.dog_id WHERE T1.breed_code   =    (  SELECT breed_code FROM Dogs GROUP BY breed_code ORDER BY count ( * )  ASC LIMIT 1  ) 

当前idx1
____________________
SELECT count(*) FROM Student AS T1 JOIN Has_Pet AS T2 ON T1.StuID  =  T2.StuID JOIN Pets AS T3 ON T2.PetID  =  T3.PetID WHERE T3.PetType  =  "cat"
SELECT count ( * )  FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat'
连接数据库../datasets/cosql_dataset/database/pets_1/pets_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT count(*) FROM Student AS T1 JOIN Has_Pet AS T2 ON T1.StuID  =  T2.StuID JOIN Pets AS T3 ON T2.PetID  =  T3.PetID WHERE T3.PetType  =  "cat"
select count ( * )  from  ( SELECT stuid FROM student EXCEPT SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid   =   T2.stuid JOIN pets AS T3 ON T3.petid   =   T2.petid WHERE T3.pettype   =   'cat' ) 
连接数据库../datasets/cosql_dataset/database/pets_1/pets_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
easy pred: SELECT count(*) FROM Student AS T1 JOIN Has_Pet AS T2 ON T1.StuID  =  T2.StuID JOIN Pets AS T3 ON T2.PetID  =  T3.PetID WHERE T3.PetType  =  "cat"
easy gold: select count ( * )  from  ( SELECT stuid FROM student EXCEPT SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid   =   T2.stuid JOIN pets AS T3 ON T3.petid   =   T2.petid WHERE T3.pettype   =   'cat' ) 

当前idx3
____________________
SELECT StuID FROM Student AS T1 JOIN Has_Pet AS T2 ON T1.StuID  =  T2.StuID JOIN Pets AS T3 ON T2.PetID  =  T3.PetID WHERE T3.PetType  =  "cat"
SELECT stuid FROM student EXCEPT SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid   =   T2.stuid JOIN pets AS T3 ON T3.petid   =   T2.petid WHERE T3.pettype   =   'cat'
连接数据库../datasets/cosql_dataset/database/pets_1/pets_1.sqlite
执行第一个查询
执行出错: ambiguous column name: StuID
eval_exec:False
exact_score:0
hard pred: SELECT StuID FROM Student AS T1 JOIN Has_Pet AS T2 ON T1.StuID  =  T2.StuID JOIN Pets AS T3 ON T2.PetID  =  T3.PetID WHERE T3.PetType  =  "cat"
hard gold: SELECT stuid FROM student EXCEPT SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid   =   T2.stuid JOIN pets AS T3 ON T3.petid   =   T2.petid WHERE T3.pettype   =   'cat'

当前idx1
____________________
SELECT T1.Name FROM visitor AS T1 JOIN visit AS T2 ON T1.ID  =  T2.visitor_ID JOIN museum AS T3 ON T2.Museum_ID  =  T3.Museum_ID WHERE T3.Open_Year  <  2009 INTERSECT SELECT T1.Name FROM visitor AS T1 JOIN visit AS T2 ON T1.ID  =  T2.visitor_ID JOIN museum AS T3 ON T2.Museum_ID  =  T3.Museum_ID WHERE T3.Open_Year  >  2011
SELECT t1.name FROM visitor AS t1 JOIN visit AS t2 ON t1.id   =   t2.visitor_id JOIN museum AS t3 ON t3.Museum_ID   =   t2.Museum_ID WHERE t3.open_year  <  2009 INTERSECT SELECT t1.name FROM visitor AS t1 JOIN visit AS t2 ON t1.id   =   t2.visitor_id JOIN museum AS t3 ON t3.Museum_ID   =   t2.Museum_ID WHERE t3.open_year  >  2011
连接数据库../datasets/cosql_dataset/database/museum_visit/museum_visit.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT T1.Name FROM visitor AS T1 JOIN visit AS T2 ON T1.ID  =  T2.visitor_ID JOIN museum AS T3 ON T2.Museum_ID  =  T3.Museum_ID WHERE T3.Open_Year  <  2009
SELECT t3.name FROM visitor AS t1 JOIN visit AS t2 ON t1.id   =   t2.visitor_id JOIN museum AS t3 ON t3.Museum_ID   =   t2.Museum_ID WHERE t3.open_year  <  2009 AND t1.name  =   ( SELECT t1.name FROM visitor AS t1 JOIN visit AS t2 ON t1.id   =   t2.visitor_id JOIN museum AS t3 ON t3.Museum_ID   =   t2.Museum_ID WHERE t3.open_year  <  2009 INTERSECT SELECT t1.name FROM visitor AS t1 JOIN visit AS t2 ON t1.id   =   t2.visitor_id JOIN museum AS t3 ON t3.Museum_ID   =   t2.Museum_ID WHERE t3.open_year  >  2011 ) 
连接数据库../datasets/cosql_dataset/database/museum_visit/museum_visit.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
extra pred: SELECT T1.Name FROM visitor AS T1 JOIN visit AS T2 ON T1.ID  =  T2.visitor_ID JOIN museum AS T3 ON T2.Museum_ID  =  T3.Museum_ID WHERE T3.Open_Year  <  2009
extra gold: SELECT t3.name FROM visitor AS t1 JOIN visit AS t2 ON t1.id   =   t2.visitor_id JOIN museum AS t3 ON t3.Museum_ID   =   t2.Museum_ID WHERE t3.open_year  <  2009 AND t1.name  =   ( SELECT t1.name FROM visitor AS t1 JOIN visit AS t2 ON t1.id   =   t2.visitor_id JOIN museum AS t3 ON t3.Museum_ID   =   t2.Museum_ID WHERE t3.open_year  <  2009 INTERSECT SELECT t1.name FROM visitor AS t1 JOIN visit AS t2 ON t1.id   =   t2.visitor_id JOIN museum AS t3 ON t3.Museum_ID   =   t2.Museum_ID WHERE t3.open_year  >  2011 ) 

当前idx3
____________________
SELECT Level_of_membership FROM visitor WHERE Name = "Fernando Gago"
SELECT level_of_membership FROM visitor WHERE name  =  "Fernando Gago"
连接数据库../datasets/cosql_dataset/database/museum_visit/museum_visit.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx4
____________________
SELECT Age FROM visitor WHERE Name = "Fernando Gago"
SELECT age FROM visitor WHERE name  =  "Fernando Gago"
连接数据库../datasets/cosql_dataset/database/museum_visit/museum_visit.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx1
____________________
SELECT T1.SourceAirport FROM flights AS T1 JOIN airlines AS T2 ON T1.Airline  =  T2.uid WHERE T2.Airline  =  "United Airlines"
SELECT T1.SourceAirport FROM FLIGHTS AS T1 JOIN AIRLINES AS T2 ON T2.uid   =   T1.Airline WHERE T2.Airline   =   "United Airlines"
连接数据库../datasets/cosql_dataset/database/flight_2/flight_2.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT FlightNo FROM flights AS T1 JOIN airlines AS T2 ON T1.Airline  =  T2.uid WHERE T2.Airline  =  "United Airlines"
SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRLINES AS T2 ON T2.uid   =   T1.Airline WHERE T2.Airline   =   "United Airlines"
连接数据库../datasets/cosql_dataset/database/flight_2/flight_2.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx3
____________________
SELECT DestAirport FROM flights AS T1 JOIN airlines AS T2 ON T1.Airline  =  T2.uid WHERE T2.Airline  =  "United Airlines" AND FlightNo = 28
SELECT DestAirport FROM flights WHERE FlightNo  =  28
连接数据库../datasets/cosql_dataset/database/flight_2/flight_2.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
easy pred: SELECT DestAirport FROM flights AS T1 JOIN airlines AS T2 ON T1.Airline  =  T2.uid WHERE T2.Airline  =  "United Airlines" AND FlightNo = 28
easy gold: SELECT DestAirport FROM flights WHERE FlightNo  =  28

当前idx4
____________________
SELECT DestAirport FROM flights AS T1 JOIN airlines AS T2 ON T1.Airline  =  T2.uid WHERE T2.Airline  =  "United Airlines" AND FlightNo = 29
SELECT DestAirport FROM flights WHERE FlightNo  =  29
连接数据库../datasets/cosql_dataset/database/flight_2/flight_2.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
easy pred: SELECT DestAirport FROM flights AS T1 JOIN airlines AS T2 ON T1.Airline  =  T2.uid WHERE T2.Airline  =  "United Airlines" AND FlightNo = 29
easy gold: SELECT DestAirport FROM flights WHERE FlightNo  =  29

当前idx1
____________________
SELECT first_name, last_name FROM players
SELECT first_name,  last_name FROM players
连接数据库../datasets/cosql_dataset/database/wta_1/wta_1.sqlite
执行第一个查询
执行出错: Could not decode to UTF-8 column 'last_name' with text 'Treyes Albarrac��N'
eval_exec:False
exact_score:True
当前idx2
eval_err_num:10
____________________

SELECT first_name ,  last_name FROM players WHERE hand   =   'L'
连接数据库../datasets/cosql_dataset/database/wta_1/wta_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: 
medium gold: SELECT first_name ,  last_name FROM players WHERE hand   =   'L'

当前idx1
____________________
SELECT count(*) FROM flights AS T1 JOIN airports AS T2 ON T1.SourceAirport  =  T2.AirportCode JOIN airlines AS T3 ON T1.Airline  =  T3.uid WHERE T3.Airline  =  "United Airlines" AND T2.City  =  "Aberdeen"
SELECT count ( * )  FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport   =   T2.AirportCode JOIN AIRLINES AS T3 ON T3.uid   =   T1.Airline WHERE T2.City   =   "Aberdeen" AND T3.Airline   =   "United Airlines"
连接数据库../datasets/cosql_dataset/database/flight_2/flight_2.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT T2.City FROM flights AS T1 JOIN airports AS T2 ON T1.SourceAirport  =  T2.AirportCode JOIN airlines AS T3 ON T1.Airline  =  T3.uid WHERE T3.Airline  =  "United Airlines"
SELECT T2.city FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport   =   T2.AirportCode JOIN AIRLINES AS T3 ON T3.uid   =   T1.Airline where T2.city ! =   'Aberdeen' and T3.airline  =  "United Airlines"
连接数据库../datasets/cosql_dataset/database/flight_2/flight_2.sqlite
执行第一个查询
执行第二个查询
执行出错: unrecognized token: "!"
eval_exec:False
exact_score:0
hard pred: SELECT T2.City FROM flights AS T1 JOIN airports AS T2 ON T1.SourceAirport  =  T2.AirportCode JOIN airlines AS T3 ON T1.Airline  =  T3.uid WHERE T3.Airline  =  "United Airlines"
hard gold: SELECT T2.city FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport   =   T2.AirportCode JOIN AIRLINES AS T3 ON T3.uid   =   T1.Airline where T2.city ! =   'Aberdeen' and T3.airline  =  "United Airlines"

当前idx1
eval_err_num:11
____________________
SELECT T2.Name FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID WHERE T2.Course  =  "Math"
SELECT T3.Name FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID   =   T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID   =   T3.Teacher_ID WHERE T2.Course   =   "Math"
连接数据库../datasets/cosql_dataset/database/course_teach/course_teach.sqlite
执行第一个查询
执行出错: no such column: T2.Name
eval_exec:False
exact_score:0
hard pred: SELECT T2.Name FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID WHERE T2.Course  =  "Math"
hard gold: SELECT T3.Name FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID   =   T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID   =   T3.Teacher_ID WHERE T2.Course   =   "Math"

当前idx2
eval_err_num:12
____________________
SELECT T1.Staring_Date FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID WHERE T2.Course  =  "Math" AND T1.Grade IN (1,3)
SELECT T2.Staring_Date  FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID   =   T2.Course_ID where T2.Course  =  "Math"
连接数据库../datasets/cosql_dataset/database/course_teach/course_teach.sqlite
执行第一个查询
执行出错: no such column: T1.Staring_Date
eval_exec:False
exact_score:0
medium pred: SELECT T1.Staring_Date FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID WHERE T2.Course  =  "Math" AND T1.Grade IN (1,3)
medium gold: SELECT T2.Staring_Date  FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID   =   T2.Course_ID where T2.Course  =  "Math"

当前idx1
____________________
SELECT T2.Birth_Date FROM poker_player AS T1 JOIN people AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T1.Earnings ASC LIMIT 1
SELECT T1.Birth_Date FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID   =   T2.People_ID ORDER BY T2.Earnings ASC LIMIT 1
连接数据库../datasets/cosql_dataset/database/poker_player/poker_player.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT T2.Name FROM poker_player AS T1 JOIN people AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T1.Earnings ASC LIMIT 1
SELECT name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID   =   T2.People_ID ORDER BY T2.Earnings ASC LIMIT 1
连接数据库../datasets/cosql_dataset/database/poker_player/poker_player.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx3
____________________
SELECT T2.Nationality FROM poker_player AS T1 JOIN people AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T1.Earnings ASC LIMIT 1
SELECT Nationality FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID   =   T2.People_ID ORDER BY T2.Earnings ASC LIMIT 1
连接数据库../datasets/cosql_dataset/database/poker_player/poker_player.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx1
____________________
SELECT count(*) FROM poker_player WHERE Final_Table_Made  =  1
SELECT count ( * )  FROM poker_player
连接数据库../datasets/cosql_dataset/database/poker_player/poker_player.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
easy pred: SELECT count(*) FROM poker_player WHERE Final_Table_Made  =  1
easy gold: SELECT count ( * )  FROM poker_player

当前idx2
____________________
SELECT count(*) FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID WHERE T1.Height  >  200 AND T2.Final_Table_Made  =  1
SELECT count ( * )  FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID   =   T2.People_ID WHERE T1.Height  >  200
连接数据库../datasets/cosql_dataset/database/poker_player/poker_player.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT count(*) FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID WHERE T1.Height  >  200 AND T2.Final_Table_Made  =  1
medium gold: SELECT count ( * )  FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID   =   T2.People_ID WHERE T1.Height  >  200

当前idx3
____________________
SELECT avg(T2.Earnings) FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID WHERE T1.Height  >  200 AND T2.Final_Table_Made  =  1
SELECT avg ( T2.Earnings )  FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID   =   T2.People_ID WHERE T1.Height  >  200
连接数据库../datasets/cosql_dataset/database/poker_player/poker_player.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT avg(T2.Earnings) FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID WHERE T1.Height  >  200 AND T2.Final_Table_Made  =  1
medium gold: SELECT avg ( T2.Earnings )  FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID   =   T2.People_ID WHERE T1.Height  >  200

当前idx1
____________________
SELECT T1.StuID FROM student AS T1 JOIN has_pet AS T2 ON T1.StuID  =  T2.StuID JOIN pets AS T3 ON T2.PetID  =  T3.PetID WHERE T3.PetType  =  "dog"
SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'dog'
连接数据库../datasets/cosql_dataset/database/pets_1/pets_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT T1.StuID FROM student AS T1 JOIN has_pet AS T2 ON T1.StuID  =  T2.StuID JOIN pets AS T3 ON T2.PetID  =  T3.PetID WHERE T3.PetType  =  "dog" INTERSECT SELECT T1.StuID FROM student AS T1 JOIN has_pet AS T2 ON T1.StuID  =  T2.StuID JOIN pets AS T3 ON T2.PetID  =  T3.PetID WHERE T3.PetType  =  "cat"
SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'dog' intersect SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat'
连接数据库../datasets/cosql_dataset/database/pets_1/pets_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx3
____________________
SELECT T1.Fname ,  T1.Age FROM student AS T1 JOIN has_pet AS T2 ON T1.StuID  =  T2.StuID JOIN pets AS T3 ON T2.PetID  =  T3.PetID WHERE T3.PetType  =  "dog" INTERSECT SELECT T1.Fname ,  T1.Age FROM student AS T1 JOIN has_pet AS T2 ON T1.StuID  =  T2.StuID JOIN pets AS T3 ON T2.PetID  =  T3.PetID WHERE T3.PetType  =  "cat"
SELECT T1.Fname, T1.age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'dog'
连接数据库../datasets/cosql_dataset/database/pets_1/pets_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
hard pred: SELECT T1.Fname ,  T1.Age FROM student AS T1 JOIN has_pet AS T2 ON T1.StuID  =  T2.StuID JOIN pets AS T3 ON T2.PetID  =  T3.PetID WHERE T3.PetType  =  "dog" INTERSECT SELECT T1.Fname ,  T1.Age FROM student AS T1 JOIN has_pet AS T2 ON T1.StuID  =  T2.StuID JOIN pets AS T3 ON T2.PetID  =  T3.PetID WHERE T3.PetType  =  "cat"
hard gold: SELECT T1.Fname, T1.age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'dog'

当前idx1
____________________
SELECT count(*) FROM country
SELECT count ( * )  from country
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT countrycode FROM city where name = "Herat"
SELECT countrycode  from city where name  =  "Herat"
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx3
____________________
SELECT population FROM city where name = "Qandahar"
SELECT population  from city where name  =  "Qandahar"
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx1
____________________
SELECT id FROM TV_Channel WHERE Country IN (SELECT Country FROM TV_Channel GROUP BY Country HAVING COUNT(*)  >  2)
select id from tv_channel where country in  ( SELECT country FROM tv_channel GROUP BY country HAVING count ( * )   >  2 ) 
连接数据库../datasets/cosql_dataset/database/tvshow/tvshow.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT Package_Option FROM TV_Channel WHERE Country IN (SELECT Country FROM TV_Channel GROUP BY Country HAVING COUNT(*)  >  2)
select package_option from tv_channel where country in  ( SELECT country FROM tv_channel GROUP BY country HAVING count ( * )   >  2 ) 
连接数据库../datasets/cosql_dataset/database/tvshow/tvshow.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx3
eval_err_num:13
____________________
SELECT series_name FROM TV_series ORDER BY series_name ASC
SELECT series_name FROM tv_channel order by series_name asc
连接数据库../datasets/cosql_dataset/database/tvshow/tvshow.sqlite
执行第一个查询
执行出错: no such column: series_name
eval_exec:False
exact_score:0
easy pred: SELECT series_name FROM TV_series ORDER BY series_name ASC
easy gold: SELECT series_name FROM tv_channel order by series_name asc

当前idx1
____________________
SELECT count(*) FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id  =  T2.dog_id
SELECT count ( * )  FROM Dogs WHERE dog_id IN  (  SELECT dog_id FROM Treatments  ) 
连接数据库../datasets/cosql_dataset/database/dog_kennels/dog_kennels.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
hard pred: SELECT count(*) FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id  =  T2.dog_id
hard gold: SELECT count ( * )  FROM Dogs WHERE dog_id IN  (  SELECT dog_id FROM Treatments  ) 

当前idx2
____________________
SELECT min(T1.age) FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id  =  T2.dog_id
SELECT min ( age )  FROM Dogs WHERE dog_id IN  (  SELECT dog_id FROM Treatments  ) 
连接数据库../datasets/cosql_dataset/database/dog_kennels/dog_kennels.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:0
hard pred: SELECT min(T1.age) FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id  =  T2.dog_id
hard gold: SELECT min ( age )  FROM Dogs WHERE dog_id IN  (  SELECT dog_id FROM Treatments  ) 

当前idx3
____________________
SELECT max(T1.age) FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id  =  T2.dog_id
SELECT max ( age )  FROM Dogs WHERE dog_id IN  (  SELECT dog_id FROM Treatments  ) 
连接数据库../datasets/cosql_dataset/database/dog_kennels/dog_kennels.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:0
hard pred: SELECT max(T1.age) FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id  =  T2.dog_id
hard gold: SELECT max ( age )  FROM Dogs WHERE dog_id IN  (  SELECT dog_id FROM Treatments  ) 

当前idx4
____________________
SELECT avg(T1.age) FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id  =  T2.dog_id
SELECT avg ( age )  FROM Dogs WHERE dog_id IN  (  SELECT dog_id FROM Treatments  ) 
连接数据库../datasets/cosql_dataset/database/dog_kennels/dog_kennels.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
hard pred: SELECT avg(T1.age) FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id  =  T2.dog_id
hard gold: SELECT avg ( age )  FROM Dogs WHERE dog_id IN  (  SELECT dog_id FROM Treatments  ) 

当前idx1
eval_err_num:14
____________________
SELECT country.Name FROM country WHERE country.Name NOT IN (SELECT country.Name FROM country AS country JOIN countrylanguage AS countrylanguage ON country.Code  =  countrylanguage.CountryCode WHERE countrylanguage.Language  =  'English')
SELECT Name FROM country WHERE Name NOT IN  ( SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code   =   T2.CountryCode WHERE T2.Language   =   "English" ) 
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
hard pred: SELECT country.Name FROM country WHERE country.Name NOT IN (SELECT country.Name FROM country AS country JOIN countrylanguage AS countrylanguage ON country.Code  =  countrylanguage.CountryCode WHERE countrylanguage.Language  =  'English')
hard gold: SELECT Name FROM country WHERE Name NOT IN  ( SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code   =   T2.CountryCode WHERE T2.Language   =   "English" ) 

当前idx2
eval_err_num:15
____________________
SELECT sum(country.Population) FROM country WHERE country.Name NOT IN (SELECT country.Name FROM country AS country JOIN countrylanguage AS countrylanguage ON country.Code  =  countrylanguage.CountryCode WHERE countrylanguage.Language  =  'English')
SELECT Name,sum ( Population )  FROM country WHERE Name NOT IN  ( SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code   =   T2.CountryCode WHERE T2.Language   =   "English" )  group by Name
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
extra pred: SELECT sum(country.Population) FROM country WHERE country.Name NOT IN (SELECT country.Name FROM country AS country JOIN countrylanguage AS countrylanguage ON country.Code  =  countrylanguage.CountryCode WHERE countrylanguage.Language  =  'English')
extra gold: SELECT Name,sum ( Population )  FROM country WHERE Name NOT IN  ( SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code   =   T2.CountryCode WHERE T2.Language   =   "English" )  group by Name

当前idx1
____________________
SELECT T1.Weight FROM cars_data AS T1 JOIN car_names AS T2 ON T1.Id = T2.MakeId WHERE T2.MakeId = 1
SELECT T2.Weight FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId   =   T2.Id WHERE T1.MakeID  =  1
连接数据库../datasets/cosql_dataset/database/car_1/car_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT T1.Year FROM cars_data AS T1 JOIN car_names AS T2 ON T1.Id = T2.MakeId WHERE T2.Model = "buick"
SELECT T2.Year FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId   =   T2.Id WHERE T1.Model  =  "buick"
连接数据库../datasets/cosql_dataset/database/car_1/car_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx3
____________________
SELECT T1.Horsepower FROM cars_data AS T1 JOIN car_names AS T2 ON T1.Id = T2.MakeId WHERE T2.Model = "plymouth"
SELECT T2.Horsepower FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId   =   T2.Id WHERE T1.Model  =  "plymouth"
连接数据库../datasets/cosql_dataset/database/car_1/car_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx4
____________________
SELECT T1.Horsepower FROM cars_data AS T1 JOIN car_names AS T2 ON T1.Id = T2.MakeId WHERE T1.Cylinders = 4 ORDER BY T1.Horsepower DESC
SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.Cylinders  =  4 ORDER BY T2.horsepower DESC LIMIT 1
连接数据库../datasets/cosql_dataset/database/car_1/car_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
extra pred: SELECT T1.Horsepower FROM cars_data AS T1 JOIN car_names AS T2 ON T1.Id = T2.MakeId WHERE T1.Cylinders = 4 ORDER BY T1.Horsepower DESC
extra gold: SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.Cylinders  =  4 ORDER BY T2.horsepower DESC LIMIT 1

当前idx1
____________________
SELECT count(*) FROM CARS_DATA WHERE YEAR = 1974
select count ( * )  from cars_data where year = '1974'
连接数据库../datasets/cosql_dataset/database/car_1/car_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT id FROM CARS_DATA WHERE YEAR = 1974 AND Cylinders = 8
select id  from cars_data where year = '1974' and Cylinders  =  '8'
连接数据库../datasets/cosql_dataset/database/car_1/car_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx1
____________________
SELECT Name FROM shop
select name from shop
连接数据库../datasets/cosql_dataset/database/employee_hire_evaluation/employee_hire_evaluation.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT T1.Name FROM shop AS T1 JOIN hiring AS T2 ON T1.Shop_ID  =  T2.Shop_ID
SELECT t2.name FROM hiring AS t1 JOIN shop AS t2 ON t1.shop_id   =   t2.shop_id GROUP BY t1.shop_id
连接数据库../datasets/cosql_dataset/database/employee_hire_evaluation/employee_hire_evaluation.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT T1.Name FROM shop AS T1 JOIN hiring AS T2 ON T1.Shop_ID  =  T2.Shop_ID
medium gold: SELECT t2.name FROM hiring AS t1 JOIN shop AS t2 ON t1.shop_id   =   t2.shop_id GROUP BY t1.shop_id

当前idx3
____________________
SELECT T1.Name FROM shop AS T1 JOIN hiring AS T2 ON T1.Shop_ID  =  T2.Shop_ID GROUP BY T2.Shop_ID ORDER BY count(*) DESC LIMIT 1
SELECT t2.name FROM hiring AS t1 JOIN shop AS t2 ON t1.shop_id   =   t2.shop_id GROUP BY t1.shop_id ORDER BY count ( * )  DESC LIMIT 1
连接数据库../datasets/cosql_dataset/database/employee_hire_evaluation/employee_hire_evaluation.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx1
____________________
SELECT count(*) FROM singer
select count ( distinct Singer_ID )  from Singer
连接数据库../datasets/cosql_dataset/database/singer/singer.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
easy pred: SELECT count(*) FROM singer
easy gold: select count ( distinct Singer_ID )  from Singer

当前idx2
____________________
SELECT count(*) FROM singer WHERE singer.Singer_ID IN (SELECT singer.Singer_ID FROM singer JOIN song ON singer.Singer_ID  =  song.Singer_ID GROUP BY singer.Singer_ID HAVING sum(sales)  >  300000)
SELECT count ( DISTINCT T1.Name )  FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID WHERE T2.Sales > 300000
连接数据库../datasets/cosql_dataset/database/singer/singer.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT count(*) FROM singer WHERE singer.Singer_ID IN (SELECT singer.Singer_ID FROM singer JOIN song ON singer.Singer_ID  =  song.Singer_ID GROUP BY singer.Singer_ID HAVING sum(sales)  >  300000)
medium gold: SELECT count ( DISTINCT T1.Name )  FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID WHERE T2.Sales > 300000

当前idx3
____________________
SELECT DISTINCT T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID GROUP BY T1.Singer_ID HAVING sum(T2.Sales)  >  300000
SELECT DISTINCT T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID WHERE T2.Sales > 300000
连接数据库../datasets/cosql_dataset/database/singer/singer.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:0
medium pred: SELECT DISTINCT T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID GROUP BY T1.Singer_ID HAVING sum(T2.Sales)  >  300000
medium gold: SELECT DISTINCT T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID WHERE T2.Sales > 300000

当前idx1
eval_err_num:16
____________________

SELECT contestant_name FROM CONTESTANTS
连接数据库../datasets/cosql_dataset/database/voter_1/voter_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
easy pred: 
easy gold: SELECT contestant_name FROM CONTESTANTS

当前idx2
eval_err_num:17
____________________

SELECT COUNT ( contestant_name )  FROM CONTESTANTS
连接数据库../datasets/cosql_dataset/database/voter_1/voter_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
easy pred: 
easy gold: SELECT COUNT ( contestant_name )  FROM CONTESTANTS

当前idx3
eval_err_num:18
____________________

SELECT contestant_name FROM CONTESTANTS WHERE contestant_number  =  1
连接数据库../datasets/cosql_dataset/database/voter_1/voter_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
easy pred: 
easy gold: SELECT contestant_name FROM CONTESTANTS WHERE contestant_number  =  1

当前idx4
eval_err_num:19
____________________

SELECT contestant_name FROM CONTESTANTS WHERE contestant_number  =  2
连接数据库../datasets/cosql_dataset/database/voter_1/voter_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
easy pred: 
easy gold: SELECT contestant_name FROM CONTESTANTS WHERE contestant_number  =  2

当前idx1
____________________
SELECT AirportName FROM airports
SELECT airportname FROM airports
连接数据库../datasets/cosql_dataset/database/flight_2/flight_2.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT count(*) FROM flights
SELECT COUNT ( DISTINCT Flightno )  FROM flights
连接数据库../datasets/cosql_dataset/database/flight_2/flight_2.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
easy pred: SELECT count(*) FROM flights
easy gold: SELECT COUNT ( DISTINCT Flightno )  FROM flights

当前idx3
____________________
SELECT count(distinct Country) FROM airports
SELECT COUNT ( DISTINCT country )  FROM airports
连接数据库../datasets/cosql_dataset/database/flight_2/flight_2.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx1
____________________
SELECT count(*) FROM Breeds
SELECT count ( * )  from Breeds
连接数据库../datasets/cosql_dataset/database/dog_kennels/dog_kennels.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
eval_err_num:20
____________________
SELECT breed_name FROM Breeds ORDER BY weight DESC LIMIT 1
SELECT T1.breed_name FROM Breeds AS T1 JOIN Dogs AS T2 ON T1.breed_code   =   T2.breed_code GROUP BY T1.breed_name ORDER BY count ( * )  DESC LIMIT 1
连接数据库../datasets/cosql_dataset/database/dog_kennels/dog_kennels.sqlite
执行第一个查询
执行出错: no such column: weight
eval_exec:False
exact_score:0
extra pred: SELECT breed_name FROM Breeds ORDER BY weight DESC LIMIT 1
extra gold: SELECT T1.breed_name FROM Breeds AS T1 JOIN Dogs AS T2 ON T1.breed_code   =   T2.breed_code GROUP BY T1.breed_name ORDER BY count ( * )  DESC LIMIT 1

当前idx3
eval_err_num:21
____________________
SELECT weight FROM Breeds WHERE breed_name = "Bulldog"
SELECT T2.size_code FROM Breeds AS T1 JOIN Dogs AS T2 ON T1.breed_code   =   T2.breed_code where T1.breed_name = "Bulldog"
连接数据库../datasets/cosql_dataset/database/dog_kennels/dog_kennels.sqlite
执行第一个查询
执行出错: no such column: weight
eval_exec:False
exact_score:0
medium pred: SELECT weight FROM Breeds WHERE breed_name = "Bulldog"
medium gold: SELECT T2.size_code FROM Breeds AS T1 JOIN Dogs AS T2 ON T1.breed_code   =   T2.breed_code where T1.breed_name = "Bulldog"

当前idx4
____________________
SELECT T1.breed_name FROM Breeds AS T1 JOIN Dogs AS T2 ON T1.breed_code  =  T2.breed_code GROUP BY T1.breed_code ORDER BY count(*) DESC LIMIT 1
SELECT T1.breed_name FROM Breeds AS T1 JOIN Dogs AS T2 ON T1.breed_code   =   T2.breed_code GROUP BY T1.breed_name ORDER BY count ( * )  DESC LIMIT 1
连接数据库../datasets/cosql_dataset/database/dog_kennels/dog_kennels.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:0
extra pred: SELECT T1.breed_name FROM Breeds AS T1 JOIN Dogs AS T2 ON T1.breed_code  =  T2.breed_code GROUP BY T1.breed_code ORDER BY count(*) DESC LIMIT 1
extra gold: SELECT T1.breed_name FROM Breeds AS T1 JOIN Dogs AS T2 ON T1.breed_code   =   T2.breed_code GROUP BY T1.breed_name ORDER BY count ( * )  DESC LIMIT 1

当前idx1
____________________
SELECT Name FROM conductor ORDER BY Year_of_Work DESC LIMIT 1
SELECT Name FROM conductor ORDER BY Year_of_Work DESC LIMIT 1
连接数据库../datasets/cosql_dataset/database/orchestra/orchestra.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT Year_of_Work FROM conductor WHERE Name = "Robert Craft"
SELECT Year_of_Work FROM conductor where name = 'Robert Craft'
连接数据库../datasets/cosql_dataset/database/orchestra/orchestra.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx3
____________________
SELECT Name FROM conductor ORDER BY Year_of_Work LIMIT 1
SELECT Name FROM conductor ORDER BY Year_of_Work asc LIMIT 1
连接数据库../datasets/cosql_dataset/database/orchestra/orchestra.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx1
____________________
SELECT T1.first_name ,  T1.last_name FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id ORDER BY count(*) DESC LIMIT 1
SELECT * FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id   =   T2.professional_id GROUP BY T1.professional_id order by COUNT ( * )   desc limit 1
连接数据库../datasets/cosql_dataset/database/dog_kennels/dog_kennels.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
extra pred: SELECT T1.first_name ,  T1.last_name FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id ORDER BY count(*) DESC LIMIT 1
extra gold: SELECT * FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id   =   T2.professional_id GROUP BY T1.professional_id order by COUNT ( * )   desc limit 1

当前idx2
____________________
SELECT T1.first_name ,  T1.last_name FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id ORDER BY count(*) ASC LIMIT 1
SELECT * FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id   =   T2.professional_id GROUP BY T1.professional_id order by COUNT ( * )   limit 1
连接数据库../datasets/cosql_dataset/database/dog_kennels/dog_kennels.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
extra pred: SELECT T1.first_name ,  T1.last_name FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id ORDER BY count(*) ASC LIMIT 1
extra gold: SELECT * FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id   =   T2.professional_id GROUP BY T1.professional_id order by COUNT ( * )   limit 1

当前idx3
____________________
SELECT count(*) FROM (SELECT T1.first_name ,  T1.last_name FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  <=  3)
select count ( * )  from  ( SELECT * FROM Professionals AS T1 JOIN Treatments AS T2 group by T2.professional_id having count ( * )  < =  3 ) 
连接数据库../datasets/cosql_dataset/database/dog_kennels/dog_kennels.sqlite
执行第一个查询
执行第二个查询
执行出错: near "=": syntax error
eval_exec:False
exact_score:False
easy pred: SELECT count(*) FROM (SELECT T1.first_name ,  T1.last_name FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  <=  3)
easy gold: select count ( * )  from  ( SELECT * FROM Professionals AS T1 JOIN Treatments AS T2 group by T2.professional_id having count ( * )  < =  3 ) 

当前idx1
____________________
SELECT Name FROM country WHERE Code NOT IN (SELECT CountryCode FROM countrylanguage WHERE Language = "English")
select name from country where code not in  ( SELECT CountryCode FROM countrylanguage WHERE LANGUAGE   =   "English" ) 
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT Name FROM country WHERE Code NOT IN (SELECT CountryCode FROM countrylanguage WHERE Language = "English") AND GovernmentForm != "Republic"
select name from country where code in  ( SELECT Code FROM country WHERE GovernmentForm ! =  "Republic" EXCEPT SELECT CountryCode FROM countrylanguage WHERE LANGUAGE   =   "English" ) 
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
执行出错: unrecognized token: "!"
eval_exec:False
exact_score:0
hard pred: SELECT Name FROM country WHERE Code NOT IN (SELECT CountryCode FROM countrylanguage WHERE Language = "English") AND GovernmentForm != "Republic"
hard gold: select name from country where code in  ( SELECT Code FROM country WHERE GovernmentForm ! =  "Republic" EXCEPT SELECT CountryCode FROM countrylanguage WHERE LANGUAGE   =   "English" ) 

当前idx1
____________________
SELECT count(*) FROM VOTES WHERE state  =  "NY" OR state  =  "CA"
SELECT count ( * )  FROM votes WHERE state   =   'NY' or  state   =   'CA'
连接数据库../datasets/cosql_dataset/database/voter_1/voter_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT distinct contestant_number FROM VOTES
SELECT distinct contestant_number FROM votes
连接数据库../datasets/cosql_dataset/database/voter_1/voter_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx3
____________________
SELECT count(*) FROM VOTES WHERE contestant_number  =  5
SELECT count ( * )  from votes where contestant_number  =  '5'
连接数据库../datasets/cosql_dataset/database/voter_1/voter_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx1
____________________
SELECT distinct Nationality FROM people
SELECT distinct Nationality FROM people
连接数据库../datasets/cosql_dataset/database/poker_player/poker_player.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT Nationality FROM people
SELECT Nationality FROM people
连接数据库../datasets/cosql_dataset/database/poker_player/poker_player.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx3
____________________
SELECT count(*) FROM people WHERE Nationality = "Russia"
SELECT count ( * )  FROM people where Nationality  =  'Russia'
连接数据库../datasets/cosql_dataset/database/poker_player/poker_player.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx4
____________________
SELECT count(*) FROM people WHERE Nationality = "Bulgaria"
SELECT count ( * )  FROM people where Nationality  =  'Bulgaria'
连接数据库../datasets/cosql_dataset/database/poker_player/poker_player.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx1
____________________
SELECT T1.Maker FROM car_makers AS T1 JOIN model_list AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Maker HAVING count(*)  >  3
SELECT * FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id   =   T2.Maker GROUP BY T1.Id HAVING count ( * )   >  3
连接数据库../datasets/cosql_dataset/database/car_1/car_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT T1.Maker FROM car_makers AS T1 JOIN model_list AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Maker HAVING count(*)  >  3
medium gold: SELECT * FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id   =   T2.Maker GROUP BY T1.Id HAVING count ( * )   >  3

当前idx2
____________________
SELECT T1.Id FROM car_makers AS T1 JOIN model_list AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Maker HAVING count(*)  >  3
SELECT T1.id FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id   =   T2.Maker GROUP BY T1.Id HAVING count ( * )   >  3
连接数据库../datasets/cosql_dataset/database/car_1/car_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT T1.Id FROM car_makers AS T1 JOIN model_list AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Maker HAVING count(*)  >  3
medium gold: SELECT T1.id FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id   =   T2.Maker GROUP BY T1.Id HAVING count ( * )   >  3

当前idx3
____________________
SELECT T1.FullName ,  T1.Id FROM car_makers AS T1 JOIN model_list AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id HAVING count(*)  >  3
SELECT T1.FullName ,  T1.Id FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id   =   T2.Maker GROUP BY T1.Id HAVING count ( * )   >  3
连接数据库../datasets/cosql_dataset/database/car_1/car_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx1
____________________
SELECT avg(Horsepower) FROM cars_data
SELECT avg ( Horsepower )  FROM cars_data
连接数据库../datasets/cosql_dataset/database/car_1/car_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT Horsepower FROM cars_data ORDER BY Horsepower DESC LIMIT 1
SELECT Id FROM CARS_DATA ORDER BY Horsepower DESC LIMIT 1
连接数据库../datasets/cosql_dataset/database/car_1/car_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT Horsepower FROM cars_data ORDER BY Horsepower DESC LIMIT 1
medium gold: SELECT Id FROM CARS_DATA ORDER BY Horsepower DESC LIMIT 1

当前idx3
____________________
SELECT Accelerate FROM cars_data WHERE Id = 39
SELECT accelerate FROM CARS_DATA ORDER BY Horsepower DESC LIMIT 1
连接数据库../datasets/cosql_dataset/database/car_1/car_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:0
medium pred: SELECT Accelerate FROM cars_data WHERE Id = 39
medium gold: SELECT accelerate FROM CARS_DATA ORDER BY Horsepower DESC LIMIT 1

当前idx4
____________________
SELECT * FROM cars_data WHERE Accelerate  >  19.0
SELECT COUNT ( * )  FROM CARS_DATA WHERE Accelerate  >  19.0
连接数据库../datasets/cosql_dataset/database/car_1/car_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
easy pred: SELECT * FROM cars_data WHERE Accelerate  >  19.0
easy gold: SELECT COUNT ( * )  FROM CARS_DATA WHERE Accelerate  >  19.0

当前idx1
____________________
SELECT Year FROM concert WHERE concert_Name = "Auditions"
SELECT year from concert where concert_name  =  "Auditions"
连接数据库../datasets/cosql_dataset/database/concert_singer/concert_singer.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT Year FROM concert WHERE concert_Name = "Super bootcamp"
SELECT year from concert where concert_name  =  "Super bootcamp"
连接数据库../datasets/cosql_dataset/database/concert_singer/concert_singer.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx3
____________________
SELECT Year FROM concert WHERE concert_Name = "Home Visits"
SELECT year from concert where concert_name  =  "Home Visits"
连接数据库../datasets/cosql_dataset/database/concert_singer/concert_singer.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx4
____________________
SELECT count(*) FROM concert WHERE year = 2014 OR year = 2015
SELECT count ( * )  FROM concert WHERE YEAR   =   2014 OR YEAR   =   2015
连接数据库../datasets/cosql_dataset/database/concert_singer/concert_singer.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx>4
____________________
SELECT count(*) FROM concert WHERE year = 2014
SELECT count ( * )  FROM concert WHERE YEAR   =   2014
连接数据库../datasets/cosql_dataset/database/concert_singer/concert_singer.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx>4
____________________
SELECT count(*) FROM concert WHERE year = 2015
SELECT count ( * )  FROM concert WHERE YEAR   =   2015
连接数据库../datasets/cosql_dataset/database/concert_singer/concert_singer.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx1
____________________
SELECT distinct tourney_name FROM matches
SELECT distinct tourney_name FROM matches
连接数据库../datasets/cosql_dataset/database/wta_1/wta_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx1
eval_err_num:22
____________________
SELECT count(*) FROM Students WHERE date_left IS NOT NULL
SELECT count ( * )   from students
连接数据库../datasets/cosql_dataset/database/student_transcripts_tracking/student_transcripts_tracking.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
easy pred: SELECT count(*) FROM Students WHERE date_left IS NOT NULL
easy gold: SELECT count ( * )   from students

当前idx2
eval_err_num:23
____________________
SELECT first_name ,  middle_name ,  last_name FROM Students WHERE date_left IS NOT NULL ORDER BY date_left ASC LIMIT 1
SELECT first_name ,  middle_name ,  last_name FROM Students ORDER BY date_left ASC LIMIT 1
连接数据库../datasets/cosql_dataset/database/student_transcripts_tracking/student_transcripts_tracking.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT first_name ,  middle_name ,  last_name FROM Students WHERE date_left IS NOT NULL ORDER BY date_left ASC LIMIT 1
medium gold: SELECT first_name ,  middle_name ,  last_name FROM Students ORDER BY date_left ASC LIMIT 1

当前idx1
____________________
SELECT * FROM flights WHERE SourceAirport = "LHR" AND FlightNo = 28
SELECT SourceAirport FROM Flights WHERE FlightNo = '28'
连接数据库../datasets/cosql_dataset/database/flight_2/flight_2.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
easy pred: SELECT * FROM flights WHERE SourceAirport = "LHR" AND FlightNo = 28
easy gold: SELECT SourceAirport FROM Flights WHERE FlightNo = '28'

当前idx2
____________________
SELECT City FROM airports WHERE AirportCode = "APG"
select city from airports where airportcode = 'APG'
连接数据库../datasets/cosql_dataset/database/flight_2/flight_2.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx3
____________________
SELECT AirportName FROM airports WHERE AirportCode NOT IN (SELECT SourceAirport FROM flights) AND AirportCode NOT IN (SELECT DestAirport FROM flights)
SELECT AirportName FROM Airports WHERE AirportCode NOT IN  ( SELECT SourceAirport FROM Flights UNION SELECT DestAirport FROM Flights ) 
连接数据库../datasets/cosql_dataset/database/flight_2/flight_2.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:0
hard pred: SELECT AirportName FROM airports WHERE AirportCode NOT IN (SELECT SourceAirport FROM flights) AND AirportCode NOT IN (SELECT DestAirport FROM flights)
hard gold: SELECT AirportName FROM Airports WHERE AirportCode NOT IN  ( SELECT SourceAirport FROM Flights UNION SELECT DestAirport FROM Flights ) 

当前idx1
____________________
SELECT transcript_date FROM Transcripts ORDER BY transcript_date ASC LIMIT 1
SELECT * FROM Transcripts ORDER BY transcript_date ASC LIMIT 1
连接数据库../datasets/cosql_dataset/database/student_transcripts_tracking/student_transcripts_tracking.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT transcript_date FROM Transcripts ORDER BY transcript_date ASC LIMIT 1
medium gold: SELECT * FROM Transcripts ORDER BY transcript_date ASC LIMIT 1

当前idx1
____________________
SELECT winner_name FROM matches ORDER BY winner_age LIMIT 3
SELECT DISTINCT winner_name  FROM matches ORDER BY winner_age LIMIT 3
连接数据库../datasets/cosql_dataset/database/wta_1/wta_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:True
当前idx2
____________________
SELECT winner_rank_points FROM matches ORDER BY winner_age LIMIT 3
SELECT loser_rank_points FROM matches ORDER BY winner_age LIMIT 3
连接数据库../datasets/cosql_dataset/database/wta_1/wta_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT winner_rank_points FROM matches ORDER BY winner_age LIMIT 3
medium gold: SELECT loser_rank_points FROM matches ORDER BY winner_age LIMIT 3

当前idx3
____________________
SELECT winner_age FROM matches ORDER BY winner_age LIMIT 3
SELECT winner_age FROM matches ORDER BY winner_age LIMIT 3
连接数据库../datasets/cosql_dataset/database/wta_1/wta_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx1
____________________
SELECT count(*) FROM Friend
SELECT count ( * )  FROM Friend
连接数据库../datasets/cosql_dataset/database/network_1/network_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT avg(grade) FROM Highschooler
SELECT avg ( grade )  FROM Highschooler
连接数据库../datasets/cosql_dataset/database/network_1/network_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx3
____________________
SELECT name FROM Highschooler
SELECT DISTINCT name  FROM Highschooler
连接数据库../datasets/cosql_dataset/database/network_1/network_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:True
当前idx1
____________________
SELECT count(*) FROM poker_player
select count ( * )  from poker_player
连接数据库../datasets/cosql_dataset/database/poker_player/poker_player.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT count(*) FROM poker_player WHERE Earnings > 300000
SELECT count ( * )  FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID   =   T2.People_ID WHERE T2.Earnings  >  300000
连接数据库../datasets/cosql_dataset/database/poker_player/poker_player.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:False
medium pred: SELECT count(*) FROM poker_player WHERE Earnings > 300000
medium gold: SELECT count ( * )  FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID   =   T2.People_ID WHERE T2.Earnings  >  300000

当前idx3
____________________
SELECT T2.Name FROM poker_player AS T1 JOIN people AS T2 ON T1.People_ID  =  T2.People_ID WHERE Earnings  >  300000
SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID   =   T2.People_ID WHERE T2.Earnings  >  300000
连接数据库../datasets/cosql_dataset/database/poker_player/poker_player.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx1
____________________
SELECT count(*) FROM museum
SELECT count ( * )  from museum
连接数据库../datasets/cosql_dataset/database/museum_visit/museum_visit.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT Num_of_Staff FROM museum
SELECT Num_of_Staff from museum
连接数据库../datasets/cosql_dataset/database/museum_visit/museum_visit.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx3
____________________
SELECT Museum_ID ,  name FROM museum ORDER BY Num_of_Staff DESC LIMIT 1
SELECT Museum_ID, Name from museum order by Num_of_Staff desc limit 1
连接数据库../datasets/cosql_dataset/database/museum_visit/museum_visit.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx1
____________________
SELECT count(*) FROM Students
SELECT count ( * )  FROM Students
连接数据库../datasets/cosql_dataset/database/student_transcripts_tracking/student_transcripts_tracking.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT first_name ,  middle_name ,  last_name FROM Students
SELECT first_name,middle_name,last_name  FROM Students
连接数据库../datasets/cosql_dataset/database/student_transcripts_tracking/student_transcripts_tracking.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx3
____________________
SELECT first_name ,  middle_name ,  last_name ,  date_first_registered FROM Students
SELECT date_first_registered  FROM Students
连接数据库../datasets/cosql_dataset/database/student_transcripts_tracking/student_transcripts_tracking.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
easy pred: SELECT first_name ,  middle_name ,  last_name ,  date_first_registered FROM Students
easy gold: SELECT date_first_registered  FROM Students

当前idx1
____________________
SELECT count(*) FROM Student
SELECT count ( StuID )  FROM student
连接数据库../datasets/cosql_dataset/database/pets_1/pets_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
easy pred: SELECT count(*) FROM Student
easy gold: SELECT count ( StuID )  FROM student

当前idx2
____________________
SELECT age FROM Student WHERE LName = 'Smith'
SELECT Age  FROM student where LName = 'Smith'
连接数据库../datasets/cosql_dataset/database/pets_1/pets_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx3
____________________
SELECT T1.age ,  T2.PetID FROM Student AS T1 JOIN Has_Pet AS T2 ON T1.StuID  =  T2.StuID WHERE T1.LName  =  'Smith'
SELECT T2.petid ,age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid   =   T2.stuid WHERE T1.Lname   =   'Smith'
连接数据库../datasets/cosql_dataset/database/pets_1/pets_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx1
____________________
SELECT StuID FROM Has_pet
SELECT distinct T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid   =   T2.stuid
连接数据库../datasets/cosql_dataset/database/pets_1/pets_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:False
easy pred: SELECT StuID FROM Has_pet
easy gold: SELECT distinct T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid   =   T2.stuid

当前idx2
____________________
SELECT T1.Fname ,  T1.LName ,  T1.Major ,  T1.Age FROM Student AS T1 JOIN Has_pet AS T2 ON T1.StuID  =  T2.StuID
SELECT distinct T1.Fname, T1.Lname, T1.major, T1.age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid   =   T2.stuid
连接数据库../datasets/cosql_dataset/database/pets_1/pets_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:True
当前idx3
____________________
SELECT T1.Fname ,  T1.LName ,  T1.Major ,  T1.Age FROM Student AS T1 JOIN Has_pet AS T2 ON T1.StuID  =  T2.StuID JOIN Pets AS T3 ON T2.PetID  =  T3.PetID WHERE T3.PetType  !=  "cat"
SELECT Fname, Lname, major, age FROM student WHERE stuid NOT IN  ( SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat' ) 
连接数据库../datasets/cosql_dataset/database/pets_1/pets_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
extra pred: SELECT T1.Fname ,  T1.LName ,  T1.Major ,  T1.Age FROM Student AS T1 JOIN Has_pet AS T2 ON T1.StuID  =  T2.StuID JOIN Pets AS T3 ON T2.PetID  =  T3.PetID WHERE T3.PetType  !=  "cat"
extra gold: SELECT Fname, Lname, major, age FROM student WHERE stuid NOT IN  ( SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat' ) 

当前idx1
____________________
SELECT count(*) FROM Dogs
SELECT count ( * )  FROM Dogs
连接数据库../datasets/cosql_dataset/database/dog_kennels/dog_kennels.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT age FROM Dogs where name = "Kacey"
SELECT age FROM Dogs where name  =  "Kacey"
连接数据库../datasets/cosql_dataset/database/dog_kennels/dog_kennels.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx3
____________________
SELECT name FROM Dogs order by weight desc limit 1
SELECT name FROM Dogs order by weight desc limit 1
连接数据库../datasets/cosql_dataset/database/dog_kennels/dog_kennels.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx4
____________________
SELECT size_code FROM Dogs where breed_code = "BUL"
SELECT size_code FROM Dogs where breed_code  =  "BUL"
连接数据库../datasets/cosql_dataset/database/dog_kennels/dog_kennels.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx1
____________________
SELECT Name FROM country ORDER BY Population ASC LIMIT 3
SELECT Name FROM country ORDER BY Population ASC LIMIT 3
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT Name FROM country ORDER BY SurfaceArea DESC LIMIT 1
SELECT Name FROM country ORDER BY surfacearea desc LIMIT 1
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx3
____________________
SELECT SUM(Population) FROM country WHERE Continent = "Antarctica"
SELECT population from country where name  =  "Antarctica"
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:0
easy pred: SELECT SUM(Population) FROM country WHERE Continent = "Antarctica"
easy gold: SELECT population from country where name  =  "Antarctica"

当前idx1
____________________
SELECT avg(friend_id) FROM Friend
SELECT AVG ( friend_id )  FROM friend
连接数据库../datasets/cosql_dataset/database/network_1/network_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT avg(grade) FROM Highschooler
SELECT AVG ( grade )  FROM Highschooler
连接数据库../datasets/cosql_dataset/database/network_1/network_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx3
____________________
SELECT max(grade) FROM Highschooler
SELECT MAX ( grade )  FROM Highschooler
连接数据库../datasets/cosql_dataset/database/network_1/network_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx1
____________________
SELECT count(*) FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id JOIN Degree_Programs AS T3 ON T3.degree_program_id  =  T2.degree_program_id WHERE T3.degree_summary_name  =  "Bachelor"
SELECT count ( * )  FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id   =   T2.student_id JOIN Degree_Programs AS T3 ON T2.degree_program_id   =   T3.degree_program_id WHERE T3.degree_summary_name   =   'Bachelor'
连接数据库../datasets/cosql_dataset/database/student_transcripts_tracking/student_transcripts_tracking.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT T1.student_id FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id JOIN Degree_Programs AS T3 ON T3.degree_program_id  =  T2.degree_program_id WHERE T3.degree_summary_name  =  "Bachelor"
SELECT t1.student_id FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id   =   T2.student_id JOIN Degree_Programs AS T3 ON T2.degree_program_id   =   T3.degree_program_id WHERE T3.degree_summary_name   =   'Bachelor'
连接数据库../datasets/cosql_dataset/database/student_transcripts_tracking/student_transcripts_tracking.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx3
____________________
SELECT * FROM Students WHERE student_id = 9
SELECT DISTINCT t1.first_name, t1.middle_name, t1.last_name FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id   =   T2.student_id JOIN Degree_Programs AS T3 ON T2.degree_program_id   =   T3.degree_program_id WHERE t1.student_id  =  9
连接数据库../datasets/cosql_dataset/database/student_transcripts_tracking/student_transcripts_tracking.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
hard pred: SELECT * FROM Students WHERE student_id = 9
hard gold: SELECT DISTINCT t1.first_name, t1.middle_name, t1.last_name FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id   =   T2.student_id JOIN Degree_Programs AS T3 ON T2.degree_program_id   =   T3.degree_program_id WHERE t1.student_id  =  9

当前idx4
____________________
SELECT * FROM Students WHERE student_id = 7
SELECT DISTINCT t1.first_name, t1.middle_name, t1.last_name FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id   =   T2.student_id JOIN Degree_Programs AS T3 ON T2.degree_program_id   =   T3.degree_program_id WHERE t1.student_id  =  7
连接数据库../datasets/cosql_dataset/database/student_transcripts_tracking/student_transcripts_tracking.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
hard pred: SELECT * FROM Students WHERE student_id = 7
hard gold: SELECT DISTINCT t1.first_name, t1.middle_name, t1.last_name FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id   =   T2.student_id JOIN Degree_Programs AS T3 ON T2.degree_program_id   =   T3.degree_program_id WHERE t1.student_id  =  7

当前idx>4
____________________
SELECT T3.degree_summary_name FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id JOIN Degree_Programs AS T3 ON T3.degree_program_id  =  T2.degree_program_id WHERE T1.student_id = 7
SELECT DISTINCT T1.first_name ,  T1.middle_name ,  T1.last_name, T3.degree_summary_name FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id   =   T2.student_id JOIN Degree_Programs AS T3 ON T2.degree_program_id   =   T3.degree_program_id WHERE T3.degree_summary_name   =   'Bachelor'
连接数据库../datasets/cosql_dataset/database/student_transcripts_tracking/student_transcripts_tracking.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
hard pred: SELECT T3.degree_summary_name FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id JOIN Degree_Programs AS T3 ON T3.degree_program_id  =  T2.degree_program_id WHERE T1.student_id = 7
hard gold: SELECT DISTINCT T1.first_name ,  T1.middle_name ,  T1.last_name, T3.degree_summary_name FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id   =   T2.student_id JOIN Degree_Programs AS T3 ON T2.degree_program_id   =   T3.degree_program_id WHERE T3.degree_summary_name   =   'Bachelor'

当前idx>4
____________________
SELECT DISTINCT degree_summary_description FROM Degree_Programs
SELECT DISTINCT T3.degree_summary_description FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id   =   T2.student_id JOIN Degree_Programs AS T3 ON T2.degree_program_id   =   T3.degree_program_id
连接数据库../datasets/cosql_dataset/database/student_transcripts_tracking/student_transcripts_tracking.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:False
medium pred: SELECT DISTINCT degree_summary_description FROM Degree_Programs
medium gold: SELECT DISTINCT T3.degree_summary_description FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id   =   T2.student_id JOIN Degree_Programs AS T3 ON T2.degree_program_id   =   T3.degree_program_id

当前idx>4
____________________
SELECT T1.student_id FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id JOIN Degree_Programs AS T3 ON T3.degree_program_id  =  T2.degree_program_id WHERE T3.degree_summary_name  =  "Bachelor"
SELECT DISTINCT T1.student_ID FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id   =   T2.student_id JOIN Degree_Programs AS T3 ON T2.degree_program_id   =   T3.degree_program_id WHERE T3.degree_summary_name   =   'Bachelor'
连接数据库../datasets/cosql_dataset/database/student_transcripts_tracking/student_transcripts_tracking.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:True
当前idx>4
____________________
SELECT T1.first_name ,  T1.middle_name ,  T1.last_name FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id JOIN Degree_Programs AS T3 ON T3.degree_program_id  =  T2.degree_program_id WHERE T3.degree_summary_name  =  "Bachelor"
SELECT DISTINCT T1.first_name ,  T1.middle_name ,  T1.last_name FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id   =   T2.student_id JOIN Degree_Programs AS T3 ON T2.degree_program_id   =   T3.degree_program_id WHERE T3.degree_summary_name   =   'Bachelor'
连接数据库../datasets/cosql_dataset/database/student_transcripts_tracking/student_transcripts_tracking.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:True
当前idx1
____________________
SELECT count(*) FROM car_names AS T1 JOIN model_list AS T2 ON T1.Model  =  T2.Model JOIN car_makers AS T3 ON T2.Maker  =  T3.Id WHERE T3.Maker  =  "Chevrolet"
SELECT count ( DISTINCT Make )  FROM CAR_NAMES WHERE Model  =  'chevrolet'
连接数据库../datasets/cosql_dataset/database/car_1/car_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
easy pred: SELECT count(*) FROM car_names AS T1 JOIN model_list AS T2 ON T1.Model  =  T2.Model JOIN car_makers AS T3 ON T2.Maker  =  T3.Id WHERE T3.Maker  =  "Chevrolet"
easy gold: SELECT count ( DISTINCT Make )  FROM CAR_NAMES WHERE Model  =  'chevrolet'

当前idx2
____________________
SELECT count(*) FROM model_list
SELECT count ( DISTINCT Model )  FROM CAR_NAMES
连接数据库../datasets/cosql_dataset/database/car_1/car_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
easy pred: SELECT count(*) FROM model_list
easy gold: SELECT count ( DISTINCT Model )  FROM CAR_NAMES

当前idx3
____________________
SELECT T1.Model FROM car_names AS T1 JOIN model_list AS T2 ON T1.Model  =  T2.Model GROUP BY T1.Model ORDER BY count(*) DESC LIMIT 1
SELECT Model FROM CAR_NAMES GROUP BY Model ORDER BY count ( DISTINCT Make )  DESC LIMIT 1
连接数据库../datasets/cosql_dataset/database/car_1/car_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:0
hard pred: SELECT T1.Model FROM car_names AS T1 JOIN model_list AS T2 ON T1.Model  =  T2.Model GROUP BY T1.Model ORDER BY count(*) DESC LIMIT 1
hard gold: SELECT Model FROM CAR_NAMES GROUP BY Model ORDER BY count ( DISTINCT Make )  DESC LIMIT 1

当前idx1
____________________
SELECT T2.Name FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID  =  T2.Teacher_ID
SELECT T2.Name, T1.course_id FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID   =   T2.Teacher_ID
连接数据库../datasets/cosql_dataset/database/course_teach/course_teach.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT T2.Name FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID  =  T2.Teacher_ID
medium gold: SELECT T2.Name, T1.course_id FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID   =   T2.Teacher_ID

当前idx2
____________________
SELECT T2.Teacher_ID ,  COUNT(*) FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID  =  T2.Teacher_ID GROUP BY T2.Teacher_ID
SELECT T2.Name ,  COUNT ( * )  FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID   =   T2.Teacher_ID GROUP BY T2.Name
连接数据库../datasets/cosql_dataset/database/course_teach/course_teach.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT T2.Teacher_ID ,  COUNT(*) FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID  =  T2.Teacher_ID GROUP BY T2.Teacher_ID
medium gold: SELECT T2.Name ,  COUNT ( * )  FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID   =   T2.Teacher_ID GROUP BY T2.Name

当前idx3
____________________
SELECT T2.Name FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID  =  T2.Teacher_ID WHERE T2.Age  <  30
SELECT name from teacher where age < 30
连接数据库../datasets/cosql_dataset/database/course_teach/course_teach.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:False
easy pred: SELECT T2.Name FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID  =  T2.Teacher_ID WHERE T2.Age  <  30
easy gold: SELECT name from teacher where age < 30

当前idx1
____________________
SELECT Date FROM performance WHERE Type = "Audition"
SELECT date FROM performance WHERE TYPE LIKE "%audition%"
连接数据库../datasets/cosql_dataset/database/orchestra/orchestra.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT Date FROM performance WHERE Type = "Audition"
medium gold: SELECT date FROM performance WHERE TYPE LIKE "%audition%"

当前idx1
____________________
SELECT birth_date FROM players WHERE player_id = 200002
SELECT birth_date FROM players where player_id = 200002
连接数据库../datasets/cosql_dataset/database/wta_1/wta_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT first_name FROM players WHERE player_id = 200001
SELECT first_name FROM players where player_id = 200001
连接数据库../datasets/cosql_dataset/database/wta_1/wta_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx3
____________________
SELECT country_code FROM players GROUP BY country_code HAVING count(*)  >  50
SELECT country_code FROM players GROUP BY country_code HAVING count ( * )  > 50
连接数据库../datasets/cosql_dataset/database/wta_1/wta_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx1
eval_err_num:24
____________________
SELECT region from country where name = (select country from city where name = "Kabul")
SELECT Region FROM country AS T1 JOIN city AS T2 ON T1.Code   =   T2.CountryCode WHERE T2.Name   =   "Kabul"
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行出错: no such column: country
eval_exec:False
exact_score:0
medium pred: SELECT region from country where name = (select country from city where name = "Kabul")
medium gold: SELECT Region FROM country AS T1 JOIN city AS T2 ON T1.Code   =   T2.CountryCode WHERE T2.Name   =   "Kabul"

当前idx2
eval_err_num:25
____________________
SELECT region from country where name = (select country from city where name = "Herat")
SELECT Region FROM country AS T1 JOIN city AS T2 ON T1.Code   =   T2.CountryCode WHERE T2.Name   =   "Herat"
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行出错: no such column: country
eval_exec:False
exact_score:0
medium pred: SELECT region from country where name = (select country from city where name = "Herat")
medium gold: SELECT Region FROM country AS T1 JOIN city AS T2 ON T1.Code   =   T2.CountryCode WHERE T2.Name   =   "Herat"

当前idx3
eval_err_num:26
____________________
SELECT region from country where name = (select country from city where name = "Qunduz")
SELECT Region FROM country AS T1 JOIN city AS T2 ON T1.Code   =   T2.CountryCode WHERE T2.Name   =   "Qandahar"
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行出错: no such column: country
eval_exec:False
exact_score:0
medium pred: SELECT region from country where name = (select country from city where name = "Qunduz")
medium gold: SELECT Region FROM country AS T1 JOIN city AS T2 ON T1.Code   =   T2.CountryCode WHERE T2.Name   =   "Qandahar"

当前idx1
____________________
SELECT year FROM matches GROUP BY year ORDER BY count(*) DESC LIMIT 1
SELECT YEAR FROM matches GROUP BY YEAR ORDER BY count ( * )  DESC LIMIT 1
连接数据库../datasets/cosql_dataset/database/wta_1/wta_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT year FROM matches GROUP BY year ORDER BY count(*) ASC LIMIT 1
SELECT YEAR FROM matches GROUP BY YEAR ORDER BY count ( * )  LIMIT 1
连接数据库../datasets/cosql_dataset/database/wta_1/wta_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx3
____________________
SELECT count(*) FROM matches GROUP BY year ORDER BY count(*) ASC LIMIT 1
SELECT YEAR, count ( * )  FROM matches GROUP BY YEAR ORDER BY count ( * )  LIMIT 1
连接数据库../datasets/cosql_dataset/database/wta_1/wta_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
hard pred: SELECT count(*) FROM matches GROUP BY year ORDER BY count(*) ASC LIMIT 1
hard gold: SELECT YEAR, count ( * )  FROM matches GROUP BY YEAR ORDER BY count ( * )  LIMIT 1

当前idx4
____________________
SELECT count(*) FROM matches WHERE year = 2016
SELECT year, count ( * )  from matches where year  =  2016
连接数据库../datasets/cosql_dataset/database/wta_1/wta_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT count(*) FROM matches WHERE year = 2016
medium gold: SELECT year, count ( * )  from matches where year  =  2016

当前idx>4
____________________
SELECT count(*) FROM matches WHERE surface = "Hard" AND year = 2016
SELECT count ( * )  from matches where surface  =  "Hard"
连接数据库../datasets/cosql_dataset/database/wta_1/wta_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
easy pred: SELECT count(*) FROM matches WHERE surface = "Hard" AND year = 2016
easy gold: SELECT count ( * )  from matches where surface  =  "Hard"

当前idx1
____________________
SELECT id FROM car_makers
SELECT  Id  FROM CAR_MAKERS
连接数据库../datasets/cosql_dataset/database/car_1/car_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT country FROM car_makers
SELECT  Country  FROM CAR_MAKERS
连接数据库../datasets/cosql_dataset/database/car_1/car_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx1
____________________
SELECT avg(Percentage) FROM countrylanguage
select avg ( percentage )  from countrylanguage
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT countrycode FROM countrylanguage WHERE language  =  "Dutch" ORDER BY percentage DESC LIMIT 1
select countrycode from countrylanguage where language  =  "Dutch" order by percentage desc limit 1
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx3
____________________
SELECT avg(Percentage) FROM countrylanguage
select avg ( percentage )  from countrylanguage where language  =  "Papiamento"
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
easy pred: SELECT avg(Percentage) FROM countrylanguage
easy gold: select avg ( percentage )  from countrylanguage where language  =  "Papiamento"

当前idx1
____________________
SELECT Level_of_membership FROM visitor WHERE Name = "Gonzalo Higuaín"
SELECT Level_of_membership FROM visitor WHERE name  =   "Gonzalo Higuaín "
连接数据库../datasets/cosql_dataset/database/museum_visit/museum_visit.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:True
当前idx2
____________________
SELECT Name FROM visitor WHERE Level_of_membership = 5
SELECT name FROM visitor WHERE Level_of_membership =  5
连接数据库../datasets/cosql_dataset/database/museum_visit/museum_visit.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx3
____________________
SELECT count(*) FROM visitor WHERE Level_of_membership  >  5
SELECT count ( * )  FROM visitor WHERE Level_of_membership>5
连接数据库../datasets/cosql_dataset/database/museum_visit/museum_visit.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx4
____________________
SELECT Age FROM visitor WHERE Level_of_membership = 8
SELECT age FROM visitor WHERE Level_of_membership   = 8
连接数据库../datasets/cosql_dataset/database/museum_visit/museum_visit.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx>4
____________________
SELECT count(*) FROM visitor WHERE Level_of_membership  >  4
SELECT count ( * )  FROM visitor WHERE Level_of_membership > 4
连接数据库../datasets/cosql_dataset/database/museum_visit/museum_visit.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx>4
____________________
SELECT Name FROM visitor ORDER BY Level_of_membership DESC
SELECT name ,  Level_of_membership FROM visitor WHERE Level_of_membership  >  4 ORDER BY age DESC
连接数据库../datasets/cosql_dataset/database/museum_visit/museum_visit.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT Name FROM visitor ORDER BY Level_of_membership DESC
medium gold: SELECT name ,  Level_of_membership FROM visitor WHERE Level_of_membership  >  4 ORDER BY age DESC

当前idx1
____________________
SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Name ORDER BY count(*) DESC LIMIT 1
SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code   =   T2.CountryCode GROUP BY T1.Name ORDER BY COUNT ( * )  DESC LIMIT 1
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT count(*) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name = "Canada"
SELECT count ( * )  FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code   =   T2.CountryCode where T1.name  =  "Canada"
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx3
____________________
SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name = "Canada"
SELECT T2.language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code   =   T2.CountryCode where T1.name  =  "Canada"
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx4
____________________
SELECT count(*) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language = "Chinese"
SELECT count ( distinct CountryCode )  FROM countrylanguage WHERE Language  =  "Chinese"
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
easy pred: SELECT count(*) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language = "Chinese"
easy gold: SELECT count ( distinct CountryCode )  FROM countrylanguage WHERE Language  =  "Chinese"

当前idx>4
____________________
SELECT DISTINCT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language = "English" AND T1.Continent = "North America"
SELECT NAME FROM country WHERE Continent  =  "North America"
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
easy pred: SELECT DISTINCT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language = "English" AND T1.Continent = "North America"
easy gold: SELECT NAME FROM country WHERE Continent  =  "North America"

当前idx>4
____________________
SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name = "Canada" AND T2.IsOfficial = "T"
SELECT LANGUAGE FROM countrylanguage WHERE countrycode in  ( SELECT Code FROM country WHERE Continent  =  "North America" )  and IsOfficial  =  "T"
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
extra pred: SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name = "Canada" AND T2.IsOfficial = "T"
extra gold: SELECT LANGUAGE FROM countrylanguage WHERE countrycode in  ( SELECT Code FROM country WHERE Continent  =  "North America" )  and IsOfficial  =  "T"

当前idx>4
____________________
SELECT LifeExpectancy FROM country WHERE Name = "Canada"
SELECT LifeExpectancy FROM country WHERE name  =  "Canada"
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx1
____________________
SELECT count(*) FROM (SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid GROUP BY T1.stuid HAVING count(*)  >  1)
SELECT count ( * )  FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid   =   T2.stuid GROUP BY T1.stuid HAVING count ( * )   >  1
连接数据库../datasets/cosql_dataset/database/pets_1/pets_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT count(*) FROM (SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid GROUP BY T1.stuid HAVING count(*)  >  1)
medium gold: SELECT count ( * )  FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid   =   T2.stuid GROUP BY T1.stuid HAVING count ( * )   >  1

当前idx2
____________________
SELECT T1.fname ,  T1.lname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid GROUP BY T1.stuid HAVING count(*)  >  1
SELECT T1.lname, T1.fname  FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid   =   T2.stuid GROUP BY T1.stuid HAVING count ( * )   >  1
连接数据库../datasets/cosql_dataset/database/pets_1/pets_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx3
____________________
SELECT sex FROM student WHERE fname = "Kim" AND lname = "Tracy"
SELECT T1.lname, T1.fname, T1.sex  FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid   =   T2.stuid GROUP BY T1.stuid HAVING count ( * )   >  1
连接数据库../datasets/cosql_dataset/database/pets_1/pets_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT sex FROM student WHERE fname = "Kim" AND lname = "Tracy"
medium gold: SELECT T1.lname, T1.fname, T1.sex  FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid   =   T2.stuid GROUP BY T1.stuid HAVING count ( * )   >  1

当前idx1
____________________
SELECT count(distinct region) from country where continent = "Asia"
select count ( * )  from  ( SELECT region FROM country WHERE Continent   =   "Asia" group by region ) 
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
easy pred: SELECT count(distinct region) from country where continent = "Asia"
easy gold: select count ( * )  from  ( SELECT region FROM country WHERE Continent   =   "Asia" group by region ) 

当前idx2
____________________
SELECT count(distinct region) from country where continent = "Europe"
select count ( * )  from  ( SELECT region FROM country WHERE Continent   =   "Europe" group by region ) 
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
easy pred: SELECT count(distinct region) from country where continent = "Europe"
easy gold: select count ( * )  from  ( SELECT region FROM country WHERE Continent   =   "Europe" group by region ) 

当前idx3
____________________
SELECT sum(surfacearea) from country where continent = "Europe"
SELECT sum ( SurfaceArea )  FROM country WHERE Continent   =   "Asia" OR Continent   =   "Europe"
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT sum(surfacearea) from country where continent = "Europe"
medium gold: SELECT sum ( SurfaceArea )  FROM country WHERE Continent   =   "Asia" OR Continent   =   "Europe"

当前idx1
____________________
SELECT count(Template_ID) FROM Templates AS T1 JOIN Ref_Template_Types AS T2 ON T1.Template_Type_Code  =  T2.Template_Type_Code WHERE T2.Template_Type_Description  =  "Presentation"
SELECT count ( * )  FROM Ref_template_types AS T1 JOIN Templates AS T2 ON T1.template_type_code   =  T2.template_type_code WHERE T1.template_type_description   =   "Presentation"
连接数据库../datasets/cosql_dataset/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT count(Template_ID) FROM Templates AS T1 JOIN Ref_Template_Types AS T2 ON T1.Template_Type_Code  =  T2.Template_Type_Code WHERE T2.Template_Type_Description  =  "Presentation"
medium gold: SELECT count ( * )  FROM Ref_template_types AS T1 JOIN Templates AS T2 ON T1.template_type_code   =  T2.template_type_code WHERE T1.template_type_description   =   "Presentation"

当前idx2
____________________
SELECT Template_ID FROM Templates AS T1 JOIN Ref_Template_Types AS T2 ON T1.Template_Type_Code  =  T2.Template_Type_Code WHERE T2.Template_Type_Description  =  "Presentation"
SELECT T2.template_id FROM Ref_template_types AS T1 JOIN Templates AS T2 ON T1.template_type_code   =  T2.template_type_code WHERE T1.template_type_description   =   "Presentation"
连接数据库../datasets/cosql_dataset/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx3
____________________
SELECT Template_Type_Code FROM Templates AS T1 JOIN Ref_Template_Types AS T2 ON T1.Template_Type_Code  =  T2.Template_Type_Code WHERE T2.Template_Type_Description  =  "Presentation"
SELECT T2.template_id, T2.Template_Type_Code FROM Ref_template_types AS T1 JOIN Templates AS T2 ON T1.template_type_code   =  T2.template_type_code WHERE T1.template_type_description   =   "Presentation"
连接数据库../datasets/cosql_dataset/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite
执行第一个查询
执行出错: ambiguous column name: Template_Type_Code
eval_exec:False
exact_score:0
medium pred: SELECT Template_Type_Code FROM Templates AS T1 JOIN Ref_Template_Types AS T2 ON T1.Template_Type_Code  =  T2.Template_Type_Code WHERE T2.Template_Type_Description  =  "Presentation"
medium gold: SELECT T2.template_id, T2.Template_Type_Code FROM Ref_template_types AS T1 JOIN Templates AS T2 ON T1.template_type_code   =  T2.template_type_code WHERE T1.template_type_description   =   "Presentation"

当前idx1
____________________
SELECT count(*) FROM (SELECT T1.course_id ,  T2.course_name FROM Courses AS T1 JOIN Student_Enrolment_Courses AS T3 ON T1.course_id  =  T3.course_id JOIN Courses AS T2 ON T2.course_id  =  T3.course_id GROUP BY T1.course_id)
SELECT count ( * )   FROM Transcript_Contents GROUP BY student_course_id ORDER BY count ( * )  DESC LIMIT 1
连接数据库../datasets/cosql_dataset/database/student_transcripts_tracking/student_transcripts_tracking.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
hard pred: SELECT count(*) FROM (SELECT T1.course_id ,  T2.course_name FROM Courses AS T1 JOIN Student_Enrolment_Courses AS T3 ON T1.course_id  =  T3.course_id JOIN Courses AS T2 ON T2.course_id  =  T3.course_id GROUP BY T1.course_id)
hard gold: SELECT count ( * )   FROM Transcript_Contents GROUP BY student_course_id ORDER BY count ( * )  DESC LIMIT 1

当前idx2
____________________
SELECT T3.student_enrolment_id FROM Courses AS T1 JOIN Student_Enrolment_Courses AS T3 ON T1.course_id  =  T3.course_id JOIN Courses AS T2 ON T2.course_id  =  T3.course_id GROUP BY T1.course_id
SELECT student_course_id FROM Transcript_Contents GROUP BY student_course_id ORDER BY count ( * )  DESC LIMIT 1
连接数据库../datasets/cosql_dataset/database/student_transcripts_tracking/student_transcripts_tracking.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
hard pred: SELECT T3.student_enrolment_id FROM Courses AS T1 JOIN Student_Enrolment_Courses AS T3 ON T1.course_id  =  T3.course_id JOIN Courses AS T2 ON T2.course_id  =  T3.course_id GROUP BY T1.course_id
hard gold: SELECT student_course_id FROM Transcript_Contents GROUP BY student_course_id ORDER BY count ( * )  DESC LIMIT 1

当前idx3
____________________
SELECT count(*) FROM (SELECT T1.course_id ,  T2.course_name FROM Courses AS T1 JOIN Student_Enrolment_Courses AS T3 ON T1.course_id  =  T3.course_id JOIN Courses AS T2 ON T2.course_id  =  T3.course_id GROUP BY T1.course_id)
SELECT count ( * )  FROM Transcript_Contents GROUP BY student_course_id ORDER BY count ( * )  LIMIT 1
连接数据库../datasets/cosql_dataset/database/student_transcripts_tracking/student_transcripts_tracking.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
hard pred: SELECT count(*) FROM (SELECT T1.course_id ,  T2.course_name FROM Courses AS T1 JOIN Student_Enrolment_Courses AS T3 ON T1.course_id  =  T3.course_id JOIN Courses AS T2 ON T2.course_id  =  T3.course_id GROUP BY T1.course_id)
hard gold: SELECT count ( * )  FROM Transcript_Contents GROUP BY student_course_id ORDER BY count ( * )  LIMIT 1

当前idx4
____________________
SELECT T3.student_enrolment_id FROM Courses AS T1 JOIN Student_Enrolment_Courses AS T3 ON T1.course_id  =  T3.course_id JOIN Courses AS T2 ON T2.course_id  =  T3.course_id GROUP BY T1.course_id
SELECT  student_course_id FROM Transcript_Contents GROUP BY student_course_id ORDER BY count ( * )  LIMIT 1
连接数据库../datasets/cosql_dataset/database/student_transcripts_tracking/student_transcripts_tracking.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
hard pred: SELECT T3.student_enrolment_id FROM Courses AS T1 JOIN Student_Enrolment_Courses AS T3 ON T1.course_id  =  T3.course_id JOIN Courses AS T2 ON T2.course_id  =  T3.course_id GROUP BY T1.course_id
hard gold: SELECT  student_course_id FROM Transcript_Contents GROUP BY student_course_id ORDER BY count ( * )  LIMIT 1

当前idx>4
____________________
SELECT avg(student_course_id) FROM Transcript_Contents
SELECT avg ( student_course_id )  FROM Transcript_Contents
连接数据库../datasets/cosql_dataset/database/student_transcripts_tracking/student_transcripts_tracking.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx1
____________________
SELECT property_name FROM Properties WHERE room_count  >  1
SELECT property_name FROM Properties WHERE room_count  >  1
连接数据库../datasets/cosql_dataset/database/real_estate_properties/real_estate_properties.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
eval_err_num:27
____________________
SELECT property_name FROM Properties WHERE room_count  >  1 AND (hse_feature_1 IS NOT NULL OR apt_feature_1 IS NOT NULL)
SELECT property_name FROM Properties WHERE property_type_code   =   "House" UNION SELECT property_name FROM Properties WHERE property_type_code   =   "Apartment" AND room_count  >  1
连接数据库../datasets/cosql_dataset/database/real_estate_properties/real_estate_properties.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
hard pred: SELECT property_name FROM Properties WHERE room_count  >  1 AND (hse_feature_1 IS NOT NULL OR apt_feature_1 IS NOT NULL)
hard gold: SELECT property_name FROM Properties WHERE property_type_code   =   "House" UNION SELECT property_name FROM Properties WHERE property_type_code   =   "Apartment" AND room_count  >  1

当前idx3
eval_err_num:28
____________________
SELECT property_name, room_count FROM Properties WHERE room_count  >  1 AND (hse_feature_1 IS NOT NULL OR apt_feature_1 IS NOT NULL)
SELECT property_name, room_count FROM Properties WHERE property_type_code   =   "House" UNION SELECT property_name, room_count FROM Properties WHERE property_type_code   =   "Apartment" AND room_count  >  1
连接数据库../datasets/cosql_dataset/database/real_estate_properties/real_estate_properties.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
extra pred: SELECT property_name, room_count FROM Properties WHERE room_count  >  1 AND (hse_feature_1 IS NOT NULL OR apt_feature_1 IS NOT NULL)
extra gold: SELECT property_name, room_count FROM Properties WHERE property_type_code   =   "House" UNION SELECT property_name, room_count FROM Properties WHERE property_type_code   =   "Apartment" AND room_count  >  1

当前idx4
eval_err_num:29
____________________
SELECT avg(agreed_selling_price) FROM Properties WHERE room_count  >  1 AND feature_type_code = "HSE"
SELECT avg ( agreed_selling_price )  FROM Properties WHERE property_type_code   =   "House" AND room_count  >  1
连接数据库../datasets/cosql_dataset/database/real_estate_properties/real_estate_properties.sqlite
执行第一个查询
执行出错: no such column: feature_type_code
eval_exec:False
exact_score:0
medium pred: SELECT avg(agreed_selling_price) FROM Properties WHERE room_count  >  1 AND feature_type_code = "HSE"
medium gold: SELECT avg ( agreed_selling_price )  FROM Properties WHERE property_type_code   =   "House" AND room_count  >  1

当前idx1
____________________
SELECT count(*) FROM airports
SELECT count ( * )  from airports
连接数据库../datasets/cosql_dataset/database/flight_2/flight_2.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT count(*) FROM airports AS T1 JOIN flights AS T2 ON T1.AirportCode  =  T2.SourceAirport
SELECT count ( distinct sourceairport )  from flights
连接数据库../datasets/cosql_dataset/database/flight_2/flight_2.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
easy pred: SELECT count(*) FROM airports AS T1 JOIN flights AS T2 ON T1.AirportCode  =  T2.SourceAirport
easy gold: SELECT count ( distinct sourceairport )  from flights

当前idx3
____________________
SELECT count(*) FROM airports AS T1 JOIN flights AS T2 ON T1.AirportCode  =  T2.DestAirport WHERE T1.AirportName  =  "ASY"
SELECT count ( * )  from flights where destairport like "%ASY%"
连接数据库../datasets/cosql_dataset/database/flight_2/flight_2.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT count(*) FROM airports AS T1 JOIN flights AS T2 ON T1.AirportCode  =  T2.DestAirport WHERE T1.AirportName  =  "ASY"
medium gold: SELECT count ( * )  from flights where destairport like "%ASY%"

当前idx4
____________________
SELECT count(*) FROM airports AS T1 JOIN flights AS T2 ON T1.AirportCode  =  T2.SourceAirport WHERE T1.AirportName  =  "ASY" AND T2.DestAirport  =  "APG" OR T2.DestAirport  =  "ABR"
SELECT count ( * )  from flights where destairport like "%ASY%" and sourceairport like "%APG%" UNION SELECT count ( * )  from flights where destairport like "%ASY%" and sourceairport like "%ABR%"
连接数据库../datasets/cosql_dataset/database/flight_2/flight_2.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
extra pred: SELECT count(*) FROM airports AS T1 JOIN flights AS T2 ON T1.AirportCode  =  T2.SourceAirport WHERE T1.AirportName  =  "ASY" AND T2.DestAirport  =  "APG" OR T2.DestAirport  =  "ABR"
extra gold: SELECT count ( * )  from flights where destairport like "%ASY%" and sourceairport like "%APG%" UNION SELECT count ( * )  from flights where destairport like "%ASY%" and sourceairport like "%ABR%"

当前idx1
eval_err_num:30
____________________
SELECT count(*) FROM car_makers AS T1 JOIN model_list AS T2 ON T1.Id  =  T2.Maker JOIN car_names AS T3 ON T2.ModelId  =  T3.ModelId JOIN cars_data AS T4 ON T3.MakeId  =  T4.Id JOIN countries AS T5 ON T4.Country  =  T5.CountryId WHERE T5.CountryName  =  "Germany"
SELECT count ( * )  FROM CAR_MAKERS AS T1 JOIN COUNTRIES AS T2 ON T1.Country   =   T2.CountryId WHERE T2.CountryName   =   'germany'
连接数据库../datasets/cosql_dataset/database/car_1/car_1.sqlite
执行第一个查询
执行出错: no such column: T3.ModelId
eval_exec:False
exact_score:0
medium pred: SELECT count(*) FROM car_makers AS T1 JOIN model_list AS T2 ON T1.Id  =  T2.Maker JOIN car_names AS T3 ON T2.ModelId  =  T3.ModelId JOIN cars_data AS T4 ON T3.MakeId  =  T4.Id JOIN countries AS T5 ON T4.Country  =  T5.CountryId WHERE T5.CountryName  =  "Germany"
medium gold: SELECT count ( * )  FROM CAR_MAKERS AS T1 JOIN COUNTRIES AS T2 ON T1.Country   =   T2.CountryId WHERE T2.CountryName   =   'germany'

当前idx2
eval_err_num:31
____________________
SELECT T3.Make FROM car_makers AS T1 JOIN model_list AS T2 ON T1.Id  =  T2.Maker JOIN car_names AS T3 ON T2.ModelId  =  T3.ModelId JOIN cars_data AS T4 ON T3.MakeId  =  T4.Id JOIN countries AS T5 ON T4.Country  =  T5.CountryId WHERE T5.CountryName  =  "Germany"
SELECt T1.maker FROM CAR_MAKERS AS T1 JOIN COUNTRIES AS T2 ON T1.Country   =   T2.CountryId WHERE T2.CountryName   =   'germany'
连接数据库../datasets/cosql_dataset/database/car_1/car_1.sqlite
执行第一个查询
执行出错: no such column: T3.ModelId
eval_exec:False
exact_score:0
medium pred: SELECT T3.Make FROM car_makers AS T1 JOIN model_list AS T2 ON T1.Id  =  T2.Maker JOIN car_names AS T3 ON T2.ModelId  =  T3.ModelId JOIN cars_data AS T4 ON T3.MakeId  =  T4.Id JOIN countries AS T5 ON T4.Country  =  T5.CountryId WHERE T5.CountryName  =  "Germany"
medium gold: SELECt T1.maker FROM CAR_MAKERS AS T1 JOIN COUNTRIES AS T2 ON T1.Country   =   T2.CountryId WHERE T2.CountryName   =   'germany'

当前idx3
eval_err_num:32
____________________
SELECT count(*) FROM car_makers AS T1 JOIN model_list AS T2 ON T1.Id  =  T2.Maker JOIN car_names AS T3 ON T2.ModelId  =  T3.ModelId JOIN cars_data AS T4 ON T3.MakeId  =  T4.Id JOIN countries AS T5 ON T4.Country  =  T5.CountryId WHERE T5.CountryName  =  "USA"
SELECt count ( T1.maker )  FROM CAR_MAKERS AS T1 JOIN COUNTRIES AS T2 ON T1.Country   =   T2.CountryId WHERE T2.CountryName   =   'usa'
连接数据库../datasets/cosql_dataset/database/car_1/car_1.sqlite
执行第一个查询
执行出错: no such column: T3.ModelId
eval_exec:False
exact_score:0
medium pred: SELECT count(*) FROM car_makers AS T1 JOIN model_list AS T2 ON T1.Id  =  T2.Maker JOIN car_names AS T3 ON T2.ModelId  =  T3.ModelId JOIN cars_data AS T4 ON T3.MakeId  =  T4.Id JOIN countries AS T5 ON T4.Country  =  T5.CountryId WHERE T5.CountryName  =  "USA"
medium gold: SELECt count ( T1.maker )  FROM CAR_MAKERS AS T1 JOIN COUNTRIES AS T2 ON T1.Country   =   T2.CountryId WHERE T2.CountryName   =   'usa'

当前idx4
eval_err_num:33
____________________
SELECT T3.Make FROM car_makers AS T1 JOIN model_list AS T2 ON T1.Id  =  T2.Maker JOIN car_names AS T3 ON T2.ModelId  =  T3.ModelId JOIN cars_data AS T4 ON T3.MakeId  =  T4.Id JOIN countries AS T5 ON T4.Country  =  T5.CountryId WHERE T5.CountryName  =  "USA"
SELECt T1.maker FROM CAR_MAKERS AS T1 JOIN COUNTRIES AS T2 ON T1.Country   =   T2.CountryId WHERE T2.CountryName   =   'usa'
连接数据库../datasets/cosql_dataset/database/car_1/car_1.sqlite
执行第一个查询
执行出错: no such column: T3.ModelId
eval_exec:False
exact_score:0
medium pred: SELECT T3.Make FROM car_makers AS T1 JOIN model_list AS T2 ON T1.Id  =  T2.Maker JOIN car_names AS T3 ON T2.ModelId  =  T3.ModelId JOIN cars_data AS T4 ON T3.MakeId  =  T4.Id JOIN countries AS T5 ON T4.Country  =  T5.CountryId WHERE T5.CountryName  =  "USA"
medium gold: SELECt T1.maker FROM CAR_MAKERS AS T1 JOIN COUNTRIES AS T2 ON T1.Country   =   T2.CountryId WHERE T2.CountryName   =   'usa'

当前idx1
____________________
SELECT first_name, last_name, state FROM Owners
SELECT first_name ,  last_name, state FROM Owners
连接数据库../datasets/cosql_dataset/database/dog_kennels/dog_kennels.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT first_name, last_name, email_address FROM Owners
SELECT first_name ,  last_name, email_address FROM Owners
连接数据库../datasets/cosql_dataset/database/dog_kennels/dog_kennels.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx3
____________________
SELECT first_name, last_name, email_address FROM Owners WHERE state LIKE "%North%"
SELECT first_name ,  last_name ,  email_address FROM Owners WHERE state LIKE '%North%'
连接数据库../datasets/cosql_dataset/database/dog_kennels/dog_kennels.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx1
____________________
SELECT city FROM employee WHERE age  <  30 GROUP BY city HAVING count(*)  >  1
SELECT city FROM employee WHERE age  <  30 GROUP BY city HAVING count ( * )   >  1
连接数据库../datasets/cosql_dataset/database/employee_hire_evaluation/employee_hire_evaluation.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT city FROM employee WHERE age  >  30 GROUP BY city HAVING count(*)  >  1
SELECT city FROM employee WHERE age  >  30 GROUP BY city HAVING count ( * )   >  1
连接数据库../datasets/cosql_dataset/database/employee_hire_evaluation/employee_hire_evaluation.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx3
____________________
SELECT name, age FROM employee WHERE age  >  30
SELECT Name, Age FROM employee WHERE age  >  30
连接数据库../datasets/cosql_dataset/database/employee_hire_evaluation/employee_hire_evaluation.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx4
____________________
SELECT name, age FROM employee WHERE age  <  30
SELECT Name, Age FROM employee WHERE age  <  30
连接数据库../datasets/cosql_dataset/database/employee_hire_evaluation/employee_hire_evaluation.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx>4
____________________
SELECT city FROM employee WHERE age  <  29 GROUP BY city HAVING count(*)  >  1
SELECT City FROM employee WHERE age  <  29
连接数据库../datasets/cosql_dataset/database/employee_hire_evaluation/employee_hire_evaluation.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
easy pred: SELECT city FROM employee WHERE age  <  29 GROUP BY city HAVING count(*)  >  1
easy gold: SELECT City FROM employee WHERE age  <  29

当前idx1
____________________
SELECT count(*) FROM Owners
SELECT count ( * )  FROM Owners
连接数据库../datasets/cosql_dataset/database/dog_kennels/dog_kennels.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT min(age) FROM Dogs
SELECT age FROM Dogs ORDER BY age ASC LIMIT 1
连接数据库../datasets/cosql_dataset/database/dog_kennels/dog_kennels.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:0
medium pred: SELECT min(age) FROM Dogs
medium gold: SELECT age FROM Dogs ORDER BY age ASC LIMIT 1

当前idx3
____________________
SELECT name FROM Dogs WHERE age = 1
SELECT name FROM Dogs ORDER BY age ASC LIMIT 1
连接数据库../datasets/cosql_dataset/database/dog_kennels/dog_kennels.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:0
medium pred: SELECT name FROM Dogs WHERE age = 1
medium gold: SELECT name FROM Dogs ORDER BY age ASC LIMIT 1

当前idx4
eval_err_num:34
____________________
SELECT first_name, last_name FROM Owners WHERE dog_id = (SELECT dog_id FROM Dogs WHERE name = "Evangeline")
SELECT T1.first_name, T1.last_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id   =   T2.owner_id WHERE T2.name  =  "Evangeline"
连接数据库../datasets/cosql_dataset/database/dog_kennels/dog_kennels.sqlite
执行第一个查询
执行出错: no such column: dog_id
eval_exec:False
exact_score:0
medium pred: SELECT first_name, last_name FROM Owners WHERE dog_id = (SELECT dog_id FROM Dogs WHERE name = "Evangeline")
medium gold: SELECT T1.first_name, T1.last_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id   =   T2.owner_id WHERE T2.name  =  "Evangeline"

当前idx1
____________________
SELECT singer_id FROM singer WHERE singer_id NOT IN (SELECT singer_id FROM song)
SELECT Name FROM singer WHERE Singer_ID NOT IN  ( SELECT Singer_ID FROM song ) 
连接数据库../datasets/cosql_dataset/database/singer/singer.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
hard pred: SELECT singer_id FROM singer WHERE singer_id NOT IN (SELECT singer_id FROM song)
hard gold: SELECT Name FROM singer WHERE Singer_ID NOT IN  ( SELECT Singer_ID FROM song ) 

当前idx1
____________________
SELECT name FROM singer WHERE birth_year = 1948 OR birth_year = 1949
SELECT Name FROM singer WHERE Birth_Year   =   1948 OR Birth_Year   =   1949
连接数据库../datasets/cosql_dataset/database/singer/singer.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT citizenship FROM singer WHERE birth_year = 1948 OR birth_year = 1949
SELECT Citizenship FROM singer WHERE Birth_Year   =   1948 OR Birth_Year   =   1949
连接数据库../datasets/cosql_dataset/database/singer/singer.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx3
____________________
SELECT name FROM singer WHERE birth_year = 1948 OR birth_year = 1949 ORDER BY net_worth_millions DESC LIMIT 1
SELECT name FROM singer WHERE Birth_Year   =   1948 OR Birth_Year   =   1949 order by Net_Worth_Millions desc limit 1
连接数据库../datasets/cosql_dataset/database/singer/singer.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx4
____________________
SELECT name FROM singer WHERE birth_year = 1948 OR birth_year = 1949 AND net_worth_millions > 30
SELECT name,Net_Worth_Millions FROM singer WHERE Birth_Year   =   1948 OR Birth_Year   =   1949 order by Net_Worth_Millions desc limit 1
连接数据库../datasets/cosql_dataset/database/singer/singer.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
extra pred: SELECT name FROM singer WHERE birth_year = 1948 OR birth_year = 1949 AND net_worth_millions > 30
extra gold: SELECT name,Net_Worth_Millions FROM singer WHERE Birth_Year   =   1948 OR Birth_Year   =   1949 order by Net_Worth_Millions desc limit 1

当前idx>4
____________________
SELECT min(net_worth_millions) FROM singer WHERE birth_year BETWEEN 1948 AND 1949
SELECT name FROM singer WHERE Birth_Year   =   1948 OR Birth_Year   =   1949 order by Net_Worth_Millions limit 1
连接数据库../datasets/cosql_dataset/database/singer/singer.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
extra pred: SELECT min(net_worth_millions) FROM singer WHERE birth_year BETWEEN 1948 AND 1949
extra gold: SELECT name FROM singer WHERE Birth_Year   =   1948 OR Birth_Year   =   1949 order by Net_Worth_Millions limit 1

当前idx1
____________________
SELECT count(*) FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle WHERE T2.tonnage  =  "225" AND T1.result  =  "Lost"
SELECT count ( * )  FROM battle WHERE id NOT IN  (  SELECT lost_in_battle FROM ship WHERE tonnage   =   '225'  ) 
连接数据库../datasets/cosql_dataset/database/battle_death/battle_death.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
extra pred: SELECT count(*) FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle WHERE T2.tonnage  =  "225" AND T1.result  =  "Lost"
extra gold: SELECT count ( * )  FROM battle WHERE id NOT IN  (  SELECT lost_in_battle FROM ship WHERE tonnage   =   '225'  ) 

当前idx2
____________________
SELECT count(*) FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle WHERE T2.tonnage  =  "225" AND T1.result  =  "Lost"
SELECT count ( * )  FROM battle WHERE id IN  (  SELECT lost_in_battle FROM ship WHERE tonnage   =   '225'  ) 
连接数据库../datasets/cosql_dataset/database/battle_death/battle_death.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
hard pred: SELECT count(*) FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle WHERE T2.tonnage  =  "225" AND T1.result  =  "Lost"
hard gold: SELECT count ( * )  FROM battle WHERE id IN  (  SELECT lost_in_battle FROM ship WHERE tonnage   =   '225'  ) 

当前idx3
____________________
SELECT count(*) FROM ship WHERE tonnage  =  "225"
SELECT count ( * )  FROM ship WHERE tonnage   =   '225'
连接数据库../datasets/cosql_dataset/database/battle_death/battle_death.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx4
____________________
SELECT T1.name FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle WHERE T2.tonnage  =  "225" AND T1.result  =  "Won"
SELECT result FROM battle WHERE id IN  (  SELECT lost_in_battle FROM ship WHERE tonnage   =   '225'  ) 
连接数据库../datasets/cosql_dataset/database/battle_death/battle_death.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
hard pred: SELECT T1.name FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle WHERE T2.tonnage  =  "225" AND T1.result  =  "Won"
hard gold: SELECT result FROM battle WHERE id IN  (  SELECT lost_in_battle FROM ship WHERE tonnage   =   '225'  ) 

当前idx1
____________________
SELECT FullName FROM car_makers WHERE Maker = "AMC"
SELECT Fullname FROM car_makers WHERE maker  =  "amc"
连接数据库../datasets/cosql_dataset/database/car_1/car_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:True
当前idx2
____________________
SELECT CountryName FROM countries WHERE CountryId = 1 OR CountryId = 2 OR CountryId = 3
SELECT countryname FROM countries WHERE countryid = 1 or countryid = 2 or countryid = 3 ) 
连接数据库../datasets/cosql_dataset/database/car_1/car_1.sqlite
执行第一个查询
执行第二个查询
执行出错: near ")": syntax error
eval_exec:False
exact_score:True
当前idx3
____________________
SELECT ModelId FROM model_list WHERE Maker = 1
SELECT modelid FROM model_list WHERE model  =  "amc"
连接数据库../datasets/cosql_dataset/database/car_1/car_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:0
easy pred: SELECT ModelId FROM model_list WHERE Maker = 1
easy gold: SELECT modelid FROM model_list WHERE model  =  "amc"

当前idx4
eval_err_num:35
____________________
SELECT T1.CountryName ,  T2.CountryId FROM countries AS T1 JOIN car_makers AS T2 ON T1.CountryId  =  T2.Country  WHERE T1.CountryId  IN (SELECT T3.CountryId FROM countries AS T3 JOIN car_makers AS T4 ON T3.CountryId  =  T4.Country GROUP BY T3.CountryId HAVING count(*)  >  3) OR T2.Maker  =  4
SELECT T1.countryId ,  T1.CountryName FROM Countries AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId   =   T2.Country GROUP BY T1.countryId HAVING count ( * )   >  3 UNION SELECT T1.countryId ,  T1.CountryName FROM Countries AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId   =   T2.Country JOIN MODEL_LIST AS T3 ON T2.Id   =   T3.Maker WHERE T3.Model   =   'fiat'
连接数据库../datasets/cosql_dataset/database/car_1/car_1.sqlite
执行第一个查询
执行出错: no such column: T2.CountryId
eval_exec:False
exact_score:0
extra pred: SELECT T1.CountryName ,  T2.CountryId FROM countries AS T1 JOIN car_makers AS T2 ON T1.CountryId  =  T2.Country  WHERE T1.CountryId  IN (SELECT T3.CountryId FROM countries AS T3 JOIN car_makers AS T4 ON T3.CountryId  =  T4.Country GROUP BY T3.CountryId HAVING count(*)  >  3) OR T2.Maker  =  4
extra gold: SELECT T1.countryId ,  T1.CountryName FROM Countries AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId   =   T2.Country GROUP BY T1.countryId HAVING count ( * )   >  3 UNION SELECT T1.countryId ,  T1.CountryName FROM Countries AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId   =   T2.Country JOIN MODEL_LIST AS T3 ON T2.Id   =   T3.Maker WHERE T3.Model   =   'fiat'

当前idx1
____________________
SELECT Money_Rank FROM poker_player ORDER BY Earnings DESC LIMIT 1
SELECT Money_Rank FROM poker_player ORDER BY Earnings DESC LIMIT 1
连接数据库../datasets/cosql_dataset/database/poker_player/poker_player.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT People_ID FROM poker_player ORDER BY Earnings DESC LIMIT 1
SELECT People_ID FROM poker_player ORDER BY Earnings DESC LIMIT 1
连接数据库../datasets/cosql_dataset/database/poker_player/poker_player.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx3
____________________
SELECT Best_Finish FROM poker_player ORDER BY Earnings DESC LIMIT 1
SELECT Best_Finish FROM poker_player ORDER BY Earnings DESC LIMIT 1
连接数据库../datasets/cosql_dataset/database/poker_player/poker_player.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx4
____________________
SELECT Earnings FROM poker_player ORDER BY Earnings DESC LIMIT 1
SELECT Earnings FROM poker_player order by Earnings desc limit 1
连接数据库../datasets/cosql_dataset/database/poker_player/poker_player.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx1
____________________
SELECT count(*) FROM orchestra
SELECT COUNT ( DISTINCT Orchestra )  FROM orchestra
连接数据库../datasets/cosql_dataset/database/orchestra/orchestra.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
easy pred: SELECT count(*) FROM orchestra
easy gold: SELECT COUNT ( DISTINCT Orchestra )  FROM orchestra

当前idx2
____________________
SELECT count(*) FROM orchestra WHERE orchestra_id NOT IN (SELECT orchestra_id FROM performance)
SELECT COUNT ( Orchestra )  FROM orchestra WHERE Orchestra_ID NOT IN  ( SELECT Orchestra_ID FROM performance ) 
连接数据库../datasets/cosql_dataset/database/orchestra/orchestra.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
extra pred: SELECT count(*) FROM orchestra WHERE orchestra_id NOT IN (SELECT orchestra_id FROM performance)
extra gold: SELECT COUNT ( Orchestra )  FROM orchestra WHERE Orchestra_ID NOT IN  ( SELECT Orchestra_ID FROM performance ) 

当前idx3
____________________
SELECT orchestra_id ,  orchestra FROM orchestra WHERE orchestra_id NOT IN (SELECT orchestra_id FROM performance)
SELECT Orchestra_ID, Orchestra FROM orchestra WHERE Orchestra_ID NOT IN  ( SELECT Orchestra_ID FROM performance ) 
连接数据库../datasets/cosql_dataset/database/orchestra/orchestra.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx1
____________________
SELECT T1.Name ,  T1.Location FROM stadium AS T1 JOIN concert AS T2 ON T1.Stadium_ID  =  T2.Stadium_ID WHERE T2.Year  =  2014 INTERSECT SELECT T1.Name ,  T1.Location FROM stadium AS T1 JOIN concert AS T2 ON T1.Stadium_ID  =  T2.Stadium_ID WHERE T2.Year  =  2015
SELECT T2.name ,  T2.location FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id   =   T2.stadium_id WHERE T1.Year   =   2014 INTERSECT SELECT T2.name ,  T2.location FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id   =   T2.stadium_id WHERE T1.Year   =   2015
连接数据库../datasets/cosql_dataset/database/concert_singer/concert_singer.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT Year FROM concert WHERE concert_Name = "Super bootcamp"
SELECT year from concert where concert_name like "%Super bootcamp%"
连接数据库../datasets/cosql_dataset/database/concert_singer/concert_singer.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:0
medium pred: SELECT Year FROM concert WHERE concert_Name = "Super bootcamp"
medium gold: SELECT year from concert where concert_name like "%Super bootcamp%"

当前idx3
____________________
SELECT Year FROM concert WHERE concert_Name = "Auditions"
SELECT year from concert where concert_name like "%Auditions%"
连接数据库../datasets/cosql_dataset/database/concert_singer/concert_singer.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:0
medium pred: SELECT Year FROM concert WHERE concert_Name = "Auditions"
medium gold: SELECT year from concert where concert_name like "%Auditions%"

当前idx4
____________________
SELECT T1.Name ,  T1.Location FROM stadium AS T1 JOIN concert AS T2 ON T1.Stadium_ID  =  T2.Stadium_ID WHERE T2.concert_Name  =  "Auditions"
SELECT T1.name from stadium as T1 join  concert as T2 on T1.stadium_id  =  T2.stadium_id where T2.concert_name like "%Auditions%"
连接数据库../datasets/cosql_dataset/database/concert_singer/concert_singer.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
hard pred: SELECT T1.Name ,  T1.Location FROM stadium AS T1 JOIN concert AS T2 ON T1.Stadium_ID  =  T2.Stadium_ID WHERE T2.concert_Name  =  "Auditions"
hard gold: SELECT T1.name from stadium as T1 join  concert as T2 on T1.stadium_id  =  T2.stadium_id where T2.concert_name like "%Auditions%"

当前idx>4
____________________
SELECT T1.Name ,  T1.Location FROM stadium AS T1 JOIN concert AS T2 ON T1.Stadium_ID  =  T2.Stadium_ID WHERE T2.Year  =  2014 INTERSECT SELECT T1.Name ,  T1.Location FROM stadium AS T1 JOIN concert AS T2 ON T1.Stadium_ID  =  T2.Stadium_ID WHERE T2.Year  =  2015
SELECT T2.name , T2.location FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.Year  =  2014 or T1.Year  =  2015
连接数据库../datasets/cosql_dataset/database/concert_singer/concert_singer.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
hard pred: SELECT T1.Name ,  T1.Location FROM stadium AS T1 JOIN concert AS T2 ON T1.Stadium_ID  =  T2.Stadium_ID WHERE T2.Year  =  2014 INTERSECT SELECT T1.Name ,  T1.Location FROM stadium AS T1 JOIN concert AS T2 ON T1.Stadium_ID  =  T2.Stadium_ID WHERE T2.Year  =  2015
hard gold: SELECT T2.name , T2.location FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.Year  =  2014 or T1.Year  =  2015

当前idx1
____________________
SELECT count(*) FROM flights AS T1 JOIN airlines AS T2 ON T1.Airline  =  T2.uid WHERE T2.Airline  =  "United Airlines"
SELECT count ( * )  FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T2.Airline   =   T1.uid WHERE T1.Airline   =   "United Airlines"
连接数据库../datasets/cosql_dataset/database/flight_2/flight_2.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT count(distinct DestAirport) FROM flights AS T1 JOIN airlines AS T2 ON T1.Airline  =  T2.uid WHERE T2.Airline  =  "United Airlines"
SELECT count ( distinct T2.DestAirport )  FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T2.Airline   =   T1.uid WHERE T1.Airline   =   "United Airlines"
连接数据库../datasets/cosql_dataset/database/flight_2/flight_2.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx3
____________________
SELECT count(*) FROM flights AS T1 JOIN airlines AS T2 ON T1.Airline  =  T2.uid WHERE T2.Airline  =  "United Airlines" AND T1.DestAirport = "ASY"
SELECT count ( * )  FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T2.Airline   =   T1.uid WHERE T1.Airline   =   "United Airlines" AND T2.DestAirport   =   "ASY"
连接数据库../datasets/cosql_dataset/database/flight_2/flight_2.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx1
____________________
SELECT degree_program_id FROM Student_Enrolment
SELECT degree_program_id from Student_Enrolment
连接数据库../datasets/cosql_dataset/database/student_transcripts_tracking/student_transcripts_tracking.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT semester_id FROM Student_Enrolment
SELECT semester_id from Student_Enrolment
连接数据库../datasets/cosql_dataset/database/student_transcripts_tracking/student_transcripts_tracking.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx3
____________________
SELECT semester_name FROM Semesters
SELECT semester_name from semesters
连接数据库../datasets/cosql_dataset/database/student_transcripts_tracking/student_transcripts_tracking.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx4
____________________
SELECT semester_name ,  semester_id FROM Semesters ORDER BY count(*)
SELECT T1.semester_name ,  T1.semester_id FROM Semesters AS T1 JOIN Student_Enrolment AS T2 ON T1.semester_id   =   T2.semester_id GROUP BY T1.semester_id ORDER BY count ( * )  DESC LIMIT 1
连接数据库../datasets/cosql_dataset/database/student_transcripts_tracking/student_transcripts_tracking.sqlite
执行第一个查询
执行出错: misuse of aggregate: count()
eval_exec:False
exact_score:0
extra pred: SELECT semester_name ,  semester_id FROM Semesters ORDER BY count(*)
extra gold: SELECT T1.semester_name ,  T1.semester_id FROM Semesters AS T1 JOIN Student_Enrolment AS T2 ON T1.semester_id   =   T2.semester_id GROUP BY T1.semester_id ORDER BY count ( * )  DESC LIMIT 1

当前idx1
____________________
SELECT governmentform ,  avg(lifeexpectancy) FROM country GROUP BY governmentform
SELECT GovernmentForm, avg ( LifeExpectancy )  FROM country GROUP BY GovernmentForm
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT governmentform ,  avg(lifeexpectancy) FROM country GROUP BY governmentform HAVING avg(lifeexpectancy)  >  72
SELECT GovernmentForm FROM country GROUP BY GovernmentForm HAVING avg ( LifeExpectancy )   >  72
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
easy pred: SELECT governmentform ,  avg(lifeexpectancy) FROM country GROUP BY governmentform HAVING avg(lifeexpectancy)  >  72
easy gold: SELECT GovernmentForm FROM country GROUP BY GovernmentForm HAVING avg ( LifeExpectancy )   >  72

当前idx3
____________________
SELECT governmentform ,  sum(population) FROM country GROUP BY governmentform HAVING avg(lifeexpectancy)  >  72
SELECT sum ( Population )  ,  GovernmentForm FROM country GROUP BY GovernmentForm HAVING avg ( LifeExpectancy )   >  72
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx1
____________________
SELECT id FROM TV_Channel WHERE id NOT IN (SELECT channel FROM Cartoon WHERE directed_by = "Ben Jones")
SELECT id FROM TV_Channel EXCEPT SELECT channel FROM cartoon WHERE directed_by   =   'Ben Jones'
连接数据库../datasets/cosql_dataset/database/tvshow/tvshow.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:0
hard pred: SELECT id FROM TV_Channel WHERE id NOT IN (SELECT channel FROM Cartoon WHERE directed_by = "Ben Jones")
hard gold: SELECT id FROM TV_Channel EXCEPT SELECT channel FROM cartoon WHERE directed_by   =   'Ben Jones'

当前idx2
____________________
SELECT id FROM TV_Channel WHERE id IN (SELECT channel FROM Cartoon WHERE directed_by = "Ben Jones")
SELECT id FROM TV_Channel where id in  ( SELECT channel FROM cartoon WHERE directed_by   =   'Ben Jones' ) 
连接数据库../datasets/cosql_dataset/database/tvshow/tvshow.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx3
____________________
SELECT title FROM Cartoon WHERE channel IN (SELECT id FROM TV_Channel)
SELECT Title FROM Cartoon where directed_by   =   'Ben Jones'
连接数据库../datasets/cosql_dataset/database/tvshow/tvshow.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
easy pred: SELECT title FROM Cartoon WHERE channel IN (SELECT id FROM TV_Channel)
easy gold: SELECT Title FROM Cartoon where directed_by   =   'Ben Jones'

当前idx1
____________________
SELECT document_id FROM Documents
SELECT document_id FROM Paragraphs
连接数据库../datasets/cosql_dataset/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:False
easy pred: SELECT document_id FROM Documents
easy gold: SELECT document_id FROM Paragraphs

当前idx2
____________________
SELECT document_id ,  count(*) FROM Paragraphs GROUP BY document_id
SELECT document_id ,  count ( * )  FROM Paragraphs GROUP BY document_id
连接数据库../datasets/cosql_dataset/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx3
____________________
SELECT document_id ,  count(*) FROM Paragraphs GROUP BY document_id ORDER BY document_id
SELECT document_id ,  count ( * )  FROM Paragraphs GROUP BY document_id ORDER BY document_id
连接数据库../datasets/cosql_dataset/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx1
____________________
SELECT owner_id, zip_code FROM Owners
SELECT  
owner_id,zip_code from Owners
连接数据库../datasets/cosql_dataset/database/dog_kennels/dog_kennels.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT owner_id, dog_id, cost_of_treatment FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id = T2.owner_id JOIN Treatments AS T3 ON T2.dog_id = T3.dog_id
SELECT T1.owner_id , T2.dog_id ,T3.cost_of_treatment  FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id JOIN Treatments AS T3 ON T2.dog_id  =  T3.dog_id
连接数据库../datasets/cosql_dataset/database/dog_kennels/dog_kennels.sqlite
执行第一个查询
执行出错: ambiguous column name: owner_id
eval_exec:False
exact_score:True
当前idx3
____________________
SELECT T1.first_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id = T2.owner_id JOIN Treatments AS T3 ON T2.dog_id = T3.dog_id ORDER BY T3.cost_of_treatment DESC LIMIT 1
SELECT  T1.first_name,T1.owner_id  FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id JOIN Treatments AS T3 ON T2.dog_id  =  T3.dog_id GROUP BY T1.owner_id ORDER BY sum ( T3.cost_of_treatment )  DESC LIMIT 1
连接数据库../datasets/cosql_dataset/database/dog_kennels/dog_kennels.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
extra pred: SELECT T1.first_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id = T2.owner_id JOIN Treatments AS T3 ON T2.dog_id = T3.dog_id ORDER BY T3.cost_of_treatment DESC LIMIT 1
extra gold: SELECT  T1.first_name,T1.owner_id  FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id JOIN Treatments AS T3 ON T2.dog_id  =  T3.dog_id GROUP BY T1.owner_id ORDER BY sum ( T3.cost_of_treatment )  DESC LIMIT 1

当前idx4
____________________
SELECT T1.first_name, T1.last_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id = T2.owner_id JOIN Treatments AS T3 ON T2.dog_id = T3.dog_id ORDER BY T3.cost_of_treatment DESC LIMIT 1
SELECT last_name  from Owners where first_name = "Jaclyn"
连接数据库../datasets/cosql_dataset/database/dog_kennels/dog_kennels.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
easy pred: SELECT T1.first_name, T1.last_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id = T2.owner_id JOIN Treatments AS T3 ON T2.dog_id = T3.dog_id ORDER BY T3.cost_of_treatment DESC LIMIT 1
easy gold: SELECT last_name  from Owners where first_name = "Jaclyn"

当前idx>4
____________________
SELECT T1.owner_id, T1.zip_code FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id = T2.owner_id JOIN Treatments AS T3 ON T2.dog_id = T3.dog_id ORDER BY T3.cost_of_treatment DESC LIMIT 1
SELECT T1.owner_id , T1.zip_code FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id JOIN Treatments AS T3 ON T2.dog_id  =  T3.dog_id GROUP BY T1.owner_id ORDER BY sum ( T3.cost_of_treatment )  DESC LIMIT 1
连接数据库../datasets/cosql_dataset/database/dog_kennels/dog_kennels.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:0
extra pred: SELECT T1.owner_id, T1.zip_code FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id = T2.owner_id JOIN Treatments AS T3 ON T2.dog_id = T3.dog_id ORDER BY T3.cost_of_treatment DESC LIMIT 1
extra gold: SELECT T1.owner_id , T1.zip_code FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id JOIN Treatments AS T3 ON T2.dog_id  =  T3.dog_id GROUP BY T1.owner_id ORDER BY sum ( T3.cost_of_treatment )  DESC LIMIT 1

当前idx1
____________________
SELECT FlightNo FROM flights
SELECT FlightNo FROM Flights
连接数据库../datasets/cosql_dataset/database/flight_2/flight_2.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT FlightNo, DestAirport FROM flights
SELECT FlightNo,DestAirport FROM Flights
连接数据库../datasets/cosql_dataset/database/flight_2/flight_2.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx3
____________________
SELECT COUNT(*) FROM flights WHERE DestAirport LIKE "%Aberdeen%" OR DestAirport LIKE "%Abilene%"
SELECT count ( * )  FROM Flights AS T1 JOIN Airports AS T2 ON T1.DestAirport   =   T2.AirportCode WHERE T2.city   =   "Aberdeen" OR T2.city   =   "Abilene"
连接数据库../datasets/cosql_dataset/database/flight_2/flight_2.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:0
hard pred: SELECT COUNT(*) FROM flights WHERE DestAirport LIKE "%Aberdeen%" OR DestAirport LIKE "%Abilene%"
hard gold: SELECT count ( * )  FROM Flights AS T1 JOIN Airports AS T2 ON T1.DestAirport   =   T2.AirportCode WHERE T2.city   =   "Aberdeen" OR T2.city   =   "Abilene"

当前idx4
____________________
SELECT City FROM airports GROUP BY City ORDER BY COUNT(*) DESC LIMIT 1
SELECT DESTAIRPORT FROM Flights GROUP BY DESTAIRPORT order by count ( * )  desc limit 1
连接数据库../datasets/cosql_dataset/database/flight_2/flight_2.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
hard pred: SELECT City FROM airports GROUP BY City ORDER BY COUNT(*) DESC LIMIT 1
hard gold: SELECT DESTAIRPORT FROM Flights GROUP BY DESTAIRPORT order by count ( * )  desc limit 1

当前idx1
____________________
SELECT count(*) FROM flights AS T1 JOIN airports AS T2 ON T1.SourceAirport  =  T2.AirportCode WHERE T2.City  =  "Aberdeen"
SELECT count ( * )  FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport   =   T2.AirportCode WHERE T2.City   =   "Aberdeen"
连接数据库../datasets/cosql_dataset/database/flight_2/flight_2.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT count(*) FROM flights AS T1 JOIN airports AS T2 ON T1.DestAirport  =  T2.AirportCode WHERE T2.City  =  "Aberdeen"
SELECT count ( * )  FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.sourceAirport   =   T2.AirportCode WHERE T2.City   =   "Aberdeen"
连接数据库../datasets/cosql_dataset/database/flight_2/flight_2.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx1
____________________
SELECT Name FROM country WHERE Continent  =  "Africa" AND Population  <  (SELECT min(Population) FROM country WHERE Continent  =  "Asia")
SELECT Name FROM country WHERE Continent   =   "Africa"  AND population  <   ( SELECT max ( population )  FROM country WHERE Continent   =   "Asia" ) 
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
extra pred: SELECT Name FROM country WHERE Continent  =  "Africa" AND Population  <  (SELECT min(Population) FROM country WHERE Continent  =  "Asia")
extra gold: SELECT Name FROM country WHERE Continent   =   "Africa"  AND population  <   ( SELECT max ( population )  FROM country WHERE Continent   =   "Asia" ) 

当前idx2
____________________
SELECT Continent FROM country WHERE Name = "Aruba"
SELECT continent FROM country WHERE name  =  "Aruba"
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx3
____________________
SELECT LocalName FROM country WHERE Name = "Angola"
SELECT localname FROM country WHERE name  =  "Angola"
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx4
____________________
SELECT SurfaceArea FROM country WHERE Name = "Afghanistan"
SELECT SurfaceArea FROM country WHERE name  =  "Afghanistan"
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx>4
____________________
SELECT Code FROM country WHERE Name = "Aruba"
SELECT Code FROM country WHERE name  =  "Aruba"
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx1
____________________
SELECT first_name, last_name FROM Owners UNION SELECT first_name, last_name FROM Professionals EXCEPT SELECT name FROM Dogs
SELECT first_name FROM Professionals UNION SELECT first_name FROM Owners EXCEPT SELECT name FROM Dogs
连接数据库../datasets/cosql_dataset/database/dog_kennels/dog_kennels.sqlite
执行第一个查询
执行出错: SELECTs to the left and right of EXCEPT do not have the same number of result columns
eval_exec:False
exact_score:0
hard pred: SELECT first_name, last_name FROM Owners UNION SELECT first_name, last_name FROM Professionals EXCEPT SELECT name FROM Dogs
hard gold: SELECT first_name FROM Professionals UNION SELECT first_name FROM Owners EXCEPT SELECT name FROM Dogs

当前idx2
____________________
SELECT email_address FROM Professionals WHERE first_name = "Taryn"
SELECT email_address FROM Professionals WHERE First_Name  =  "Taryn"
连接数据库../datasets/cosql_dataset/database/dog_kennels/dog_kennels.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx3
____________________
SELECT state FROM Professionals WHERE first_name = "Jayson"
SELECT state FROM Professionals WHERE First_Name  =  "Jayson"
连接数据库../datasets/cosql_dataset/database/dog_kennels/dog_kennels.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx1
eval_err_num:36
____________________
SELECT DISTINCT T1.Maker FROM car_makers AS T1 JOIN cars_data AS T2 ON T1.Id  =  T2.MakeId WHERE T2.Year  =  1970
SELECT DISTINCT T1.Maker FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id   =   T2.Maker JOIN CAR_NAMES AS T3 ON T2.model   =   T3.model JOIN CARS_DATA AS T4 ON T3.MakeId   =   T4.id WHERE T4.year   =   '1970'
连接数据库../datasets/cosql_dataset/database/car_1/car_1.sqlite
执行第一个查询
执行出错: no such column: T2.MakeId
eval_exec:False
exact_score:0
extra pred: SELECT DISTINCT T1.Maker FROM car_makers AS T1 JOIN cars_data AS T2 ON T1.Id  =  T2.MakeId WHERE T2.Year  =  1970
extra gold: SELECT DISTINCT T1.Maker FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id   =   T2.Maker JOIN CAR_NAMES AS T3 ON T2.model   =   T3.model JOIN CARS_DATA AS T4 ON T3.MakeId   =   T4.id WHERE T4.year   =   '1970'

当前idx2
eval_err_num:37
____________________
SELECT DISTINCT T1.Model ,  T1.Make FROM car_makers AS T1 JOIN cars_data AS T2 ON T1.Id  =  T2.MakeId WHERE T2.Year  =  1970
SELECT T3.model, T3.make FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id   =   T2.Maker JOIN CAR_NAMES AS T3 ON T2.model   =   T3.model JOIN CARS_DATA AS T4 ON T3.MakeId   =   T4.id WHERE T4.year   =   '1970'
连接数据库../datasets/cosql_dataset/database/car_1/car_1.sqlite
执行第一个查询
执行出错: no such column: T1.Model
eval_exec:False
exact_score:0
extra pred: SELECT DISTINCT T1.Model ,  T1.Make FROM car_makers AS T1 JOIN cars_data AS T2 ON T1.Id  =  T2.MakeId WHERE T2.Year  =  1970
extra gold: SELECT T3.model, T3.make FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id   =   T2.Maker JOIN CAR_NAMES AS T3 ON T2.model   =   T3.model JOIN CARS_DATA AS T4 ON T3.MakeId   =   T4.id WHERE T4.year   =   '1970'

当前idx3
eval_err_num:38
____________________
SELECT T1.FullName FROM car_makers AS T1 JOIN cars_data AS T2 ON T1.Id  =  T2.MakeId WHERE T2.Year  =  1970 ORDER BY T2.Weight DESC LIMIT 1
SELECT T1.Fullname FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker JOIN CAR_NAMES AS T3 ON T2.model  =  T3.model JOIN CARS_DATA AS T4 ON T3.MakeId  =  T4.id WHERE T4.year  =  '1970' ORDER BY T4.weight DESC limit 1
连接数据库../datasets/cosql_dataset/database/car_1/car_1.sqlite
执行第一个查询
执行出错: no such column: T2.MakeId
eval_exec:False
exact_score:0
extra pred: SELECT T1.FullName FROM car_makers AS T1 JOIN cars_data AS T2 ON T1.Id  =  T2.MakeId WHERE T2.Year  =  1970 ORDER BY T2.Weight DESC LIMIT 1
extra gold: SELECT T1.Fullname FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker JOIN CAR_NAMES AS T3 ON T2.model  =  T3.model JOIN CARS_DATA AS T4 ON T3.MakeId  =  T4.id WHERE T4.year  =  '1970' ORDER BY T4.weight DESC limit 1

当前idx1
____________________
SELECT id,series_name FROM TV_Channel
SELECT channel, id FROM cartoon
连接数据库../datasets/cosql_dataset/database/tvshow/tvshow.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT id,series_name FROM TV_Channel
medium gold: SELECT channel, id FROM cartoon

当前idx2
____________________
SELECT id,series_name FROM TV_Channel WHERE Language != "Italian"
SELECT series_name FROM TV_Channel EXCEPT SELECT series_name FROM TV_channel WHERE language  =  'Italian'
连接数据库../datasets/cosql_dataset/database/tvshow/tvshow.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
hard pred: SELECT id,series_name FROM TV_Channel WHERE Language != "Italian"
hard gold: SELECT series_name FROM TV_Channel EXCEPT SELECT series_name FROM TV_channel WHERE language  =  'Italian'

当前idx3
____________________
SELECT id FROM TV_Channel WHERE id NOT IN (SELECT Channel FROM Cartoon WHERE Directed_by = "Ben Jones")
SELECT id FROM TV_Channel EXCEPT SELECT channel FROM cartoon WHERE directed_by  =  'Ben Jones'
连接数据库../datasets/cosql_dataset/database/tvshow/tvshow.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:0
hard pred: SELECT id FROM TV_Channel WHERE id NOT IN (SELECT Channel FROM Cartoon WHERE Directed_by = "Ben Jones")
hard gold: SELECT id FROM TV_Channel EXCEPT SELECT channel FROM cartoon WHERE directed_by  =  'Ben Jones'

当前idx1
____________________
SELECT avg(Number_products) FROM shop
select avg ( Number_products )  from shop
连接数据库../datasets/cosql_dataset/database/employee_hire_evaluation/employee_hire_evaluation.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT name FROM shop WHERE Number_products  >  6685
select Name from shop where Number_products > 6685
连接数据库../datasets/cosql_dataset/database/employee_hire_evaluation/employee_hire_evaluation.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx3
____________________
SELECT count(*) FROM shop
select count ( * )  from shop
连接数据库../datasets/cosql_dataset/database/employee_hire_evaluation/employee_hire_evaluation.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx1
____________________
SELECT count(*) FROM flights
SELECT count ( * )  FROM flights
连接数据库../datasets/cosql_dataset/database/flight_2/flight_2.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT T1.City FROM airports AS T1 JOIN flights AS T2 ON T1.AirportCode  =  T2.SourceAirport GROUP BY T1.City ORDER BY count(*) ASC LIMIT 1
SELECT T1.City FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode   =   T2.SourceAirport GROUP BY T1.City ORDER BY count ( * )  ASC LIMIT 1
连接数据库../datasets/cosql_dataset/database/flight_2/flight_2.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx3
____________________
SELECT FlightNo FROM flights WHERE SourceAirport = "APG"
SELECT FlightNo FROM flights WHERE SourceAirport = "APG"
连接数据库../datasets/cosql_dataset/database/flight_2/flight_2.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx4
____________________
SELECT T1.AirportName FROM airports AS T1 JOIN flights AS T2 ON T1.AirportCode  =  T2.SourceAirport WHERE T1.AirportCode = "DYS"
SELECT AirportName FROM airports WHERE AirportCode = "DYS"
连接数据库../datasets/cosql_dataset/database/flight_2/flight_2.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:False
easy pred: SELECT T1.AirportName FROM airports AS T1 JOIN flights AS T2 ON T1.AirportCode  =  T2.SourceAirport WHERE T1.AirportCode = "DYS"
easy gold: SELECT AirportName FROM airports WHERE AirportCode = "DYS"

当前idx>4
____________________
SELECT T1.City FROM airports AS T1 JOIN flights AS T2 ON T1.AirportCode  =  T2.SourceAirport WHERE T1.AirportCode = "ABR"
SELECT CITY FROM airports WHERE AirportCode = "ABR"
连接数据库../datasets/cosql_dataset/database/flight_2/flight_2.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:False
easy pred: SELECT T1.City FROM airports AS T1 JOIN flights AS T2 ON T1.AirportCode  =  T2.SourceAirport WHERE T1.AirportCode = "ABR"
easy gold: SELECT CITY FROM airports WHERE AirportCode = "ABR"

当前idx1
____________________
SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  'English' OR T2.Language  =  'Dutch'
SELECT * FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code   =   T2.CountryCode WHERE T2.Language   =   "English" AND IsOfficial   =   "T" UNION SELECT * FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code   =   T2.CountryCode WHERE T2.Language   =   "Dutch" AND IsOfficial   =   "T"
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
extra pred: SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  'English' OR T2.Language  =  'Dutch'
extra gold: SELECT * FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code   =   T2.CountryCode WHERE T2.Language   =   "English" AND IsOfficial   =   "T" UNION SELECT * FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code   =   T2.CountryCode WHERE T2.Language   =   "Dutch" AND IsOfficial   =   "T"

当前idx2
____________________
SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  'Dutch'
SELECT T2.language FROM country as T1 join countrylanguage as T2 on T1.code  =  T2.countrycode where T1.name  =  "Belgium" and T2.isofficial  =  "T"
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  'Dutch'
medium gold: SELECT T2.language FROM country as T1 join countrylanguage as T2 on T1.code  =  T2.countrycode where T1.name  =  "Belgium" and T2.isofficial  =  "T"

当前idx3
____________________
SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  'Arabic'
SELECT T1.name FROM country as T1 join countrylanguage as T2 on T1.code  =  T2.countrycode where T2.language  =  "Arabic"
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx4
____________________
SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  'Arabic' OR T2.Language  =  'English'
SELECT T2.language FROM country as T1 join countrylanguage as T2 on T1.code  =  T2.countrycode where T1.name  =  "Egypt"
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  'Arabic' OR T2.Language  =  'English'
medium gold: SELECT T2.language FROM country as T1 join countrylanguage as T2 on T1.code  =  T2.countrycode where T1.name  =  "Egypt"

当前idx>4
____________________
SELECT count(*) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  'Arabic'
SELECT count ( T1.name )  FROM country as T1 join countrylanguage as T2 on T1.code  =  T2.countrycode where T2.Language  =  "Arabic" and T2.isOfficial  =  "T"
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT count(*) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  'Arabic'
medium gold: SELECT count ( T1.name )  FROM country as T1 join countrylanguage as T2 on T1.code  =  T2.countrycode where T2.Language  =  "Arabic" and T2.isOfficial  =  "T"

当前idx>4
____________________
SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  'Arabic'
SELECT T1.name FROM country as T1 join countrylanguage as T2 on T1.code  =  T2.countrycode where T2.Language  =  "Arabic" and T2.isOfficial  =  "T"
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  'Arabic'
medium gold: SELECT T1.name FROM country as T1 join countrylanguage as T2 on T1.code  =  T2.countrycode where T2.Language  =  "Arabic" and T2.isOfficial  =  "T"

当前idx1
____________________
SELECT Population FROM country WHERE Continent = "Africa"
SELECT name,population FROM country WHERE Continent   =   "Africa"
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT Population FROM country WHERE Continent = "Africa"
medium gold: SELECT name,population FROM country WHERE Continent   =   "Africa"

当前idx2
____________________
SELECT Name, Population FROM country WHERE Continent = "Asia"
SELECT name,population FROM country WHERE Continent   =   "Asia"
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx3
____________________
SELECT Name FROM country WHERE Continent = "Asia" AND Population > (SELECT MAX(Population) FROM country WHERE Continent = "Africa")
SELECT Name FROM country WHERE Continent   =   "Asia"  AND population  >   ( SELECT min ( population )  FROM country WHERE Continent   =   "Africa" ) 
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
extra pred: SELECT Name FROM country WHERE Continent = "Asia" AND Population > (SELECT MAX(Population) FROM country WHERE Continent = "Africa")
extra gold: SELECT Name FROM country WHERE Continent   =   "Asia"  AND population  >   ( SELECT min ( population )  FROM country WHERE Continent   =   "Africa" ) 

当前idx4
____________________
SELECT Population FROM country WHERE Continent = "Asia" AND Population > (SELECT MAX(Population) FROM country WHERE Continent = "Africa")
SELECT Name,population FROM country WHERE Continent   =   "Asia"  AND population  >   ( SELECT min ( population )  FROM country WHERE Continent   =   "Africa" ) 
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
extra pred: SELECT Population FROM country WHERE Continent = "Asia" AND Population > (SELECT MAX(Population) FROM country WHERE Continent = "Africa")
extra gold: SELECT Name,population FROM country WHERE Continent   =   "Asia"  AND population  >   ( SELECT min ( population )  FROM country WHERE Continent   =   "Africa" ) 

当前idx>4
____________________
SELECT GovernmentForm FROM country WHERE Continent = "Asia" AND Population > (SELECT MAX(Population) FROM country WHERE Continent = "Africa")
SELECT Name,GovernmentForm FROM country WHERE Continent   =   "Asia"  AND population  >   ( SELECT min ( population )  FROM country WHERE Continent   =   "Africa" ) 
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
extra pred: SELECT GovernmentForm FROM country WHERE Continent = "Asia" AND Population > (SELECT MAX(Population) FROM country WHERE Continent = "Africa")
extra gold: SELECT Name,GovernmentForm FROM country WHERE Continent   =   "Asia"  AND population  >   ( SELECT min ( population )  FROM country WHERE Continent   =   "Africa" ) 

当前idx1
____________________
SELECT Name FROM country WHERE Continent  =  "Asia" ORDER BY LifeExpectancy ASC LIMIT 1
SELECT Name FROM country WHERE Continent   =   "Asia" ORDER BY LifeExpectancy LIMIT 1
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT Name FROM country WHERE Continent  =  "Africa" ORDER BY LifeExpectancy ASC LIMIT 1
SELECT Name FROM country WHERE Continent   =   "Africa" ORDER BY LifeExpectancy LIMIT 1
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx3
____________________
SELECT GNP FROM country WHERE Name  =  "Afghanistan"
SELECT GNP FROM country WHERE name = "Afghanistan"
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx4
____________________
SELECT Population FROM country WHERE Name  =  "Afghanistan"
SELECT Population FROM country WHERE name = "Afghanistan"
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx1
____________________
SELECT Earnings FROM poker_player WHERE Best_Finish = (SELECT max(Best_Finish) FROM poker_player)
SELECT Earnings FROM poker_player
连接数据库../datasets/cosql_dataset/database/poker_player/poker_player.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
easy pred: SELECT Earnings FROM poker_player WHERE Best_Finish = (SELECT max(Best_Finish) FROM poker_player)
easy gold: SELECT Earnings FROM poker_player

当前idx2
____________________
SELECT Earnings FROM poker_player ORDER BY Earnings DESC
SELECT Earnings FROM poker_player order by Earnings desc
连接数据库../datasets/cosql_dataset/database/poker_player/poker_player.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx3
____________________
SELECT Final_Table_Made FROM poker_player ORDER BY Earnings ASC LIMIT 1
SELECT Final_Table_Made FROM poker_player order by Earnings asc limit 1
连接数据库../datasets/cosql_dataset/database/poker_player/poker_player.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx4
____________________
SELECT Final_Table_Made FROM poker_player ORDER BY Earnings DESC LIMIT 1
SELECT Final_Table_Made FROM poker_player order by Earnings desc limit 1
连接数据库../datasets/cosql_dataset/database/poker_player/poker_player.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx1
____________________
SELECT template_id, document_id FROM documents
SELECT template_id FROM Documents
连接数据库../datasets/cosql_dataset/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
easy pred: SELECT template_id, document_id FROM documents
easy gold: SELECT template_id FROM Documents

当前idx2
____________________
SELECT template_id, document_id FROM documents
SELECT template_id ,Document_ID FROM Documents
连接数据库../datasets/cosql_dataset/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx3
____________________
SELECT template_id FROM templates WHERE template_id NOT IN (SELECT template_id FROM documents)
SELECT template_id FROM Templates EXCEPT SELECT template_id FROM Documents
连接数据库../datasets/cosql_dataset/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:0
hard pred: SELECT template_id FROM templates WHERE template_id NOT IN (SELECT template_id FROM documents)
hard gold: SELECT template_id FROM Templates EXCEPT SELECT template_id FROM Documents

当前idx4
____________________
SELECT template_id, template_type_code FROM templates WHERE template_id NOT IN (SELECT template_id FROM documents)
SELECT T1.template_id ,T1.Template_Type_Code FROM Templates as T1 join Documents as T2 on T1.Template_ID = T2.Template_ID
连接数据库../datasets/cosql_dataset/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT template_id, template_type_code FROM templates WHERE template_id NOT IN (SELECT template_id FROM documents)
medium gold: SELECT T1.template_id ,T1.Template_Type_Code FROM Templates as T1 join Documents as T2 on T1.Template_ID = T2.Template_ID

当前idx1
____________________
SELECT count(*) FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id  =  T2.dog_id
SELECT count ( * )  FROM Dogs WHERE dog_id IN  (  SELECT dog_id FROM Treatments  ) 
连接数据库../datasets/cosql_dataset/database/dog_kennels/dog_kennels.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
hard pred: SELECT count(*) FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id  =  T2.dog_id
hard gold: SELECT count ( * )  FROM Dogs WHERE dog_id IN  (  SELECT dog_id FROM Treatments  ) 

当前idx2
____________________
SELECT min(age) FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id  =  T2.dog_id
SELECT min ( age )  FROM Dogs WHERE dog_id IN  (  SELECT dog_id FROM Treatments  ) 
连接数据库../datasets/cosql_dataset/database/dog_kennels/dog_kennels.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:0
hard pred: SELECT min(age) FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id  =  T2.dog_id
hard gold: SELECT min ( age )  FROM Dogs WHERE dog_id IN  (  SELECT dog_id FROM Treatments  ) 

当前idx3
____________________
SELECT max(age) FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id  =  T2.dog_id
SELECT max ( age )  FROM Dogs WHERE dog_id IN  (  SELECT dog_id FROM Treatments  ) 
连接数据库../datasets/cosql_dataset/database/dog_kennels/dog_kennels.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:0
hard pred: SELECT max(age) FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id  =  T2.dog_id
hard gold: SELECT max ( age )  FROM Dogs WHERE dog_id IN  (  SELECT dog_id FROM Treatments  ) 

当前idx4
____________________
SELECT avg(age) FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id  =  T2.dog_id
SELECT avg ( age )  FROM Dogs WHERE dog_id IN  (  SELECT dog_id FROM Treatments  ) 
连接数据库../datasets/cosql_dataset/database/dog_kennels/dog_kennels.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
hard pred: SELECT avg(age) FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id  =  T2.dog_id
hard gold: SELECT avg ( age )  FROM Dogs WHERE dog_id IN  (  SELECT dog_id FROM Treatments  ) 

当前idx1
____________________
SELECT count(distinct semester_name) FROM Semesters
SELECT distinct semester_name FROM Semesters
连接数据库../datasets/cosql_dataset/database/student_transcripts_tracking/student_transcripts_tracking.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
easy pred: SELECT count(distinct semester_name) FROM Semesters
easy gold: SELECT distinct semester_name FROM Semesters

当前idx2
____________________
SELECT semester_name FROM Semesters WHERE semester_id NOT IN (SELECT semester_id FROM Student_Enrolment)
SELECT semester_name FROM Semesters WHERE semester_id NOT IN (  SELECT semester_id FROM Student_Enrolment  ) 
连接数据库../datasets/cosql_dataset/database/student_transcripts_tracking/student_transcripts_tracking.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx3
____________________
SELECT semester_id, semester_name, semester_description FROM Semesters WHERE semester_id NOT IN (SELECT semester_id FROM Student_Enrolment)
SELECT semester_id,semester_name,semester_description FROM Semesters WHERE semester_id NOT IN (  SELECT semester_id FROM Student_Enrolment  ) 
连接数据库../datasets/cosql_dataset/database/student_transcripts_tracking/student_transcripts_tracking.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx1
____________________
SELECT count(*) FROM Student WHERE sex  =  "F"
SELECT count ( * ) FROM student WHERE Sex = "F"
连接数据库../datasets/cosql_dataset/database/pets_1/pets_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT fname ,  lname FROM Student WHERE age  =  (SELECT min(age) FROM Student)
SELECT LName,Fname  FROM student order  by  Age  limit 1
连接数据库../datasets/cosql_dataset/database/pets_1/pets_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:0
medium pred: SELECT fname ,  lname FROM Student WHERE age  =  (SELECT min(age) FROM Student)
medium gold: SELECT LName,Fname  FROM student order  by  Age  limit 1

当前idx3
____________________
SELECT avg(age) FROM Student WHERE StuID NOT IN (SELECT StuID FROM Has_Pet)
SELECT avg ( age )  FROM student WHERE stuid NOT IN  ( SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid ) 
连接数据库../datasets/cosql_dataset/database/pets_1/pets_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:0
extra pred: SELECT avg(age) FROM Student WHERE StuID NOT IN (SELECT StuID FROM Has_Pet)
extra gold: SELECT avg ( age )  FROM student WHERE stuid NOT IN  ( SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid ) 

当前idx4
____________________
SELECT city_code FROM Student WHERE StuID = 1003
SELECT city_code  FROM student WHERE 
StuID = 1003
连接数据库../datasets/cosql_dataset/database/pets_1/pets_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx1
____________________
SELECT DISTINCT T1.Country FROM TV_Channel AS T1 JOIN Cartoon AS T2 ON T1.id  =  T2.Channel WHERE T2.Written_by  =  "Todd Casey"
SELECT T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id  =  T2.Channel WHERE T2.written_by   =   'Todd Casey'
连接数据库../datasets/cosql_dataset/database/tvshow/tvshow.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT DISTINCT T2.Title FROM TV_Channel AS T1 JOIN Cartoon AS T2 ON T1.id  =  T2.Channel WHERE T2.Written_by  =  "Todd Casey"
SELECT title FROM cartoon  WHERE written_by   =   'Todd Casey'
连接数据库../datasets/cosql_dataset/database/tvshow/tvshow.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:False
easy pred: SELECT DISTINCT T2.Title FROM TV_Channel AS T1 JOIN Cartoon AS T2 ON T1.id  =  T2.Channel WHERE T2.Written_by  =  "Todd Casey"
easy gold: SELECT title FROM cartoon  WHERE written_by   =   'Todd Casey'

当前idx3
____________________
SELECT DISTINCT T2.Directed_by FROM TV_Channel AS T1 JOIN Cartoon AS T2 ON T1.id  =  T2.Channel WHERE T2.Title  =  "Enter the Outsiders"
SELECT directed_by FROM cartoon WHERE title  =  "Enter the Outsiders!"
连接数据库../datasets/cosql_dataset/database/tvshow/tvshow.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:False
easy pred: SELECT DISTINCT T2.Directed_by FROM TV_Channel AS T1 JOIN Cartoon AS T2 ON T1.id  =  T2.Channel WHERE T2.Title  =  "Enter the Outsiders"
easy gold: SELECT directed_by FROM cartoon WHERE title  =  "Enter the Outsiders!"

当前idx1
____________________
SELECT count(*) FROM countrylanguage
SELECT count ( distinct language )  from countrylanguage
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
easy pred: SELECT count(*) FROM countrylanguage
easy gold: SELECT count ( distinct language )  from countrylanguage

当前idx2
____________________
SELECT population FROM country WHERE Name = "Aruba"
SELECT population from country where name  =  "Aruba"
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx3
____________________
SELECT GNPOld FROM country WHERE Name = "Afghanistan"
SELECT GNPOLD from country where name  =  "Afghanistan"
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx1
____________________
SELECT country_code FROM players GROUP BY country_code HAVING count(*)  >  50
SELECT country_code FROM players GROUP BY country_code HAVING count ( * )   >  50
连接数据库../datasets/cosql_dataset/database/wta_1/wta_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT country_code FROM players GROUP BY country_code HAVING count(*)  <  40
SELECT country_code FROM players GROUP BY country_code HAVING count ( * )   <  40
连接数据库../datasets/cosql_dataset/database/wta_1/wta_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx3
____________________
SELECT first_name, last_name FROM players WHERE country_code = "AHO"
SELECT first_name,last_name FROM players where country_code = 'AHO'
连接数据库../datasets/cosql_dataset/database/wta_1/wta_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx4
____________________
SELECT player_id FROM players WHERE country_code = "AHO"
SELECT player_id FROM players where country_code = 'AHO'
连接数据库../datasets/cosql_dataset/database/wta_1/wta_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx>4
____________________
SELECT hand FROM players WHERE player_id = 206449
SELECT hand FROM players where player_id = 206449
连接数据库../datasets/cosql_dataset/database/wta_1/wta_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx>4
____________________
SELECT count(*) FROM players WHERE hand = (SELECT hand FROM players WHERE player_id = 206449)
SELECT count ( * )  FROM players where hand = 'U'
连接数据库../datasets/cosql_dataset/database/wta_1/wta_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:0
easy pred: SELECT count(*) FROM players WHERE hand = (SELECT hand FROM players WHERE player_id = 206449)
easy gold: SELECT count ( * )  FROM players where hand = 'U'

当前idx1
____________________
SELECT name FROM battle WHERE id NOT IN (SELECT lost_in_battle FROM ship WHERE location = 'English Channel')
SELECT name FROM battle EXCEPT SELECT T1.name FROM battle AS T1 JOIN ship AS T2 ON T1.id   =   T2.lost_in_battle WHERE T2.location   =   'English Channel'
连接数据库../datasets/cosql_dataset/database/battle_death/battle_death.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
hard pred: SELECT name FROM battle WHERE id NOT IN (SELECT lost_in_battle FROM ship WHERE location = 'English Channel')
hard gold: SELECT name FROM battle EXCEPT SELECT T1.name FROM battle AS T1 JOIN ship AS T2 ON T1.id   =   T2.lost_in_battle WHERE T2.location   =   'English Channel'

当前idx2
____________________
SELECT result FROM battle WHERE id NOT IN (SELECT lost_in_battle FROM ship WHERE location = 'English Channel')
SELECT RESULT  FROM battle where name not in  ( SELECT T1.name FROM battle AS T1 JOIN ship AS T2 ON T1.id   =   T2.lost_in_battle WHERE T2.location   =   'English Channel' ) 
连接数据库../datasets/cosql_dataset/database/battle_death/battle_death.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:0
hard pred: SELECT result FROM battle WHERE id NOT IN (SELECT lost_in_battle FROM ship WHERE location = 'English Channel')
hard gold: SELECT RESULT  FROM battle where name not in  ( SELECT T1.name FROM battle AS T1 JOIN ship AS T2 ON T1.id   =   T2.lost_in_battle WHERE T2.location   =   'English Channel' ) 

当前idx3
____________________
SELECT bulgarian_commander FROM battle WHERE id NOT IN (SELECT lost_in_battle FROM ship WHERE location = 'English Channel')
SELECT bulgarian_commander FROM battle where name not in  ( SELECT T1.name FROM battle AS T1 JOIN ship AS T2 ON T1.id   =   T2.lost_in_battle WHERE T2.location   =   'English Channel' ) 
连接数据库../datasets/cosql_dataset/database/battle_death/battle_death.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:0
hard pred: SELECT bulgarian_commander FROM battle WHERE id NOT IN (SELECT lost_in_battle FROM ship WHERE location = 'English Channel')
hard gold: SELECT bulgarian_commander FROM battle where name not in  ( SELECT T1.name FROM battle AS T1 JOIN ship AS T2 ON T1.id   =   T2.lost_in_battle WHERE T2.location   =   'English Channel' ) 

当前idx4
____________________
SELECT date FROM battle WHERE id NOT IN (SELECT lost_in_battle FROM ship WHERE location = 'English Channel')
SELECT date FROM battle where name not in  ( SELECT T1.name FROM battle AS T1 JOIN ship AS T2 ON T1.id   =   T2.lost_in_battle WHERE T2.location   =   'English Channel' ) 
连接数据库../datasets/cosql_dataset/database/battle_death/battle_death.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:0
hard pred: SELECT date FROM battle WHERE id NOT IN (SELECT lost_in_battle FROM ship WHERE location = 'English Channel')
hard gold: SELECT date FROM battle where name not in  ( SELECT T1.name FROM battle AS T1 JOIN ship AS T2 ON T1.id   =   T2.lost_in_battle WHERE T2.location   =   'English Channel' ) 

当前idx>4
____________________
SELECT latin_commander FROM battle WHERE id NOT IN (SELECT lost_in_battle FROM ship WHERE location = 'English Channel')
SELECT  latin_commander  FROM battle where name not in  ( SELECT T1.name FROM battle AS T1 JOIN ship AS T2 ON T1.id   =   T2.lost_in_battle WHERE T2.location   =   'English Channel' ) 
连接数据库../datasets/cosql_dataset/database/battle_death/battle_death.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:0
hard pred: SELECT latin_commander FROM battle WHERE id NOT IN (SELECT lost_in_battle FROM ship WHERE location = 'English Channel')
hard gold: SELECT  latin_commander  FROM battle where name not in  ( SELECT T1.name FROM battle AS T1 JOIN ship AS T2 ON T1.id   =   T2.lost_in_battle WHERE T2.location   =   'English Channel' ) 

当前idx1
____________________
SELECT count(*) FROM shop
SELECT COUNT ( * )  FROM shop
连接数据库../datasets/cosql_dataset/database/employee_hire_evaluation/employee_hire_evaluation.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT max(Number_products) FROM shop
SELECT MAX ( Number_products )  FROM shop
连接数据库../datasets/cosql_dataset/database/employee_hire_evaluation/employee_hire_evaluation.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx3
____________________
SELECT min(Number_products) FROM shop
SELECT MIN ( Number_products )  FROM shop
连接数据库../datasets/cosql_dataset/database/employee_hire_evaluation/employee_hire_evaluation.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx1
____________________
SELECT breed_code FROM Dogs GROUP BY breed_code ORDER BY count(*) DESC LIMIT 1
SELECT T1.breed_name FROM Breeds AS T1 JOIN Dogs AS T2 ON T1.breed_code   =   T2.breed_code GROUP BY T1.breed_name ORDER BY count ( * )  DESC LIMIT 1
连接数据库../datasets/cosql_dataset/database/dog_kennels/dog_kennels.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
extra pred: SELECT breed_code FROM Dogs GROUP BY breed_code ORDER BY count(*) DESC LIMIT 1
extra gold: SELECT T1.breed_name FROM Breeds AS T1 JOIN Dogs AS T2 ON T1.breed_code   =   T2.breed_code GROUP BY T1.breed_name ORDER BY count ( * )  DESC LIMIT 1

当前idx2
____________________
SELECT count(*) FROM Dogs WHERE breed_code = "Bulldog"
SELECT count ( * )  FROM Breeds AS T1 JOIN Dogs AS T2 ON T1.breed_code   =   T2.breed_code where T1.breed_name  =  "Bulldog"
连接数据库../datasets/cosql_dataset/database/dog_kennels/dog_kennels.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT count(*) FROM Dogs WHERE breed_code = "Bulldog"
medium gold: SELECT count ( * )  FROM Breeds AS T1 JOIN Dogs AS T2 ON T1.breed_code   =   T2.breed_code where T1.breed_name  =  "Bulldog"

当前idx1
____________________
SELECT T1.Fname FROM student AS T1 JOIN has_pet AS T2 ON T1.StuID  =  T2.StuID JOIN pets AS T3 ON T2.PetID  =  T3.PetID WHERE T3.PetType  =  "cat"
SELECT T1.Fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid   =   T2.stuid JOIN pets AS T3 ON T3.petid   =   T2.petid WHERE T3.pettype   =   'dog'
连接数据库../datasets/cosql_dataset/database/pets_1/pets_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:True
当前idx2
____________________
SELECT count(*) FROM (SELECT StuID FROM student AS T1 JOIN has_pet AS T2 ON T1.StuID  =  T2.StuID GROUP BY StuID)
SELECT count ( T2.StuId )  FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid   =   T2.stuid JOIN pets AS T3 ON T3.petid   =   T2.petid
连接数据库../datasets/cosql_dataset/database/pets_1/pets_1.sqlite
执行第一个查询
执行出错: ambiguous column name: StuID
eval_exec:False
exact_score:0
medium pred: SELECT count(*) FROM (SELECT StuID FROM student AS T1 JOIN has_pet AS T2 ON T1.StuID  =  T2.StuID GROUP BY StuID)
medium gold: SELECT count ( T2.StuId )  FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid   =   T2.stuid JOIN pets AS T3 ON T3.petid   =   T2.petid

当前idx3
____________________
SELECT T3.pet_age FROM student AS T1 JOIN has_pet AS T2 ON T1.StuID  =  T2.StuID JOIN pets AS T3 ON T2.PetID  =  T3.PetID WHERE T1.Fname = "Linda"
SELECT T3.pet_age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid   =   T2.stuid JOIN pets AS T3 ON T3.petid   =   T2.petid WHERE T1.Fname  =  "Linda"
连接数据库../datasets/cosql_dataset/database/pets_1/pets_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx1
____________________
SELECT Name FROM visitor WHERE Level_of_membership  >  4
SELECT name FROM visitor WHERE Level_of_membership  >  4
连接数据库../datasets/cosql_dataset/database/museum_visit/museum_visit.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT Name ,  Age FROM visitor WHERE Level_of_membership  >  4
SELECT name, age FROM visitor WHERE Level_of_membership  >  4
连接数据库../datasets/cosql_dataset/database/museum_visit/museum_visit.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx3
____________________
SELECT Name ,  Age FROM visitor WHERE Level_of_membership  >  4 ORDER BY Age DESC
SELECT name ,  age FROM visitor WHERE Level_of_membership  >  4 ORDER BY age DESC
连接数据库../datasets/cosql_dataset/database/museum_visit/museum_visit.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx4
____________________
SELECT ID FROM visitor WHERE Level_of_membership  >  4 ORDER BY Age DESC
SELECT id FROM visitor WHERE Level_of_membership  >  4 ORDER BY age DESC
连接数据库../datasets/cosql_dataset/database/museum_visit/museum_visit.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx1
eval_err_num:39
____________________
SELECT T1.first_name ,  T1.middle_name ,  T1.last_name FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id JOIN Student_Enrolment_Courses AS T3 ON T2.student_enrolment_id  =  T3.student_enrolment_id JOIN Degree_Programs AS T4 ON T3.degree_program_id  =  T4.degree_program_id GROUP BY T1.student_id HAVING count(*)  >=  2
SELECT T1.first_name ,  T1.middle_name ,  T1.last_name ,  T1.student_id FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id   =   T2.student_id GROUP BY T1.student_id HAVING count ( * )    =   2
连接数据库../datasets/cosql_dataset/database/student_transcripts_tracking/student_transcripts_tracking.sqlite
执行第一个查询
执行出错: no such column: T3.degree_program_id
eval_exec:False
exact_score:0
medium pred: SELECT T1.first_name ,  T1.middle_name ,  T1.last_name FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id JOIN Student_Enrolment_Courses AS T3 ON T2.student_enrolment_id  =  T3.student_enrolment_id JOIN Degree_Programs AS T4 ON T3.degree_program_id  =  T4.degree_program_id GROUP BY T1.student_id HAVING count(*)  >=  2
medium gold: SELECT T1.first_name ,  T1.middle_name ,  T1.last_name ,  T1.student_id FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id   =   T2.student_id GROUP BY T1.student_id HAVING count ( * )    =   2

当前idx2
eval_err_num:40
____________________
SELECT T1.student_id FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id JOIN Student_Enrolment_Courses AS T3 ON T2.student_enrolment_id  =  T3.student_enrolment_id JOIN Degree_Programs AS T4 ON T3.degree_program_id  =  T4.degree_program_id GROUP BY T1.student_id HAVING count(*)  >=  2
SELECT T1.student_id FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id   =   T2.student_id GROUP BY T1.student_id HAVING count ( * )    =   2
连接数据库../datasets/cosql_dataset/database/student_transcripts_tracking/student_transcripts_tracking.sqlite
执行第一个查询
执行出错: no such column: T3.degree_program_id
eval_exec:False
exact_score:0
medium pred: SELECT T1.student_id FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id JOIN Student_Enrolment_Courses AS T3 ON T2.student_enrolment_id  =  T3.student_enrolment_id JOIN Degree_Programs AS T4 ON T3.degree_program_id  =  T4.degree_program_id GROUP BY T1.student_id HAVING count(*)  >=  2
medium gold: SELECT T1.student_id FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id   =   T2.student_id GROUP BY T1.student_id HAVING count ( * )    =   2

当前idx3
____________________
SELECT email_address FROM Students WHERE student_id = 4
SELECT email_address FROM Students where student_id  =  4
连接数据库../datasets/cosql_dataset/database/student_transcripts_tracking/student_transcripts_tracking.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx4
____________________
SELECT date_first_registered FROM Students WHERE first_name = "Timothy" AND middle_name = "Anna" AND last_name = "Ward"
SELECT date_first_registered FROM Students where first_name  =  'Timmothy' and middle_name  =  'Anna' and last_name  =  'Ward'
连接数据库../datasets/cosql_dataset/database/student_transcripts_tracking/student_transcripts_tracking.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:True
当前idx1
eval_err_num:41
____________________
SELECT count(*) FROM Owners AS T1 JOIN Breeds AS T2 ON T1.breed_code  =  T2.breed_code WHERE T1.state  =  "Virginia"
SELECT count ( * )  FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id   =   T2.owner_id WHERE T1.state   =   'Virginia'
连接数据库../datasets/cosql_dataset/database/dog_kennels/dog_kennels.sqlite
执行第一个查询
执行出错: no such column: T1.breed_code
eval_exec:False
exact_score:0
medium pred: SELECT count(*) FROM Owners AS T1 JOIN Breeds AS T2 ON T1.breed_code  =  T2.breed_code WHERE T1.state  =  "Virginia"
medium gold: SELECT count ( * )  FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id   =   T2.owner_id WHERE T1.state   =   'Virginia'

当前idx2
eval_err_num:42
____________________
SELECT T1.first_name ,  T1.last_name FROM Owners AS T1 JOIN Breeds AS T2 ON T1.breed_code  =  T2.breed_code WHERE T1.state  =  "Virginia"
SELECT T1.first_name, T1.last_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id   =   T2.owner_id WHERE T1.state   =   'Virginia'
连接数据库../datasets/cosql_dataset/database/dog_kennels/dog_kennels.sqlite
执行第一个查询
执行出错: no such column: T1.breed_code
eval_exec:False
exact_score:0
medium pred: SELECT T1.first_name ,  T1.last_name FROM Owners AS T1 JOIN Breeds AS T2 ON T1.breed_code  =  T2.breed_code WHERE T1.state  =  "Virginia"
medium gold: SELECT T1.first_name, T1.last_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id   =   T2.owner_id WHERE T1.state   =   'Virginia'

当前idx3
eval_err_num:43
____________________
SELECT T1.first_name ,  T1.last_name ,  T3.name FROM Owners AS T1 JOIN Breeds AS T2 ON T1.breed_code  =  T2.breed_code JOIN Dogs AS T3 ON T1.owner_id  =  T3.owner_id WHERE T1.state  =  "Virginia"
SELECT T2.name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id   =   T2.owner_id WHERE T1.state   =   'Virginia'
连接数据库../datasets/cosql_dataset/database/dog_kennels/dog_kennels.sqlite
执行第一个查询
执行出错: no such column: T1.breed_code
eval_exec:False
exact_score:0
medium pred: SELECT T1.first_name ,  T1.last_name ,  T3.name FROM Owners AS T1 JOIN Breeds AS T2 ON T1.breed_code  =  T2.breed_code JOIN Dogs AS T3 ON T1.owner_id  =  T3.owner_id WHERE T1.state  =  "Virginia"
medium gold: SELECT T2.name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id   =   T2.owner_id WHERE T1.state   =   'Virginia'

当前idx4
eval_err_num:44
____________________
SELECT T2.breed_name FROM Owners AS T1 JOIN Breeds AS T2 ON T1.breed_code  =  T2.breed_code WHERE T1.first_name  =  "Bessie"
SELECT T2.breed_code FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id   =   T2.owner_id WHERE T2.name  =  "Bessie"
连接数据库../datasets/cosql_dataset/database/dog_kennels/dog_kennels.sqlite
执行第一个查询
执行出错: no such column: T1.breed_code
eval_exec:False
exact_score:0
medium pred: SELECT T2.breed_name FROM Owners AS T1 JOIN Breeds AS T2 ON T1.breed_code  =  T2.breed_code WHERE T1.first_name  =  "Bessie"
medium gold: SELECT T2.breed_code FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id   =   T2.owner_id WHERE T2.name  =  "Bessie"

当前idx>4
eval_err_num:45
____________________
SELECT T3.size_description FROM Owners AS T1 JOIN Breeds AS T2 ON T1.breed_code  =  T2.breed_code JOIN Dogs AS T3 ON T1.owner_id  =  T3.owner_id WHERE T1.first_name  =  "Bessie"
SELECT T2.size_code FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id   =   T2.owner_id WHERE T2.name  =  "Bessie"
连接数据库../datasets/cosql_dataset/database/dog_kennels/dog_kennels.sqlite
执行第一个查询
执行出错: no such column: T3.size_description
eval_exec:False
exact_score:0
medium pred: SELECT T3.size_description FROM Owners AS T1 JOIN Breeds AS T2 ON T1.breed_code  =  T2.breed_code JOIN Dogs AS T3 ON T1.owner_id  =  T3.owner_id WHERE T1.first_name  =  "Bessie"
medium gold: SELECT T2.size_code FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id   =   T2.owner_id WHERE T2.name  =  "Bessie"

当前idx1
____________________
SELECT count(distinct Record_Company) from orchestra
SELECT count ( Record_Company )  FROM orchestra
连接数据库../datasets/cosql_dataset/database/orchestra/orchestra.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:True
当前idx2
____________________
SELECT count(*) from orchestra
SELECT count ( Orchestra_ID )  FROM orchestra
连接数据库../datasets/cosql_dataset/database/orchestra/orchestra.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
easy pred: SELECT count(*) from orchestra
easy gold: SELECT count ( Orchestra_ID )  FROM orchestra

当前idx3
____________________
SELECT Orchestra from orchestra order by Year_of_Founded
select orchestra from orchestra order by Year_of_Founded
连接数据库../datasets/cosql_dataset/database/orchestra/orchestra.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx4
____________________
SELECT Year_of_Founded from orchestra where Orchestra = "Royal Danish Orchestra"
select year_of_founded  from orchestra where orchestra = 'Royal Danish Orchestra'
连接数据库../datasets/cosql_dataset/database/orchestra/orchestra.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx>4
____________________
SELECT Record_Company from orchestra group by Record_Company order by count(*) desc limit 1
SELECT Record_Company FROM orchestra GROUP BY Record_Company ORDER BY COUNT ( * )  DESC LIMIT 1
连接数据库../datasets/cosql_dataset/database/orchestra/orchestra.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx1
____________________
SELECT count(*) FROM flights AS T1 JOIN airports AS T2 ON T1.SourceAirport  =  T2.AirportCode JOIN airlines AS T3 ON T1.Airline  =  T3.uid WHERE T3.Airline  =  "United Airlines" AND T2.AirportName  =  "ASY"
SELECT count ( * )  FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T2.Airline   =   T1.uid WHERE T1.Airline   =   "United Airlines" AND T2.DestAirport   =   "ASY"
连接数据库../datasets/cosql_dataset/database/flight_2/flight_2.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:0
medium pred: SELECT count(*) FROM flights AS T1 JOIN airports AS T2 ON T1.SourceAirport  =  T2.AirportCode JOIN airlines AS T3 ON T1.Airline  =  T3.uid WHERE T3.Airline  =  "United Airlines" AND T2.AirportName  =  "ASY"
medium gold: SELECT count ( * )  FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T2.Airline   =   T1.uid WHERE T1.Airline   =   "United Airlines" AND T2.DestAirport   =   "ASY"

当前idx2
____________________
SELECT uid FROM airlines WHERE Airline = "United Airlines"
select uid from airlines where airline  =  "United Airlines"
连接数据库../datasets/cosql_dataset/database/flight_2/flight_2.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx3
____________________
SELECT count(*) FROM flights AS T1 JOIN airports AS T2 ON T1.DestAirport  =  T2.AirportCode JOIN airlines AS T3 ON T1.Airline  =  T3.uid WHERE T3.uid  =  1 AND T2.AirportName  =  "ASY"
SELECT count ( * )  FROM FLIGHTS WHERE airline  =  1 and DestAirport   =   " ASY"
连接数据库../datasets/cosql_dataset/database/flight_2/flight_2.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT count(*) FROM flights AS T1 JOIN airports AS T2 ON T1.DestAirport  =  T2.AirportCode JOIN airlines AS T3 ON T1.Airline  =  T3.uid WHERE T3.uid  =  1 AND T2.AirportName  =  "ASY"
medium gold: SELECT count ( * )  FROM FLIGHTS WHERE airline  =  1 and DestAirport   =   " ASY"

当前idx1
eval_err_num:46
____________________
SELECT count(*) FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.Model = T2.Model WHERE T1.Make = "Volvo"
SELECT count ( * )  FROM CAR_names where model  =  "volvo"
连接数据库../datasets/cosql_dataset/database/car_1/car_1.sqlite
执行第一个查询
执行出错: no such column: T2.Model
eval_exec:False
exact_score:0
easy pred: SELECT count(*) FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.Model = T2.Model WHERE T1.Make = "Volvo"
easy gold: SELECT count ( * )  FROM CAR_names where model  =  "volvo"

当前idx2
eval_err_num:47
____________________
SELECT T2.Id FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.Model = T2.Model WHERE T1.Make = "Volvo" ORDER BY T2.Accelerate ASC LIMIT 1
SELECT T1.id FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T2.Model  =  'volvo' ORDER BY T1.accelerate ASC LIMIT 1
连接数据库../datasets/cosql_dataset/database/car_1/car_1.sqlite
执行第一个查询
执行出错: no such column: T2.Model
eval_exec:False
exact_score:0
extra pred: SELECT T2.Id FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.Model = T2.Model WHERE T1.Make = "Volvo" ORDER BY T2.Accelerate ASC LIMIT 1
extra gold: SELECT T1.id FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T2.Model  =  'volvo' ORDER BY T1.accelerate ASC LIMIT 1

当前idx3
eval_err_num:48
____________________
SELECT T2.Cylinders FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.Model = T2.Model WHERE T1.Make = "Volvo" ORDER BY T2.Accelerate ASC LIMIT 1
SELECT T1.cylinders FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T2.Model  =  'volvo' ORDER BY T1.accelerate ASC LIMIT 1
连接数据库../datasets/cosql_dataset/database/car_1/car_1.sqlite
执行第一个查询
执行出错: no such column: T2.Model
eval_exec:False
exact_score:0
extra pred: SELECT T2.Cylinders FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.Model = T2.Model WHERE T1.Make = "Volvo" ORDER BY T2.Accelerate ASC LIMIT 1
extra gold: SELECT T1.cylinders FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T2.Model  =  'volvo' ORDER BY T1.accelerate ASC LIMIT 1

当前idx1
____________________
SELECT count(*) FROM Highschooler
SELECT count ( * )  FROM Highschooler
连接数据库../datasets/cosql_dataset/database/network_1/network_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT count(*) FROM Friend
SELECT count ( * )  FROM Friend
连接数据库../datasets/cosql_dataset/database/network_1/network_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx3
____________________
SELECT T1.name FROM Highschooler AS T1 JOIN Friend AS T2 ON T1.id  =  T2.student_id
SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id   =   T2.id
连接数据库../datasets/cosql_dataset/database/network_1/network_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx1
____________________
SELECT semester_id FROM Student_Enrolment JOIN Semesters ON Student_Enrolment.semester_id = Semesters.semester_id JOIN Degree_Programs ON Student_Enrolment.degree_program_id = Degree_Programs.degree_program_id WHERE Degree_Programs.degree_summary_name = "Bachelor"
SELECT DISTINCT T2.semester_id FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id   =   T2.degree_program_id WHERE degree_summary_name   =   'Master'
连接数据库../datasets/cosql_dataset/database/student_transcripts_tracking/student_transcripts_tracking.sqlite
执行第一个查询
执行出错: ambiguous column name: semester_id
eval_exec:False
exact_score:False
medium pred: SELECT semester_id FROM Student_Enrolment JOIN Semesters ON Student_Enrolment.semester_id = Semesters.semester_id JOIN Degree_Programs ON Student_Enrolment.degree_program_id = Degree_Programs.degree_program_id WHERE Degree_Programs.degree_summary_name = "Bachelor"
medium gold: SELECT DISTINCT T2.semester_id FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id   =   T2.degree_program_id WHERE degree_summary_name   =   'Master'

当前idx2
____________________
SELECT degree_summary_description FROM Degree_Programs JOIN Student_Enrolment ON Degree_Programs.degree_program_id = Student_Enrolment.degree_program_id JOIN Students ON Student_Enrolment.student_id = Students.student_id WHERE Students.student_id = 14
SELECT T1.degree_summary_description FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id WHERE T2.student_id  =  14
连接数据库../datasets/cosql_dataset/database/student_transcripts_tracking/student_transcripts_tracking.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:False
medium pred: SELECT degree_summary_description FROM Degree_Programs JOIN Student_Enrolment ON Degree_Programs.degree_program_id = Student_Enrolment.degree_program_id JOIN Students ON Student_Enrolment.student_id = Students.student_id WHERE Students.student_id = 14
medium gold: SELECT T1.degree_summary_description FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id WHERE T2.student_id  =  14

当前idx1
____________________
SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id ORDER BY T2.MPG DESC LIMIT 1
SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId   =   T2.Id ORDER BY T2.mpg DESC LIMIT 1
连接数据库../datasets/cosql_dataset/database/car_1/car_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id ORDER BY T2.Horsepower DESC LIMIT 1
SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId   =   T2.Id ORDER BY T2.horsepower DESC LIMIT 1
连接数据库../datasets/cosql_dataset/database/car_1/car_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx1
____________________
SELECT Age FROM employee where Name = "George Chuter"
SELECT Age from employee where Name = 'George Chuter'
连接数据库../datasets/cosql_dataset/database/employee_hire_evaluation/employee_hire_evaluation.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT Age FROM employee where Name = "Lee Mears"
SELECT Age from employee where Name = 'Lee Mears'
连接数据库../datasets/cosql_dataset/database/employee_hire_evaluation/employee_hire_evaluation.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx3
____________________
SELECT T1.Name FROM employee AS T1 JOIN evaluation AS T2 ON T1.Employee_ID  =  T2.Employee_ID ORDER BY T2.Bonus DESC LIMIT 1
SELECT t1.name FROM employee AS t1 JOIN evaluation AS t2 ON t1.Employee_ID  =  t2.Employee_ID ORDER BY t2.bonus DESC LIMIT 1
连接数据库../datasets/cosql_dataset/database/employee_hire_evaluation/employee_hire_evaluation.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx1
____________________
SELECT Name FROM people WHERE People_ID NOT IN (SELECT People_ID FROM poker_player)
SELECT Name FROM people WHERE People_ID NOT IN  ( SELECT People_ID FROM poker_player ) 
连接数据库../datasets/cosql_dataset/database/poker_player/poker_player.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT Name FROM people WHERE People_ID IN (SELECT People_ID FROM poker_player)
SELECT Name FROM people WHERE People_ID IN  ( SELECT People_ID FROM poker_player ) 
连接数据库../datasets/cosql_dataset/database/poker_player/poker_player.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx1
____________________
SELECT count(*) FROM players
SELECT count ( * )  FROM players
连接数据库../datasets/cosql_dataset/database/wta_1/wta_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT first_name FROM players
SELECT first_name FROM players
连接数据库../datasets/cosql_dataset/database/wta_1/wta_1.sqlite
执行第一个查询
执行出错: Could not decode to UTF-8 column 'first_name' with text 'Selin G��Lseren'
eval_exec:False
exact_score:True
当前idx3
____________________
SELECT country_code FROM players where first_name = "Mirjana"
SELECT country_code FROM players  where first_name  =  "Mirjana"
连接数据库../datasets/cosql_dataset/database/wta_1/wta_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx4
____________________
SELECT birth_date FROM players where first_name = "Justine"
SELECT birth_date FROM players  where first_name  =  "Mirjana"
连接数据库../datasets/cosql_dataset/database/wta_1/wta_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:True
当前idx1
____________________
SELECT T2.Model FROM CAR_NAMES AS T1 JOIN MODEL_LIST AS T2 ON T1.Model  =  T2.Model WHERE T1.Make  =  "General Motors"
SELECT DISTINCT T2.Model FROM CAR_NAMES AS T1 JOIN MODEL_LIST AS T2 ON T1.Model   =   T2.Model JOIN CAR_MAKERS AS T3 ON T2.Maker   =   T3.Id JOIN CARS_DATA AS T4 ON T1.MakeId   =   T4.Id WHERE T3.FullName   =   'General Motors'
连接数据库../datasets/cosql_dataset/database/car_1/car_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
extra pred: SELECT T2.Model FROM CAR_NAMES AS T1 JOIN MODEL_LIST AS T2 ON T1.Model  =  T2.Model WHERE T1.Make  =  "General Motors"
extra gold: SELECT DISTINCT T2.Model FROM CAR_NAMES AS T1 JOIN MODEL_LIST AS T2 ON T1.Model   =   T2.Model JOIN CAR_MAKERS AS T3 ON T2.Maker   =   T3.Id JOIN CARS_DATA AS T4 ON T1.MakeId   =   T4.Id WHERE T3.FullName   =   'General Motors'

当前idx2
eval_err_num:49
____________________
SELECT T2.Model FROM CAR_NAMES AS T1 JOIN MODEL_LIST AS T2 ON T1.Model  =  T2.Model WHERE T1.Make  =  "General Motors" AND T1.Weight  >  3500
SELECT DISTINCT T2.Model FROM CAR_NAMES AS T1 JOIN MODEL_LIST AS T2 ON T1.Model   =   T2.Model JOIN CAR_MAKERS AS T3 ON T2.Maker   =   T3.Id JOIN CARS_DATA AS T4 ON T1.MakeId   =   T4.Id WHERE T4.weight  >  3500
连接数据库../datasets/cosql_dataset/database/car_1/car_1.sqlite
执行第一个查询
执行出错: no such column: T1.Weight
eval_exec:False
exact_score:0
extra pred: SELECT T2.Model FROM CAR_NAMES AS T1 JOIN MODEL_LIST AS T2 ON T1.Model  =  T2.Model WHERE T1.Make  =  "General Motors" AND T1.Weight  >  3500
extra gold: SELECT DISTINCT T2.Model FROM CAR_NAMES AS T1 JOIN MODEL_LIST AS T2 ON T1.Model   =   T2.Model JOIN CAR_MAKERS AS T3 ON T2.Maker   =   T3.Id JOIN CARS_DATA AS T4 ON T1.MakeId   =   T4.Id WHERE T4.weight  >  3500

当前idx3
eval_err_num:50
____________________
SELECT T2.Model FROM CAR_NAMES AS T1 JOIN MODEL_LIST AS T2 ON T1.Model  =  T2.Model WHERE T1.Make  =  "General Motors" AND T1.Weight  >  3500 GROUP BY T2.Model
SELECT DISTINCT T2.Model FROM CAR_NAMES AS T1 JOIN MODEL_LIST AS T2 ON T1.Model   =   T2.Model JOIN CAR_MAKERS AS T3 ON T2.Maker   =   T3.Id JOIN CARS_DATA AS T4 ON T1.MakeId   =   T4.Id WHERE T3.FullName   =   'General Motors' or T4.weight  < =   3500
连接数据库../datasets/cosql_dataset/database/car_1/car_1.sqlite
执行第一个查询
执行出错: no such column: T1.Weight
eval_exec:False
exact_score:0
extra pred: SELECT T2.Model FROM CAR_NAMES AS T1 JOIN MODEL_LIST AS T2 ON T1.Model  =  T2.Model WHERE T1.Make  =  "General Motors" AND T1.Weight  >  3500 GROUP BY T2.Model
extra gold: SELECT DISTINCT T2.Model FROM CAR_NAMES AS T1 JOIN MODEL_LIST AS T2 ON T1.Model   =   T2.Model JOIN CAR_MAKERS AS T3 ON T2.Maker   =   T3.Id JOIN CARS_DATA AS T4 ON T1.MakeId   =   T4.Id WHERE T3.FullName   =   'General Motors' or T4.weight  < =   3500

当前idx4
eval_err_num:51
____________________
SELECT T2.Model FROM CAR_NAMES AS T1 JOIN MODEL_LIST AS T2 ON T1.Model  =  T2.Model WHERE T1.Make  =  "General Motors" AND T1.Weight  >  3500 OR T1.Make  =  "General Motors"
SELECT DISTINCT T2.Model FROM CAR_NAMES AS T1 JOIN MODEL_LIST AS T2 ON T1.Model   =   T2.Model JOIN CAR_MAKERS AS T3 ON T2.Maker   =   T3.Id JOIN CARS_DATA AS T4 ON T1.MakeId   =   T4.Id WHERE T3.FullName   =   'General Motors' Or T4.weight  < =   3500 except SELECT DISTINCT T2.Model FROM CAR_NAMES AS T1 JOIN MODEL_LIST AS T2 ON T1.Model   =   T2.Model JOIN CAR_MAKERS AS T3 ON T2.Maker   =   T3.Id JOIN CARS_DATA AS T4 ON T1.MakeId   =   T4.Id WHERE T3.FullName   =   'General Motors' and T4.weight  < =   3500
连接数据库../datasets/cosql_dataset/database/car_1/car_1.sqlite
执行第一个查询
执行出错: no such column: T1.Weight
eval_exec:False
exact_score:0
extra pred: SELECT T2.Model FROM CAR_NAMES AS T1 JOIN MODEL_LIST AS T2 ON T1.Model  =  T2.Model WHERE T1.Make  =  "General Motors" AND T1.Weight  >  3500 OR T1.Make  =  "General Motors"
extra gold: SELECT DISTINCT T2.Model FROM CAR_NAMES AS T1 JOIN MODEL_LIST AS T2 ON T1.Model   =   T2.Model JOIN CAR_MAKERS AS T3 ON T2.Maker   =   T3.Id JOIN CARS_DATA AS T4 ON T1.MakeId   =   T4.Id WHERE T3.FullName   =   'General Motors' Or T4.weight  < =   3500 except SELECT DISTINCT T2.Model FROM CAR_NAMES AS T1 JOIN MODEL_LIST AS T2 ON T1.Model   =   T2.Model JOIN CAR_MAKERS AS T3 ON T2.Maker   =   T3.Id JOIN CARS_DATA AS T4 ON T1.MakeId   =   T4.Id WHERE T3.FullName   =   'General Motors' and T4.weight  < =   3500

当前idx1
____________________
SELECT Height FROM people WHERE Name = "Aleksey Ostapenko"
SELECT height FROM people where name  =  "Aleksey Ostapenko"
连接数据库../datasets/cosql_dataset/database/poker_player/poker_player.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT Name FROM people WHERE Birth_Date = "August 16, 1982"
SELECT name FROM people where birth_date  =  "August 16, 1982"
连接数据库../datasets/cosql_dataset/database/poker_player/poker_player.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx3
____________________
SELECT People_ID FROM people WHERE Nationality = "Russia"
SELECT people_id FROM people where nationality  =  "Russia"
连接数据库../datasets/cosql_dataset/database/poker_player/poker_player.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx4
____________________
SELECT Nationality FROM people GROUP BY Nationality HAVING COUNT(*)  >=  2
SELECT Nationality FROM people GROUP BY Nationality HAVING COUNT ( * )    > =    2
连接数据库../datasets/cosql_dataset/database/poker_player/poker_player.sqlite
执行第一个查询
执行第二个查询
执行出错: near "=": syntax error
eval_exec:False
exact_score:True
当前idx1
____________________
SELECT Population FROM country WHERE Name = "Afghanistan"
SELECT Population FROM country where Name   =   "Afghanistan"
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT Population FROM country WHERE Name = "Aruba"
SELECT Population FROM country where Name   =   "Aruba"
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx3
____________________
SELECT T1.Language FROM countrylanguage AS T1 JOIN country AS T2 ON T1.CountryCode  =  T2.Code WHERE T2.Name  =  "Aruba"
SELECT T2.language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code   =   T2.CountryCode WHERE T1.Name   =   "Aruba"
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx4
____________________
SELECT T1.Language FROM countrylanguage AS T1 JOIN country AS T2 ON T1.CountryCode  =  T2.Code WHERE T2.Name  =  "Aruba" AND T1.IsOfficial  =  "T"
SELECT T2.language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code   =   T2.CountryCode WHERE T1.Name   =   "Aruba" and T2.IsOfficial = 'T'
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx>4
____________________
SELECT T1.Language FROM countrylanguage AS T1 JOIN country AS T2 ON T1.CountryCode  =  T2.Code WHERE T2.Name  =  "Afghanistan" AND T1.IsOfficial  =  "T"
SELECT T2.language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code   =   T2.CountryCode WHERE T1.Name   =   "Afghanistan" and T2.IsOfficial = 'T'
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx>4
____________________
SELECT count(*) FROM countrylanguage AS T1 JOIN country AS T2 ON T1.CountryCode  =  T2.Code WHERE T1.Language  =  "Dari" AND T1.IsOfficial  =  "T"
SELECT count ( * )  FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code   =   T2.CountryCode WHERE T2.language = 'Dari' and T1.name ! =  'Afghanistan'
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
执行出错: unrecognized token: "!"
eval_exec:False
exact_score:0
medium pred: SELECT count(*) FROM countrylanguage AS T1 JOIN country AS T2 ON T1.CountryCode  =  T2.Code WHERE T1.Language  =  "Dari" AND T1.IsOfficial  =  "T"
medium gold: SELECT count ( * )  FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code   =   T2.CountryCode WHERE T2.language = 'Dari' and T1.name ! =  'Afghanistan'

当前idx1
____________________
SELECT T1.name ,  T2.cost_of_treatment FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id  =  T2.dog_id
SELECT name,cost_of_treatment  FROM Dogs join Treatments
连接数据库../datasets/cosql_dataset/database/dog_kennels/dog_kennels.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:True
当前idx2
____________________
SELECT T1.name FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id  =  T2.dog_id WHERE T2.cost_of_treatment  <  1000
SELECT name FROM Dogs WHERE dog_id NOT IN (  SELECT dog_id FROM Treatments GROUP BY dog_id HAVING sum ( cost_of_treatment )   <  1000  ) 
连接数据库../datasets/cosql_dataset/database/dog_kennels/dog_kennels.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
hard pred: SELECT T1.name FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id  =  T2.dog_id WHERE T2.cost_of_treatment  <  1000
hard gold: SELECT name FROM Dogs WHERE dog_id NOT IN (  SELECT dog_id FROM Treatments GROUP BY dog_id HAVING sum ( cost_of_treatment )   <  1000  ) 

当前idx1
____________________
SELECT Age FROM visitor WHERE Name = "Gonzalo Higuaín"
SELECT age FROM visitor where name  =  "Gonzalo Higuaín"
连接数据库../datasets/cosql_dataset/database/museum_visit/museum_visit.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT Num_of_Ticket FROM visit WHERE visitor_ID = 5
SELECT num_of_ticket FROM visitor AS t1 JOIN visit AS t2 ON t1.id   =   t2.visitor_id where visitor_id  =  5
连接数据库../datasets/cosql_dataset/database/museum_visit/museum_visit.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:False
medium pred: SELECT Num_of_Ticket FROM visit WHERE visitor_ID = 5
medium gold: SELECT num_of_ticket FROM visitor AS t1 JOIN visit AS t2 ON t1.id   =   t2.visitor_id where visitor_id  =  5

当前idx3
____________________
SELECT Total_spent FROM visit WHERE visitor_ID = 1
SELECT Total_spent FROM visitor AS t1 JOIN visit AS t2 ON t1.id   =   t2.visitor_id where name  =  "Arjen Robben"
连接数据库../datasets/cosql_dataset/database/museum_visit/museum_visit.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT Total_spent FROM visit WHERE visitor_ID = 1
medium gold: SELECT Total_spent FROM visitor AS t1 JOIN visit AS t2 ON t1.id   =   t2.visitor_id where name  =  "Arjen Robben"

当前idx4
____________________
SELECT T2.Name ,  T1.Num_of_Ticket FROM visit AS T1 JOIN visitor AS T2 ON T1.visitor_ID  =  T2.ID GROUP BY T1.visitor_ID ORDER BY sum(T1.Num_of_Ticket) DESC LIMIT 1
SELECT t1.name ,  t1.age FROM visitor AS t1 JOIN visit AS t2 ON t1.id   =   t2.visitor_id ORDER BY t2.num_of_ticket DESC LIMIT 1
连接数据库../datasets/cosql_dataset/database/museum_visit/museum_visit.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
hard pred: SELECT T2.Name ,  T1.Num_of_Ticket FROM visit AS T1 JOIN visitor AS T2 ON T1.visitor_ID  =  T2.ID GROUP BY T1.visitor_ID ORDER BY sum(T1.Num_of_Ticket) DESC LIMIT 1
hard gold: SELECT t1.name ,  t1.age FROM visitor AS t1 JOIN visit AS t2 ON t1.id   =   t2.visitor_id ORDER BY t2.num_of_ticket DESC LIMIT 1

当前idx1
____________________
SELECT DISTINCT T1.region FROM country AS T1 JOIN countrylanguage AS T2 ON T1.code  =  T2.countrycode WHERE T2.language  =  "English"
SELECT DISTINCT T1.Region FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code   =   T2.CountryCode WHERE T2.Language   =   "English"
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT DISTINCT T1.region FROM country AS T1 JOIN countrylanguage AS T2 ON T1.code  =  T2.countrycode WHERE T2.language  =  "Dutch"
SELECT DISTINCT T1.Region FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code   =   T2.CountryCode WHERE T2.Language   =   "Dutch"
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx3
____________________
SELECT DISTINCT T1.region, T1.lifeexpectancy FROM country AS T1 JOIN countrylanguage AS T2 ON T1.code  =  T2.countrycode WHERE T2.language  =  "Dutch"
SELECT DISTINCT T1.LifeExpectancy FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code   =   T2.CountryCode WHERE T2.Language   =   "Dutch"
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT DISTINCT T1.region, T1.lifeexpectancy FROM country AS T1 JOIN countrylanguage AS T2 ON T1.code  =  T2.countrycode WHERE T2.language  =  "Dutch"
medium gold: SELECT DISTINCT T1.LifeExpectancy FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code   =   T2.CountryCode WHERE T2.Language   =   "Dutch"

当前idx1
____________________
SELECT winner_name FROM matches ORDER BY winner_age LIMIT 3
SELECT winner_name  FROM matches ORDER BY winner_age LIMIT 3
连接数据库../datasets/cosql_dataset/database/wta_1/wta_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT winner_name, winner_rank FROM matches ORDER BY winner_age LIMIT 3
SELECT DISTINCT winner_name,  winner_rank FROM matches ORDER BY winner_age LIMIT 3
连接数据库../datasets/cosql_dataset/database/wta_1/wta_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx3
____________________
SELECT loser_name FROM matches ORDER BY winner_age LIMIT 3
SELECT loser_name FROM matches ORDER BY winner_age LIMIT 3
连接数据库../datasets/cosql_dataset/database/wta_1/wta_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx1
____________________
SELECT first_name, last_name FROM Professionals
SELECT first_name, last_name FROM professionals
连接数据库../datasets/cosql_dataset/database/dog_kennels/dog_kennels.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT first_name, last_name FROM Professionals WHERE city LIKE '%West%'
SELECT first_name, last_name FROM professionals  WHERE city LIKE '%West%'
连接数据库../datasets/cosql_dataset/database/dog_kennels/dog_kennels.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx3
____________________
SELECT role_code, street, city, state FROM Professionals WHERE first_name = "Taryn"
SELECT role_code , street , city , state FROM professionals WHERE first_name  =  "Taryn"
连接数据库../datasets/cosql_dataset/database/dog_kennels/dog_kennels.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx4
____________________
SELECT first_name, last_name, state FROM Professionals
SELECT first_name,state FROM professionals
连接数据库../datasets/cosql_dataset/database/dog_kennels/dog_kennels.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT first_name, last_name, state FROM Professionals
medium gold: SELECT first_name,state FROM professionals

当前idx>4
____________________
SELECT first_name, last_name FROM Professionals WHERE state = "Indiana"
SELECT first_name FROM professionals WHERE state  =  "Indiana"
连接数据库../datasets/cosql_dataset/database/dog_kennels/dog_kennels.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
easy pred: SELECT first_name, last_name FROM Professionals WHERE state = "Indiana"
easy gold: SELECT first_name FROM professionals WHERE state  =  "Indiana"

当前idx1
____________________
SELECT count(*) FROM death
SELECT count ( * )  FROM death
连接数据库../datasets/cosql_dataset/database/battle_death/battle_death.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT * FROM death ORDER BY injured DESC LIMIT 1
SELECT * FROM death where killed  =   ( select max ( killed )  from death ) 
连接数据库../datasets/cosql_dataset/database/battle_death/battle_death.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
hard pred: SELECT * FROM death ORDER BY injured DESC LIMIT 1
hard gold: SELECT * FROM death where killed  =   ( select max ( killed )  from death ) 

当前idx3
____________________
SELECT * FROM death ORDER BY injured DESC LIMIT 1
SELECT * FROM death where note like "%East%"
连接数据库../datasets/cosql_dataset/database/battle_death/battle_death.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT * FROM death ORDER BY injured DESC LIMIT 1
medium gold: SELECT * FROM death where note like "%East%"

当前idx1
____________________
SELECT T1.injured ,  T1.killed ,  T2.name FROM death AS T1 JOIN ship AS T2 ON T1.caused_by_ship_id  =  T2.id WHERE T2.tonnage  =  't'
SELECT T1.killed FROM death AS T1 JOIN ship AS t2 ON T1.caused_by_ship_id  =  T2.id WHERE T2.tonnage  =  't'
连接数据库../datasets/cosql_dataset/database/battle_death/battle_death.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT T1.injured ,  T1.killed ,  T2.name FROM death AS T1 JOIN ship AS T2 ON T1.caused_by_ship_id  =  T2.id WHERE T2.tonnage  =  't'
medium gold: SELECT T1.killed FROM death AS T1 JOIN ship AS t2 ON T1.caused_by_ship_id  =  T2.id WHERE T2.tonnage  =  't'

当前idx2
____________________
SELECT T1.injured ,  T1.killed ,  T2.name FROM death AS T1 JOIN ship AS T2 ON T1.caused_by_ship_id  =  T2.id WHERE T2.tonnage  =  't'
SELECT T1.injured FROM death AS T1 JOIN ship AS t2 ON T1.caused_by_ship_id  =  T2.id WHERE T2.tonnage  =  't'
连接数据库../datasets/cosql_dataset/database/battle_death/battle_death.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT T1.injured ,  T1.killed ,  T2.name FROM death AS T1 JOIN ship AS T2 ON T1.caused_by_ship_id  =  T2.id WHERE T2.tonnage  =  't'
medium gold: SELECT T1.injured FROM death AS T1 JOIN ship AS t2 ON T1.caused_by_ship_id  =  T2.id WHERE T2.tonnage  =  't'

当前idx3
____________________
SELECT count(*) FROM death AS T1 JOIN ship AS T2 ON T1.caused_by_ship_id  =  T2.id WHERE T2.tonnage  =  't'
SELECT COUNT ( T1.id )  FROM death AS T1 JOIN ship AS t2 ON T1.caused_by_ship_id  =  T2.id WHERE T2.tonnage  =  't'
连接数据库../datasets/cosql_dataset/database/battle_death/battle_death.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT count(*) FROM death AS T1 JOIN ship AS T2 ON T1.caused_by_ship_id  =  T2.id WHERE T2.tonnage  =  't'
medium gold: SELECT COUNT ( T1.id )  FROM death AS T1 JOIN ship AS t2 ON T1.caused_by_ship_id  =  T2.id WHERE T2.tonnage  =  't'

当前idx1
____________________
SELECT count(*) ,  Continent FROM continents GROUP BY Continent
SELECT T1.Continent ,  count ( * )  FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId   =   T2.continent JOIN car_makers AS T3 ON T2.CountryId   =   T3.Country GROUP BY T1.Continent
连接数据库../datasets/cosql_dataset/database/car_1/car_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:False
hard pred: SELECT count(*) ,  Continent FROM continents GROUP BY Continent
hard gold: SELECT T1.Continent ,  count ( * )  FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId   =   T2.continent JOIN car_makers AS T3 ON T2.CountryId   =   T3.Country GROUP BY T1.Continent

当前idx2
____________________
SELECT count(*) ,  Continent FROM continents GROUP BY Continent
seLECT count ( * )  FROM car_makers as T1 join countries as T2 on T2.CountryId   =   T1.Country where T2.countryname  =  "usa"
连接数据库../datasets/cosql_dataset/database/car_1/car_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT count(*) ,  Continent FROM continents GROUP BY Continent
medium gold: seLECT count ( * )  FROM car_makers as T1 join countries as T2 on T2.CountryId   =   T1.Country where T2.countryname  =  "usa"

当前idx3
____________________
SELECT count(*) ,  Continent FROM continents GROUP BY Continent
seLECT count ( * )  FROM car_makers as T1 join countries as T2 on T2.CountryId   =   T1.Country where T2.countryname  =  "germany"
连接数据库../datasets/cosql_dataset/database/car_1/car_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT count(*) ,  Continent FROM continents GROUP BY Continent
medium gold: seLECT count ( * )  FROM car_makers as T1 join countries as T2 on T2.CountryId   =   T1.Country where T2.countryname  =  "germany"

当前idx4
____________________
SELECT count(*) ,  Continent FROM continents GROUP BY Continent
seLECT count ( * )  FROM car_makers as T1 join countries as T2 on T2.CountryId   =   T1.Country where T2.countryname  =  "france"
连接数据库../datasets/cosql_dataset/database/car_1/car_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT count(*) ,  Continent FROM continents GROUP BY Continent
medium gold: seLECT count ( * )  FROM car_makers as T1 join countries as T2 on T2.CountryId   =   T1.Country where T2.countryname  =  "france"

当前idx1
____________________
SELECT count(*) FROM country
SELECT count ( * )  FROM country
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT count(*) FROM city
SELECT count ( * )  FROM city
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx3
____________________
SELECT region FROM country AS T1 JOIN city AS T2 ON T1.code  =  T2.countrycode WHERE T2.name  =  "Kabul"
SELECT Region FROM country AS T1 JOIN city AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Name  =  "Kabul"
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx4
____________________
SELECT count(*) FROM city WHERE district  =  (SELECT district FROM city WHERE name  =  "Kabul")
SELECT count ( T2.name )  FROM country AS T1 JOIN city AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.region  =  "Southern and Central Asia"
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT count(*) FROM city WHERE district  =  (SELECT district FROM city WHERE name  =  "Kabul")
medium gold: SELECT count ( T2.name )  FROM country AS T1 JOIN city AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.region  =  "Southern and Central Asia"

当前idx1
____________________
SELECT count(*) FROM Templates AS T1 JOIN Documents AS T2 ON T1.Template_ID  =  T2.Template_ID JOIN Ref_Template_Types AS T3 ON T1.Template_Type_Code  =  T3.Template_Type_Code WHERE T3.Template_Type_Code  =  "BK"
SELECT count ( * )  FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id   =   T2.template_id WHERE T1.template_type_code   =   "BK"
连接数据库../datasets/cosql_dataset/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:False
medium pred: SELECT count(*) FROM Templates AS T1 JOIN Documents AS T2 ON T1.Template_ID  =  T2.Template_ID JOIN Ref_Template_Types AS T3 ON T1.Template_Type_Code  =  T3.Template_Type_Code WHERE T3.Template_Type_Code  =  "BK"
medium gold: SELECT count ( * )  FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id   =   T2.template_id WHERE T1.template_type_code   =   "BK"

当前idx2
____________________
SELECT T2.Document_Name FROM Templates AS T1 JOIN Documents AS T2 ON T1.Template_ID  =  T2.Template_ID JOIN Ref_Template_Types AS T3 ON T1.Template_Type_Code  =  T3.Template_Type_Code WHERE T3.Template_Type_Code  =  "BK"
SELECT T2.document_name FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id   =   T2.template_id WHERE T1.template_type_code   =   "BK"
连接数据库../datasets/cosql_dataset/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:False
medium pred: SELECT T2.Document_Name FROM Templates AS T1 JOIN Documents AS T2 ON T1.Template_ID  =  T2.Template_ID JOIN Ref_Template_Types AS T3 ON T1.Template_Type_Code  =  T3.Template_Type_Code WHERE T3.Template_Type_Code  =  "BK"
medium gold: SELECT T2.document_name FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id   =   T2.template_id WHERE T1.template_type_code   =   "BK"

当前idx3
____________________
SELECT count(*) FROM Documents WHERE Template_ID NOT IN (SELECT Template_ID FROM Templates WHERE Template_Type_Code = "BK")
Select count ( * )  from documents where document_name not in 
 ( SELECT T2.document_name FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id   =   T2.template_id WHERE T1.template_type_code   =   "BK" ) 
连接数据库../datasets/cosql_dataset/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:0
extra pred: SELECT count(*) FROM Documents WHERE Template_ID NOT IN (SELECT Template_ID FROM Templates WHERE Template_Type_Code = "BK")
extra gold: Select count ( * )  from documents where document_name not in 
 ( SELECT T2.document_name FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id   =   T2.template_id WHERE T1.template_type_code   =   "BK" ) 

当前idx1
____________________
SELECT countrycode FROM countrylanguage WHERE language != "English"
SELECT CountryCode FROM countrylanguage WHERE LANGUAGE  ! =   "English"
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
执行出错: unrecognized token: "!"
eval_exec:False
exact_score:True
当前idx2
____________________
SELECT countrycode FROM countrylanguage WHERE language != "English" INTERSECT SELECT code FROM country WHERE governmentform != "Republic"
SELECT Code FROM country WHERE GovernmentForm ! =  "Republic" EXCEPT SELECT CountryCode FROM countrylanguage WHERE LANGUAGE   =   "English"
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
执行出错: unrecognized token: "!"
eval_exec:False
exact_score:0
hard pred: SELECT countrycode FROM countrylanguage WHERE language != "English" INTERSECT SELECT code FROM country WHERE governmentform != "Republic"
hard gold: SELECT Code FROM country WHERE GovernmentForm ! =  "Republic" EXCEPT SELECT CountryCode FROM countrylanguage WHERE LANGUAGE   =   "English"

当前idx3
____________________
SELECT language FROM countrylanguage WHERE countrycode IN (SELECT code FROM country WHERE governmentform != "Republic")
select countrycode, language from countrylanguage where countrycode in  ( SELECT Code FROM country WHERE GovernmentForm ! =  "Republic" EXCEPT SELECT CountryCode FROM countrylanguage WHERE LANGUAGE   =   "English" ) 
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
执行出错: unrecognized token: "!"
eval_exec:False
exact_score:0
extra pred: SELECT language FROM countrylanguage WHERE countrycode IN (SELECT code FROM country WHERE governmentform != "Republic")
extra gold: select countrycode, language from countrylanguage where countrycode in  ( SELECT Code FROM country WHERE GovernmentForm ! =  "Republic" EXCEPT SELECT CountryCode FROM countrylanguage WHERE LANGUAGE   =   "English" ) 

当前idx4
____________________
SELECT countrycode FROM countrylanguage WHERE language != "English" INTERSECT SELECT code FROM country WHERE governmentform != "Republic" INTERSECT SELECT code FROM country WHERE continent = "North America"
select code from country where continent  =  "North America" and code in  ( SELECT Code FROM country WHERE GovernmentForm ! =  "Republic" EXCEPT SELECT CountryCode FROM countrylanguage WHERE LANGUAGE   =   "English" ) 
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
执行出错: unrecognized token: "!"
eval_exec:False
exact_score:0
extra pred: SELECT countrycode FROM countrylanguage WHERE language != "English" INTERSECT SELECT code FROM country WHERE governmentform != "Republic" INTERSECT SELECT code FROM country WHERE continent = "North America"
extra gold: select code from country where continent  =  "North America" and code in  ( SELECT Code FROM country WHERE GovernmentForm ! =  "Republic" EXCEPT SELECT CountryCode FROM countrylanguage WHERE LANGUAGE   =   "English" ) 

当前idx1
____________________
SELECT * FROM Professionals WHERE city  =  "Indianapolis"
SELECT * FROM Professionals WHERE state   =   'Indiana'
连接数据库../datasets/cosql_dataset/database/dog_kennels/dog_kennels.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
easy pred: SELECT * FROM Professionals WHERE city  =  "Indianapolis"
easy gold: SELECT * FROM Professionals WHERE state   =   'Indiana'

当前idx2
____________________
SELECT cell_number FROM Professionals WHERE first_name  =  "Taryn"
SELECT cell_number FROM Professionals WHERE first_name  =  "Taryn"
连接数据库../datasets/cosql_dataset/database/dog_kennels/dog_kennels.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx1
____________________
SELECT count(*) FROM Templates
SELECT count ( * )  FROM Templates
连接数据库../datasets/cosql_dataset/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT Date_Effective_From FROM Templates WHERE Template_ID = 1
SELECT Date_Effective_From, Date_Effective_To FROM Templates where Template_ID = 1
连接数据库../datasets/cosql_dataset/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT Date_Effective_From FROM Templates WHERE Template_ID = 1
medium gold: SELECT Date_Effective_From, Date_Effective_To FROM Templates where Template_ID = 1

当前idx3
____________________
SELECT Template_Type_Code FROM Templates WHERE Template_ID = 4
SELECT Template_Type_Code  FROM Templates where Template_ID = 4
连接数据库../datasets/cosql_dataset/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx4
____________________
SELECT Version_Number FROM Templates WHERE Template_ID = 0
SELECT Version_Number  FROM Templates where Template_ID = 0
连接数据库../datasets/cosql_dataset/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx1
____________________
SELECT Country FROM singer WHERE Age > 40
SELECT country FROM singer WHERE age  >  40
连接数据库../datasets/cosql_dataset/database/concert_singer/concert_singer.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT Country FROM singer WHERE Age < 30
SELECT DISTINCT ( country )  FROM singer WHERE age  < 30
连接数据库../datasets/cosql_dataset/database/concert_singer/concert_singer.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:True
当前idx3
____________________
SELECT Country FROM singer WHERE Age > 40 INTERSECT SELECT Country FROM singer WHERE Age < 30
SELECT country FROM singer WHERE age  >  40 INTERSECT SELECT country FROM singer WHERE age  <  30
连接数据库../datasets/cosql_dataset/database/concert_singer/concert_singer.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx1
eval_err_num:52
____________________

SELECT T1.Accelerate FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id   =   T2.MakeId WHERE T2.Make   =   'amc hornet sportabout  ( sw ) '
连接数据库../datasets/cosql_dataset/database/car_1/car_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: 
medium gold: SELECT T1.Accelerate FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id   =   T2.MakeId WHERE T2.Make   =   'amc hornet sportabout  ( sw ) '

当前idx2
eval_err_num:53
____________________

SELECT T2.Model FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id   =   T2.MakeId order by T1.Year desc limit 1
连接数据库../datasets/cosql_dataset/database/car_1/car_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
hard pred: 
hard gold: SELECT T2.Model FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id   =   T2.MakeId order by T1.Year desc limit 1

当前idx1
____________________
SELECT template_id FROM Templates
SELECT template_id FROM Templates
连接数据库../datasets/cosql_dataset/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT template_id FROM Templates EXCEPT SELECT template_id FROM Documents
SELECT template_id FROM Templates EXCEPT SELECT template_id FROM Documents
连接数据库../datasets/cosql_dataset/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx3
____________________
SELECT template_id, date_effective_to FROM Templates WHERE template_id NOT IN (SELECT template_id FROM Documents)
SELECT Date_effective_to FROM Templates WHERE template_id IN  (  SELECT template_id FROM Templates EXCEPT SELECT template_id FROM Documents ) 
连接数据库../datasets/cosql_dataset/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
hard pred: SELECT template_id, date_effective_to FROM Templates WHERE template_id NOT IN (SELECT template_id FROM Documents)
hard gold: SELECT Date_effective_to FROM Templates WHERE template_id IN  (  SELECT template_id FROM Templates EXCEPT SELECT template_id FROM Documents ) 

当前idx4
____________________
SELECT count(*) FROM Templates WHERE template_id NOT IN (SELECT template_id FROM Documents)
SELECT count ( * )  FROM Templates WHERE template_id in  ( SELECT template_id FROM Templates EXCEPT SELECT template_id FROM Documents ) 
连接数据库../datasets/cosql_dataset/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:0
hard pred: SELECT count(*) FROM Templates WHERE template_id NOT IN (SELECT template_id FROM Documents)
hard gold: SELECT count ( * )  FROM Templates WHERE template_id in  ( SELECT template_id FROM Templates EXCEPT SELECT template_id FROM Documents ) 

当前idx>4
____________________
SELECT template_id FROM Templates WHERE template_id NOT IN (SELECT template_id FROM Documents)
SELECT template_id FROM Templates EXCEPT SELECT template_id FROM Documents
连接数据库../datasets/cosql_dataset/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:0
hard pred: SELECT template_id FROM Templates WHERE template_id NOT IN (SELECT template_id FROM Documents)
hard gold: SELECT template_id FROM Templates EXCEPT SELECT template_id FROM Documents

当前idx1
____________________
SELECT T1.concert_Name ,  T1.Theme ,  count(*) FROM concert AS T1 JOIN singer_in_concert AS T2 ON T1.concert_ID  =  T2.concert_ID GROUP BY T1.concert_ID
SELECT T2.concert_name , T2.theme , count ( * )  FROM singer_in_concert AS T1 JOIN concert AS T2 ON T1.concert_id  =  T2.concert_id GROUP BY T2.concert_id
连接数据库../datasets/cosql_dataset/database/concert_singer/concert_singer.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT year FROM concert WHERE concert_Name = "Super Bootcamp"
SELECT Year FROM concert WHERE concert_Name  =  "Super bootcamp"
连接数据库../datasets/cosql_dataset/database/concert_singer/concert_singer.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:True
当前idx3
____________________
SELECT Stadium_ID FROM concert WHERE concert_Name = "Super Bootcamp"
SELECT Stadium_ID FROM concert WHERE concert_Name  =  "Super bootcamp"
连接数据库../datasets/cosql_dataset/database/concert_singer/concert_singer.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:True
当前idx1
____________________
SELECT sum(Population) FROM country WHERE Continent = "Asia"
SELECT sum ( Population )  FROM country where Continent  =  'Asia'
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT Language FROM countrylanguage WHERE Percentage = 9.5
SELECT Language FROM countrylanguage where Percentage  =  9.5
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx3
____________________
SELECT LifeExpectancy FROM country WHERE Name = "Angola"
SELECT LifeExpectancy FROM country where LocalName  =  'Angola'
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:0
easy pred: SELECT LifeExpectancy FROM country WHERE Name = "Angola"
easy gold: SELECT LifeExpectancy FROM country where LocalName  =  'Angola'

当前idx4
____________________
SELECT GNP FROM country WHERE Name = "Aruba"
SELECT GNP FROM country where LocalName  =  'Angola'
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
easy pred: SELECT GNP FROM country WHERE Name = "Aruba"
easy gold: SELECT GNP FROM country where LocalName  =  'Angola'

当前idx>4
____________________
SELECT GNPOld FROM country WHERE Name = "Afghanistan"
SELECT GNPOld FROM country where Name  =  'Afghanistan'
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx1
____________________
SELECT name FROM singer WHERE song_release_year  >  (SELECT avg(song_release_year) FROM singer)
SELECT song_name FROM singer WHERE song_release_year  >   ( SELECT avg ( song_release_year )  FROM singer ) 
连接数据库../datasets/cosql_dataset/database/concert_singer/concert_singer.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
hard pred: SELECT name FROM singer WHERE song_release_year  >  (SELECT avg(song_release_year) FROM singer)
hard gold: SELECT song_name FROM singer WHERE song_release_year  >   ( SELECT avg ( song_release_year )  FROM singer ) 

当前idx2
____________________
SELECT avg(song_release_year) FROM singer
SELECT avg ( song_release_year )  FROM singer
  0%|          | 0/293 [00:00<?, ?it/s]  3%|▎         | 9/293 [00:00<00:03, 85.88it/s]  6%|▌         | 18/293 [00:00<00:03, 87.95it/s] 10%|▉         | 28/293 [00:00<00:03, 87.01it/s] 13%|█▎        | 38/293 [00:00<00:03, 83.44it/s] 16%|█▋        | 48/293 [00:00<00:02, 87.40it/s] 20%|██        | 59/293 [00:00<00:02, 93.01it/s] 24%|██▍       | 70/293 [00:00<00:02, 97.99it/s] 27%|██▋       | 80/293 [00:00<00:02, 93.87it/s] 31%|███       | 90/293 [00:01<00:02, 82.35it/s] 34%|███▍      | 99/293 [00:01<00:02, 80.83it/s] 37%|███▋      | 108/293 [00:01<00:02, 81.89it/s] 40%|███▉      | 117/293 [00:01<00:02, 81.82it/s] 43%|████▎     | 126/293 [00:01<00:02, 76.97it/s] 46%|████▌     | 134/293 [00:01<00:02, 64.64it/s] 49%|████▉     | 144/293 [00:01<00:02, 72.63it/s] 52%|█████▏    | 152/293 [00:01<00:02, 68.47it/s] 55%|█████▍    | 161/293 [00:02<00:01, 71.78it/s] 58%|█████▊    | 1连接数据库../datasets/cosql_dataset/database/concert_singer/concert_singer.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx3
____________________
SELECT song_name FROM singer ORDER BY song_release_year
SELECT song_name from singer order by song_release_year
连接数据库../datasets/cosql_dataset/database/concert_singer/concert_singer.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx4
____________________
SELECT song_name FROM singer WHERE age  >  (SELECT avg(age) FROM singer)
SELECT song_name FROM singer WHERE age  >   ( SELECT avg ( age )  FROM singer ) 
连接数据库../datasets/cosql_dataset/database/concert_singer/concert_singer.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx1
____________________
SELECT T1.Orchestra FROM orchestra AS T1 JOIN conductor AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID
SELECT T2.Orchestra FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID   =   T2.Conductor_ID
连接数据库../datasets/cosql_dataset/database/orchestra/orchestra.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT Name FROM conductor
SELECT Name FROM conductor
连接数据库../datasets/cosql_dataset/database/orchestra/orchestra.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx3
____________________
SELECT Age FROM conductor WHERE Name = "Colin Davis"
SELECT Age FROM conductor WHERE Name  =  "Colin Davis"
连接数据库../datasets/cosql_dataset/database/orchestra/orchestra.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx1
____________________
SELECT count(*) FROM Students
SELECT count ( * )  FROM Students
连接数据库../datasets/cosql_dataset/database/student_transcripts_tracking/student_transcripts_tracking.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT first_name FROM Students WHERE student_id = 3
SELECT first_name FROM Students where student_id = 3
连接数据库../datasets/cosql_dataset/database/student_transcripts_tracking/student_transcripts_tracking.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx3
____________________
SELECT email_address FROM Students WHERE student_id = 2
SELECT email_address FROM Students where student_id = 2
连接数据库../datasets/cosql_dataset/database/student_transcripts_tracking/student_transcripts_tracking.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx4
____________________
SELECT count(*) FROM Student_Enrolment
SELECT count ( * )  FROM Student_Enrolment
连接数据库../datasets/cosql_dataset/database/student_transcripts_tracking/student_transcripts_tracking.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx1
____________________
SELECT template_details FROM Templates
SELECT * FROM Templates AS T1 JOIN Documents AS T2 ON T1.Template_ID   =   T2.template_ID
连接数据库../datasets/cosql_dataset/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
easy pred: SELECT template_details FROM Templates
easy gold: SELECT * FROM Templates AS T1 JOIN Documents AS T2 ON T1.Template_ID   =   T2.template_ID

当前idx2
____________________
SELECT T1.template_type_description FROM Ref_Template_Types AS T1 JOIN Templates AS T2 ON T1.template_type_code  =  T2.template_type_code
SELECT T1.template_type_description FROM Ref_template_types AS T1 JOIN Templates AS T2 ON T1.template_type_code  =  T2.template_type_code JOIN Documents AS T3 ON T2.Template_ID  =  T3.template_ID
连接数据库../datasets/cosql_dataset/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:False
medium pred: SELECT T1.template_type_description FROM Ref_Template_Types AS T1 JOIN Templates AS T2 ON T1.template_type_code  =  T2.template_type_code
medium gold: SELECT T1.template_type_description FROM Ref_template_types AS T1 JOIN Templates AS T2 ON T1.template_type_code  =  T2.template_type_code JOIN Documents AS T3 ON T2.Template_ID  =  T3.template_ID

当前idx3
____________________
SELECT DISTINCT T1.template_type_description FROM Ref_Template_Types AS T1 JOIN Templates AS T2 ON T1.template_type_code  =  T2.template_type_code
SELECT DISTINCT T1.template_type_description FROM Ref_template_types AS T1 JOIN Templates AS T2 ON T1.template_type_code  =  T2.template_type_code JOIN Documents AS T3 ON T2.Template_ID  =  T3.template_ID
连接数据库../datasets/cosql_dataset/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:False
medium pred: SELECT DISTINCT T1.template_type_description FROM Ref_Template_Types AS T1 JOIN Templates AS T2 ON T1.template_type_code  =  T2.template_type_code
medium gold: SELECT DISTINCT T1.template_type_description FROM Ref_template_types AS T1 JOIN Templates AS T2 ON T1.template_type_code  =  T2.template_type_code JOIN Documents AS T3 ON T2.Template_ID  =  T3.template_ID

当前idx1
____________________
SELECT Population FROM country WHERE Name = "Russian Federation"
SELECT Population FROM country ORDER BY SurfaceArea DESC LIMIT 1
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:0
medium pred: SELECT Population FROM country WHERE Name = "Russian Federation"
medium gold: SELECT Population FROM country ORDER BY SurfaceArea DESC LIMIT 1

当前idx2
____________________
SELECT HeadOfState FROM country WHERE Name = "Russian Federation"
SELECT HeadOfState FROM country ORDER BY SurfaceArea DESC LIMIT 1
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:0
medium pred: SELECT HeadOfState FROM country WHERE Name = "Russian Federation"
medium gold: SELECT HeadOfState FROM country ORDER BY SurfaceArea DESC LIMIT 1

当前idx3
____________________
SELECT Continent FROM country WHERE Name = "Russian Federation"
SELECT Continent FROM country ORDER BY SurfaceArea DESC LIMIT 1
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:0
medium pred: SELECT Continent FROM country WHERE Name = "Russian Federation"
medium gold: SELECT Continent FROM country ORDER BY SurfaceArea DESC LIMIT 1

当前idx1
____________________
SELECT T2.Name FROM poker_player AS T1 JOIN people AS T2 ON T1.People_ID  =  T2.People_ID WHERE T1.Earnings  >  300000
SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID   =   T2.People_ID WHERE T2.Earnings  >  300000
连接数据库../datasets/cosql_dataset/database/poker_player/poker_player.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT count(*) FROM poker_player
SELECT count ( Poker_Player_ID )  from poker_player
连接数据库../datasets/cosql_dataset/database/poker_player/poker_player.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
easy pred: SELECT count(*) FROM poker_player
easy gold: SELECT count ( Poker_Player_ID )  from poker_player

当前idx1
____________________
SELECT count(*) FROM Addresses AS T1 JOIN Students AS T2 ON T1.address_id = T2.permanent_address_id WHERE T1.state_province_county = "North Carolina"
SELECT count ( * )  FROM Students AS T1 JOIN Addresses AS T2 ON T1.current_address_id   =   T2.address_id WHERE T2.state_province_county   =   'NorthCarolina'
连接数据库../datasets/cosql_dataset/database/student_transcripts_tracking/student_transcripts_tracking.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:True
当前idx2
____________________
SELECT T2.first_name ,  T2.last_name FROM Addresses AS T1 JOIN Students AS T2 ON T1.address_id = T2.permanent_address_id WHERE T1.state_province_county = "North Carolina"
SELECT T1.first_name,T1.last_name FROM Students AS T1 JOIN Addresses AS T2 ON T1.current_address_id   =   T2.address_id WHERE T2.state_province_county   =   'NorthCarolina'
连接数据库../datasets/cosql_dataset/database/student_transcripts_tracking/student_transcripts_tracking.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:True
当前idx3
eval_err_num:54
____________________
SELECT T2.first_name ,  T2.last_name FROM Addresses AS T1 JOIN Students AS T2 ON T1.address_id = T2.permanent_address_id WHERE T1.state_province_county = "North Carolina" EXCEPT SELECT T2.first_name ,  T2.last_name FROM Addresses AS T1 JOIN Student_Enrolment AS T2 ON T1.address_id = T2.student_id WHERE T1.state_province_county = "North Carolina"
SELECT T1.first_name, T1.last_name FROM Students AS T1 JOIN Addresses AS T2 ON T1.current_address_id   =   T2.address_id WHERE T2.state_province_county   =   'NorthCarolina' EXCEPT SELECT T3.first_name, T3.last_name FROM Students AS T3 JOIN Student_Enrolment AS T4 ON T3.student_id   =   T4.student_id
连接数据库../datasets/cosql_dataset/database/student_transcripts_tracking/student_transcripts_tracking.sqlite
执行第一个查询
执行出错: no such column: T2.first_name
eval_exec:False
exact_score:0
extra pred: SELECT T2.first_name ,  T2.last_name FROM Addresses AS T1 JOIN Students AS T2 ON T1.address_id = T2.permanent_address_id WHERE T1.state_province_county = "North Carolina" EXCEPT SELECT T2.first_name ,  T2.last_name FROM Addresses AS T1 JOIN Student_Enrolment AS T2 ON T1.address_id = T2.student_id WHERE T1.state_province_county = "North Carolina"
extra gold: SELECT T1.first_name, T1.last_name FROM Students AS T1 JOIN Addresses AS T2 ON T1.current_address_id   =   T2.address_id WHERE T2.state_province_county   =   'NorthCarolina' EXCEPT SELECT T3.first_name, T3.last_name FROM Students AS T3 JOIN Student_Enrolment AS T4 ON T3.student_id   =   T4.student_id

当前idx1
____________________
SELECT area_code FROM AREA_CODE_STATE
select area_code from AREA_CODE_STATE
连接数据库../datasets/cosql_dataset/database/voter_1/voter_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
eval_err_num:55
____________________
SELECT T1.area_code FROM AREA_CODE_STATE AS T1 JOIN VOTES AS T2 ON T1.area_code  =  T2.phone_number WHERE T2.contestant_name  =  'Tabatha Gehling'
SELECT T3.area_code FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number JOIN area_code_state AS T3 ON T2.state  =  T3.state WHERE T1.contestant_name  =  'Tabatha Gehling'
连接数据库../datasets/cosql_dataset/database/voter_1/voter_1.sqlite
执行第一个查询
执行出错: no such column: T2.contestant_name
eval_exec:False
exact_score:0
hard pred: SELECT T1.area_code FROM AREA_CODE_STATE AS T1 JOIN VOTES AS T2 ON T1.area_code  =  T2.phone_number WHERE T2.contestant_name  =  'Tabatha Gehling'
hard gold: SELECT T3.area_code FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number JOIN area_code_state AS T3 ON T2.state  =  T3.state WHERE T1.contestant_name  =  'Tabatha Gehling'

当前idx3
eval_err_num:56
____________________
SELECT T1.area_code FROM AREA_CODE_STATE AS T1 JOIN VOTES AS T2 ON T1.area_code  =  T2.phone_number WHERE T2.contestant_name  =  'Kelly Clauss'
SELECT T3.area_code FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number JOIN area_code_state AS T3 ON T2.state  =  T3.state WHERE T1.contestant_name  =  'Kelly Clauss'
连接数据库../datasets/cosql_dataset/database/voter_1/voter_1.sqlite
执行第一个查询
执行出错: no such column: T2.contestant_name
eval_exec:False
exact_score:0
hard pred: SELECT T1.area_code FROM AREA_CODE_STATE AS T1 JOIN VOTES AS T2 ON T1.area_code  =  T2.phone_number WHERE T2.contestant_name  =  'Kelly Clauss'
hard gold: SELECT T3.area_code FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number JOIN area_code_state AS T3 ON T2.state  =  T3.state WHERE T1.contestant_name  =  'Kelly Clauss'

当前idx4
eval_err_num:57
____________________
SELECT T1.area_code FROM AREA_CODE_STATE AS T1 JOIN VOTES AS T2 ON T1.area_code  =  T2.phone_number WHERE T2.contestant_name  =  'Kelly Clauss' INTERSECT SELECT T1.area_code FROM AREA_CODE_STATE AS T1 JOIN VOTES AS T2 ON T1.area_code  =  T2.phone_number WHERE T2.contestant_name  =  'Tabatha Gehling'
SELECT T3.area_code FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number JOIN area_code_state AS T3 ON T2.state  =  T3.state WHERE T1.contestant_name  =  'Tabatha Gehling' INTERSECT SELECT T3.area_code FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number JOIN area_code_state AS T3 ON T2.state  =  T3.state WHERE T1.contestant_name  =  'Kelly Clauss'
连接数据库../datasets/cosql_dataset/database/voter_1/voter_1.sqlite
执行第一个查询
执行出错: no such column: T2.contestant_name
eval_exec:False
exact_score:0
extra pred: SELECT T1.area_code FROM AREA_CODE_STATE AS T1 JOIN VOTES AS T2 ON T1.area_code  =  T2.phone_number WHERE T2.contestant_name  =  'Kelly Clauss' INTERSECT SELECT T1.area_code FROM AREA_CODE_STATE AS T1 JOIN VOTES AS T2 ON T1.area_code  =  T2.phone_number WHERE T2.contestant_name  =  'Tabatha Gehling'
extra gold: SELECT T3.area_code FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number JOIN area_code_state AS T3 ON T2.state  =  T3.state WHERE T1.contestant_name  =  'Tabatha Gehling' INTERSECT SELECT T3.area_code FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number JOIN area_code_state AS T3 ON T2.state  =  T3.state WHERE T1.contestant_name  =  'Kelly Clauss'

当前idx1
____________________
SELECT count(*) FROM shop
SELECT count ( * )  FROM shop
连接数据库../datasets/cosql_dataset/database/employee_hire_evaluation/employee_hire_evaluation.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT name FROM shop
SELECT name FROM shop
连接数据库../datasets/cosql_dataset/database/employee_hire_evaluation/employee_hire_evaluation.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx3
____________________
SELECT location FROM shop where name = "FC Haka"
SELECT location FROM shop where name  =  "FC Haka"
连接数据库../datasets/cosql_dataset/database/employee_hire_evaluation/employee_hire_evaluation.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx4
____________________
SELECT Number_products FROM shop where name = "HJK"
SELECT Number_products FROM shop where name  =  "HJK"
连接数据库../datasets/cosql_dataset/database/employee_hire_evaluation/employee_hire_evaluation.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx1
____________________
SELECT department_id,department_name FROM Departments
select department_id,department_name from Departments
连接数据库../datasets/cosql_dataset/database/student_transcripts_tracking/student_transcripts_tracking.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT T1.department_name,T2.degree_summary_name FROM Departments AS T1 JOIN Degree_Programs AS T2 ON T1.department_id  =  T2.department_id WHERE T1.department_name  =  "Business"
select T2.degree_summary_name from Departments as T1 JOIN Degree_Programs as T2 on T1.department_id  =  T2.department_id where T1.department_name  =  'statistics'
连接数据库../datasets/cosql_dataset/database/student_transcripts_tracking/student_transcripts_tracking.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT T1.department_name,T2.degree_summary_name FROM Departments AS T1 JOIN Degree_Programs AS T2 ON T1.department_id  =  T2.department_id WHERE T1.department_name  =  "Business"
medium gold: select T2.degree_summary_name from Departments as T1 JOIN Degree_Programs as T2 on T1.department_id  =  T2.department_id where T1.department_name  =  'statistics'

当前idx1
____________________
SELECT professional_id FROM Professionals
SELECT professional_id  FROM Professionals
连接数据库../datasets/cosql_dataset/database/dog_kennels/dog_kennels.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT role_code FROM Professionals
SELECT professional_id, role_code  FROM Professionals
连接数据库../datasets/cosql_dataset/database/dog_kennels/dog_kennels.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT role_code FROM Professionals
medium gold: SELECT professional_id, role_code  FROM Professionals

当前idx3
____________________
SELECT email_address FROM Professionals WHERE professional_id NOT IN (SELECT professional_id FROM Treatments)
SELECT professional_id , role_code , email_address FROM Professionals EXCEPT SELECT T1.professional_id , T1.role_code , T1.email_address FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id
连接数据库../datasets/cosql_dataset/database/dog_kennels/dog_kennels.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
extra pred: SELECT email_address FROM Professionals WHERE professional_id NOT IN (SELECT professional_id FROM Treatments)
extra gold: SELECT professional_id , role_code , email_address FROM Professionals EXCEPT SELECT T1.professional_id , T1.role_code , T1.email_address FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id

当前idx1
____________________
SELECT Id FROM car_makers WHERE Maker = "American Motor"
SELECT Id FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id   =   T2.Maker WHERE T1.FullName   =   'American Motor Company'
连接数据库../datasets/cosql_dataset/database/car_1/car_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT Id FROM car_makers WHERE Maker = "American Motor"
medium gold: SELECT Id FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id   =   T2.Maker WHERE T1.FullName   =   'American Motor Company'

当前idx2
____________________
SELECT ModelId FROM model_list WHERE Maker = (SELECT Id FROM car_makers WHERE Maker = "American Motor")
SELECT ModelId FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id   =   T2.Maker WHERE T1.Maker   =   'amc'
连接数据库../datasets/cosql_dataset/database/car_1/car_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT ModelId FROM model_list WHERE Maker = (SELECT Id FROM car_makers WHERE Maker = "American Motor")
medium gold: SELECT ModelId FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id   =   T2.Maker WHERE T1.Maker   =   'amc'

当前idx3
____________________
SELECT Maker FROM car_makers WHERE Id = 2
SELECT DISTINCT ( T1.Maker )  FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id   =   T2.Maker WHERE T1.Id  =  2
连接数据库../datasets/cosql_dataset/database/car_1/car_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:False
medium pred: SELECT Maker FROM car_makers WHERE Id = 2
medium gold: SELECT DISTINCT ( T1.Maker )  FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id   =   T2.Maker WHERE T1.Id  =  2

当前idx4
____________________
SELECT count(*) FROM model_list WHERE Maker = (SELECT Id FROM car_makers WHERE FullName = "American Motor Company")
SELECT count ( * )  FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id   =   T2.Maker WHERE T1.FullName   =   'American Motor Company'
连接数据库../datasets/cosql_dataset/database/car_1/car_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:0
medium pred: SELECT count(*) FROM model_list WHERE Maker = (SELECT Id FROM car_makers WHERE FullName = "American Motor Company")
medium gold: SELECT count ( * )  FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id   =   T2.Maker WHERE T1.FullName   =   'American Motor Company'

当前idx1
____________________
SELECT T2.Name ,  T3.Course FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID  =  T2.Teacher_ID JOIN course AS T3 ON T1.Course_ID  =  T3.Course_ID
SELECT T3.Name ,  T2.Course FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID   =   T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID   =   T3.Teacher_ID
连接数据库../datasets/cosql_dataset/database/course_teach/course_teach.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT T2.Name ,  T3.Course FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID  =  T2.Teacher_ID JOIN course AS T3 ON T1.Course_ID  =  T3.Course_ID ORDER BY T2.Name ASC
SELECT T3.Name ,  T2.Course FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID   =   T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID   =   T3.Teacher_ID ORDER BY T3.Name
连接数据库../datasets/cosql_dataset/database/course_teach/course_teach.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx3
____________________
SELECT T2.Name ,  T2.Teacher_ID ,  T3.Course FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID  =  T2.Teacher_ID JOIN course AS T3 ON T1.Course_ID  =  T3.Course_ID ORDER BY T2.Name ASC
SELECT T3.Name ,  T2.Course, T1.teacher_ID FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID   =   T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID   =   T3.Teacher_ID ORDER BY T3.Name
连接数据库../datasets/cosql_dataset/database/course_teach/course_teach.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx1
____________________
SELECT name FROM country
SELECT Name FROM country
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT governmentform FROM country
SELECT GovernmentForm FROM country
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx3
____________________
SELECT surfacearea FROM country
SELECT SurfaceArea FROM country
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx1
____________________
SELECT Language FROM TV_Channel WHERE series_name = "Sky Music"
SELECT Language FROM TV_Channel where series_name = 'Sky Music'
连接数据库../datasets/cosql_dataset/database/tvshow/tvshow.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT Package_Option FROM TV_Channel
SELECT distinct Package_Option FROM TV_Channel
连接数据库../datasets/cosql_dataset/database/tvshow/tvshow.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:True
当前idx3
____________________
SELECT Content FROM TV_Channel
SELECT distinct  Content FROM TV_Channel
连接数据库../datasets/cosql_dataset/database/tvshow/tvshow.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:True
当前idx1
____________________
SELECT LANGUAGE FROM TV_Channel GROUP BY LANGUAGE ORDER BY COUNT(*) ASC LIMIT 1
SELECT LANGUAGE FROM TV_Channel GROUP BY LANGUAGE ORDER BY count ( * )  ASC LIMIT 1
连接数据库../datasets/cosql_dataset/database/tvshow/tvshow.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT LANGUAGE FROM TV_Channel GROUP BY LANGUAGE ORDER BY COUNT(*) DESC LIMIT 1
SELECT LANGUAGE FROM TV_Channel GROUP BY LANGUAGE ORDER BY count ( * )  desc LIMIT 1
连接数据库../datasets/cosql_dataset/database/tvshow/tvshow.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx3
____________________
SELECT Content FROM TV_Channel GROUP BY Content ORDER BY COUNT(*) DESC LIMIT 1
SELECT content from tv_channel group by content order by count ( * )  desc limit 1
连接数据库../datasets/cosql_dataset/database/tvshow/tvshow.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx4
____________________
SELECT Content FROM TV_Channel GROUP BY Content ORDER BY COUNT(*) ASC LIMIT 1
SELECT content from tv_channel group by content order by count ( * )  limit 1
连接数据库../datasets/cosql_dataset/database/tvshow/tvshow.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx>4
____________________
SELECT series_name FROM TV_Channel GROUP BY series_name ORDER BY COUNT(*) ASC LIMIT 1
SELECT series_name from tv_channel
连接数据库../datasets/cosql_dataset/database/tvshow/tvshow.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
easy pred: SELECT series_name FROM TV_Channel GROUP BY series_name ORDER BY COUNT(*) ASC LIMIT 1
easy gold: SELECT series_name from tv_channel

当前idx1
____________________
SELECT first_name FROM Professionals UNION SELECT first_name FROM Owners
SELECT first_name FROM Professionals UNION SELECT first_name FROM Owners
连接数据库../datasets/cosql_dataset/database/dog_kennels/dog_kennels.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT first_name FROM Professionals UNION SELECT first_name FROM Owners EXCEPT SELECT name FROM Dogs
SELECT first_name FROM Professionals UNION SELECT first_name FROM Owners EXCEPT SELECT name FROM Dogs
连接数据库../datasets/cosql_dataset/database/dog_kennels/dog_kennels.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx3
____________________
SELECT first_name FROM Professionals UNION SELECT first_name FROM Owners INTERSECT SELECT name FROM Dogs
SELECT first_name FROM Professionals UNION SELECT first_name FROM Owners UNION SELECT name FROM Dogs
连接数据库../datasets/cosql_dataset/database/dog_kennels/dog_kennels.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
hard pred: SELECT first_name FROM Professionals UNION SELECT first_name FROM Owners INTERSECT SELECT name FROM Dogs
hard gold: SELECT first_name FROM Professionals UNION SELECT first_name FROM Owners UNION SELECT name FROM Dogs

当前idx1
____________________
SELECT T1.LName FROM student AS T1 JOIN has_pet AS T2 ON T1.StuID  =  T2.StuID
select lname from Student AS T1 JOIN Has_Pet AS T2 ON T2.stuid = T1.stuid
连接数据库../datasets/cosql_dataset/database/pets_1/pets_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT T1.LName FROM student AS T1 JOIN has_pet AS T2 ON T1.StuID  =  T2.StuID JOIN pets AS T3 ON T2.PetID  =  T3.PetID WHERE T3.PetType  =  "cat"
SELECT T1.lname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE  T3.pettype  =  'cat'
连接数据库../datasets/cosql_dataset/database/pets_1/pets_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx3
____________________
SELECT T1.LName FROM student AS T1 JOIN has_pet AS T2 ON T1.StuID  =  T2.StuID JOIN pets AS T3 ON T2.PetID  =  T3.PetID WHERE T3.PetType  =  "cat" AND T3.pet_age  =  3
SELECT T1.lname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pet_age  =  3 AND T3.pettype  =  'cat'
连接数据库../datasets/cosql_dataset/database/pets_1/pets_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx1
____________________
SELECT orchestra,major_record_format FROM orchestra
SELECT orchestra, Major_Record_Format  FROM orchestra
连接数据库../datasets/cosql_dataset/database/orchestra/orchestra.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT orchestra FROM orchestra ORDER BY orchestra ASC
SELECT orchestra FROM orchestra order by orchestra
连接数据库../datasets/cosql_dataset/database/orchestra/orchestra.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx3
____________________
SELECT Major_Record_Format FROM orchestra GROUP BY Major_Record_Format ORDER BY COUNT(*) ASC
SELECT Major_Record_Format FROM orchestra GROUP BY Major_Record_Format ORDER BY COUNT ( * )  ASC
连接数据库../datasets/cosql_dataset/database/orchestra/orchestra.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx1
____________________
SELECT count(Museum_ID) from museum
SELECT count ( Museum_ID  )  FROM museum
连接数据库../datasets/cosql_dataset/database/museum_visit/museum_visit.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT Num_of_Staff from museum where Museum_ID = 3
SELECT Num_of_Staff FROM museum where museum.Museum_ID  =  3
连接数据库../datasets/cosql_dataset/database/museum_visit/museum_visit.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx3
____________________
SELECT Open_Year from museum where Name = "Capital Plaza Museum"
SELECT Open_year FROM museum where Name = 'Capital Plaza Museum'
连接数据库../datasets/cosql_dataset/database/museum_visit/museum_visit.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx1
____________________
SELECT T1.Name FROM visitor AS T1 JOIN visit AS T2 ON T1.ID  =  T2.visitor_ID GROUP BY T1.Name HAVING COUNT(*)  >  1
SELECT  t1.name FROM visitor AS t1 JOIN visit AS t2 ON t1.id   =   t2.visitor_id GROUP BY t1.id HAVING count ( * )   >  1
连接数据库../datasets/cosql_dataset/database/museum_visit/museum_visit.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:0
medium pred: SELECT T1.Name FROM visitor AS T1 JOIN visit AS T2 ON T1.ID  =  T2.visitor_ID GROUP BY T1.Name HAVING COUNT(*)  >  1
medium gold: SELECT  t1.name FROM visitor AS t1 JOIN visit AS t2 ON t1.id   =   t2.visitor_id GROUP BY t1.id HAVING count ( * )   >  1

当前idx2
____________________
SELECT T1.ID, T1.Name, T1.Age FROM visitor AS T1 JOIN visit AS T2 ON T1.ID  =  T2.visitor_ID GROUP BY T1.Name HAVING COUNT(*)  >  1
SELECT  t1.name, t1.id, t1.age FROM visitor AS t1 JOIN visit AS t2 ON t1.id   =   t2.visitor_id GROUP BY t1.id HAVING count ( * )   >  1
连接数据库../datasets/cosql_dataset/database/museum_visit/museum_visit.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:0
medium pred: SELECT T1.ID, T1.Name, T1.Age FROM visitor AS T1 JOIN visit AS T2 ON T1.ID  =  T2.visitor_ID GROUP BY T1.Name HAVING COUNT(*)  >  1
medium gold: SELECT  t1.name, t1.id, t1.age FROM visitor AS t1 JOIN visit AS t2 ON t1.id   =   t2.visitor_id GROUP BY t1.id HAVING count ( * )   >  1

当前idx3
____________________
SELECT Name, Level_of_membership FROM visitor WHERE Age > 20
SELECT  name, Level_of_membership FROM visitor where age > 20
连接数据库../datasets/cosql_dataset/database/museum_visit/museum_visit.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx4
____________________
SELECT T1.Name, T1.Age FROM visitor AS T1 JOIN visit AS T2 ON T1.ID  =  T2.visitor_ID WHERE T2.Total_spent  >  100
SELECT  t1.name , t1.age FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id where t2.total_spent > 100
连接数据库../datasets/cosql_dataset/database/museum_visit/museum_visit.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx1
____________________
SELECT count(governmentform) FROM country
SELECT count ( GovernmentForm )  FROM country
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT count(*) FROM country WHERE lifeexpectancy  >  72
SELECT GovernmentForm FROM country GROUP BY GovernmentForm HAVING avg ( LifeExpectancy )   >  72
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
easy pred: SELECT count(*) FROM country WHERE lifeexpectancy  >  72
easy gold: SELECT GovernmentForm FROM country GROUP BY GovernmentForm HAVING avg ( LifeExpectancy )   >  72

当前idx3
____________________
SELECT sum(population) ,  governmentform FROM country WHERE lifeexpectancy  >  72 GROUP BY governmentform
SELECT sum ( Population )  ,  GovernmentForm FROM country GROUP BY GovernmentForm HAVING avg ( LifeExpectancy )   >  72
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT sum(population) ,  governmentform FROM country WHERE lifeexpectancy  >  72 GROUP BY governmentform
medium gold: SELECT sum ( Population )  ,  GovernmentForm FROM country GROUP BY GovernmentForm HAVING avg ( LifeExpectancy )   >  72

当前idx4
____________________
SELECT sum(population) ,  avg(lifeexpectancy) ,  governmentform FROM country WHERE lifeexpectancy  >  72 GROUP BY governmentform
SELECT avg ( LifeExpectancy )  FROM country GROUP BY GovernmentForm HAVING avg ( LifeExpectancy )   >  72
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
easy pred: SELECT sum(population) ,  avg(lifeexpectancy) ,  governmentform FROM country WHERE lifeexpectancy  >  72 GROUP BY governmentform
easy gold: SELECT avg ( LifeExpectancy )  FROM country GROUP BY GovernmentForm HAVING avg ( LifeExpectancy )   >  72

当前idx>4
____________________
SELECT governmentform ,  sum(population) FROM country WHERE lifeexpectancy  >  72 GROUP BY governmentform
SELECT sum ( Population )  ,  GovernmentForm FROM country GROUP BY GovernmentForm HAVING avg ( LifeExpectancy )   >  72
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT governmentform ,  sum(population) FROM country WHERE lifeexpectancy  >  72 GROUP BY governmentform
medium gold: SELECT sum ( Population )  ,  GovernmentForm FROM country GROUP BY GovernmentForm HAVING avg ( LifeExpectancy )   >  72

当前idx1
____________________
SELECT Level_of_membership FROM visitor WHERE ID = 1
SELECT Level_of_membership FROM visitor WHERE ID  =  1
连接数据库../datasets/cosql_dataset/database/museum_visit/museum_visit.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT Name FROM visitor WHERE ID = 1
SELECT Name FROM visitor WHERE ID  =  1
连接数据库../datasets/cosql_dataset/database/museum_visit/museum_visit.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx3
____________________
SELECT Age FROM visitor WHERE ID = 1
SELECT Age FROM visitor WHERE ID  =  1
连接数据库../datasets/cosql_dataset/database/museum_visit/museum_visit.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx1
____________________
SELECT T1.Airline FROM airlines AS T1 JOIN flights AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline ORDER BY count(*) DESC LIMIT 1
SELECT T1.airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid   =   T2.Airline GROUP BY T1.Airline ORDER BY count ( * )  desc LIMIT 1
连接数据库../datasets/cosql_dataset/database/flight_2/flight_2.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT T1.Airline FROM airlines AS T1 JOIN flights AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline ORDER BY count(*) ASC LIMIT 1
SELECT T1.airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid   =   T2.Airline GROUP BY T1.Airline ORDER BY count ( * )  asc LIMIT 1
连接数据库../datasets/cosql_dataset/database/flight_2/flight_2.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx3
____________________
SELECT Abbreviation FROM airlines WHERE Airline = "AirTran Airways"
SELECT abbreviation from airlines where airline =  "AirTran Airways"
连接数据库../datasets/cosql_dataset/database/flight_2/flight_2.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx4
____________________
SELECT Country FROM airlines WHERE Airline = "AirTran Airways"
SELECT country from airlines where airline =  "AirTran Airways"
连接数据库../datasets/cosql_dataset/database/flight_2/flight_2.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx1
____________________
SELECT id, name FROM battle
SELECT T1.id ,  T1.name FROM battle AS T1
连接数据库../datasets/cosql_dataset/database/battle_death/battle_death.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT T1.id ,  T1.name FROM battle AS T1 JOIN death AS T2 ON T1.id  =  T2.caused_by_ship_id GROUP BY T1.id HAVING count(*)  >  10
SELECT T1.id ,  T1.name FROM battle AS T1 JOIN ship AS T2 ON T1.id   =   T2.lost_in_battle JOIN death AS T3 ON T2.id   =   T3.caused_by_ship_id GROUP BY T1.id HAVING sum ( T3.killed )   >  10
连接数据库../datasets/cosql_dataset/database/battle_death/battle_death.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
hard pred: SELECT T1.id ,  T1.name FROM battle AS T1 JOIN death AS T2 ON T1.id  =  T2.caused_by_ship_id GROUP BY T1.id HAVING count(*)  >  10
hard gold: SELECT T1.id ,  T1.name FROM battle AS T1 JOIN ship AS T2 ON T1.id   =   T2.lost_in_battle JOIN death AS T3 ON T2.id   =   T3.caused_by_ship_id GROUP BY T1.id HAVING sum ( T3.killed )   >  10

当前idx3
____________________
SELECT T1.id ,  T1.name ,  T1.date FROM battle AS T1 JOIN death AS T2 ON T1.id  =  T2.caused_by_ship_id GROUP BY T1.id HAVING count(*)  >  10
SELECT T1.id ,  T1.name ,T1.date FROM battle AS T1 JOIN ship AS T2 ON T1.id   =   T2.lost_in_battle JOIN death AS T3 ON T2.id   =   T3.caused_by_ship_id GROUP BY T1.id HAVING sum ( T3.killed )   >  10
连接数据库../datasets/cosql_dataset/database/battle_death/battle_death.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
hard pred: SELECT T1.id ,  T1.name ,  T1.date FROM battle AS T1 JOIN death AS T2 ON T1.id  =  T2.caused_by_ship_id GROUP BY T1.id HAVING count(*)  >  10
hard gold: SELECT T1.id ,  T1.name ,T1.date FROM battle AS T1 JOIN ship AS T2 ON T1.id   =   T2.lost_in_battle JOIN death AS T3 ON T2.id   =   T3.caused_by_ship_id GROUP BY T1.id HAVING sum ( T3.killed )   >  10

当前idx1
____________________
SELECT avg(pet_age) FROM Pets WHERE PetType = "cat"
SELECT avg ( pet_age )  FROM pets WHERE PetType  =  'cat'
连接数据库../datasets/cosql_dataset/database/pets_1/pets_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT avg(pet_age) FROM Pets WHERE PetType = "dog"
SELECT avg ( pet_age )  FROM pets WHERE PetType  =  'dog'
连接数据库../datasets/cosql_dataset/database/pets_1/pets_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx3
____________________
SELECT max(pet_age) FROM Pets WHERE PetType = "dog"
SELECT max ( pet_age )  FROM pets WHERE PetType  =  'dog'
连接数据库../datasets/cosql_dataset/database/pets_1/pets_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx4
____________________
SELECT max(pet_age) FROM Pets WHERE PetType = "cat" UNION SELECT max(pet_age) FROM Pets WHERE PetType = "dog"
SELECT max ( pet_age )  ,  pettype FROM pets GROUP BY pettype
连接数据库../datasets/cosql_dataset/database/pets_1/pets_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT max(pet_age) FROM Pets WHERE PetType = "cat" UNION SELECT max(pet_age) FROM Pets WHERE PetType = "dog"
medium gold: SELECT max ( pet_age )  ,  pettype FROM pets GROUP BY pettype

当前idx>4
____________________
SELECT max(pet_age) FROM Pets WHERE PetType = "cat"
SELECT max ( pet_age )  FROM pets WHERE PetType  =  'cat'
连接数据库../datasets/cosql_dataset/database/pets_1/pets_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx1
____________________
SELECT FullName FROM car_makers WHERE Maker = "AMC"
select fullname from car_makers where maker  =  "amc"
连接数据库../datasets/cosql_dataset/database/car_1/car_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:True
当前idx2
eval_err_num:58
____________________
SELECT T1.Model FROM model_list AS T1 JOIN car_names AS T2 ON T1.Model = T2.Model JOIN cars_data AS T3 ON T2.MakeId = T3.MakeId JOIN car_makers AS T4 ON T4.Id = T3.MakeId WHERE T4.Country = "Germany"
SELECT T3.model FROM Countries AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId   =   T2.Country JOIN MODEL_LIST AS T3 ON T2.Id   =   T3.Maker WHERE T1.countryname  =  "germany"
连接数据库../datasets/cosql_dataset/database/car_1/car_1.sqlite
执行第一个查询
执行出错: no such column: T3.MakeId
eval_exec:False
exact_score:0
hard pred: SELECT T1.Model FROM model_list AS T1 JOIN car_names AS T2 ON T1.Model = T2.Model JOIN cars_data AS T3 ON T2.MakeId = T3.MakeId JOIN car_makers AS T4 ON T4.Id = T3.MakeId WHERE T4.Country = "Germany"
hard gold: SELECT T3.model FROM Countries AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId   =   T2.Country JOIN MODEL_LIST AS T3 ON T2.Id   =   T3.Maker WHERE T1.countryname  =  "germany"

当前idx3
eval_err_num:59
____________________
SELECT T1.ModelId FROM model_list AS T1 JOIN car_names AS T2 ON T1.Model = T2.Model JOIN cars_data AS T3 ON T2.MakeId = T3.MakeId JOIN car_makers AS T4 ON T4.Id = T3.MakeId WHERE T4.Country = "Germany"
SELECT modelid from model_list where model  =  "bmw"
连接数据库../datasets/cosql_dataset/database/car_1/car_1.sqlite
执行第一个查询
执行出错: no such column: T3.MakeId
eval_exec:False
exact_score:0
easy pred: SELECT T1.ModelId FROM model_list AS T1 JOIN car_names AS T2 ON T1.Model = T2.Model JOIN cars_data AS T3 ON T2.MakeId = T3.MakeId JOIN car_makers AS T4 ON T4.Id = T3.MakeId WHERE T4.Country = "Germany"
easy gold: SELECT modelid from model_list where model  =  "bmw"

当前idx4
eval_err_num:60
____________________
SELECT T1.CountryId ,  T2.CountryName FROM countries AS T1 JOIN (SELECT T2.Country ,  COUNT(*) AS ModelCount FROM countries AS T1 JOIN model_list AS T2 ON T1.CountryId  =  T2.Country GROUP BY T2.Country) AS T3 ON T1.CountryId  =  T3.Country WHERE T3.ModelCount  >  3 OR T3.Country  =  "Germany"
SELECT T1.countryId ,  T1.CountryName FROM Countries AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId   =   T2.Country GROUP BY T1.countryId HAVING count ( * )   >  3 UNION SELECT T1.countryId ,  T1.CountryName FROM Countries AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId   =   T2.Country JOIN MODEL_LIST AS T3 ON T2.Id   =   T3.Maker WHERE T3.Model   =   'fiat'
连接数据库../datasets/cosql_dataset/database/car_1/car_1.sqlite
执行第一个查询
执行出错: no such column: T2.Country
eval_exec:False
exact_score:0
extra pred: SELECT T1.CountryId ,  T2.CountryName FROM countries AS T1 JOIN (SELECT T2.Country ,  COUNT(*) AS ModelCount FROM countries AS T1 JOIN model_list AS T2 ON T1.CountryId  =  T2.Country GROUP BY T2.Country) AS T3 ON T1.CountryId  =  T3.Country WHERE T3.ModelCount  >  3 OR T3.Country  =  "Germany"
extra gold: SELECT T1.countryId ,  T1.CountryName FROM Countries AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId   =   T2.Country GROUP BY T1.countryId HAVING count ( * )   >  3 UNION SELECT T1.countryId ,  T1.CountryName FROM Countries AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId   =   T2.Country JOIN MODEL_LIST AS T3 ON T2.Id   =   T3.Maker WHERE T3.Model   =   'fiat'

当前idx1
____________________
SELECT T1.cell_number FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id ORDER BY count(*) DESC LIMIT 1
SELECT T1.cell_number FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id   =   T2.professional_id GROUP BY T1.professional_id order by count ( * )   desc limit 1
连接数据库../datasets/cosql_dataset/database/dog_kennels/dog_kennels.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT T1.professional_id FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >=  2
SELECT T1.professional_id  FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id   =   T2.professional_id GROUP BY T1.professional_id HAVING count ( * )    > =    2
连接数据库../datasets/cosql_dataset/database/dog_kennels/dog_kennels.sqlite
执行第一个查询
执行第二个查询
执行出错: near "=": syntax error
eval_exec:False
exact_score:True
当前idx3
____________________
SELECT COUNT(*) FROM (SELECT T1.professional_id FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  =  1)
select count ( * )  from  ( SELECT *  FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id   =   T2.professional_id GROUP BY T1.professional_id HAVING count ( * )    =  1 ) 
连接数据库../datasets/cosql_dataset/database/dog_kennels/dog_kennels.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:False
easy pred: SELECT COUNT(*) FROM (SELECT T1.professional_id FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  =  1)
easy gold: select count ( * )  from  ( SELECT *  FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id   =   T2.professional_id GROUP BY T1.professional_id HAVING count ( * )    =  1 ) 

当前idx1
____________________
SELECT T1.Document_ID FROM Documents AS T1 JOIN Paragraphs AS T2 ON T1.Document_ID  =  T2.Document_ID GROUP BY T1.Document_ID HAVING count(*)  <=  2
SELECT document_id FROM Paragraphs GROUP BY document_id HAVING count ( * )  BETWEEN 1 AND 2
连接数据库../datasets/cosql_dataset/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:0
easy pred: SELECT T1.Document_ID FROM Documents AS T1 JOIN Paragraphs AS T2 ON T1.Document_ID  =  T2.Document_ID GROUP BY T1.Document_ID HAVING count(*)  <=  2
easy gold: SELECT document_id FROM Paragraphs GROUP BY document_id HAVING count ( * )  BETWEEN 1 AND 2

当前idx2
____________________
SELECT T2.Paragraph_Text FROM Documents AS T1 JOIN Paragraphs AS T2 ON T1.Document_ID  =  T2.Document_ID GROUP BY T1.Document_ID HAVING count(*)  <=  2
SELECT Paragraph_Text FROM Paragraphs GROUP BY document_id HAVING count ( * )  BETWEEN 1 AND 2
连接数据库../datasets/cosql_dataset/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:0
easy pred: SELECT T2.Paragraph_Text FROM Documents AS T1 JOIN Paragraphs AS T2 ON T1.Document_ID  =  T2.Document_ID GROUP BY T1.Document_ID HAVING count(*)  <=  2
easy gold: SELECT Paragraph_Text FROM Paragraphs GROUP BY document_id HAVING count ( * )  BETWEEN 1 AND 2

当前idx1
____________________
SELECT Name FROM teacher ORDER BY Age DESC LIMIT 1
select name from teacher order by Age asc limit 1
连接数据库../datasets/cosql_dataset/database/course_teach/course_teach.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT Name FROM teacher ORDER BY Age DESC LIMIT 1
medium gold: select name from teacher order by Age asc limit 1

当前idx2
____________________
SELECT Hometown FROM teacher ORDER BY Age DESC LIMIT 1
select Hometown from teacher order by Age asc limit 1
连接数据库../datasets/cosql_dataset/database/course_teach/course_teach.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT Hometown FROM teacher ORDER BY Age DESC LIMIT 1
medium gold: select Hometown from teacher order by Age asc limit 1

当前idx3
____________________
SELECT Age FROM teacher where Name = "Vicente Carretero"
select Age from teacher where Name = 'Vicente Carretero'
连接数据库../datasets/cosql_dataset/database/course_teach/course_teach.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx1
eval_err_num:61
____________________

SELECT fname, lname FROM student WHERE sex   =   'F'
连接数据库../datasets/cosql_dataset/database/pets_1/pets_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: 
medium gold: SELECT fname, lname FROM student WHERE sex   =   'F'

当前idx2
eval_err_num:62
____________________

SELECT DISTINCT city_code FROM student
连接数据库../datasets/cosql_dataset/database/pets_1/pets_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
easy pred: 
easy gold: SELECT DISTINCT city_code FROM student

当前idx3
eval_err_num:63
____________________

SELECT T3.weight FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid   =   T2.stuid JOIN pets AS T3 ON T2.petid   =   T3.petid WHERE T1.sex   =   'F'
连接数据库../datasets/cosql_dataset/database/pets_1/pets_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
hard pred: 
hard gold: SELECT T3.weight FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid   =   T2.stuid JOIN pets AS T3 ON T2.petid   =   T3.petid WHERE T1.sex   =   'F'

当前idx1
____________________
SELECT Id FROM CARS_DATA ORDER BY Horsepower ASC LIMIT 1
SELECT id from cars_data order by horsepower limit 1
连接数据库../datasets/cosql_dataset/database/car_1/car_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT avg(Horsepower) FROM CARS_DATA
SELECT avg ( horsepower ) from cars_data
连接数据库../datasets/cosql_dataset/database/car_1/car_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx3
____________________
SELECT Id FROM CARS_DATA WHERE Horsepower  <  (SELECT avg(Horsepower) FROM CARS_DATA)
SELECT T1.Id FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id   =   T2.MakeId WHERE T1.Horsepower <  ( SELECT avg ( Horsepower )  FROM CARS_DATA ) 
连接数据库../datasets/cosql_dataset/database/car_1/car_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:False
extra pred: SELECT Id FROM CARS_DATA WHERE Horsepower  <  (SELECT avg(Horsepower) FROM CARS_DATA)
extra gold: SELECT T1.Id FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id   =   T2.MakeId WHERE T1.Horsepower <  ( SELECT avg ( Horsepower )  FROM CARS_DATA ) 

当前idx4
eval_err_num:64
____________________
SELECT T1.Model ,  T2.Make ,  T1.Id FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.MakeId  =  T2.MakeId WHERE T1.Horsepower  <  (SELECT avg(Horsepower) FROM CARS_DATA)
SELECT T1.Id ,T2.model FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id   =   T2.MakeId WHERE T1.Horsepower <  ( SELECT avg ( Horsepower )  FROM CARS_DATA ) 
连接数据库../datasets/cosql_dataset/database/car_1/car_1.sqlite
执行第一个查询
执行出错: no such column: T1.Model
eval_exec:False
exact_score:0
extra pred: SELECT T1.Model ,  T2.Make ,  T1.Id FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.MakeId  =  T2.MakeId WHERE T1.Horsepower  <  (SELECT avg(Horsepower) FROM CARS_DATA)
extra gold: SELECT T1.Id ,T2.model FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id   =   T2.MakeId WHERE T1.Horsepower <  ( SELECT avg ( Horsepower )  FROM CARS_DATA ) 

当前idx1
____________________
SELECT * FROM Transcripts ORDER BY transcript_date DESC LIMIT 1
SELECT transcript_id FROM Transcripts ORDER BY transcript_date DESC LIMIT 1
连接数据库../datasets/cosql_dataset/database/student_transcripts_tracking/student_transcripts_tracking.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT * FROM Transcripts ORDER BY transcript_date DESC LIMIT 1
medium gold: SELECT transcript_id FROM Transcripts ORDER BY transcript_date DESC LIMIT 1

当前idx2
____________________
SELECT transcript_date FROM Transcripts WHERE transcript_id = 5
SELECT transcript_date FROM Transcripts WHERE transcript_id  =  5
连接数据库../datasets/cosql_dataset/database/student_transcripts_tracking/student_transcripts_tracking.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx1
____________________
SELECT transcript_date, transcript_id FROM Transcripts AS T1 JOIN Transcript_Contents AS T2 ON T1.transcript_id = T2.transcript_id GROUP BY T1.transcript_id HAVING count(*) >= 2
SELECT T2.transcript_date ,  T1.transcript_id FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id   =   T2.transcript_id GROUP BY T1.transcript_id HAVING count ( * )    > =    2
连接数据库../datasets/cosql_dataset/database/student_transcripts_tracking/student_transcripts_tracking.sqlite
执行第一个查询
执行出错: ambiguous column name: transcript_id
eval_exec:False
exact_score:True
当前idx2
____________________
SELECT T1.other_details FROM Transcripts AS T1 JOIN Transcript_Contents AS T2 ON T1.transcript_id = T2.transcript_id GROUP BY T1.transcript_id HAVING count(*) >= 2
SELECT T2.other_details FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id   =   T2.transcript_id GROUP BY T1.transcript_id HAVING count ( * )    > =    2
连接数据库../datasets/cosql_dataset/database/student_transcripts_tracking/student_transcripts_tracking.sqlite
执行第一个查询
执行第二个查询
执行出错: near "=": syntax error
eval_exec:False
exact_score:True
当前idx3
____________________
SELECT T1.transcript_date FROM Transcripts AS T1 JOIN Transcript_Contents AS T2 ON T1.transcript_id = T2.transcript_id GROUP BY T1.transcript_id HAVING count(*) >= 2
SELECT T2.transcript_date FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id   =   T2.transcript_id GROUP BY T1.transcript_id HAVING count ( * )    > =    2
连接数据库../datasets/cosql_dataset/database/student_transcripts_tracking/student_transcripts_tracking.sqlite
执行第一个查询
执行第二个查询
执行出错: near "=": syntax error
eval_exec:False
exact_score:True
当前idx1
____________________
SELECT id FROM Highschooler
select student_id from Friend
连接数据库../datasets/cosql_dataset/database/network_1/network_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:False
easy pred: SELECT id FROM Highschooler
easy gold: select student_id from Friend

当前idx1
____________________
SELECT email_address FROM Professionals WHERE state  =  "Hawaii"
SELECT email_address FROM Professionals WHERE state   =   'Hawaii'
连接数据库../datasets/cosql_dataset/database/dog_kennels/dog_kennels.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT email_address FROM Professionals WHERE state  =  "Wisconsin"
SELECT email_address FROM Professionals WHERE state   =   'Wisconsin'
连接数据库../datasets/cosql_dataset/database/dog_kennels/dog_kennels.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx3
____________________
SELECT first_name FROM Professionals WHERE role_code  =  "Employee"
SELECT first_name FROM Professionals WHERE role_code   =   'Employee'
连接数据库../datasets/cosql_dataset/database/dog_kennels/dog_kennels.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx1
____________________
SELECT semester_name, count(*) FROM Semesters AS T1 JOIN Student_Enrolment AS T2 ON T1.semester_id = T2.semester_id GROUP BY T1.semester_id
SELECT T1.semester_name, count ( * )  from semesters as T1 join student_enrolment as T2 on T1.semester_id  =  T2.semester_id group by T2.semester_id
连接数据库../datasets/cosql_dataset/database/student_transcripts_tracking/student_transcripts_tracking.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT semester_name FROM Semesters WHERE semester_id = (SELECT semester_id FROM Student_Enrolment GROUP BY semester_id ORDER BY count(*) DESC LIMIT 1)
SELECT T1.semester_name from semesters as T1 join student_enrolment as T2 on T1.semester_id  =  T2.semester_id group by T2.semester_id order by count ( * )  desc limit 1
连接数据库../datasets/cosql_dataset/database/student_transcripts_tracking/student_transcripts_tracking.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:0
extra pred: SELECT semester_name FROM Semesters WHERE semester_id = (SELECT semester_id FROM Student_Enrolment GROUP BY semester_id ORDER BY count(*) DESC LIMIT 1)
extra gold: SELECT T1.semester_name from semesters as T1 join student_enrolment as T2 on T1.semester_id  =  T2.semester_id group by T2.semester_id order by count ( * )  desc limit 1

当前idx3
____________________
SELECT student_enrolment_id, degree_program_id FROM Student_Enrolment
SELECT student_enrolment_id, degree_program_id from  Student_Enrolment
连接数据库../datasets/cosql_dataset/database/student_transcripts_tracking/student_transcripts_tracking.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx4
____________________
SELECT semester_name FROM Semesters WHERE semester_id NOT IN (SELECT semester_id FROM Student_Enrolment)
sELECT semester_name FROM Semesters WHERE semester_id NOT IN (  SELECT semester_id FROM Student_Enrolment  ) 
连接数据库../datasets/cosql_dataset/database/student_transcripts_tracking/student_transcripts_tracking.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx1
____________________
SELECT country.Name FROM country WHERE country.Code NOT IN (SELECT countrycode FROM countrylanguage WHERE language = "English")
SELECT name FROM country WHERE Name NOT IN  ( SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code   =   T2.CountryCode WHERE T2.Language   =   "English" AND T2.IsOfficial   =   "T" ) 
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
hard pred: SELECT country.Name FROM country WHERE country.Code NOT IN (SELECT countrycode FROM countrylanguage WHERE language = "English")
hard gold: SELECT name FROM country WHERE Name NOT IN  ( SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code   =   T2.CountryCode WHERE T2.Language   =   "English" AND T2.IsOfficial   =   "T" ) 

当前idx2
____________________
SELECT avg(lifeexpectancy) ,  country.Name FROM country WHERE country.Code NOT IN (SELECT countrycode FROM countrylanguage WHERE language  =  "English") GROUP BY country.Name
SELECT avg ( LifeExpectancy )  FROM country WHERE Name NOT IN  ( SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code   =   T2.CountryCode WHERE T2.Language   =   "English" AND T2.IsOfficial   =   "T" ) 
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
extra pred: SELECT avg(lifeexpectancy) ,  country.Name FROM country WHERE country.Code NOT IN (SELECT countrycode FROM countrylanguage WHERE language  =  "English") GROUP BY country.Name
extra gold: SELECT avg ( LifeExpectancy )  FROM country WHERE Name NOT IN  ( SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code   =   T2.CountryCode WHERE T2.Language   =   "English" AND T2.IsOfficial   =   "T" ) 

当前idx3
____________________
SELECT avg(lifeexpectancy) ,  country.Name FROM country WHERE country.Code NOT IN (SELECT countrycode FROM countrylanguage WHERE language  =  "English") GROUP BY country.Name
SELECT avg ( LifeExpectancy )  FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code   =   T2.CountryCode WHERE T2.Language   =   "English" AND T2.IsOfficial   =   "T"
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT avg(lifeexpectancy) ,  country.Name FROM country WHERE country.Code NOT IN (SELECT countrycode FROM countrylanguage WHERE language  =  "English") GROUP BY country.Name
medium gold: SELECT avg ( LifeExpectancy )  FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code   =   T2.CountryCode WHERE T2.Language   =   "English" AND T2.IsOfficial   =   "T"

当前idx1
____________________
SELECT * FROM flights AS T1 JOIN airports AS T2 ON T1.SourceAirport  =  T2.AirportCode JOIN airports AS T3 ON T1.DestAirport  =  T3.AirportCode WHERE T2.City  =  "CVO" AND T3.City  =  "SNA"
SELECT FlightNo FROM flights where SourceAirport = "CVO" and DestAirport = "SNA"
连接数据库../datasets/cosql_dataset/database/flight_2/flight_2.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT * FROM flights AS T1 JOIN airports AS T2 ON T1.SourceAirport  =  T2.AirportCode JOIN airports AS T3 ON T1.DestAirport  =  T3.AirportCode WHERE T2.City  =  "CVO" AND T3.City  =  "SNA"
medium gold: SELECT FlightNo FROM flights where SourceAirport = "CVO" and DestAirport = "SNA"

当前idx2
____________________
SELECT * FROM flights AS T1 JOIN airports AS T2 ON T1.SourceAirport  =  T2.AirportCode JOIN airports AS T3 ON T1.DestAirport  =  T3.AirportCode WHERE T2.City  =  "CVO" AND T3.City  =  "DFW"
SELECT * FROM flights where SourceAirport = "CVO" and DestAirport = "DFW"
连接数据库../datasets/cosql_dataset/database/flight_2/flight_2.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:0
medium pred: SELECT * FROM flights AS T1 JOIN airports AS T2 ON T1.SourceAirport  =  T2.AirportCode JOIN airports AS T3 ON T1.DestAirport  =  T3.AirportCode WHERE T2.City  =  "CVO" AND T3.City  =  "DFW"
medium gold: SELECT * FROM flights where SourceAirport = "CVO" and DestAirport = "DFW"

当前idx3
____________________
SELECT DISTINCT T1.Airline FROM flights AS T1 JOIN airports AS T2 ON T1.SourceAirport  =  T2.AirportCode WHERE T2.City  =  "CVO"
SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid   =   T2.Airline WHERE T2.SourceAirport   =   " CVO"
连接数据库../datasets/cosql_dataset/database/flight_2/flight_2.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT DISTINCT T1.Airline FROM flights AS T1 JOIN airports AS T2 ON T1.SourceAirport  =  T2.AirportCode WHERE T2.City  =  "CVO"
medium gold: SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid   =   T2.Airline WHERE T2.SourceAirport   =   " CVO"

当前idx1
eval_err_num:65
____________________
SELECT T1.series_name FROM TV_Channel AS T1 JOIN TV_series AS T2 ON T1.id  =  T2.channel WHERE T2.series_name  =  "A love of a lifetime"
SELECT T1.series_name FROM TV_Channel AS T1 JOIN TV_series AS T2 ON T1.id  =  T2.Channel WHERE T2.Episode  =  "A Love of a Lifetime"
连接数据库../datasets/cosql_dataset/database/tvshow/tvshow.sqlite
执行第一个查询
执行出错: no such column: T2.series_name
eval_exec:False
exact_score:0
medium pred: SELECT T1.series_name FROM TV_Channel AS T1 JOIN TV_series AS T2 ON T1.id  =  T2.channel WHERE T2.series_name  =  "A love of a lifetime"
medium gold: SELECT T1.series_name FROM TV_Channel AS T1 JOIN TV_series AS T2 ON T1.id  =  T2.Channel WHERE T2.Episode  =  "A Love of a Lifetime"

当前idx2
eval_err_num:66
____________________
SELECT T2.viewers_m FROM TV_Channel AS T1 JOIN TV_series AS T2 ON T1.id  =  T2.channel WHERE T2.series_name  =  "A love of a lifetime"
SELECT  Viewers_m FROM  TV_series  where Episode  =  "A Love of a Lifetime"
连接数据库../datasets/cosql_dataset/database/tvshow/tvshow.sqlite
执行第一个查询
执行出错: no such column: T2.series_name
eval_exec:False
exact_score:0
easy pred: SELECT T2.viewers_m FROM TV_Channel AS T1 JOIN TV_series AS T2 ON T1.id  =  T2.channel WHERE T2.series_name  =  "A love of a lifetime"
easy gold: SELECT  Viewers_m FROM  TV_series  where Episode  =  "A Love of a Lifetime"

当前idx3
eval_err_num:67
____________________
SELECT T2.Rating FROM TV_Channel AS T1 JOIN TV_series AS T2 ON T1.id  =  T2.channel WHERE T2.series_name  =  "A love of a lifetime"
SELECT  Weekly_Rank  FROM  TV_series  where Episode  =  "A Love of a Lifetime"
连接数据库../datasets/cosql_dataset/database/tvshow/tvshow.sqlite
执行第一个查询
执行出错: no such column: T2.series_name
eval_exec:False
exact_score:0
easy pred: SELECT T2.Rating FROM TV_Channel AS T1 JOIN TV_series AS T2 ON T1.id  =  T2.channel WHERE T2.series_name  =  "A love of a lifetime"
easy gold: SELECT  Weekly_Rank  FROM  TV_series  where Episode  =  "A Love of a Lifetime"

当前idx4
eval_err_num:68
____________________
SELECT T2.Air_Date FROM TV_Channel AS T1 JOIN TV_series AS T2 ON T1.id  =  T2.channel WHERE T2.series_name  =  "A love of a lifetime"
SELECT  Air_Date  FROM  TV_series  where Episode  =  "A Love of a Lifetime"
连接数据库../datasets/cosql_dataset/database/tvshow/tvshow.sqlite
执行第一个查询
执行出错: no such column: T2.series_name
eval_exec:False
exact_score:0
easy pred: SELECT T2.Air_Date FROM TV_Channel AS T1 JOIN TV_series AS T2 ON T1.id  =  T2.channel WHERE T2.series_name  =  "A love of a lifetime"
easy gold: SELECT  Air_Date  FROM  TV_series  where Episode  =  "A Love of a Lifetime"

当前idx1
____________________
SELECT player_id FROM players ORDER BY birth_date LIMIT 1
SELECT player_id FROM players ORDER BY birth_date desc LIMIT 1
连接数据库../datasets/cosql_dataset/database/wta_1/wta_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT player_id FROM players ORDER BY birth_date LIMIT 1
medium gold: SELECT player_id FROM players ORDER BY birth_date desc LIMIT 1

当前idx2
____________________
SELECT player_id FROM players ORDER BY birth_date DESC LIMIT 1
SELECT player_id FROM players ORDER BY birth_date LIMIT 1
连接数据库../datasets/cosql_dataset/database/wta_1/wta_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT player_id FROM players ORDER BY birth_date DESC LIMIT 1
medium gold: SELECT player_id FROM players ORDER BY birth_date LIMIT 1

当前idx3
____________________
SELECT first_name ,  country_code FROM players ORDER BY birth_date DESC LIMIT 1
SELECT first_name, country_code FROM players ORDER BY birth_date LIMIT 1
连接数据库../datasets/cosql_dataset/database/wta_1/wta_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT first_name ,  country_code FROM players ORDER BY birth_date DESC LIMIT 1
medium gold: SELECT first_name, country_code FROM players ORDER BY birth_date LIMIT 1

当前idx1
____________________
SELECT T2.Name FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID  =  T2.Teacher_ID GROUP BY T2.Name HAVING COUNT(*)  >=  2
SELECT T2.Name FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID   =   T2.Teacher_ID GROUP BY T2.Name HAVING COUNT ( * )    > =    2
连接数据库../datasets/cosql_dataset/database/course_teach/course_teach.sqlite
执行第一个查询
执行第二个查询
执行出错: near "=": syntax error
eval_exec:False
exact_score:True
当前idx2
____________________
SELECT T2.Age ,  T2.Hometown FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID  =  T2.Teacher_ID GROUP BY T2.Name HAVING COUNT(*)  >=  2
SELECT T2.age, t2.hometown FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID   =   T2.Teacher_ID GROUP BY T2.Name HAVING COUNT ( * )    > =    2
连接数据库../datasets/cosql_dataset/database/course_teach/course_teach.sqlite
执行第一个查询
执行第二个查询
执行出错: near "=": syntax error
eval_exec:False
exact_score:True
当前idx3
____________________
SELECT max(T1.Grade) FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID  =  T2.Teacher_ID GROUP BY T2.Name HAVING COUNT(*)  >=  2
SELECT t1.grade FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID   =   T2.Teacher_ID order by t2.age desc limit 1
连接数据库../datasets/cosql_dataset/database/course_teach/course_teach.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
hard pred: SELECT max(T1.Grade) FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID  =  T2.Teacher_ID GROUP BY T2.Name HAVING COUNT(*)  >=  2
hard gold: SELECT t1.grade FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID   =   T2.Teacher_ID order by t2.age desc limit 1

当前idx1
____________________
SELECT max(Num_of_Ticket) FROM visit
SELECT max ( num_of_ticket )  FROM visit
连接数据库../datasets/cosql_dataset/database/museum_visit/museum_visit.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT avg(Num_of_Ticket) FROM visit
SELECT avg ( num_of_ticket )  FROM visit
连接数据库../datasets/cosql_dataset/database/museum_visit/museum_visit.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx1
____________________
SELECT count(*) FROM ship
SELECT   count ( * )   from ship
连接数据库../datasets/cosql_dataset/database/battle_death/battle_death.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT name FROM ship
SELECT  name  from ship
连接数据库../datasets/cosql_dataset/database/battle_death/battle_death.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx1
____________________
SELECT name FROM singer ORDER BY age LIMIT 1
SELECT Name FROM singer ORDER BY age LIMIT 1
连接数据库../datasets/cosql_dataset/database/concert_singer/concert_singer.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT song_name FROM singer WHERE name = "Tribal King"
SELECT Song_Name FROM singer where name  =  'Tribal King'
连接数据库../datasets/cosql_dataset/database/concert_singer/concert_singer.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx3
____________________
SELECT song_release_year FROM singer WHERE name = "Tribal King"
SELECT song_release_year FROM singer where name  =  'Tribal King'
连接数据库../datasets/cosql_dataset/database/concert_singer/concert_singer.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx1
____________________
SELECT Name FROM country WHERE Continent  =  "Europe"
SELECT Name FROM country WHERE continent   =   "Europe"
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT Name FROM country WHERE Continent  =  "Europe" AND Population  =  80000
SELECT Name FROM country WHERE continent   =   "Europe" AND Population   =   "80000"
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx1
____________________
SELECT Name FROM singer
SELECT Name FROM singer
连接数据库../datasets/cosql_dataset/database/singer/singer.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx1
____________________
SELECT department_name FROM Departments WHERE department_name LIKE "%computer%"
SELECT department_name FROM Departments WHERE department_name LIKE '%computer%'
连接数据库../datasets/cosql_dataset/database/student_transcripts_tracking/student_transcripts_tracking.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT department_description FROM Departments WHERE department_name LIKE "%computer%"
SELECT department_description FROM Departments WHERE department_name LIKE '%computer%'
连接数据库../datasets/cosql_dataset/database/student_transcripts_tracking/student_transcripts_tracking.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx3
____________________
SELECT department_id FROM Departments WHERE department_name LIKE "%computer%"
SELECT department_id FROM Departments WHERE department_name LIKE '%computer%'
连接数据库../datasets/cosql_dataset/database/student_transcripts_tracking/student_transcripts_tracking.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx4
____________________
SELECT other_details FROM Departments WHERE department_name LIKE "%history%"
SELECT other_details FROM Departments WHERE department_name  =  "history"
连接数据库../datasets/cosql_dataset/database/student_transcripts_tracking/student_transcripts_tracking.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:0
easy pred: SELECT other_details FROM Departments WHERE department_name LIKE "%history%"
easy gold: SELECT other_details FROM Departments WHERE department_name  =  "history"

当前idx1
____________________
SELECT count(*) FROM CARS_DATA
SELECT sum ( Cylinders )  FROM cars_data
连接数据库../datasets/cosql_dataset/database/car_1/car_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
easy pred: SELECT count(*) FROM CARS_DATA
easy gold: SELECT sum ( Cylinders )  FROM cars_data

当前idx2
____________________
SELECT weight FROM CARS_DATA order by weight desc limit 1
SELECT Weight FROM cars_data ORDER BY Weight DESC LIMIT 1
连接数据库../datasets/cosql_dataset/database/car_1/car_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx3
____________________
SELECT count(*) FROM CARS_DATA
SELECT count ( * )  FROM cars_data
连接数据库../datasets/cosql_dataset/database/car_1/car_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx4
____________________
SELECT accelerate FROM CARS_DATA order by accelerate desc limit 1
SELECT accelerate FROM cars_data ORDER BY accelerate DESC LIMIT 1
连接数据库../datasets/cosql_dataset/database/car_1/car_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx>4
____________________
SELECT edispl FROM CARS_DATA order by edispl desc limit 1
SELECT T1.horsepower FROM CARS_DATA AS T1 ORDER BY T1.accelerate DESC LIMIT 1
连接数据库../datasets/cosql_dataset/database/car_1/car_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT edispl FROM CARS_DATA order by edispl desc limit 1
medium gold: SELECT T1.horsepower FROM CARS_DATA AS T1 ORDER BY T1.accelerate DESC LIMIT 1

当前idx1
____________________
SELECT Age FROM singer WHERE Name = "Joe Sharp"
SELECT age from singer where name  =  "Joe Sharp"
连接数据库../datasets/cosql_dataset/database/concert_singer/concert_singer.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT count(*) FROM singer WHERE Country = "USA"
select count ( * )  from singer where country  =  "United States"
连接数据库../datasets/cosql_dataset/database/concert_singer/concert_singer.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:True
当前idx3
____________________
SELECT count(*) FROM singer WHERE Is_male = 1
select count ( * )  from singer where Is_male  =  "True"
连接数据库../datasets/cosql_dataset/database/concert_singer/concert_singer.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx1
____________________
SELECT T2.Model FROM car_names AS T1 JOIN model_list AS T2 ON T1.Model  =  T2.Model WHERE T1.Make  =  "General Motors"
SELECT DISTINCT T2.Model FROM CAR_NAMES AS T1 JOIN MODEL_LIST AS T2 ON T1.Model   =   T2.Model JOIN CAR_MAKERS AS T3 ON T2.Maker   =   T3.Id JOIN CARS_DATA AS T4 ON T1.MakeId   =   T4.Id WHERE T3.FullName   =   'General Motors'
连接数据库../datasets/cosql_dataset/database/car_1/car_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
extra pred: SELECT T2.Model FROM car_names AS T1 JOIN model_list AS T2 ON T1.Model  =  T2.Model WHERE T1.Make  =  "General Motors"
extra gold: SELECT DISTINCT T2.Model FROM CAR_NAMES AS T1 JOIN MODEL_LIST AS T2 ON T1.Model   =   T2.Model JOIN CAR_MAKERS AS T3 ON T2.Maker   =   T3.Id JOIN CARS_DATA AS T4 ON T1.MakeId   =   T4.Id WHERE T3.FullName   =   'General Motors'

当前idx2
eval_err_num:69
____________________
SELECT T2.Model FROM car_names AS T1 JOIN model_list AS T2 ON T1.Model  =  T2.Model WHERE T1.Make  =  "General Motors" AND T1.Weight  >  3500
SELECT DISTINCT T2.Model FROM CAR_NAMES AS T1 JOIN MODEL_LIST AS T2 ON T1.Model   =   T2.Model JOIN CAR_MAKERS AS T3 ON T2.Maker   =   T3.Id JOIN CARS_DATA AS T4 ON T1.MakeId   =   T4.Id WHERE T4.weight  >  3500
连接数据库../datasets/cosql_dataset/database/car_1/car_1.sqlite
执行第一个查询
执行出错: no such column: T1.Weight
eval_exec:False
exact_score:0
extra pred: SELECT T2.Model FROM car_names AS T1 JOIN model_list AS T2 ON T1.Model  =  T2.Model WHERE T1.Make  =  "General Motors" AND T1.Weight  >  3500
extra gold: SELECT DISTINCT T2.Model FROM CAR_NAMES AS T1 JOIN MODEL_LIST AS T2 ON T1.Model   =   T2.Model JOIN CAR_MAKERS AS T3 ON T2.Maker   =   T3.Id JOIN CARS_DATA AS T4 ON T1.MakeId   =   T4.Id WHERE T4.weight  >  3500

当前idx3
eval_err_num:70
____________________
SELECT T1.Make, T2.Model FROM car_names AS T1 JOIN model_list AS T2 ON T1.Model  =  T2.Model ORDER BY T1.Horsepower DESC LIMIT 1
SELECT DISTINCT T2.Model, T3.maker FROM CAR_NAMES AS T1 JOIN MODEL_LIST AS T2 ON T1.Model   =   T2.Model JOIN CAR_MAKERS AS T3 ON T2.Maker   =   T3.Id JOIN CARS_DATA AS T4 ON T1.MakeId   =   T4.Id WHERE T3.FullName   =   'General Motors' order by t4.horsepower desc limit 1
连接数据库../datasets/cosql_dataset/database/car_1/car_1.sqlite
执行第一个查询
执行出错: no such column: T1.Horsepower
eval_exec:False
exact_score:0
extra pred: SELECT T1.Make, T2.Model FROM car_names AS T1 JOIN model_list AS T2 ON T1.Model  =  T2.Model ORDER BY T1.Horsepower DESC LIMIT 1
extra gold: SELECT DISTINCT T2.Model, T3.maker FROM CAR_NAMES AS T1 JOIN MODEL_LIST AS T2 ON T1.Model   =   T2.Model JOIN CAR_MAKERS AS T3 ON T2.Maker   =   T3.Id JOIN CARS_DATA AS T4 ON T1.MakeId   =   T4.Id WHERE T3.FullName   =   'General Motors' order by t4.horsepower desc limit 1

当前idx4
eval_err_num:71
____________________
SELECT COUNT(*) FROM cars_data WHERE MakeId IN (SELECT MakeId FROM car_names WHERE Make = "General Motors") AND MPG > 15
SELECT count ( * )  FROM CAR_NAMES AS T1 JOIN MODEL_LIST AS T2 ON T1.Model   =   T2.Model JOIN CAR_MAKERS AS T3 ON T2.Maker   =   T3.Id JOIN CARS_DATA AS T4 ON T1.MakeId   =   T4.Id WHERE T3.FullName   =   'General Motors' and t4.mpg > 15
连接数据库../datasets/cosql_dataset/database/car_1/car_1.sqlite
执行第一个查询
执行出错: no such column: MakeId
eval_exec:False
exact_score:0
extra pred: SELECT COUNT(*) FROM cars_data WHERE MakeId IN (SELECT MakeId FROM car_names WHERE Make = "General Motors") AND MPG > 15
extra gold: SELECT count ( * )  FROM CAR_NAMES AS T1 JOIN MODEL_LIST AS T2 ON T1.Model   =   T2.Model JOIN CAR_MAKERS AS T3 ON T2.Maker   =   T3.Id JOIN CARS_DATA AS T4 ON T1.MakeId   =   T4.Id WHERE T3.FullName   =   'General Motors' and t4.mpg > 15

当前idx>4
eval_err_num:72
____________________
SELECT T1.Make, T2.Model FROM car_names AS T1 JOIN model_list AS T2 ON T1.Model  =  T2.Model WHERE T1.Make  =  "General Motors" ORDER BY T1.MPG DESC LIMIT 1
SELECT DISTINCT t1.make, t1.model FROM CAR_NAMES AS T1 JOIN MODEL_LIST AS T2 ON T1.Model   =   T2.Model JOIN CAR_MAKERS AS T3 ON T2.Maker   =   T3.Id JOIN CARS_DATA AS T4 ON T1.MakeId   =   T4.Id WHERE T3.FullName   =   'General Motors' order by t4.mpg desc limit 1
连接数据库../datasets/cosql_dataset/database/car_1/car_1.sqlite
执行第一个查询
执行出错: no such column: T1.MPG
eval_exec:False
exact_score:0
extra pred: SELECT T1.Make, T2.Model FROM car_names AS T1 JOIN model_list AS T2 ON T1.Model  =  T2.Model WHERE T1.Make  =  "General Motors" ORDER BY T1.MPG DESC LIMIT 1
extra gold: SELECT DISTINCT t1.make, t1.model FROM CAR_NAMES AS T1 JOIN MODEL_LIST AS T2 ON T1.Model   =   T2.Model JOIN CAR_MAKERS AS T3 ON T2.Maker   =   T3.Id JOIN CARS_DATA AS T4 ON T1.MakeId   =   T4.Id WHERE T3.FullName   =   'General Motors' order by t4.mpg desc limit 1

当前idx1
____________________
SELECT count(*) FROM Highschooler
SELECT count ( * )  FROM Highschooler
连接数据库../datasets/cosql_dataset/database/network_1/network_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT avg(grade) FROM Highschooler
SELECT avg ( grade )  FROM Highschooler
连接数据库../datasets/cosql_dataset/database/network_1/network_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx3
____________________
SELECT max(grade) FROM Highschooler
SELECT grade FROM Highschooler order by grade desc limit 1
连接数据库../datasets/cosql_dataset/database/network_1/network_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:0
medium pred: SELECT max(grade) FROM Highschooler
medium gold: SELECT grade FROM Highschooler order by grade desc limit 1

当前idx4
____________________
SELECT min(grade) FROM Highschooler
SELECT grade FROM Highschooler order by grade limit 1
连接数据库../datasets/cosql_dataset/database/network_1/network_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:0
medium pred: SELECT min(grade) FROM Highschooler
medium gold: SELECT grade FROM Highschooler order by grade limit 1

当前idx1
____________________
SELECT CountryName FROM countries
SELECT T1.CountryName FROM countries AS T1 JOIN CAR_MAKERS AS T2 ON T1.countryId   =   T2.Country
连接数据库../datasets/cosql_dataset/database/car_1/car_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:False
easy pred: SELECT CountryName FROM countries
easy gold: SELECT T1.CountryName FROM countries AS T1 JOIN CAR_MAKERS AS T2 ON T1.countryId   =   T2.Country

当前idx2
____________________
SELECT CountryName FROM countries WHERE CountryName NOT IN (SELECT Country FROM car_makers)
SELECT CountryName FROM countries EXCEPT SELECT T1.CountryName FROM countries AS T1 JOIN CAR_MAKERS AS T2 ON T1.countryId   =   T2.Country
连接数据库../datasets/cosql_dataset/database/car_1/car_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
hard pred: SELECT CountryName FROM countries WHERE CountryName NOT IN (SELECT Country FROM car_makers)
hard gold: SELECT CountryName FROM countries EXCEPT SELECT T1.CountryName FROM countries AS T1 JOIN CAR_MAKERS AS T2 ON T1.countryId   =   T2.Country

当前idx1
____________________
SELECT student_id,friend_id FROM Friend
SELECT student_id, friend_id FROM Friend
连接数据库../datasets/cosql_dataset/database/network_1/network_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT id FROM Highschooler
SELECT id FROM Highschooler
连接数据库../datasets/cosql_dataset/database/network_1/network_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx3
____________________
SELECT count(id) FROM Highschooler
SELECT count ( id )  FROM Highschooler
连接数据库../datasets/cosql_dataset/database/network_1/network_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx4
____________________
SELECT count(distinct friend_id) FROM Friend
SELECT count ( distinct friend_id )  FROM Friend
连接数据库../datasets/cosql_dataset/database/network_1/network_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx>4
____________________
SELECT id FROM Highschooler EXCEPT SELECT student_id FROM Friend
SELECT id FROM Highschooler EXCEPT SELECT friend_id FROM Friend
连接数据库../datasets/cosql_dataset/database/network_1/network_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
hard pred: SELECT id FROM Highschooler EXCEPT SELECT student_id FROM Friend
hard gold: SELECT id FROM Highschooler EXCEPT SELECT friend_id FROM Friend

当前idx>4
eval_err_num:73
____________________
SELECT name,grade FROM Highschooler WHERE id=1510
SELECT name, grade FROM Highschooler where id  =  1510
连接数据库../datasets/cosql_dataset/database/network_1/network_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT name,grade FROM Highschooler WHERE id=1510
medium gold: SELECT name, grade FROM Highschooler where id  =  1510

当前idx1
____________________
SELECT DISTINCT city FROM employee
SELECT city FROM employee
连接数据库../datasets/cosql_dataset/database/employee_hire_evaluation/employee_hire_evaluation.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:True
当前idx2
____________________
SELECT DISTINCT city FROM employee WHERE age  <  30 GROUP BY city HAVING count(*)  >  1
SELECT city FROM employee WHERE age  <  30 GROUP BY city HAVING count ( * )   >  1
连接数据库../datasets/cosql_dataset/database/employee_hire_evaluation/employee_hire_evaluation.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx3
____________________
SELECT DISTINCT city, age FROM employee WHERE city = "Bath"
SELECT Age FROM employee WHERE city  =  'Bath'
连接数据库../datasets/cosql_dataset/database/employee_hire_evaluation/employee_hire_evaluation.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
easy pred: SELECT DISTINCT city, age FROM employee WHERE city = "Bath"
easy gold: SELECT Age FROM employee WHERE city  =  'Bath'

当前idx1
____________________
SELECT count(*) FROM Student WHERE age  >  20
SELECT count ( * )  FROM student WHERE age  >  20
连接数据库../datasets/cosql_dataset/database/pets_1/pets_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT count(*) FROM Student AS T1 JOIN Has_Pet AS T2 ON T1.StuID  =  T2.StuID WHERE T1.age  >  20
SELECT count ( * )  FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid   =   T2.stuid WHERE T1.age  >  20
连接数据库../datasets/cosql_dataset/database/pets_1/pets_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx1
____________________
SELECT loser_name FROM matches WHERE loser_age  =  24.626967830300003
SELECT distinct loser_name from matches where loser_age  =  24.626967830300003
连接数据库../datasets/cosql_dataset/database/wta_1/wta_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:True
当前idx2
____________________
SELECT count(*) FROM matches AS T1 JOIN players AS T2 ON T1.loser_id  =  T2.player_id WHERE T2.first_name  =  "Petra" AND T2.last_name  =  "Kvitova"
SELECT count ( * )  from matches where loser_name  =  "Petra Kvitova" or winner_name  =  "Petra Kvitova"
连接数据库../datasets/cosql_dataset/database/wta_1/wta_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT count(*) FROM matches AS T1 JOIN players AS T2 ON T1.loser_id  =  T2.player_id WHERE T2.first_name  =  "Petra" AND T2.last_name  =  "Kvitova"
medium gold: SELECT count ( * )  from matches where loser_name  =  "Petra Kvitova" or winner_name  =  "Petra Kvitova"

当前idx3
eval_err_num:74
____________________
SELECT T2.first_name ,  T2.last_name ,  T2.hand ,  T2.birth_date ,  T2.country_code FROM matches AS T1 JOIN players AS T2 ON T1.loser_id  =  T2.player_id WHERE T2.loser_rank_points  >  3500
SELECT distinct loser_id from matches where loser_rank_points > 3500
连接数据库../datasets/cosql_dataset/database/wta_1/wta_1.sqlite
执行第一个查询
执行出错: no such column: T2.loser_rank_points
eval_exec:False
exact_score:0
easy pred: SELECT T2.first_name ,  T2.last_name ,  T2.hand ,  T2.birth_date ,  T2.country_code FROM matches AS T1 JOIN players AS T2 ON T1.loser_id  =  T2.player_id WHERE T2.loser_rank_points  >  3500
easy gold: SELECT distinct loser_id from matches where loser_rank_points > 3500

当前idx4
____________________
SELECT T2.first_name ,  T2.last_name ,  T1.winner_rank_points FROM matches AS T1 JOIN players AS T2 ON T1.winner_id  =  T2.player_id GROUP BY T1.winner_id ORDER BY count(*) DESC LIMIT 1
SELECT winner_name , winner_rank_points FROM matches GROUP BY winner_name ORDER BY count ( * )  DESC LIMIT 1
连接数据库../datasets/cosql_dataset/database/wta_1/wta_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
hard pred: SELECT T2.first_name ,  T2.last_name ,  T1.winner_rank_points FROM matches AS T1 JOIN players AS T2 ON T1.winner_id  =  T2.player_id GROUP BY T1.winner_id ORDER BY count(*) DESC LIMIT 1
hard gold: SELECT winner_name , winner_rank_points FROM matches GROUP BY winner_name ORDER BY count ( * )  DESC LIMIT 1

当前idx1
____________________
SELECT name FROM Highschooler
SELECT name FROM Highschooler
连接数据库../datasets/cosql_dataset/database/network_1/network_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
eval_err_num:75
____________________
SELECT name, MAX(likes) AS max_likes FROM Highschooler JOIN Likes ON Highschooler.ID = Likes.student_id GROUP BY Highschooler.ID
SELECT count ( * )  from  Likes  group by student_id order by  count ( * )  desc limit  1
连接数据库../datasets/cosql_dataset/database/network_1/network_1.sqlite
执行第一个查询
执行出错: no such column: likes
eval_exec:False
exact_score:0
hard pred: SELECT name, MAX(likes) AS max_likes FROM Highschooler JOIN Likes ON Highschooler.ID = Likes.student_id GROUP BY Highschooler.ID
hard gold: SELECT count ( * )  from  Likes  group by student_id order by  count ( * )  desc limit  1

当前idx3
____________________
SELECT name FROM Highschooler ORDER BY grade DESC LIMIT 1
SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id ORDER BY count ( * )  DESC limit 1
连接数据库../datasets/cosql_dataset/database/network_1/network_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
extra pred: SELECT name FROM Highschooler ORDER BY grade DESC LIMIT 1
extra gold: SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id ORDER BY count ( * )  DESC limit 1

当前idx1
____________________
SELECT T1.feature_type_name FROM Ref_Feature_Types AS T1 JOIN Other_Available_Features AS T2 ON T1.feature_type_code  =  T2.feature_type_code WHERE T2.feature_name  =  "AirCon"
SELECT T2.feature_type_name FROM Other_Available_Features AS T1 JOIN Ref_Feature_Types AS T2 ON T1.feature_type_code   =   T2.feature_type_code WHERE T1.feature_name   =   "AirCon"
连接数据库../datasets/cosql_dataset/database/real_estate_properties/real_estate_properties.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT T2.feature_description FROM Ref_Feature_Types AS T1 JOIN Other_Available_Features AS T2 ON T1.feature_type_code  =  T2.feature_type_code WHERE T2.feature_name  =  "AirCon"
select feature_description from Other_Available_Features  where feature_name  =  "AirCon"
连接数据库../datasets/cosql_dataset/database/real_estate_properties/real_estate_properties.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:False
easy pred: SELECT T2.feature_description FROM Ref_Feature_Types AS T1 JOIN Other_Available_Features AS T2 ON T1.feature_type_code  =  T2.feature_type_code WHERE T2.feature_name  =  "AirCon"
easy gold: select feature_description from Other_Available_Features  where feature_name  =  "AirCon"

当前idx3
____________________
SELECT count(DISTINCT feature_id) FROM Other_Available_Features
select count ( * )  from  ( select distinct feature_id from Other_Available_Features  ) 
连接数据库../datasets/cosql_dataset/database/real_estate_properties/real_estate_properties.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
easy pred: SELECT count(DISTINCT feature_id) FROM Other_Available_Features
easy gold: select count ( * )  from  ( select distinct feature_id from Other_Available_Features  ) 

当前idx4
____________________
SELECT feature_type_code FROM Other_Available_Features WHERE feature_name = "AirCon"
select feature_type_code from Other_Available_Features  where feature_name  =  "AirCon"
连接数据库../datasets/cosql_dataset/database/real_estate_properties/real_estate_properties.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx1
____________________
SELECT transcript_date FROM Transcripts GROUP BY transcript_date ORDER BY count(*) ASC LIMIT 1
SELECT transcript_date FROM Transcripts group by transcript_date order by count ( * )  asc limit 1
连接数据库../datasets/cosql_dataset/database/student_transcripts_tracking/student_transcripts_tracking.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT count(*) FROM Transcripts WHERE transcript_date = "1975-05-06 12:04:47"
SELECT count ( * )  FROM Transcripts Where transcript_date  =  "1975-05-06 12:04:47"
连接数据库../datasets/cosql_dataset/database/student_transcripts_tracking/student_transcripts_tracking.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx3
____________________
SELECT transcript_date FROM Transcripts GROUP BY transcript_date ORDER BY count(*) DESC LIMIT 1
SELECT transcript_date FROM Transcripts GROUP BY transcript_date ORDER BY count ( * )  desc limit 1
连接数据库../datasets/cosql_dataset/database/student_transcripts_tracking/student_transcripts_tracking.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx1
____________________
SELECT DestAirport FROM flights WHERE Airline = 1
SELECT T2.DestAirport FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T1.Airline  =  "United Airlines"
连接数据库../datasets/cosql_dataset/database/flight_2/flight_2.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:0
medium pred: SELECT DestAirport FROM flights WHERE Airline = 1
medium gold: SELECT T2.DestAirport FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T1.Airline  =  "United Airlines"

当前idx2
____________________
SELECT count(*) FROM flights WHERE SourceAirport = "APG"
SELECT COUNT ( T1.Airline )  FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.sourceAirport like "%APG%"
连接数据库../datasets/cosql_dataset/database/flight_2/flight_2.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
hard pred: SELECT count(*) FROM flights WHERE SourceAirport = "APG"
hard gold: SELECT COUNT ( T1.Airline )  FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.sourceAirport like "%APG%"

当前idx3
____________________
SELECT FlightNo FROM flights WHERE Airline = 2
SELECT T2.FlightNo FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T1.Airline  =  "Delta Airlines"
连接数据库../datasets/cosql_dataset/database/flight_2/flight_2.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT FlightNo FROM flights WHERE Airline = 2
medium gold: SELECT T2.FlightNo FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T1.Airline  =  "Delta Airlines"

当前idx1
eval_err_num:76
____________________
SELECT count(*) FROM car_names AS T1 JOIN model_list AS T2 ON T1.Model  =  T2.Model JOIN car_makers AS T3 ON T2.Maker  =  T3.Id JOIN countries AS T4 ON T3.Country  =  T4.Country WHERE T4.CountryName  =  "USA"
SELECT count ( * )  FROM MODEL_LIST AS T1 JOIN CAR_MAKERS AS T2 ON T1.Maker   =   T2.Id JOIN COUNTRIES AS T3 ON T2.Country   =   T3.CountryId WHERE T3.CountryName   =   'usa'
连接数据库../datasets/cosql_dataset/database/car_1/car_1.sqlite
执行第一个查询
执行出错: no such column: T4.Country
eval_exec:False
exact_score:0
hard pred: SELECT count(*) FROM car_names AS T1 JOIN model_list AS T2 ON T1.Model  =  T2.Model JOIN car_makers AS T3 ON T2.Maker  =  T3.Id JOIN countries AS T4 ON T3.Country  =  T4.Country WHERE T4.CountryName  =  "USA"
hard gold: SELECT count ( * )  FROM MODEL_LIST AS T1 JOIN CAR_MAKERS AS T2 ON T1.Maker   =   T2.Id JOIN COUNTRIES AS T3 ON T2.Country   =   T3.CountryId WHERE T3.CountryName   =   'usa'

当前idx2
eval_err_num:77
____________________
SELECT T3.Maker FROM car_names AS T1 JOIN model_list AS T2 ON T1.Model  =  T2.Model JOIN car_makers AS T3 ON T2.Maker  =  T3.Id JOIN countries AS T4 ON T3.Country  =  T4.Country WHERE T4.CountryName  =  "USA"
SELECT distinct t1.maker FROM CAR_MAKERS AS T1 JOIN COUNTRIES AS T2 ON T1.Country   =   T2.CountryId WHERE T2.CountryName   =   'usa'
连接数据库../datasets/cosql_dataset/database/car_1/car_1.sqlite
执行第一个查询
执行出错: no such column: T4.Country
eval_exec:False
exact_score:0
medium pred: SELECT T3.Maker FROM car_names AS T1 JOIN model_list AS T2 ON T1.Model  =  T2.Model JOIN car_makers AS T3 ON T2.Maker  =  T3.Id JOIN countries AS T4 ON T3.Country  =  T4.Country WHERE T4.CountryName  =  "USA"
medium gold: SELECT distinct t1.maker FROM CAR_MAKERS AS T1 JOIN COUNTRIES AS T2 ON T1.Country   =   T2.CountryId WHERE T2.CountryName   =   'usa'

当前idx3
eval_err_num:78
____________________
SELECT count(*) FROM car_names AS T1 JOIN model_list AS T2 ON T1.Model  =  T2.Model JOIN car_makers AS T3 ON T2.Maker  =  T3.Id JOIN countries AS T4 ON T3.Country  =  T4.Country WHERE T3.Maker  =  "Ford"
select count (  * )  from model_list as t1 join car_makers as t2 where t1.maker  =  t2.id and t2.maker  =  "ford"
连接数据库../datasets/cosql_dataset/database/car_1/car_1.sqlite
执行第一个查询
执行出错: no such column: T4.Country
eval_exec:False
exact_score:0
medium pred: SELECT count(*) FROM car_names AS T1 JOIN model_list AS T2 ON T1.Model  =  T2.Model JOIN car_makers AS T3 ON T2.Maker  =  T3.Id JOIN countries AS T4 ON T3.Country  =  T4.Country WHERE T3.Maker  =  "Ford"
medium gold: select count (  * )  from model_list as t1 join car_makers as t2 where t1.maker  =  t2.id and t2.maker  =  "ford"

当前idx1
____________________
SELECT T1.name FROM Highschooler AS T1 JOIN Likes AS T2 ON T1.id  =  T2.student_id GROUP BY T2.student_id HAVING count(*)  >=  2
SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id   =   T2.id GROUP BY T1.student_id HAVING count ( * )    > =    2
连接数据库../datasets/cosql_dataset/database/network_1/network_1.sqlite
执行第一个查询
执行第二个查询
执行出错: near "=": syntax error
eval_exec:False
exact_score:True
当前idx2
____________________
SELECT T1.name FROM Highschooler AS T1 JOIN Likes AS T2 ON T1.id  =  T2.student_id GROUP BY T2.student_id HAVING count(*)  =  1
SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id   =   T2.id GROUP BY T1.student_id HAVING count ( * )    > =    1
连接数据库../datasets/cosql_dataset/database/network_1/network_1.sqlite
执行第一个查询
执行第二个查询
执行出错: near "=": syntax error
eval_exec:False
exact_score:0
medium pred: SELECT T1.name FROM Highschooler AS T1 JOIN Likes AS T2 ON T1.id  =  T2.student_id GROUP BY T2.student_id HAVING count(*)  =  1
medium gold: SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id   =   T2.id GROUP BY T1.student_id HAVING count ( * )    > =    1

当前idx3
____________________
SELECT T1.id FROM Highschooler AS T1 JOIN Likes AS T2 ON T1.id  =  T2.student_id GROUP BY T2.student_id HAVING count(*)  =  1
SELECT T2.id FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id   =   T2.id GROUP BY T1.student_id HAVING count ( * )    > =    1
连接数据库../datasets/cosql_dataset/database/network_1/network_1.sqlite
执行第一个查询
执行第二个查询
执行出错: near "=": syntax error
eval_exec:False
exact_score:0
medium pred: SELECT T1.id FROM Highschooler AS T1 JOIN Likes AS T2 ON T1.id  =  T2.student_id GROUP BY T2.student_id HAVING count(*)  =  1
medium gold: SELECT T2.id FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id   =   T2.id GROUP BY T1.student_id HAVING count ( * )    > =    1

当前idx1
____________________
SELECT DestAirport FROM flights WHERE Airline = 1
SELECT DestAirport FROM flights WHERE airline   =   "1"
连接数据库../datasets/cosql_dataset/database/flight_2/flight_2.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT Country FROM airlines WHERE Airline = "United Airlines"
SELECT COUNTRY FROM AIRLINES WHERE AIRLINE   =   "United Airlines"
连接数据库../datasets/cosql_dataset/database/flight_2/flight_2.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx3
____________________
SELECT SourceAirport FROM flights WHERE DestAirport = "ASY"
SELECT SourceAirport FROM flights WHERE DestAirport   =   "ASY"
连接数据库../datasets/cosql_dataset/database/flight_2/flight_2.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx4
____________________
SELECT Country FROM airlines WHERE Airline = "US Airways"
SELECT country FROM Airlines WHERE Airline   =   "US Airways"
连接数据库../datasets/cosql_dataset/database/flight_2/flight_2.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx>4
____________________
SELECT Airline FROM airlines WHERE Country = "USA"
SELECT Airline FROM Airlines WHERE country   =   "USA"
连接数据库../datasets/cosql_dataset/database/flight_2/flight_2.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx1
____________________
SELECT avg(grade) FROM Highschooler
SELECT AVG ( grade )  FROM Highschooler
连接数据库../datasets/cosql_dataset/database/network_1/network_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT name FROM Highschooler WHERE name LIKE 'A%'
SELECT AVG ( grade )  FROM Highschooler
连接数据库../datasets/cosql_dataset/database/network_1/network_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
easy pred: SELECT name FROM Highschooler WHERE name LIKE 'A%'
easy gold: SELECT AVG ( grade )  FROM Highschooler

当前idx3
____________________
SELECT max(grade) FROM Highschooler
SELECT MAX ( grade )  FROM Highschooler
连接数据库../datasets/cosql_dataset/database/network_1/network_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx1
____________________
SELECT T2.Name FROM poker_player AS T1 JOIN people AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T1.Final_Table_Made ASC
SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID   =   T2.People_ID ORDER BY T2.Final_Table_Made
连接数据库../datasets/cosql_dataset/database/poker_player/poker_player.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT T2.Nationality FROM poker_player AS T1 JOIN people AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T1.Final_Table_Made ASC
SELECT T1.Nationality FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID   =   T2.People_ID ORDER BY T2.Final_Table_Made
连接数据库../datasets/cosql_dataset/database/poker_player/poker_player.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx3
____________________
SELECT T2.Name FROM poker_player AS T1 JOIN people AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T1.Earnings DESC LIMIT 1
SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID   =   T2.People_ID ORDER BY T2.Earnings desc limit 1
连接数据库../datasets/cosql_dataset/database/poker_player/poker_player.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx4
____________________
SELECT T2.Name FROM poker_player AS T1 JOIN people AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T1.Earnings ASC LIMIT 1
SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID   =   T2.People_ID ORDER BY T2.Earnings limit 1
连接数据库../datasets/cosql_dataset/database/poker_player/poker_player.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx>4
____________________
SELECT T1.Best_Finish FROM poker_player AS T1 JOIN people AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T1.Earnings ASC LIMIT 1
SELECT T2.Best_Finish FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID   =   T2.People_ID ORDER BY T2.Earnings  limit 1
连接数据库../datasets/cosql_dataset/database/poker_player/poker_player.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx1
____________________
SELECT transcript_date FROM Transcripts
select transcript_date from Transcripts
连接数据库../datasets/cosql_dataset/database/student_transcripts_tracking/student_transcripts_tracking.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT transcript_date FROM Transcripts ORDER BY transcript_date DESC LIMIT 1
SELECT transcript_date FROM Transcripts ORDER BY transcript_date DESC LIMIT 1
连接数据库../datasets/cosql_dataset/database/student_transcripts_tracking/student_transcripts_tracking.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx3
____________________
SELECT transcript_date FROM Transcripts ORDER BY transcript_date DESC LIMIT 1
SELECT transcript_date FROM Transcripts ORDER BY transcript_date DESC LIMIT 1
连接数据库../datasets/cosql_dataset/database/student_transcripts_tracking/student_transcripts_tracking.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx1
____________________
SELECT * FROM Cartoon ORDER BY Original_air_date DESC LIMIT 1
SELECT Title FROM cartoon ORDER BY original_air_date LIMIT 1
连接数据库../datasets/cosql_dataset/database/tvshow/tvshow.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT * FROM Cartoon ORDER BY Original_air_date DESC LIMIT 1
medium gold: SELECT Title FROM cartoon ORDER BY original_air_date LIMIT 1

当前idx2
____________________
SELECT Channel FROM Cartoon ORDER BY Original_air_date DESC LIMIT 1
SELECT Channel FROM cartoon ORDER BY original_air_date LIMIT 1
连接数据库../datasets/cosql_dataset/database/tvshow/tvshow.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT Channel FROM Cartoon ORDER BY Original_air_date DESC LIMIT 1
medium gold: SELECT Channel FROM cartoon ORDER BY original_air_date LIMIT 1

当前idx3
____________________
SELECT Production_code ,  Channel FROM Cartoon ORDER BY Original_air_date DESC LIMIT 1
SELECT production_code ,  channel, original_air_date FROM cartoon ORDER BY original_air_date desc LIMIT 1
连接数据库../datasets/cosql_dataset/database/tvshow/tvshow.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT Production_code ,  Channel FROM Cartoon ORDER BY Original_air_date DESC LIMIT 1
medium gold: SELECT production_code ,  channel, original_air_date FROM cartoon ORDER BY original_air_date desc LIMIT 1

当前idx1
____________________
SELECT Version_Number FROM Templates WHERE Template_ID = 3
SELECT Version_Number from Templates where Template_ID  =  3
连接数据库../datasets/cosql_dataset/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT T1.Document_Name FROM Documents AS T1 JOIN Templates AS T2 ON T1.Template_ID  =  T2.Template_ID WHERE T2.Template_ID  =  25
SELECT t2.Document_Name from Templates as t1 join Documents as t2 on t1.Template_ID  =  t2.Template_ID where t1.Template_ID  =  25
连接数据库../datasets/cosql_dataset/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx3
____________________
SELECT template_type_code FROM Ref_Template_Types WHERE template_type_code NOT IN (SELECT template_type_code FROM Templates)
SELECT template_type_code FROM Templates EXCEPT SELECT template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id
连接数据库../datasets/cosql_dataset/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
hard pred: SELECT template_type_code FROM Ref_Template_Types WHERE template_type_code NOT IN (SELECT template_type_code FROM Templates)
hard gold: SELECT template_type_code FROM Templates EXCEPT SELECT template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id

当前idx4
____________________
SELECT Version_Number FROM Templates WHERE Template_ID = 4
SELECT Version_Number from Templates where Template_ID  =  4
连接数据库../datasets/cosql_dataset/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx1
____________________
SELECT FlightNo FROM flights WHERE SourceAirport = "AHD"
SELECT FlightNo FROM FLIGHTS WHERE SourceAirport   =  "AHD"
连接数据库../datasets/cosql_dataset/database/flight_2/flight_2.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT T1.Airline FROM airlines AS T1 JOIN flights AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport = "AHD"
SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid   =   T2.Airline WHERE T2.SourceAirport   =   " AHD"
连接数据库../datasets/cosql_dataset/database/flight_2/flight_2.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:True
当前idx1
____________________
SELECT count(*) FROM stadium WHERE Average  >  1000
SELECT count ( * )  FROM stadium WHERE average > 1000
连接数据库../datasets/cosql_dataset/database/concert_singer/concert_singer.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT name FROM stadium ORDER BY Average ASC LIMIT 1
SELECT name FROM stadium ORDER BY average LIMIT 1
连接数据库../datasets/cosql_dataset/database/concert_singer/concert_singer.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx3
____________________
SELECT name FROM stadium ORDER BY Average DESC LIMIT 1
SELECT name FROM stadium ORDER BY average DESC LIMIT 1
连接数据库../datasets/cosql_dataset/database/concert_singer/concert_singer.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx1
____________________
SELECT Name FROM country WHERE Continent  =  "Africa" AND Population  <  (SELECT MIN(Population) FROM country WHERE Continent  =  "Asia")
SELECT Name FROM country WHERE Continent   =   "Africa"  AND population  <   ( SELECT min ( population )  FROM country WHERE Continent   =   "Asia" ) 
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT Name FROM country WHERE Continent  =  "Asia" AND Population  <  (SELECT MIN(Population) FROM country WHERE Continent  =  "Africa")
SELECT Name FROM country WHERE Continent   =   "Asia"  AND population  <   ( SELECT min ( population )  FROM country WHERE Continent   =   "Africa" ) 
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx3
____________________
SELECT Name FROM country WHERE Continent  =  "Asia" ORDER BY LifeExpectancy DESC LIMIT 1
SELECT Name FROM country WHERE Continent  =  "Asia" ORDER BY LifeExpectancy DESC LIMIT 1
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx1
____________________
SELECT count(*) FROM Dogs WHERE dog_id NOT IN ( SELECT dog_id FROM Treatments )
SELECT count ( * )  FROM Dogs WHERE dog_id NOT IN  (  SELECT dog_id FROM Treatments  ) 
连接数据库../datasets/cosql_dataset/database/dog_kennels/dog_kennels.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT count(*) FROM Dogs WHERE abandoned_yn = "Y" AND dog_id NOT IN ( SELECT dog_id FROM Treatments )
SELECT count ( * )  FROM Dogs WHERE abandoned_yn  =  1 AND dog_id NOT IN  (  SELECT dog_id FROM Treatments  ) 
连接数据库../datasets/cosql_dataset/database/dog_kennels/dog_kennels.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx3
____________________
SELECT T1.dog_id ,  T2.treatment_type_code FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id  =  T2.dog_id WHERE T1.abandoned_yn  =  "Y"
SELECT T1.dog_id, T2.treatment_type_code FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id  =  T2.dog_id WHERE abandoned_yn  =  1
连接数据库../datasets/cosql_dataset/database/dog_kennels/dog_kennels.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:True
当前idx1
____________________
SELECT Age FROM employee WHERE Name = "George Chuter"
select age from employee where name  =  "George Chuter"
连接数据库../datasets/cosql_dataset/database/employee_hire_evaluation/employee_hire_evaluation.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT City FROM employee WHERE Employee_ID = 1
select city from employee where name  =  "Lee Mears"
连接数据库../datasets/cosql_dataset/database/employee_hire_evaluation/employee_hire_evaluation.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
easy pred: SELECT City FROM employee WHERE Employee_ID = 1
easy gold: select city from employee where name  =  "Lee Mears"

当前idx1
____________________
SELECT degree_program_id ,  degree_summary_name FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id GROUP BY T1.degree_program_id ORDER BY count(*) DESC LIMIT 1
SELECT T1.degree_program_id ,  T1.degree_summary_name FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id   =   T2.degree_program_id GROUP BY T1.degree_program_id ORDER BY count ( * )  DESC LIMIT 1
连接数据库../datasets/cosql_dataset/database/student_transcripts_tracking/student_transcripts_tracking.sqlite
执行第一个查询
执行出错: ambiguous column name: degree_program_id
eval_exec:False
exact_score:True
当前idx2
____________________
SELECT degree_program_id ,  degree_summary_name FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id GROUP BY T1.degree_program_id ORDER BY count(*) DESC LIMIT 1
SELECT T1.degree_program_id  FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id   =   T2.degree_program_id GROUP BY T1.degree_program_id ORDER BY count ( * )  DESC LIMIT 1
连接数据库../datasets/cosql_dataset/database/student_transcripts_tracking/student_transcripts_tracking.sqlite
执行第一个查询
执行出错: ambiguous column name: degree_program_id
eval_exec:False
exact_score:0
extra pred: SELECT degree_program_id ,  degree_summary_name FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id GROUP BY T1.degree_program_id ORDER BY count(*) DESC LIMIT 1
extra gold: SELECT T1.degree_program_id  FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id   =   T2.degree_program_id GROUP BY T1.degree_program_id ORDER BY count ( * )  DESC LIMIT 1

当前idx3
____________________
SELECT count(*) FROM Student_Enrolment WHERE degree_program_id = 9
SELECT COUNT ( * )  FROM Student_Enrolment WHERE degree_program_id  =  "9"
连接数据库../datasets/cosql_dataset/database/student_transcripts_tracking/student_transcripts_tracking.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx4
eval_err_num:79
____________________
SELECT count(*) FROM Student_Enrolment WHERE degree_program_id = 9 AND course_id = 1
SELECT COUNT ( * )  FROM Degree_Programs WHERE degree_summary_name  =  "Master" AND degree_program_id  =  "9"
连接数据库../datasets/cosql_dataset/database/student_transcripts_tracking/student_transcripts_tracking.sqlite
执行第一个查询
执行出错: no such column: course_id
eval_exec:False
exact_score:0
medium pred: SELECT count(*) FROM Student_Enrolment WHERE degree_program_id = 9 AND course_id = 1
medium gold: SELECT COUNT ( * )  FROM Degree_Programs WHERE degree_summary_name  =  "Master" AND degree_program_id  =  "9"

当前idx>4
____________________
SELECT degree_program_id ,  degree_summary_name FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id GROUP BY T1.degree_program_id ORDER BY count(*) ASC LIMIT 1
SELECT T1.degree_program_id ,  T1.degree_summary_name FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id   =   T2.degree_program_id GROUP BY T1.degree_program_id ORDER BY count ( * )  limit 1
连接数据库../datasets/cosql_dataset/database/student_transcripts_tracking/student_transcripts_tracking.sqlite
执行第一个查询
执行出错: ambiguous column name: degree_program_id
eval_exec:False
exact_score:True
当前idx>4
____________________
SELECT count(*) FROM Student_Enrolment WHERE degree_program_id = 3
SELECT COUNT ( * )  FROM Student_Enrolment where degree_program_id  =  "3"
连接数据库../datasets/cosql_dataset/database/student_transcripts_tracking/student_transcripts_tracking.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx1
____________________
SELECT sum(cost_of_treatment) FROM Treatments
SELECT sum ( cost_of_treatment )  from treatments
连接数据库../datasets/cosql_dataset/database/dog_kennels/dog_kennels.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT T1.first_name ,  T1.last_name FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id ORDER BY T2.cost_of_treatment ASC LIMIT 1
select T1.first_name, T1.last_name from Professionals as T1 join Treatments as T2 on T1.professional_id  =  T2.professional_id order by T2.cost_of_treatment asc limit 1
连接数据库../datasets/cosql_dataset/database/dog_kennels/dog_kennels.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx3
____________________
SELECT T1.dog_id FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id  =  T2.dog_id ORDER BY T2.cost_of_treatment ASC LIMIT 1
select dog_id from treatments order by cost_of_treatment asc limit 1
连接数据库../datasets/cosql_dataset/database/dog_kennels/dog_kennels.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:False
medium pred: SELECT T1.dog_id FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id  =  T2.dog_id ORDER BY T2.cost_of_treatment ASC LIMIT 1
medium gold: select dog_id from treatments order by cost_of_treatment asc limit 1

当前idx1
____________________
SELECT ContId FROM continents
SELECT ContId ,  Continent  FROM CONTINENTS
连接数据库../datasets/cosql_dataset/database/car_1/car_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT ContId FROM continents
medium gold: SELECT ContId ,  Continent  FROM CONTINENTS

当前idx2
____________________
SELECT Continent ,  count(*) FROM continents AS T1 JOIN countries AS T2 ON T1.ContId  =  T2.Continent GROUP BY T1.ContId
SELECT T1.Continent ,  count ( * )  FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId   =   T2.Continent GROUP BY T1.ContId
连接数据库../datasets/cosql_dataset/database/car_1/car_1.sqlite
执行第一个查询
执行出错: ambiguous column name: Continent
eval_exec:False
exact_score:True
当前idx3
____________________
SELECT Continent FROM continents AS T1 JOIN countries AS T2 ON T1.ContId  =  T2.Continent GROUP BY T1.ContId ORDER BY count(*) DESC LIMIT 1
SELECT T1.Continent ,  count ( * )  FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId   =   T2.Continent GROUP BY T1.ContId ORDER BY count ( * )  DESC LIMIT 1
连接数据库../datasets/cosql_dataset/database/car_1/car_1.sqlite
执行第一个查询
执行出错: ambiguous column name: Continent
eval_exec:False
exact_score:0
extra pred: SELECT Continent FROM continents AS T1 JOIN countries AS T2 ON T1.ContId  =  T2.Continent GROUP BY T1.ContId ORDER BY count(*) DESC LIMIT 1
extra gold: SELECT T1.Continent ,  count ( * )  FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId   =   T2.Continent GROUP BY T1.ContId ORDER BY count ( * )  DESC LIMIT 1

当前idx1
____________________
SELECT T1.document_id ,  T1.document_name ,  count(*) FROM documents AS T1 JOIN paragraphs AS T2 ON T1.document_id  =  T2.document_id GROUP BY T1.document_id
SELECT T1.document_id ,  T2.document_name ,  count ( * )  FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id   =   T2.document_id GROUP BY T1.document_id
连接数据库../datasets/cosql_dataset/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT Paragraph_Text FROM Paragraphs
SELECT Paragraph_Text FROM Paragraphs
连接数据库../datasets/cosql_dataset/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx3
____________________
SELECT Paragraph_Text FROM Paragraphs WHERE Other_Details != "NULL"
SELECT Paragraph_Text FROM Paragraphs WHERE Other_Details ! =  "NULL"
连接数据库../datasets/cosql_dataset/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite
执行第一个查询
执行第二个查询
执行出错: unrecognized token: "!"
eval_exec:False
exact_score:True
当前idx1
____________________
SELECT * FROM Cartoon WHERE Written_by  =  "Todd Casey"
select * from Cartoon where Written_by  =  'Todd Casey'
连接数据库../datasets/cosql_dataset/database/tvshow/tvshow.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT Title FROM Cartoon WHERE Written_by  =  "Todd Casey"
select Title from Cartoon where Written_by  =  'Todd Casey'
连接数据库../datasets/cosql_dataset/database/tvshow/tvshow.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx3
eval_err_num:80
____________________
SELECT T1.Title ,  T2.series_name FROM Cartoon AS T1 JOIN TV_series AS T2 ON T1.Channel  =  T2.id WHERE T1.Written_by  =  "Todd Casey"
SELECT T1.id FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id  =  T2.Channel WHERE T2.written_by  =  'Todd Casey'
连接数据库../datasets/cosql_dataset/database/tvshow/tvshow.sqlite
执行第一个查询
执行出错: no such column: T2.series_name
eval_exec:False
exact_score:0
medium pred: SELECT T1.Title ,  T2.series_name FROM Cartoon AS T1 JOIN TV_series AS T2 ON T1.Channel  =  T2.id WHERE T1.Written_by  =  "Todd Casey"
medium gold: SELECT T1.id FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id  =  T2.Channel WHERE T2.written_by  =  'Todd Casey'

当前idx1
____________________
SELECT sum(Total_spent) FROM visit AS T1 JOIN visitor AS T2 ON T1.visitor_ID  =  T2.ID WHERE T2.Level_of_membership  =  1
SELECT sum ( t2.Total_spent )  FROM visitor AS t1 JOIN visit AS t2 ON t1.id   =   t2.visitor_id WHERE t1.Level_of_membership   =   1
连接数据库../datasets/cosql_dataset/database/museum_visit/museum_visit.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT count(*) FROM visitor WHERE Level_of_membership  =  1
SELECT COUNT ( id )  FROM visitor WHERE Level_of_membership  =  1
连接数据库../datasets/cosql_dataset/database/museum_visit/museum_visit.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
easy pred: SELECT count(*) FROM visitor WHERE Level_of_membership  =  1
easy gold: SELECT COUNT ( id )  FROM visitor WHERE Level_of_membership  =  1

当前idx3
____________________
SELECT count(distinct Level_of_membership) FROM visitor
SELECT COUNT ( DISTINCT level_of_membership )  FROM visitor
连接数据库../datasets/cosql_dataset/database/museum_visit/museum_visit.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx4
____________________
SELECT Name FROM visitor WHERE Level_of_membership  =  1
SELECT name FROM visitor WHERE Level_of_membership  =  1
连接数据库../datasets/cosql_dataset/database/museum_visit/museum_visit.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx>4
____________________
SELECT T2.Name ,  sum(T1.Num_of_Ticket) FROM visit AS T1 JOIN visitor AS T2 ON T1.visitor_ID  =  T2.ID GROUP BY T2.Level_of_membership
SELECT  t1.level_of_membership, sum ( Total_spent )  FROM visitor AS t1 JOIN visit AS t2 ON t1.id   =   t2.visitor_id group by Level_of_membership
连接数据库../datasets/cosql_dataset/database/museum_visit/museum_visit.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT T2.Name ,  sum(T1.Num_of_Ticket) FROM visit AS T1 JOIN visitor AS T2 ON T1.visitor_ID  =  T2.ID GROUP BY T2.Level_of_membership
medium gold: SELECT  t1.level_of_membership, sum ( Total_spent )  FROM visitor AS t1 JOIN visit AS t2 ON t1.id   =   t2.visitor_id group by Level_of_membership

当前idx1
____________________
SELECT first_name FROM players WHERE player_id = 200001
SELECT first_name FROM players WHERE player_id  =  200001
连接数据库../datasets/cosql_dataset/database/wta_1/wta_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT birth_date FROM players WHERE player_id = 200001
SELECT birth_date FROM players WHERE player_id  =  200001
连接数据库../datasets/cosql_dataset/database/wta_1/wta_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx3
____________________
SELECT country_code FROM players WHERE player_id = 200003
SELECT country_code FROM players WHERE player_id  =  200003
连接数据库../datasets/cosql_dataset/database/wta_1/wta_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx4
____________________
SELECT last_name FROM players WHERE player_id = 200003
SELECT last_name FROM players WHERE player_id  =  200003
连接数据库../datasets/cosql_dataset/database/wta_1/wta_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx1
____________________
SELECT count(*) FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.Document_ID  =  T2.Document_ID WHERE T2.Document_Name  =  'Welcome to NY'
SELECT count ( * )  FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id   =   T2.document_id WHERE T2.Document_Name   =   'Welcome to NY'
连接数据库../datasets/cosql_dataset/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT T1.Paragraph_Text FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.Document_ID  =  T2.Document_ID WHERE T2.Document_Name  =  'Welcome to NY'
SELECT T1.paragraph_text FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id   =   T2.document_id WHERE T2.Document_Name   =   'Welcome to NY'
连接数据库../datasets/cosql_dataset/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx3
____________________
SELECT T1.Paragraph_ID FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.Document_ID  =  T2.Document_ID WHERE T2.Document_Name  =  'Welcome to NY'
SELECT T1.paragraph_id FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id   =   T2.document_id WHERE T2.Document_Name   =   'Welcome to NY'
连接数据库../datasets/cosql_dataset/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx1
____________________
SELECT player_id ,  sum(ranking_points) ,  first_name FROM rankings AS T1 JOIN players AS T2 ON T1.player_id  =  T2.player_id GROUP BY player_id
SELECT sum ( ranking_points )  ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id   =   T2.player_id GROUP BY T1.first_name
连接数据库../datasets/cosql_dataset/database/wta_1/wta_1.sqlite
执行第一个查询
执行出错: ambiguous column name: player_id
eval_exec:False
exact_score:0
medium pred: SELECT player_id ,  sum(ranking_points) ,  first_name FROM rankings AS T1 JOIN players AS T2 ON T1.player_id  =  T2.player_id GROUP BY player_id
medium gold: SELECT sum ( ranking_points )  ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id   =   T2.player_id GROUP BY T1.first_name

当前idx2
____________________
SELECT T2.first_name FROM rankings AS T1 JOIN players AS T2 ON T1.player_id  =  T2.player_id WHERE T1.ranking  =  1
SELECT distinct T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id   =   T2.player_id WHERE T2.ranking  =  1
连接数据库../datasets/cosql_dataset/database/wta_1/wta_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:True
当前idx1
____________________
SELECT Name FROM country WHERE Continent  =  "Africa" ORDER BY Population DESC LIMIT 1
SELECT Name FROM country WHERE Continent  =  "Africa" order by population desc limit 1
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT Population FROM country WHERE Name  =  "Nigeria"
select population from country where Name  =  'Nigeria'
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx3
____________________
SELECT Name FROM country WHERE Continent  =  "Asia" ORDER BY Population DESC LIMIT 1
SELECT Name FROM country WHERE Continent   =   "Asia"  order by population desc limit 1
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx4
____________________
SELECT Population FROM country WHERE Name  =  "China"
SELECT population from country where name  =  'China'
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx>4
eval_err_num:81
____________________
SELECT count(*) FROM (SELECT Name FROM country WHERE Continent  =  "Asia" AND Population  >  (SELECT Population FROM country WHERE Name  =  "Nigeria")) AS T1
SELECT count ( Name )  FROM country WHERE Continent   =   "Asia"  AND population >  ( SELECT population FROM country WHERE name  =  'Nigeria' ) 
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
extra pred: SELECT count(*) FROM (SELECT Name FROM country WHERE Continent  =  "Asia" AND Population  >  (SELECT Population FROM country WHERE Name  =  "Nigeria")) AS T1
extra gold: SELECT count ( Name )  FROM country WHERE Continent   =   "Asia"  AND population >  ( SELECT population FROM country WHERE name  =  'Nigeria' ) 

当前idx>4
____________________
SELECT Name FROM country WHERE Continent  =  "Asia" AND Population  >  (SELECT Population FROM country WHERE Name  =  "Nigeria")
SELECT Name FROM country WHERE Continent   =   "Asia"  AND population >  ( SELECT population FROM country WHERE name  =  'Nigeria' ) 
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx1
____________________
SELECT DISTINCT T1.Name FROM city AS T1 JOIN country AS T2 ON T1.CountryCode  =  T2.Code WHERE T2.Continent  =  "Asia"
SELECT DISTINCT T3.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code   =   T2.CountryCode JOIN city AS T3 ON T1.Code   =   T3.CountryCode WHERE T1.Continent   =   "Asia"
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:False
hard pred: SELECT DISTINCT T1.Name FROM city AS T1 JOIN country AS T2 ON T1.CountryCode  =  T2.Code WHERE T2.Continent  =  "Asia"
hard gold: SELECT DISTINCT T3.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code   =   T2.CountryCode JOIN city AS T3 ON T1.Code   =   T3.CountryCode WHERE T1.Continent   =   "Asia"

当前idx2
____________________
SELECT DISTINCT T1.Name FROM city AS T1 JOIN country AS T2 ON T1.CountryCode  =  T2.Code WHERE T2.Continent  =  "Asia" AND T1.Population  >  200000
SELECT DISTINCT T3.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code   =   T2.CountryCode JOIN city AS T3 ON T1.Code   =   T3.CountryCode WHERE T3.Population >200000
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
hard pred: SELECT DISTINCT T1.Name FROM city AS T1 JOIN country AS T2 ON T1.CountryCode  =  T2.Code WHERE T2.Continent  =  "Asia" AND T1.Population  >  200000
hard gold: SELECT DISTINCT T3.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code   =   T2.CountryCode JOIN city AS T3 ON T1.Code   =   T3.CountryCode WHERE T3.Population >200000

当前idx3
____________________
SELECT avg(Population) FROM city WHERE CountryCode = "CHN"
SELECT avg ( T3.Population )  FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code   =   T2.CountryCode JOIN city AS T3 ON T1.Code   =   T3.CountryCode WHERE T1.Name  =  "China"
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:0
hard pred: SELECT avg(Population) FROM city WHERE CountryCode = "CHN"
hard gold: SELECT avg ( T3.Population )  FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code   =   T2.CountryCode JOIN city AS T3 ON T1.Code   =   T3.CountryCode WHERE T1.Name  =  "China"

当前idx4
____________________
SELECT avg(T1.Population) FROM city AS T1 JOIN countrylanguage AS T2 ON T1.CountryCode  =  T2.CountryCode WHERE T2.Language  =  "Dutch"
SELECT avg ( T3.Population )  FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code   =   T2.CountryCode JOIN city AS T3 ON T1.Code   =   T3.CountryCode WHERE T2.Language  =  "Dutch"
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:False
hard pred: SELECT avg(T1.Population) FROM city AS T1 JOIN countrylanguage AS T2 ON T1.CountryCode  =  T2.CountryCode WHERE T2.Language  =  "Dutch"
hard gold: SELECT avg ( T3.Population )  FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code   =   T2.CountryCode JOIN city AS T3 ON T1.Code   =   T3.CountryCode WHERE T2.Language  =  "Dutch"

当前idx1
____________________
SELECT count(*) FROM visitor
SELECT count ( * )  from visitor
连接数据库../datasets/cosql_dataset/database/museum_visit/museum_visit.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT count(*) FROM visitor WHERE Level_of_membership  >  4
SELECT count ( * )  FROM visitor WHERE Level_of_membership  >  4
连接数据库../datasets/cosql_dataset/database/museum_visit/museum_visit.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx3
____________________
SELECT Name FROM visitor WHERE Level_of_membership  >  4
SELECT name FROM visitor WHERE Level_of_membership  >  4
连接数据库../datasets/cosql_dataset/database/museum_visit/museum_visit.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx4
____________________
SELECT Name FROM visitor WHERE Level_of_membership  >  4 ORDER BY Level_of_membership DESC
SELECT name FROM visitor WHERE Level_of_membership  >  4 ORDER BY Level_of_membership DESC
连接数据库../datasets/cosql_dataset/database/museum_visit/museum_visit.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx1
____________________
SELECT avg(ranking) ,  first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id GROUP BY T1.first_name
SELECT avg ( ranking )  ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id   =   T2.player_id GROUP BY T1.player_id
连接数据库../datasets/cosql_dataset/database/wta_1/wta_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT avg(ranking) ,  first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id GROUP BY T1.first_name
medium gold: SELECT avg ( ranking )  ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id   =   T2.player_id GROUP BY T1.player_id

当前idx2
____________________
SELECT avg(ranking) ,  first_name ,  last_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id GROUP BY T1.first_name ,  T1.last_name
SELECT avg ( ranking )  ,  T1.first_name, t1.last_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id   =   T2.player_id GROUP BY T1.player_id
连接数据库../datasets/cosql_dataset/database/wta_1/wta_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT avg(ranking) ,  first_name ,  last_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id GROUP BY T1.first_name ,  T1.last_name
medium gold: SELECT avg ( ranking )  ,  T1.first_name, t1.last_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id   =   T2.player_id GROUP BY T1.player_id

当前idx3
____________________
SELECT first_name ,  last_name FROM players WHERE hand  =  "L"
SELECT  T1.first_name, t1.last_name FROM players AS T1 where t1.hand  =  "L"
连接数据库../datasets/cosql_dataset/database/wta_1/wta_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx4
____________________
SELECT last_name FROM players WHERE hand  =  "L"
SELECT T1.last_name FROM players AS T1 where t1.hand  =  "L"
连接数据库../datasets/cosql_dataset/database/wta_1/wta_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx>4
____________________
SELECT last_name ,  avg(ranking) FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id WHERE T1.hand  =  "L" GROUP BY T1.last_name
SELECT avg ( ranking )  ,  T1.last_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id   =   T2.player_id where T1.hand  =  "L" GROUP BY T1.first_name
连接数据库../datasets/cosql_dataset/database/wta_1/wta_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
hard pred: SELECT last_name ,  avg(ranking) FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id WHERE T1.hand  =  "L" GROUP BY T1.last_name
hard gold: SELECT avg ( ranking )  ,  T1.last_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id   =   T2.player_id where T1.hand  =  "L" GROUP BY T1.first_name

当前idx1
____________________
SELECT avg(grade) FROM highschooler WHERE id IN (SELECT student_id FROM friend)
SELECT avg ( grade )  FROM Highschooler WHERE id IN  ( SELECT T1.student_id FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id   =   T2.id ) 
连接数据库../datasets/cosql_dataset/database/network_1/network_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:0
hard pred: SELECT avg(grade) FROM highschooler WHERE id IN (SELECT student_id FROM friend)
hard gold: SELECT avg ( grade )  FROM Highschooler WHERE id IN  ( SELECT T1.student_id FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id   =   T2.id ) 

当前idx2
____________________
SELECT name FROM highschooler WHERE id NOT IN (SELECT student_id FROM friend)
SELECT * FROM Highschooler WHERE id not IN  ( SELECT student_id FROM Friend ) 
连接数据库../datasets/cosql_dataset/database/network_1/network_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
hard pred: SELECT name FROM highschooler WHERE id NOT IN (SELECT student_id FROM friend)
hard gold: SELECT * FROM Highschooler WHERE id not IN  ( SELECT student_id FROM Friend ) 

当前idx3
____________________
SELECT name, grade FROM highschooler WHERE id NOT IN (SELECT student_id FROM friend)
SELECT grade FROM Highschooler WHERE id not IN  ( SELECT student_id FROM Friend ) 
连接数据库../datasets/cosql_dataset/database/network_1/network_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
hard pred: SELECT name, grade FROM highschooler WHERE id NOT IN (SELECT student_id FROM friend)
hard gold: SELECT grade FROM Highschooler WHERE id not IN  ( SELECT student_id FROM Friend ) 

当前idx4
____________________
SELECT name FROM highschooler WHERE id NOT IN (SELECT student_id FROM friend)
SELECT name FROM Highschooler WHERE id not IN  ( SELECT student_id FROM Friend ) 
连接数据库../datasets/cosql_dataset/database/network_1/network_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx>4
____________________
SELECT name FROM highschooler WHERE id IN (SELECT student_id FROM friend)
SELECT name FROM Highschooler WHERE id IN  ( SELECT student_id FROM Friend ) 
连接数据库../datasets/cosql_dataset/database/network_1/network_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx1
____________________
SELECT count(*) FROM Highschooler
select count ( * )  from highschooler
连接数据库../datasets/cosql_dataset/database/network_1/network_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT count(*) FROM Highschooler WHERE grade  =  9
SELECT count ( * )  FROM highschooler WHERE grade   =   9
连接数据库../datasets/cosql_dataset/database/network_1/network_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx3
____________________
SELECT grade FROM Highschooler WHERE grade  =  9
SELECT grade from highschooler where name  =  "Kyle"
连接数据库../datasets/cosql_dataset/database/network_1/network_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
easy pred: SELECT grade FROM Highschooler WHERE grade  =  9
easy gold: SELECT grade from highschooler where name  =  "Kyle"

当前idx1
____________________
SELECT name FROM stadium
SELECT name FROM stadium WHERE stadium_id NOT IN  ( SELECT stadium_id FROM concert ) 
连接数据库../datasets/cosql_dataset/database/concert_singer/concert_singer.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
hard pred: SELECT name FROM stadium
hard gold: SELECT name FROM stadium WHERE stadium_id NOT IN  ( SELECT stadium_id FROM concert ) 

当前idx2
____________________
SELECT name FROM stadium WHERE Highest  >  (SELECT avg(Highest) FROM stadium)
SELECT name FROM stadium ORDER BY Highest DESC LIMIT 1
连接数据库../datasets/cosql_dataset/database/concert_singer/concert_singer.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT name FROM stadium WHERE Highest  >  (SELECT avg(Highest) FROM stadium)
medium gold: SELECT name FROM stadium ORDER BY Highest DESC LIMIT 1

当前idx1
____________________
SELECT Citizenship FROM singer GROUP BY Citizenship ORDER BY COUNT(*) DESC LIMIT 1
SELECT Citizenship FROM singer GROUP BY Citizenship ORDER BY COUNT ( * )  DESC LIMIT 1
连接数据库../datasets/cosql_dataset/database/singer/singer.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT Citizenship FROM singer GROUP BY Citizenship ORDER BY COUNT(*) ASC LIMIT 1
SELECT Citizenship FROM singer GROUP BY Citizenship ORDER BY COUNT ( * )  ASC LIMIT 1
连接数据库../datasets/cosql_dataset/database/singer/singer.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx3
____________________
SELECT Name FROM singer WHERE Citizenship = "Australia"
SELECT name FROM singer where Citizenship = 'Australia'
连接数据库../datasets/cosql_dataset/database/singer/singer.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx1
____________________
SELECT Nationality FROM people WHERE People_ID = 1
SELECT Nationality FROM people where People_ID = 1
连接数据库../datasets/cosql_dataset/database/poker_player/poker_player.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT Birth_Date FROM people WHERE Name = "Teodor Salparov"
SELECT Birth_Date FROM people where Name = "Teodor Salparov"
连接数据库../datasets/cosql_dataset/database/poker_player/poker_player.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx3
____________________
SELECT Earnings FROM poker_player WHERE People_ID = 5
SELECT Earnings FROM poker_player where People_ID   =   5
连接数据库../datasets/cosql_dataset/database/poker_player/poker_player.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx4
eval_err_num:82
____________________
SELECT Money_Rank FROM poker_player ORDER BY Height DESC LIMIT 1
SELECT T2.Money_Rank FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID   =   T2.People_ID ORDER BY T1.Height DESC LIMIT 1
连接数据库../datasets/cosql_dataset/database/poker_player/poker_player.sqlite
执行第一个查询
执行出错: no such column: Height
eval_exec:False
exact_score:0
hard pred: SELECT Money_Rank FROM poker_player ORDER BY Height DESC LIMIT 1
hard gold: SELECT T2.Money_Rank FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID   =   T2.People_ID ORDER BY T1.Height DESC LIMIT 1

当前idx1
____________________
SELECT T1.degree_program_id ,  count(*) FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id GROUP BY T1.degree_program_id ORDER BY count(*) ASC LIMIT 1
SELECT T1.degree_summary_name FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id   =   T2.degree_program_id GROUP BY T1.degree_summary_name ORDER BY count ( * )  DESC LIMIT 1
连接数据库../datasets/cosql_dataset/database/student_transcripts_tracking/student_transcripts_tracking.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
extra pred: SELECT T1.degree_program_id ,  count(*) FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id GROUP BY T1.degree_program_id ORDER BY count(*) ASC LIMIT 1
extra gold: SELECT T1.degree_summary_name FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id   =   T2.degree_program_id GROUP BY T1.degree_summary_name ORDER BY count ( * )  DESC LIMIT 1

当前idx2
____________________
SELECT degree_program_id FROM Degree_Programs WHERE degree_summary_name = "Architecto"
SELECT degree_program_id from Degree_Programs where degree_summary_description  =  'architecto'
连接数据库../datasets/cosql_dataset/database/student_transcripts_tracking/student_transcripts_tracking.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
easy pred: SELECT degree_program_id FROM Degree_Programs WHERE degree_summary_name = "Architecto"
easy gold: SELECT degree_program_id from Degree_Programs where degree_summary_description  =  'architecto'

当前idx1
____________________
SELECT T1.degree_program_id FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id JOIN Students AS T3 ON T2.student_id  =  T3.student_id WHERE T3.first_name  =  "Timmothy"
SELECT T2.degree_program_id FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id WHERE T1.first_name  =  "Timmothy"
连接数据库../datasets/cosql_dataset/database/student_transcripts_tracking/student_transcripts_tracking.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:False
medium pred: SELECT T1.degree_program_id FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id JOIN Students AS T3 ON T2.student_id  =  T3.student_id WHERE T3.first_name  =  "Timmothy"
medium gold: SELECT T2.degree_program_id FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id WHERE T1.first_name  =  "Timmothy"

当前idx2
____________________
SELECT T1.date_first_registered ,  T1.date_left FROM Students AS T1 WHERE T1.first_name  =  "Timmothy"
SELECT date_first_registered, date_left FROM Students WHERE first_name  =  "Timmothy"
连接数据库../datasets/cosql_dataset/database/student_transcripts_tracking/student_transcripts_tracking.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx3
____________________
SELECT T1.middle_name FROM Students AS T1 WHERE T1.email_address  =  "johns.unique@example.net"
SELECT middle_name FROM Students WHERE email_address  =  "johns.unique@example.net"
连接数据库../datasets/cosql_dataset/database/student_transcripts_tracking/student_transcripts_tracking.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx1
____________________
SELECT distinct PetType FROM Pets
SELECT distinct PetType from Pets
连接数据库../datasets/cosql_dataset/database/pets_1/pets_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT count(*) FROM Pets WHERE PetType = "dog"
SELECT count ( * )   from Pets where PetType = "dog"
连接数据库../datasets/cosql_dataset/database/pets_1/pets_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx3
____________________
SELECT pet_age FROM Pets WHERE PetType = "dog"
SELECT pet_age  from Pets where PetType = "dog"
连接数据库../datasets/cosql_dataset/database/pets_1/pets_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx4
____________________
SELECT weight FROM Pets WHERE PetType = "dog" AND pet_age = 1
SELECT weight  from Pets where PetType = "dog" and pet_age  =   ( select min ( pet_age )  from Pets where PetType = "dog" ) 
连接数据库../datasets/cosql_dataset/database/pets_1/pets_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:0
extra pred: SELECT weight FROM Pets WHERE PetType = "dog" AND pet_age = 1
extra gold: SELECT weight  from Pets where PetType = "dog" and pet_age  =   ( select min ( pet_age )  from Pets where PetType = "dog" ) 

当前idx1
____________________
SELECT T1.last_name FROM Students AS T1 JOIN Addresses AS T2 ON T1.current_address_id = T2.address_id WHERE T2.state_province_county = "North Carolina"
SELECT T1.last_name FROM Students AS T1 JOIN Addresses AS T2 ON T1.current_address_id   =   T2.address_id WHERE T2.state_province_county   =   'NorthCarolina'
连接数据库../datasets/cosql_dataset/database/student_transcripts_tracking/student_transcripts_tracking.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:True
当前idx2
____________________
SELECT T1.first_name FROM Students AS T1 JOIN Addresses AS T2 ON T1.current_address_id = T2.address_id WHERE T2.state_province_county = "North Carolina"
SELECT T1.first_name FROM Students AS T1 JOIN Addresses AS T2 ON T1.current_address_id   =   T2.address_id WHERE T2.state_province_county   =   'NorthCarolina'
连接数据库../datasets/cosql_dataset/database/student_transcripts_tracking/student_transcripts_tracking.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:True
当前idx3
____________________
SELECT T1.last_name FROM Students AS T1 JOIN Addresses AS T2 ON T1.current_address_id = T2.address_id WHERE T2.state_province_county = "North Carolina" EXCEPT SELECT T1.last_name FROM Students AS T1 JOIN Addresses AS T2 ON T1.current_address_id = T2.address_id JOIN Student_Enrolment AS T3 ON T1.student_id = T3.student_id JOIN Degree_Programs AS T4 ON T3.degree_program_id = T4.degree_program_id WHERE T2.state_province_county = "North Carolina"
SELECT T1.last_name FROM Students AS T1 JOIN Addresses AS T2 ON T1.current_address_id   =   T2.address_id WHERE T2.state_province_county   =   'NorthCarolina' EXCEPT SELECT DISTINCT T3.last_name FROM Students AS T3 JOIN Student_Enrolment AS T4 ON T3.student_id   =   T4.student_id
连接数据库../datasets/cosql_dataset/database/student_transcripts_tracking/student_transcripts_tracking.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
extra pred: SELECT T1.last_name FROM Students AS T1 JOIN Addresses AS T2 ON T1.current_address_id = T2.address_id WHERE T2.state_province_county = "North Carolina" EXCEPT SELECT T1.last_name FROM Students AS T1 JOIN Addresses AS T2 ON T1.current_address_id = T2.address_id JOIN Student_Enrolment AS T3 ON T1.student_id = T3.student_id JOIN Degree_Programs AS T4 ON T3.degree_program_id = T4.degree_program_id WHERE T2.state_province_county = "North Carolina"
extra gold: SELECT T1.last_name FROM Students AS T1 JOIN Addresses AS T2 ON T1.current_address_id   =   T2.address_id WHERE T2.state_province_county   =   'NorthCarolina' EXCEPT SELECT DISTINCT T3.last_name FROM Students AS T3 JOIN Student_Enrolment AS T4 ON T3.student_id   =   T4.student_id

当前idx4
____________________
SELECT T1.first_name FROM Students AS T1 JOIN Addresses AS T2 ON T1.current_address_id = T2.address_id WHERE T2.state_province_county = "North Carolina" EXCEPT SELECT T1.first_name FROM Students AS T1 JOIN Addresses AS T2 ON T1.current_address_id = T2.address_id JOIN Student_Enrolment AS T3 ON T1.student_id = T3.student_id JOIN Degree_Programs AS T4 ON T3.degree_program_id = T4.degree_program_id WHERE T2.state_province_county = "North Carolina"
SELECT T1.first_name FROM Students AS T1 JOIN Addresses AS T2 ON T1.current_address_id   =   T2.address_id WHERE T2.state_province_county   =   'NorthCarolina' EXCEPT SELECT DISTINCT T3.last_name FROM Students AS T3 JOIN Student_Enrolment AS T4 ON T3.student_id   =   T4.student_id
连接数据库../datasets/cosql_dataset/database/student_transcripts_tracking/student_transcripts_tracking.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
extra pred: SELECT T1.first_name FROM Students AS T1 JOIN Addresses AS T2 ON T1.current_address_id = T2.address_id WHERE T2.state_province_county = "North Carolina" EXCEPT SELECT T1.first_name FROM Students AS T1 JOIN Addresses AS T2 ON T1.current_address_id = T2.address_id JOIN Student_Enrolment AS T3 ON T1.student_id = T3.student_id JOIN Degree_Programs AS T4 ON T3.degree_program_id = T4.degree_program_id WHERE T2.state_province_county = "North Carolina"
extra gold: SELECT T1.first_name FROM Students AS T1 JOIN Addresses AS T2 ON T1.current_address_id   =   T2.address_id WHERE T2.state_province_county   =   'NorthCarolina' EXCEPT SELECT DISTINCT T3.last_name FROM Students AS T3 JOIN Student_Enrolment AS T4 ON T3.student_id   =   T4.student_id

当前idx1
____________________
SELECT winner_name ,  loser_name FROM matches ORDER BY minutes DESC LIMIT 1
SELECT winner_name ,  loser_name FROM matches ORDER BY minutes DESC LIMIT 1
连接数据库../datasets/cosql_dataset/database/wta_1/wta_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT score FROM matches ORDER BY minutes DESC LIMIT 1
SELECT score FROM matches ORDER BY minutes DESC LIMIT 1
连接数据库../datasets/cosql_dataset/database/wta_1/wta_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx1
____________________
SELECT DISTINCT T1.Model FROM model_list AS T1
select distinct Model from car_names
连接数据库../datasets/cosql_dataset/database/car_1/car_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:False
easy pred: SELECT DISTINCT T1.Model FROM model_list AS T1
easy gold: select distinct Model from car_names

当前idx2
eval_err_num:83
____________________
SELECT DISTINCT T1.Model FROM model_list AS T1 WHERE T1.Model IN (SELECT T2.Model FROM model_list AS T2 WHERE T2.Year  >  1980)
SELECT DISTINCT T1.model FROM MODEL_LIST AS T1 JOIN CAR_NAMES AS T2 ON T1.model   =   T2.model JOIN CARS_DATA AS T3 ON T2.MakeId   =   T3.id WHERE T3.year  >  1980
连接数据库../datasets/cosql_dataset/database/car_1/car_1.sqlite
执行第一个查询
执行出错: no such column: T2.Year
eval_exec:False
exact_score:0
hard pred: SELECT DISTINCT T1.Model FROM model_list AS T1 WHERE T1.Model IN (SELECT T2.Model FROM model_list AS T2 WHERE T2.Year  >  1980)
hard gold: SELECT DISTINCT T1.model FROM MODEL_LIST AS T1 JOIN CAR_NAMES AS T2 ON T1.model   =   T2.model JOIN CARS_DATA AS T3 ON T2.MakeId   =   T3.id WHERE T3.year  >  1980

当前idx1
____________________
SELECT grade FROM Highschooler GROUP BY grade ORDER BY count(*) DESC LIMIT 1
SELECT grade FROM Highschooler GROUP BY grade ORDER BY count ( * )  DESC LIMIT 1
连接数据库../datasets/cosql_dataset/database/network_1/network_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT name FROM Highschooler WHERE grade = 9
SELECT name FROM Highschooler WHERE grade  =  9
连接数据库../datasets/cosql_dataset/database/network_1/network_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx3
____________________
SELECT grade FROM Highschooler WHERE name = "Tiffany"
SELECT grade FROM Highschooler WHERE name  =  "Tiffany"
连接数据库../datasets/cosql_dataset/database/network_1/network_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx4
____________________
SELECT count(*) FROM Highschooler WHERE grade = 9
SELECT count ( * )  FROM Highschooler WHERE grade  =  9
连接数据库../datasets/cosql_dataset/database/network_1/network_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx>4
____________________
SELECT grade FROM Highschooler WHERE ID = 1689
SELECT grade FROM Highschooler WHERE name  =  "Gabriel" AND ID  =  1689
连接数据库../datasets/cosql_dataset/database/network_1/network_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:0
medium pred: SELECT grade FROM Highschooler WHERE ID = 1689
medium gold: SELECT grade FROM Highschooler WHERE name  =  "Gabriel" AND ID  =  1689

当前idx>4
____________________
SELECT ID FROM Highschooler WHERE name = "Tiffany"
SELECT ID FROM Highschooler WHERE name  =  "Tiffany"
连接数据库../datasets/cosql_dataset/database/network_1/network_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx>4
____________________
SELECT name FROM Highschooler WHERE ID = 1510
SELECT name FROM Highschooler WHERE ID  =  1510
连接数据库../datasets/cosql_dataset/database/network_1/network_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx1
____________________
SELECT first_name,last_name FROM Owners WHERE owner_id = 1
SELECT T1.first_name , T1.last_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id   =   T2.owner_id WHERE T1.owner_id   =  1
连接数据库../datasets/cosql_dataset/database/dog_kennels/dog_kennels.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:False
medium pred: SELECT first_name,last_name FROM Owners WHERE owner_id = 1
medium gold: SELECT T1.first_name , T1.last_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id   =   T2.owner_id WHERE T1.owner_id   =  1

当前idx2
____________________
SELECT name FROM Dogs WHERE age = 6
SELECT name  FROM Dogs  WHERE age  =  6
连接数据库../datasets/cosql_dataset/database/dog_kennels/dog_kennels.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx3
____________________
SELECT name FROM Dogs WHERE age  >  5
SELECT  name  FROM  Dogs WHERE age >5
连接数据库../datasets/cosql_dataset/database/dog_kennels/dog_kennels.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx4
____________________
SELECT T1.name FROM Dogs AS T1 JOIN Owners AS T2 ON T1.owner_id  =  T2.owner_id WHERE T2.state  =  'Virginia'
SELECT T2.name  FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id   =   T2.owner_id WHERE T1.state   = "Virginia"
连接数据库../datasets/cosql_dataset/database/dog_kennels/dog_kennels.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx1
____________________
SELECT course_name FROM Courses GROUP BY course_name ORDER BY count(*) ASC LIMIT 1
SELECT  T1.course_name FROM Courses AS T1 JOIN Student_Enrolment_Courses AS T2 ON T1.course_id   =   T2.course_id GROUP BY T1.course_name ORDER BY count ( * )  LIMIT 1
连接数据库../datasets/cosql_dataset/database/student_transcripts_tracking/student_transcripts_tracking.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:False
extra pred: SELECT course_name FROM Courses GROUP BY course_name ORDER BY count(*) ASC LIMIT 1
extra gold: SELECT  T1.course_name FROM Courses AS T1 JOIN Student_Enrolment_Courses AS T2 ON T1.course_id   =   T2.course_id GROUP BY T1.course_name ORDER BY count ( * )  LIMIT 1

当前idx2
____________________
SELECT course_id FROM Courses WHERE course_name = "Math"
SELECT course_id from courses where course_name  =  "math"
连接数据库../datasets/cosql_dataset/database/student_transcripts_tracking/student_transcripts_tracking.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:True
当前idx3
____________________
SELECT count(*) FROM Student_Enrolment_Courses WHERE course_id = 14
SELECT  count ( * )  FROM Courses AS T1 JOIN Student_Enrolment_Courses AS T2 ON T1.course_id   =   T2.course_id GROUP BY T1.course_name having T1.course_id  =  14
连接数据库../datasets/cosql_dataset/database/student_transcripts_tracking/student_transcripts_tracking.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:0
medium pred: SELECT count(*) FROM Student_Enrolment_Courses WHERE course_id = 14
medium gold: SELECT  count ( * )  FROM Courses AS T1 JOIN Student_Enrolment_Courses AS T2 ON T1.course_id   =   T2.course_id GROUP BY T1.course_name having T1.course_id  =  14

当前idx1
____________________
SELECT count(distinct countrycode) from countrylanguage
SELECT count ( distinct  Language )  from countrylanguage
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
easy pred: SELECT count(distinct countrycode) from countrylanguage
easy gold: SELECT count ( distinct  Language )  from countrylanguage

当前idx2
____________________
SELECT max(percentage) from countrylanguage
SELECT max ( Percentage )  from countrylanguage
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx1
____________________
SELECT name FROM Highschooler
select name from highschooler
连接数据库../datasets/cosql_dataset/database/network_1/network_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT T1.name FROM Highschooler AS T1 JOIN Friend AS T2 ON T1.id  =  T2.student_id JOIN Highschooler AS T3 ON T3.id  =  T2.friend_id WHERE T3.name  =  "Kyle"
SELECT T3.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id JOIN Highschooler AS T3 ON T1.friend_id  =  T3.id WHERE T2.name  =  "Kyle"
连接数据库../datasets/cosql_dataset/database/network_1/network_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:True
当前idx3
____________________
SELECT id FROM Highschooler WHERE name = "Kyle"
SELECT id FROM highschooler where name  =  "Kyle"
连接数据库../datasets/cosql_dataset/database/network_1/network_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx4
____________________
SELECT name FROM Highschooler WHERE id = 1709
SELECT name FROM highschooler where id  =  1709
连接数据库../datasets/cosql_dataset/database/network_1/network_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx>4
____________________
SELECT T1.name FROM Highschooler AS T1 JOIN Friend AS T2 ON T1.id  =  T2.student_id JOIN Highschooler AS T3 ON T3.id  =  T2.friend_id WHERE T3.name  =  "Jordan"
SELECT T3.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id JOIN Highschooler AS T3 ON T1.friend_id  =  T3.id WHERE T2.name  =  "Jordan"
连接数据库../datasets/cosql_dataset/database/network_1/network_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:True
当前idx>4
____________________
SELECT T1.name FROM Highschooler AS T1 JOIN Friend AS T2 ON T1.id  =  T2.student_id JOIN Highschooler AS T3 ON T3.id  =  T2.friend_id WHERE T3.name  =  "Gabriel"
SELECT T3.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id JOIN Highschooler AS T3 ON T1.friend_id  =  T3.id WHERE T2.name  =  "Gabriel"
连接数据库../datasets/cosql_dataset/database/network_1/network_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:True
当前idx1
____________________
SELECT CountryName FROM countries WHERE Continent = "Europe"
SELECT distinct T1.CountryName FROM COUNTRIES AS T1 JOIN CONTINENTS AS T2 ON T1.Continent   =   T2.ContId JOIN CAR_MAKERS AS T3 ON T1.CountryId   =   T3.Country WHERE T2.Continent   =   'europe'
连接数据库../datasets/cosql_dataset/database/car_1/car_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
hard pred: SELECT CountryName FROM countries WHERE Continent = "Europe"
hard gold: SELECT distinct T1.CountryName FROM COUNTRIES AS T1 JOIN CONTINENTS AS T2 ON T1.Continent   =   T2.ContId JOIN CAR_MAKERS AS T3 ON T1.CountryId   =   T3.Country WHERE T2.Continent   =   'europe'

当前idx2
eval_err_num:84
____________________
SELECT CountryName, COUNT(*) AS num_car_makers FROM countries AS T1 JOIN car_makers AS T2 ON T1.CountryId = T2.Country GROUP BY T1.CountryId
SELECT T1.CountryName, count ( * )  FROM COUNTRIES AS T1 JOIN CONTINENTS AS T2 ON T1.Continent   =   T2.ContId JOIN CAR_MAKERS AS T3 ON T1.CountryId   =   T3.Country WHERE T2.Continent   =   'europe' GROUP BY T1.CountryName
连接数据库../datasets/cosql_dataset/database/car_1/car_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
extra pred: SELECT CountryName, COUNT(*) AS num_car_makers FROM countries AS T1 JOIN car_makers AS T2 ON T1.CountryId = T2.Country GROUP BY T1.CountryId
extra gold: SELECT T1.CountryName, count ( * )  FROM COUNTRIES AS T1 JOIN CONTINENTS AS T2 ON T1.Continent   =   T2.ContId JOIN CAR_MAKERS AS T3 ON T1.CountryId   =   T3.Country WHERE T2.Continent   =   'europe' GROUP BY T1.CountryName

当前idx3
____________________
SELECT CountryName FROM countries WHERE Continent = "Europe" GROUP BY CountryName HAVING COUNT(*) >= 3
SELECT T1.CountryName FROM COUNTRIES AS T1 JOIN CONTINENTS AS T2 ON T1.Continent   =   T2.ContId JOIN CAR_MAKERS AS T3 ON T1.CountryId   =   T3.Country WHERE T2.Continent   =   'europe' GROUP BY T1.CountryName HAVING count ( * )    > =    3
连接数据库../datasets/cosql_dataset/database/car_1/car_1.sqlite
执行第一个查询
执行第二个查询
执行出错: near "=": syntax error
eval_exec:False
exact_score:0
extra pred: SELECT CountryName FROM countries WHERE Continent = "Europe" GROUP BY CountryName HAVING COUNT(*) >= 3
extra gold: SELECT T1.CountryName FROM COUNTRIES AS T1 JOIN CONTINENTS AS T2 ON T1.Continent   =   T2.ContId JOIN CAR_MAKERS AS T3 ON T1.CountryId   =   T3.Country WHERE T2.Continent   =   'europe' GROUP BY T1.CountryName HAVING count ( * )    > =    3

当前idx4
eval_err_num:85
____________________
SELECT CountryName, COUNT(*) AS num_car_makers FROM countries AS T1 JOIN car_makers AS T2 ON T1.CountryId = T2.Country GROUP BY T1.CountryId
SELECT T1.CountryName, count ( * )  FROM COUNTRIES AS T1 JOIN CONTINENTS AS T2 ON T1.Continent   =   T2.ContId JOIN CAR_MAKERS AS T3 ON T1.CountryId   =   T3.Country WHERE T2.Continent   =   'europe' GROUP BY T1.CountryName HAVING count ( * )    > =    3
连接数据库../datasets/cosql_dataset/database/car_1/car_1.sqlite
执行第一个查询
执行第二个查询
执行出错: near "=": syntax error
eval_exec:False
exact_score:0
extra pred: SELECT CountryName, COUNT(*) AS num_car_makers FROM countries AS T1 JOIN car_makers AS T2 ON T1.CountryId = T2.Country GROUP BY T1.CountryId
extra gold: SELECT T1.CountryName, count ( * )  FROM COUNTRIES AS T1 JOIN CONTINENTS AS T2 ON T1.Continent   =   T2.ContId JOIN CAR_MAKERS AS T3 ON T1.CountryId   =   T3.Country WHERE T2.Continent   =   'europe' GROUP BY T1.CountryName HAVING count ( * )    > =    3

当前idx>4
eval_err_num:86
____________________
SELECT COUNT(*) AS num_car_makers FROM countries AS T1 JOIN car_makers AS T2 ON T1.CountryId = T2.Country WHERE Continent = "Europe"
SELECT count ( * )  FROM COUNTRIES AS T1 JOIN CONTINENTS AS T2 ON T1.Continent   =   T2.ContId JOIN CAR_MAKERS AS T3 ON T1.CountryId   =   T3.Country WHERE T2.Continent   =   'europe'
连接数据库../datasets/cosql_dataset/database/car_1/car_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
hard pred: SELECT COUNT(*) AS num_car_makers FROM countries AS T1 JOIN car_makers AS T2 ON T1.CountryId = T2.Country WHERE Continent = "Europe"
hard gold: SELECT count ( * )  FROM COUNTRIES AS T1 JOIN CONTINENTS AS T2 ON T1.Continent   =   T2.ContId JOIN CAR_MAKERS AS T3 ON T1.CountryId   =   T3.Country WHERE T2.Continent   =   'europe'

当前idx>4
eval_err_num:87
____________________
SELECT COUNT(*) AS num_car_makers FROM countries AS T1 JOIN car_makers AS T2 ON T1.CountryId = T2.Country WHERE Continent = "America"
SELECT count ( * )  FROM COUNTRIES AS T1 JOIN CONTINENTS AS T2 ON T1.Continent   =   T2.ContId JOIN CAR_MAKERS AS T3 ON T1.CountryId   =   T3.Country WHERE T2.Continent   =   'america'
连接数据库../datasets/cosql_dataset/database/car_1/car_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
hard pred: SELECT COUNT(*) AS num_car_makers FROM countries AS T1 JOIN car_makers AS T2 ON T1.CountryId = T2.Country WHERE Continent = "America"
hard gold: SELECT count ( * )  FROM COUNTRIES AS T1 JOIN CONTINENTS AS T2 ON T1.Continent   =   T2.ContId JOIN CAR_MAKERS AS T3 ON T1.CountryId   =   T3.Country WHERE T2.Continent   =   'america'

当前idx>4
____________________
SELECT CountryName FROM countries WHERE Continent = "America"
SELECT T3.Fullname FROM COUNTRIES AS T1 JOIN CONTINENTS AS T2 ON T1.Continent   =   T2.ContId JOIN CAR_MAKERS AS T3 ON T1.CountryId   =   T3.Country WHERE T2.Continent   =   'america'
连接数据库../datasets/cosql_dataset/database/car_1/car_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
hard pred: SELECT CountryName FROM countries WHERE Continent = "America"
hard gold: SELECT T3.Fullname FROM COUNTRIES AS T1 JOIN CONTINENTS AS T2 ON T1.Continent   =   T2.ContId JOIN CAR_MAKERS AS T3 ON T1.CountryId   =   T3.Country WHERE T2.Continent   =   'america'

当前idx1
____________________
SELECT count(*) FROM (SELECT * FROM visitor AS T1 JOIN visit AS T2 ON T1.ID  =  T2.visitor_ID WHERE T2.Museum_ID NOT IN (SELECT Museum_ID FROM museum WHERE Open_Year  >  2010))
SELECT count ( * )  FROM visitor WHERE id NOT IN  ( SELECT t2.visitor_id FROM museum AS t1 JOIN visit AS t2 ON t1.Museum_ID   =   t2.Museum_ID WHERE t1.open_year  >  2010 ) 
连接数据库../datasets/cosql_dataset/database/museum_visit/museum_visit.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
extra pred: SELECT count(*) FROM (SELECT * FROM visitor AS T1 JOIN visit AS T2 ON T1.ID  =  T2.visitor_ID WHERE T2.Museum_ID NOT IN (SELECT Museum_ID FROM museum WHERE Open_Year  >  2010))
extra gold: SELECT count ( * )  FROM visitor WHERE id NOT IN  ( SELECT t2.visitor_id FROM museum AS t1 JOIN visit AS t2 ON t1.Museum_ID   =   t2.Museum_ID WHERE t1.open_year  >  2010 ) 

当前idx2
____________________
SELECT T1.Name ,  T1.Level_of_membership FROM visitor AS T1 JOIN visit AS T2 ON T1.ID  =  T2.visitor_ID WHERE T2.Museum_ID NOT IN (SELECT Museum_ID FROM museum WHERE Open_Year  >  2010)
SELECT name, level_of_membership FROM visitor WHERE id NOT IN  ( SELECT t2.visitor_id FROM museum AS t1 JOIN visit AS t2 ON t1.Museum_ID   =   t2.Museum_ID WHERE t1.open_year  >  2010 ) 
连接数据库../datasets/cosql_dataset/database/museum_visit/museum_visit.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
extra pred: SELECT T1.Name ,  T1.Level_of_membership FROM visitor AS T1 JOIN visit AS T2 ON T1.ID  =  T2.visitor_ID WHERE T2.Museum_ID NOT IN (SELECT Museum_ID FROM museum WHERE Open_Year  >  2010)
extra gold: SELECT name, level_of_membership FROM visitor WHERE id NOT IN  ( SELECT t2.visitor_id FROM museum AS t1 JOIN visit AS t2 ON t1.Museum_ID   =   t2.Museum_ID WHERE t1.open_year  >  2010 ) 

当前idx1
____________________
SELECT count(*) FROM Owners WHERE owner_id NOT IN (SELECT owner_id FROM Dogs)
SELECT count ( * )  FROM Owners WHERE owner_id NOT IN  (  SELECT owner_id FROM Dogs  ) 
连接数据库../datasets/cosql_dataset/database/dog_kennels/dog_kennels.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT first_name, last_name FROM Owners WHERE owner_id NOT IN (SELECT owner_id FROM Dogs)
SELECT count ( * )  FROM Owners WHERE owner_id NOT IN  (  SELECT owner_id FROM Dogs  ) 
连接数据库../datasets/cosql_dataset/database/dog_kennels/dog_kennels.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
extra pred: SELECT first_name, last_name FROM Owners WHERE owner_id NOT IN (SELECT owner_id FROM Dogs)
extra gold: SELECT count ( * )  FROM Owners WHERE owner_id NOT IN  (  SELECT owner_id FROM Dogs  ) 

当前idx1
____________________
SELECT title FROM Cartoon ORDER BY original_air_date ASC LIMIT 1
SELECT title  FROM cartoon ORDER BY original_air_date LIMIT 1
连接数据库../datasets/cosql_dataset/database/tvshow/tvshow.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT title FROM Cartoon ORDER BY original_air_date DESC LIMIT 1
SELECT title  FROM cartoon ORDER BY original_air_date desc LIMIT 1
连接数据库../datasets/cosql_dataset/database/tvshow/tvshow.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx3
____________________
SELECT channel FROM Cartoon ORDER BY original_air_date DESC LIMIT 1
SELECT channel FROM cartoon ORDER BY original_air_date desc LIMIT 1
连接数据库../datasets/cosql_dataset/database/tvshow/tvshow.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx4
____________________
SELECT production_code FROM Cartoon ORDER BY original_air_date DESC LIMIT 1
SELECT production_code FROM cartoon ORDER BY original_air_date desc LIMIT 1
连接数据库../datasets/cosql_dataset/database/tvshow/tvshow.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx1
____________________
SELECT Name FROM singer WHERE Birth_Year  <  1945
SELECT * FROM singer WHERE Birth_Year  <  1945
连接数据库../datasets/cosql_dataset/database/singer/singer.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
easy pred: SELECT Name FROM singer WHERE Birth_Year  <  1945
easy gold: SELECT * FROM singer WHERE Birth_Year  <  1945

当前idx2
____________________
SELECT Name FROM singer WHERE Birth_Year  >  1955
SELECT * FROM singer WHERE Birth_Year  >  1955
连接数据库../datasets/cosql_dataset/database/singer/singer.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
easy pred: SELECT Name FROM singer WHERE Birth_Year  >  1955
easy gold: SELECT * FROM singer WHERE Birth_Year  >  1955

当前idx3
____________________
SELECT Citizenship FROM singer WHERE Birth_Year  <  1945
SELECT Citizenship FROM singer WHERE Birth_Year  <  1945
连接数据库../datasets/cosql_dataset/database/singer/singer.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx4
____________________
SELECT Citizenship FROM singer WHERE Birth_Year  <  1945 INTERSECT SELECT Citizenship FROM singer WHERE Birth_Year  >  1955
SELECT Citizenship FROM singer WHERE Birth_Year  <  1945 or Birth_Year  >  1955
连接数据库../datasets/cosql_dataset/database/singer/singer.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT Citizenship FROM singer WHERE Birth_Year  <  1945 INTERSECT SELECT Citizenship FROM singer WHERE Birth_Year  >  1955
medium gold: SELECT Citizenship FROM singer WHERE Birth_Year  <  1945 or Birth_Year  >  1955

当前idx>4
____________________
SELECT Name FROM singer WHERE Birth_Year  <  1945 AND Citizenship = "United States"
SELECT * FROM singer WHERE Birth_Year  <  1945 and Citizenship  =  'United States'
连接数据库../datasets/cosql_dataset/database/singer/singer.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT Name FROM singer WHERE Birth_Year  <  1945 AND Citizenship = "United States"
medium gold: SELECT * FROM singer WHERE Birth_Year  <  1945 and Citizenship  =  'United States'

当前idx>4
____________________
SELECT Name FROM singer WHERE Birth_Year  >  1955 AND Citizenship = "United States"
SELECT * FROM singer WHERE Birth_Year  <  1945 and Citizenship  =  'United States' UNION SELECT * FROM singer WHERE Birth_Year  >  1955 and Citizenship  =  'United States'
连接数据库../datasets/cosql_dataset/database/singer/singer.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
extra pred: SELECT Name FROM singer WHERE Birth_Year  >  1955 AND Citizenship = "United States"
extra gold: SELECT * FROM singer WHERE Birth_Year  <  1945 and Citizenship  =  'United States' UNION SELECT * FROM singer WHERE Birth_Year  >  1955 and Citizenship  =  'United States'

当前idx>4
____________________
SELECT Name FROM singer WHERE Birth_Year  <  1945 AND Citizenship = "France"
SELECT * FROM singer WHERE Birth_Year  <  1945 and Citizenship  =  'France'
连接数据库../datasets/cosql_dataset/database/singer/singer.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT Name FROM singer WHERE Birth_Year  <  1945 AND Citizenship = "France"
medium gold: SELECT * FROM singer WHERE Birth_Year  <  1945 and Citizenship  =  'France'

当前idx>4
____________________
SELECT Name FROM singer WHERE Birth_Year  >  1955 AND Citizenship = "France"
SELECT * FROM singer WHERE Birth_Year  <  1945 and Citizenship  =  'France' UNION SELECT * FROM singer WHERE Birth_Year  >  1955 and Citizenship  =  'France'
连接数据库../datasets/cosql_dataset/database/singer/singer.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
extra pred: SELECT Name FROM singer WHERE Birth_Year  >  1955 AND Citizenship = "France"
extra gold: SELECT * FROM singer WHERE Birth_Year  <  1945 and Citizenship  =  'France' UNION SELECT * FROM singer WHERE Birth_Year  >  1955 and Citizenship  =  'France'

当前idx>4
____________________
SELECT Name FROM singer WHERE Birth_Year  <  1945 OR Birth_Year  >  1955 AND Citizenship = "Chile"
SELECT * FROM singer WHERE Birth_Year  <  1945 and Citizenship  =  'Chile' UNION SELECT * FROM singer WHERE Birth_Year  >  1955 and Citizenship  =  'Chile'
连接数据库../datasets/cosql_dataset/database/singer/singer.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
extra pred: SELECT Name FROM singer WHERE Birth_Year  <  1945 OR Birth_Year  >  1955 AND Citizenship = "Chile"
extra gold: SELECT * FROM singer WHERE Birth_Year  <  1945 and Citizenship  =  'Chile' UNION SELECT * FROM singer WHERE Birth_Year  >  1955 and Citizenship  =  'Chile'

当前idx1
____________________
SELECT count(*) FROM country
select count ( * )  from Country
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT count(*) FROM countrylanguage
select count ( distinct Language )  from countrylanguage
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
easy pred: SELECT count(*) FROM countrylanguage
easy gold: select count ( distinct Language )  from countrylanguage

当前idx3
____________________
SELECT surfacearea FROM country WHERE code = "AFG"
select SurfaceArea from Country where Code  =  'AFG'
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx1
____________________
SELECT sum(Population) FROM country WHERE Continent = "Caribbean"
SELECT sum ( Population )  FROM country WHERE Region  =  "Caribbean"
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
easy pred: SELECT sum(Population) FROM country WHERE Continent = "Caribbean"
easy gold: SELECT sum ( Population )  FROM country WHERE Region  =  "Caribbean"

当前idx2
____________________
SELECT Continent FROM country WHERE LifeExpectancy  <  72 GROUP BY Continent
SELECT Continent FROM country GROUP BY Continent HAVING avg ( LifeExpectancy )   <  72
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
easy pred: SELECT Continent FROM country WHERE LifeExpectancy  <  72 GROUP BY Continent
easy gold: SELECT Continent FROM country GROUP BY Continent HAVING avg ( LifeExpectancy )   <  72

当前idx3
____________________
SELECT sum(Population) ,  Continent FROM country WHERE LifeExpectancy  <  72 GROUP BY Continent
SELECT sum ( Population ) ,  Continent FROM country GROUP BY Continent HAVING avg ( LifeExpectancy )   <  72
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT sum(Population) ,  Continent FROM country WHERE LifeExpectancy  <  72 GROUP BY Continent
medium gold: SELECT sum ( Population ) ,  Continent FROM country GROUP BY Continent HAVING avg ( LifeExpectancy )   <  72

当前idx4
____________________
SELECT avg(LifeExpectancy) ,  Continent FROM country WHERE LifeExpectancy  <  72 GROUP BY Continent
SELECT avg ( LifeExpectancy )  ,  Continent FROM country GROUP BY Continent HAVING avg ( LifeExpectancy )   <  72
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT avg(LifeExpectancy) ,  Continent FROM country WHERE LifeExpectancy  <  72 GROUP BY Continent
medium gold: SELECT avg ( LifeExpectancy )  ,  Continent FROM country GROUP BY Continent HAVING avg ( LifeExpectancy )   <  72

当前idx>4
____________________
SELECT avg(LifeExpectancy) ,  sum(Population) ,  Continent FROM country WHERE LifeExpectancy  <  72 GROUP BY Continent
SELECT sum ( Population )  ,  avg ( LifeExpectancy )  ,  Continent FROM country GROUP BY Continent HAVING avg ( LifeExpectancy )   <  72
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT avg(LifeExpectancy) ,  sum(Population) ,  Continent FROM country WHERE LifeExpectancy  <  72 GROUP BY Continent
medium gold: SELECT sum ( Population )  ,  avg ( LifeExpectancy )  ,  Continent FROM country GROUP BY Continent HAVING avg ( LifeExpectancy )   <  72

当前idx1
____________________
SELECT street FROM Owners WHERE first_name = "Nora" AND last_name = "Haley"
SELECT street FROM Owners WHERE first_name  =  "Nora" and last_name  =  "Haley"
连接数据库../datasets/cosql_dataset/database/dog_kennels/dog_kennels.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT home_phone FROM Owners WHERE first_name = "Nora" AND last_name = "Haley"
SELECT home_phone FROM Owners WHERE first_name  =  "Nora" and last_name  =  "Haley"
连接数据库../datasets/cosql_dataset/database/dog_kennels/dog_kennels.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx3
____________________
SELECT email_address FROM Owners WHERE first_name = "Jaclyn" AND last_name = "Stoltenberg"
SELECT email_address FROM Owners WHERE first_name  =  "Jaclyn" and last_name  =  "Stoltenberg"
连接数据库../datasets/cosql_dataset/database/dog_kennels/dog_kennels.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx4
____________________
SELECT first_name FROM Owners WHERE last_name = "DuBuque"
SELECT first_name FROM Owners WHERE last_name  =  "DuBuque"
连接数据库../datasets/cosql_dataset/database/dog_kennels/dog_kennels.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx1
____________________
SELECT T1.document_id FROM Documents AS T1 JOIN Paragraphs AS T2 ON T1.document_id  =  T2.document_id GROUP BY T1.document_id ORDER BY count(*) ASC LIMIT 1
SELECT document_id FROM Paragraphs GROUP BY document_id ORDER BY count ( * )  ASC LIMIT 1
连接数据库../datasets/cosql_dataset/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:False
hard pred: SELECT T1.document_id FROM Documents AS T1 JOIN Paragraphs AS T2 ON T1.document_id  =  T2.document_id GROUP BY T1.document_id ORDER BY count(*) ASC LIMIT 1
hard gold: SELECT document_id FROM Paragraphs GROUP BY document_id ORDER BY count ( * )  ASC LIMIT 1

当前idx2
____________________
SELECT T1.document_id FROM Documents AS T1 JOIN Paragraphs AS T2 ON T1.document_id  =  T2.document_id GROUP BY T1.document_id ORDER BY count(*) DESC LIMIT 1
SELECT document_id FROM Paragraphs GROUP BY document_id ORDER BY count ( * )  desc LIMIT 1
连接数据库../datasets/cosql_dataset/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:False
hard pred: SELECT T1.document_id FROM Documents AS T1 JOIN Paragraphs AS T2 ON T1.document_id  =  T2.document_id GROUP BY T1.document_id ORDER BY count(*) DESC LIMIT 1
hard gold: SELECT document_id FROM Paragraphs GROUP BY document_id ORDER BY count ( * )  desc LIMIT 1

当前idx3
____________________
SELECT count(*) FROM Paragraphs WHERE document_id = 2394
select count ( paragraph_id )  from Paragraphs where Document_ID  =  2394
连接数据库../datasets/cosql_dataset/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
easy pred: SELECT count(*) FROM Paragraphs WHERE document_id = 2394
easy gold: select count ( paragraph_id )  from Paragraphs where Document_ID  =  2394

当前idx4
____________________
SELECT Paragraph_Text FROM Paragraphs WHERE document_id = 2394
select Paragraph_Text from Paragraphs where Document_ID  =  2394
连接数据库../datasets/cosql_dataset/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx1
____________________
SELECT email_address FROM Owners WHERE owner_id = 1
SELECT email_address from owners where owner_id  =  1
连接数据库../datasets/cosql_dataset/database/dog_kennels/dog_kennels.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT weight FROM Dogs WHERE dog_id = 1
SELECT weight from dogs where dog_id  =  1
连接数据库../datasets/cosql_dataset/database/dog_kennels/dog_kennels.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx3
____________________
SELECT age FROM Dogs WHERE dog_id = 1
SELECT age from dogs where dog_id  =  1
连接数据库../datasets/cosql_dataset/database/dog_kennels/dog_kennels.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx4
____________________
SELECT T1.owner_id ,  T1.last_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id JOIN Treatments AS T3 ON T2.dog_id  =  T3.dog_id GROUP BY T1.owner_id ORDER BY count(*) DESC LIMIT 1
SELECT T1.owner_id ,  T1.last_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id   =   T2.owner_id JOIN Treatments AS T3 ON T2.dog_id   =   T3.dog_id GROUP BY T1.owner_id ORDER BY count ( * )  DESC LIMIT 1
连接数据库../datasets/cosql_dataset/database/dog_kennels/dog_kennels.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx1
____________________
SELECT count(*) FROM matches WHERE year = 2013
SELECT count ( * )  FROM matches WHERE YEAR   =   2013
连接数据库../datasets/cosql_dataset/database/wta_1/wta_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT count(*) FROM matches WHERE year = 2016
SELECT count ( * )  FROM matches WHERE YEAR   =   2016
连接数据库../datasets/cosql_dataset/database/wta_1/wta_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx3
____________________
SELECT loser_id FROM matches WHERE loser_name = "Petra Kvitova"
SELECT distinct loser_id  FROM  matches where loser_name   = "Petra Kvitova"
连接数据库../datasets/cosql_dataset/database/wta_1/wta_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:True
当前idx1
eval_err_num:88
____________________
SELECT Country FROM TV_Channel EXCEPT SELECT T2.Country FROM TV_Channel AS T1 JOIN Cartoon AS T2 ON T1.id  =  T2.Channel WHERE T2.written_by  =  "Todd Casey"
SELECT country FROM TV_Channel EXCEPT SELECT T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id  =  T2.Channel WHERE T2.written_by   =   'Todd Casey'
连接数据库../datasets/cosql_dataset/database/tvshow/tvshow.sqlite
执行第一个查询
执行出错: no such column: T2.Country
eval_exec:False
exact_score:0
hard pred: SELECT Country FROM TV_Channel EXCEPT SELECT T2.Country FROM TV_Channel AS T1 JOIN Cartoon AS T2 ON T1.id  =  T2.Channel WHERE T2.written_by  =  "Todd Casey"
hard gold: SELECT country FROM TV_Channel EXCEPT SELECT T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id  =  T2.Channel WHERE T2.written_by   =   'Todd Casey'

当前idx2
____________________
SELECT directed_by FROM Cartoon WHERE title = "The Rise of Blue Beetle" AND written_by = "Michael Jelenic"
SELECT directed_by from cartoon where title  =  "The Rise of the Blue Beetle!" and written_by  =  "Michael Jelenic"
连接数据库../datasets/cosql_dataset/database/tvshow/tvshow.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:True
当前idx3
____________________
SELECT Package_Option FROM TV_Channel WHERE Country = "Italy"
SELECT Package_Option from tv_channel where country  =  "Italy"
连接数据库../datasets/cosql_dataset/database/tvshow/tvshow.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx1
____________________
SELECT song_name, song_release_year FROM singer ORDER BY age LIMIT 1
SELECT song_name ,  song_release_year FROM singer ORDER BY age LIMIT 1
连接数据库../datasets/cosql_dataset/database/concert_singer/concert_singer.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT song_name, song_release_year FROM singer ORDER BY age DESC LIMIT 1
SELECT song_name ,  song_release_year FROM singer ORDER BY age desc LIMIT 1
连接数据库../datasets/cosql_dataset/database/concert_singer/concert_singer.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx3
____________________
SELECT song_name, song_release_year, name FROM singer ORDER BY age LIMIT 1
SELECT Name FROM singer ORDER BY age LIMIT 1
连接数据库../datasets/cosql_dataset/database/concert_singer/concert_singer.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT song_name, song_release_year, name FROM singer ORDER BY age LIMIT 1
medium gold: SELECT Name FROM singer ORDER BY age LIMIT 1

当前idx4
____________________
SELECT name, age FROM singer ORDER BY age DESC LIMIT 1
SELECT Name, age FROM singer ORDER BY age desc LIMIT 1
连接数据库../datasets/cosql_dataset/database/concert_singer/concert_singer.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx>4
____________________
SELECT country FROM singer ORDER BY age DESC LIMIT 1
SELECT Country FROM singer ORDER BY age desc LIMIT 1
连接数据库../datasets/cosql_dataset/database/concert_singer/concert_singer.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx>4
____________________
SELECT name FROM singer WHERE country = "United States"
SELECT Name FROM singer where country  =  'United States'
连接数据库../datasets/cosql_dataset/database/concert_singer/concert_singer.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx1
____________________
SELECT count(*) FROM Student AS T1 JOIN Has_Pet AS T2 ON T1.StuID  =  T2.StuID JOIN Pets AS T3 ON T2.PetID  =  T3.PetID WHERE T3.PetType  =  "dog"
SELECT count ( * )  FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid   =   T2.stuid JOIN pets AS T3 ON T3.petid   =   T2.petid WHERE T3.pettype   =   'dog'
连接数据库../datasets/cosql_dataset/database/pets_1/pets_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT count(*) FROM Student AS T1 JOIN Has_Pet AS T2 ON T1.StuID  =  T2.StuID JOIN Pets AS T3 ON T2.PetID  =  T3.PetID WHERE T3.PetType  =  "cat"
SELECT count ( * )  FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid   =   T2.stuid JOIN pets AS T3 ON T3.petid   =   T2.petid WHERE T3.pettype   =   'cat'
连接数据库../datasets/cosql_dataset/database/pets_1/pets_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx3
____________________
SELECT T1.Fname FROM Student AS T1 JOIN Has_Pet AS T2 ON T1.StuID  =  T2.StuID JOIN Pets AS T3 ON T2.PetID  =  T3.PetID WHERE T3.PetType  =  "dog" OR T3.PetType  =  "cat"
SELECT DISTINCT T1.Fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid   =   T2.stuid JOIN pets AS T3 ON T3.petid   =   T2.petid WHERE T3.pettype   =   'cat' OR T3.pettype   =   'dog'
连接数据库../datasets/cosql_dataset/database/pets_1/pets_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:True
当前idx1
____________________
SELECT state FROM Professionals
SELECT state FROM Professionals
连接数据库../datasets/cosql_dataset/database/dog_kennels/dog_kennels.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT state FROM Professionals INTERSECT SELECT state FROM Owners
SELECT state FROM Owners INTERSECT SELECT state FROM Professionals
连接数据库../datasets/cosql_dataset/database/dog_kennels/dog_kennels.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
hard pred: SELECT state FROM Professionals INTERSECT SELECT state FROM Owners
hard gold: SELECT state FROM Owners INTERSECT SELECT state FROM Professionals

当前idx1
____________________
SELECT first_name FROM Professionals
SELECT DISTINCT first_name FROM professionals
连接数据库../datasets/cosql_dataset/database/dog_kennels/dog_kennels.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
eval_err_num:89
____________________
SELECT T1.first_name ,  T2.treatment_type_description FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id
SELECT DISTINCT T1.first_name ,  T3.treatment_type_description FROM professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id   =   T2.professional_id JOIN Treatment_types AS T3 ON T2.treatment_type_code   =   T3.treatment_type_code
连接数据库../datasets/cosql_dataset/database/dog_kennels/dog_kennels.sqlite
执行第一个查询
执行出错: no such column: T2.treatment_type_description
eval_exec:False
exact_score:0
medium pred: SELECT T1.first_name ,  T2.treatment_type_description FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id
medium gold: SELECT DISTINCT T1.first_name ,  T3.treatment_type_description FROM professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id   =   T2.professional_id JOIN Treatment_types AS T3 ON T2.treatment_type_code   =   T3.treatment_type_code

当前idx3
eval_err_num:90
____________________
SELECT T1.first_name ,  T2.treatment_type_description FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id
SELECT DISTINCT T1.first_name ,  T3.treatment_type_description FROM professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id   =   T2.professional_id JOIN Treatment_types AS T3 ON T2.treatment_type_code   =   T3.treatment_type_code
连接数据库../datasets/cosql_dataset/database/dog_kennels/dog_kennels.sqlite
执行第一个查询
执行出错: no such column: T2.treatment_type_description
eval_exec:False
exact_score:0
medium pred: SELECT T1.first_name ,  T2.treatment_type_description FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id
medium gold: SELECT DISTINCT T1.first_name ,  T3.treatment_type_description FROM professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id   =   T2.professional_id JOIN Treatment_types AS T3 ON T2.treatment_type_code   =   T3.treatment_type_code

当前idx1
____________________
SELECT count(course_id) FROM course
SELECT count ( Course_ID )  FROM course
连接数据库../datasets/cosql_dataset/database/course_teach/course_teach.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT course FROM course
SELECT Course FROM course
连接数据库../datasets/cosql_dataset/database/course_teach/course_teach.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx3
____________________
SELECT count(teacher_id) FROM course_arrange
SELECT count ( Teacher_ID )  FROM teacher
连接数据库../datasets/cosql_dataset/database/course_teach/course_teach.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:False
easy pred: SELECT count(teacher_id) FROM course_arrange
easy gold: SELECT count ( Teacher_ID )  FROM teacher

当前idx4
____________________
SELECT T1.name FROM teacher AS T1 JOIN course_arrange AS T2 ON T1.teacher_id  =  T2.teacher_id JOIN course AS T3 ON T2.course_id  =  T3.course_id WHERE T3.course  =  "Math"
SELECT T3.Name FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID   =   T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID   =   T3.Teacher_ID WHERE T2.Course   =   "Math"
连接数据库../datasets/cosql_dataset/database/course_teach/course_teach.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx1
____________________
SELECT Continent, count(*) FROM countries AS T1 JOIN car_makers AS T2 ON T1.CountryName  =  T2.Country GROUP BY T1.Continent
SELECT T1.Continent ,  count ( * )  FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId   =   T2.continent JOIN car_makers AS T3 ON T2.CountryId   =   T3.Country GROUP BY T1.Continent
连接数据库../datasets/cosql_dataset/database/car_1/car_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
hard pred: SELECT Continent, count(*) FROM countries AS T1 JOIN car_makers AS T2 ON T1.CountryName  =  T2.Country GROUP BY T1.Continent
hard gold: SELECT T1.Continent ,  count ( * )  FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId   =   T2.continent JOIN car_makers AS T3 ON T2.CountryId   =   T3.Country GROUP BY T1.Continent

当前idx2
____________________
SELECT T2.FullName ,  T1.CountryName FROM countries AS T1 JOIN car_makers AS T2 ON T1.CountryName  =  T2.Country WHERE T1.Continent  =  "Asia"
SELECT T3.fullname,  T2.countryName FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId   =   T2.continent JOIN car_makers AS T3 ON T2.CountryId   =   T3.Country where T1.continent  =  "asia"
连接数据库../datasets/cosql_dataset/database/car_1/car_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
hard pred: SELECT T2.FullName ,  T1.CountryName FROM countries AS T1 JOIN car_makers AS T2 ON T1.CountryName  =  T2.Country WHERE T1.Continent  =  "Asia"
hard gold: SELECT T3.fullname,  T2.countryName FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId   =   T2.continent JOIN car_makers AS T3 ON T2.CountryId   =   T3.Country where T1.continent  =  "asia"

当前idx3
____________________
SELECT T2.FullName ,  T1.CountryName FROM countries AS T1 JOIN car_makers AS T2 ON T1.CountryName  =  T2.Country WHERE T1.Continent  =  "Europe"
SELECT T3.fullname,  T2.countryName FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId   =   T2.continent JOIN car_makers AS T3 ON T2.CountryId   =   T3.Country where T1.continent  =  "europe"
连接数据库../datasets/cosql_dataset/database/car_1/car_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
hard pred: SELECT T2.FullName ,  T1.CountryName FROM countries AS T1 JOIN car_makers AS T2 ON T1.CountryName  =  T2.Country WHERE T1.Continent  =  "Europe"
hard gold: SELECT T3.fullname,  T2.countryName FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId   =   T2.continent JOIN car_makers AS T3 ON T2.CountryId   =   T3.Country where T1.continent  =  "europe"

当前idx4
____________________
SELECT T2.FullName ,  T1.CountryName FROM countries AS T1 JOIN car_makers AS T2 ON T1.CountryName  =  T2.Country WHERE T1.Continent  =  "America"
SELECT T3.fullname,  T2.countryName FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId   =   T2.continent JOIN car_makers AS T3 ON T2.CountryId   =   T3.Country where T1.continent  =  "america"
连接数据库../datasets/cosql_dataset/database/car_1/car_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
hard pred: SELECT T2.FullName ,  T1.CountryName FROM countries AS T1 JOIN car_makers AS T2 ON T1.CountryName  =  T2.Country WHERE T1.Continent  =  "America"
hard gold: SELECT T3.fullname,  T2.countryName FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId   =   T2.continent JOIN car_makers AS T3 ON T2.CountryId   =   T3.Country where T1.continent  =  "america"

当前idx>4
____________________
SELECT count(*) FROM car_makers
select count ( * )  from car_makers
连接数据库../datasets/cosql_dataset/database/car_1/car_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx1
____________________
SELECT count(distinct professional_id) FROM Professionals
SELECT count ( distinct professional_id )  from professionals
连接数据库../datasets/cosql_dataset/database/dog_kennels/dog_kennels.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
eval_err_num:91
____________________
SELECT professional_id, first_name, treatment_type_code FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id = T2.professional_id JOIN Breeds AS T3 ON T2.breed_code = T3.breed_code
SELECT T1.professional_id, T1.first_name ,  T3.treatment_type_code FROM professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id   =   T2.professional_id JOIN Treatment_types AS T3 ON T2.treatment_type_code   =   T3.treatment_type_code
连接数据库../datasets/cosql_dataset/database/dog_kennels/dog_kennels.sqlite
执行第一个查询
执行出错: ambiguous column name: professional_id
eval_exec:False
exact_score:0
medium pred: SELECT professional_id, first_name, treatment_type_code FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id = T2.professional_id JOIN Breeds AS T3 ON T2.breed_code = T3.breed_code
medium gold: SELECT T1.professional_id, T1.first_name ,  T3.treatment_type_code FROM professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id   =   T2.professional_id JOIN Treatment_types AS T3 ON T2.treatment_type_code   =   T3.treatment_type_code

当前idx3
eval_err_num:92
____________________
SELECT * FROM (SELECT * FROM (SELECT T1.first_name ,  T2.treatment_type_code FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id = T2.professional_id JOIN Breeds AS T3 ON T2.breed_code = T3.breed_code ORDER BY date_of_treatment DESC) AS T4 GROUP BY T4.first_name) AS T5 ORDER BY count(*) DESC LIMIT 5
SELECT T1.professional_id, T1.first_name, T3.treatment_type_code FROM professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id   =   T2.professional_id JOIN Treatment_types AS T3 ON T2.treatment_type_code   =   T3.treatment_type_code order by T2.date_of_treatment desc limit 5
连接数据库../datasets/cosql_dataset/database/dog_kennels/dog_kennels.sqlite
执行第一个查询
执行出错: no such column: T2.breed_code
eval_exec:False
exact_score:0
extra pred: SELECT * FROM (SELECT * FROM (SELECT T1.first_name ,  T2.treatment_type_code FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id = T2.professional_id JOIN Breeds AS T3 ON T2.breed_code = T3.breed_code ORDER BY date_of_treatment DESC) AS T4 GROUP BY T4.first_name) AS T5 ORDER BY count(*) DESC LIMIT 5
extra gold: SELECT T1.professional_id, T1.first_name, T3.treatment_type_code FROM professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id   =   T2.professional_id JOIN Treatment_types AS T3 ON T2.treatment_type_code   =   T3.treatment_type_code order by T2.date_of_treatment desc limit 5

当前idx1
____________________
SELECT name FROM battle
SELECT name  FROM battle
连接数据库../datasets/cosql_dataset/database/battle_death/battle_death.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT name ,  bulgarian_commander FROM battle
SELECT name, bulgarian_commander FROM battle
连接数据库../datasets/cosql_dataset/database/battle_death/battle_death.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx3
____________________
SELECT name FROM battle WHERE id NOT IN (SELECT lost_in_battle FROM ship WHERE location  =  "English Channel")
SELECT name  FROM battle EXCEPT SELECT T1.name FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle WHERE T2.location  =  'English Channel'
连接数据库../datasets/cosql_dataset/database/battle_death/battle_death.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
hard pred: SELECT name FROM battle WHERE id NOT IN (SELECT lost_in_battle FROM ship WHERE location  =  "English Channel")
hard gold: SELECT name  FROM battle EXCEPT SELECT T1.name FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle WHERE T2.location  =  'English Channel'

当前idx4
____________________
SELECT name ,  result FROM battle WHERE id NOT IN (SELECT lost_in_battle FROM ship WHERE location  =  "English Channel")
SELECT name , RESULT FROM battle EXCEPT SELECT T1.name , T1.result  FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle WHERE T2.location  =  'English Channel'
连接数据库../datasets/cosql_dataset/database/battle_death/battle_death.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
extra pred: SELECT name ,  result FROM battle WHERE id NOT IN (SELECT lost_in_battle FROM ship WHERE location  =  "English Channel")
extra gold: SELECT name , RESULT FROM battle EXCEPT SELECT T1.name , T1.result  FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle WHERE T2.location  =  'English Channel'

当前idx>4
____________________
71/293 [00:02<00:01, 77.58it/s] 62%|██████▏   | 181/293 [00:02<00:01, 83.33it/s] 65%|██████▍   | 190/293 [00:02<00:01, 84.02it/s] 68%|██████▊   | 200/293 [00:02<00:01, 88.25it/s] 71%|███████▏  | 209/293 [00:02<00:00, 85.11it/s] 75%|███████▌  | 220/293 [00:02<00:00, 89.76it/s] 78%|███████▊  | 230/293 [00:02<00:00, 91.96it/s] 82%|████████▏ | 241/293 [00:02<00:00, 92.27it/s] 86%|████████▌ | 251/293 [00:03<00:00, 64.44it/s] 88%|████████▊ | 259/293 [00:09<00:07,  4.82it/s] 91%|█████████▏| 268/293 [00:09<00:03,  6.62it/s] 94%|█████████▍| 275/293 [00:09<00:02,  8.49it/s] 97%|█████████▋| 283/293 [00:09<00:00, 11.35it/s]100%|██████████| 293/293 [00:09<00:00, 16.09it/s]100%|██████████| 293/293 [00:09<00:00, 29.96it/s]
SELECT name ,  result ,  bulgarian_commander FROM battle WHERE id NOT IN (SELECT lost_in_battle FROM ship WHERE location  =  "English Channel")
SELECT name , RESULT , bulgarian_commander FROM battle EXCEPT SELECT T1.name , T1.result , T1.bulgarian_commander FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle WHERE T2.location  =  'English Channel'
连接数据库../datasets/cosql_dataset/database/battle_death/battle_death.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
extra pred: SELECT name ,  result ,  bulgarian_commander FROM battle WHERE id NOT IN (SELECT lost_in_battle FROM ship WHERE location  =  "English Channel")
extra gold: SELECT name , RESULT , bulgarian_commander FROM battle EXCEPT SELECT T1.name , T1.result , T1.bulgarian_commander FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle WHERE T2.location  =  'English Channel'

当前idx>4
____________________
SELECT date FROM battle WHERE result = "Bulgarian victory"
SELECT date FROM battle WHERE result  =  "Bulgarian victory"
连接数据库../datasets/cosql_dataset/database/battle_death/battle_death.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx1
____________________
SELECT count(*) FROM Likes
SELECT count ( * )  FROM Likes
连接数据库../datasets/cosql_dataset/database/network_1/network_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT count(*) FROM Friend
SELECT count ( * )  FROM friend
连接数据库../datasets/cosql_dataset/database/network_1/network_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx3
____________________
SELECT student_id FROM Friend WHERE friend_id = 1689
SELECT student_id FROM friend where friend_id  =  1689
连接数据库../datasets/cosql_dataset/database/network_1/network_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx1
____________________
SELECT * FROM Documents
SELECT * FROM Documents
连接数据库../datasets/cosql_dataset/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT * FROM Documents AS T1 JOIN Templates AS T2 ON T1.Template_ID  =  T2.Template_ID
SELECT * FROM Documents AS T1 JOIN Templates AS T2 ON T1.Template_ID   =   T2.Template_ID
连接数据库../datasets/cosql_dataset/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx3
____________________
SELECT count(*) FROM Documents AS T1 JOIN Templates AS T2 ON T1.Template_ID  =  T2.Template_ID WHERE T2.Template_Type_Code  =  'PPT'
SELECT count ( * )  FROM Documents AS T1 JOIN Templates AS T2 ON T1.Template_ID   =   T2.Template_ID WHERE T2.Template_Type_Code   =   'PPT'
连接数据库../datasets/cosql_dataset/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx1
____________________
SELECT avg(Accelerate) FROM cars_data
SELECT AVG ( Accelerate )  FROM cars_data
连接数据库../datasets/cosql_dataset/database/car_1/car_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT avg(Horsepower) FROM cars_data
SELECT AVG ( Horsepower )  FROM cars_data
连接数据库../datasets/cosql_dataset/database/car_1/car_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx3
eval_err_num:93
____________________
SELECT T1.Model FROM model_list AS T1 JOIN cars_data AS T2 ON T1.ModelId  =  T2.ModelId WHERE T2.Cylinders  =  4 ORDER BY T2.Horsepower DESC LIMIT 1
SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.Cylinders  =  4 ORDER BY T2.horsepower DESC LIMIT 1
连接数据库../datasets/cosql_dataset/database/car_1/car_1.sqlite
执行第一个查询
执行出错: no such column: T2.ModelId
eval_exec:False
exact_score:0
extra pred: SELECT T1.Model FROM model_list AS T1 JOIN cars_data AS T2 ON T1.ModelId  =  T2.ModelId WHERE T2.Cylinders  =  4 ORDER BY T2.Horsepower DESC LIMIT 1
extra gold: SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.Cylinders  =  4 ORDER BY T2.horsepower DESC LIMIT 1

当前idx1
____________________
SELECT T1.Language FROM countrylanguage AS T1 JOIN country AS T2 ON T1.CountryCode  =  T2.Code WHERE T2.IndepYear  <  1930 AND T1.IsOfficial  =  "T"
SELECT count ( DISTINCT T2.Language )  FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code   =   T2.CountryCode WHERE  IndepYear  <  1930 AND T2.IsOfficial   =   "T"
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT T1.Language FROM countrylanguage AS T1 JOIN country AS T2 ON T1.CountryCode  =  T2.Code WHERE T2.IndepYear  <  1930 AND T1.IsOfficial  =  "T"
medium gold: SELECT count ( DISTINCT T2.Language )  FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code   =   T2.CountryCode WHERE  IndepYear  <  1930 AND T2.IsOfficial   =   "T"

当前idx2
____________________
SELECT count(distinct T1.Language) FROM countrylanguage AS T1 JOIN country AS T2 ON T1.CountryCode  =  T2.Code WHERE T2.IndepYear  <  1930 AND T1.IsOfficial  =  "T"
SELECT count ( DISTINCT T2.Language )  FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code   =   T2.CountryCode WHERE  IndepYear  <  1930 AND T2.IsOfficial   =   "T"
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
303
417
172
320
80
163
30
107
585
1007
85
293
                     easy                 medium               hard                 extra                all                  joint_all           
count                417                  320                  163                  107                  1007                 293                 
=====================   EXECUTION ACCURACY     =====================
execution            0.727                0.537                0.491                0.280                0.581                0.290               

====================== EXACT MATCHING ACCURACY =====================
exact match          0.760                0.519                0.393                0.215                0.566                0.280               


                     turn 1               turn 2               turn 3               turn 4               turn >4             
count                293                  285                  244                  114                  71                  
=====================   TRUN EXECUTION ACCURACY     =====================
execution            0.648                0.565                0.590                0.526                0.423               

====================== TRUN EXACT MATCHING ACCURACY =====================
exact match          0.666                0.572                0.525                0.474                0.423               
符合条件对话总数：293
