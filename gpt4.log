nohup: ignoring input
0it [00:00, ?it/s]176it [00:00, 40209.03it/s]
当前idx1
eval_err_num:1
____________________
SELECT  cm.FullName, COUNT(ml.ModelId) AS ModelCount FROM car_makers cm JOIN model_list ml ON cm.Id = ml.Maker GROUP BY cm.FullName ORDER BY ModelCount DESC
SELECT Count ( * )  ,  T2.FullName  FROM MODEL_LIST AS T1 JOIN CAR_MAKERS AS T2 ON T1.Maker   =   T2.Id GROUP BY T2.id
连接数据库../datasets/cosql_dataset/database/car_1/car_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT  cm.FullName, COUNT(ml.ModelId) AS ModelCount FROM car_makers cm JOIN model_list ml ON cm.Id = ml.Maker GROUP BY cm.FullName ORDER BY ModelCount DESC
medium gold: SELECT Count ( * )  ,  T2.FullName  FROM MODEL_LIST AS T1 JOIN CAR_MAKERS AS T2 ON T1.Maker   =   T2.Id GROUP BY T2.id

当前idx2
eval_err_num:2
____________________
SELECT  cn.Model, COUNT(*) AS PopularityCount FROM car_names cn JOIN cars_data cd ON cn.Model = cd.Model GROUP BY cn.Model ORDER BY PopularityCount DESC
SELECT T1.model FROM MODEL_LIST AS T1 JOIN CAR_MAKERS AS T2 ON T1.Maker   =   T2.Id GROUP BY T2.id order by count ( * )  desc limit 1
连接数据库../datasets/cosql_dataset/database/car_1/car_1.sqlite
执行第一个查询
执行出错: no such column: cd.Model
eval_exec:False
exact_score:0
extra pred: SELECT  cn.Model, COUNT(*) AS PopularityCount FROM car_names cn JOIN cars_data cd ON cn.Model = cd.Model GROUP BY cn.Model ORDER BY PopularityCount DESC
extra gold: SELECT T1.model FROM MODEL_LIST AS T1 JOIN CAR_MAKERS AS T2 ON T1.Maker   =   T2.Id GROUP BY T2.id order by count ( * )  desc limit 1

当前idx3
eval_err_num:3
____________________
SELECT  cm.FullName, COUNT(ml.ModelId) AS ModelCount FROM car_makers cm JOIN model_list ml ON cm.Id = ml.Maker GROUP BY cm.FullName HAVING ModelCount >= 3 ORDER BY ModelCount DESC
SELECT Count ( * )  ,  T2.FullName ,  T2.id FROM MODEL_LIST AS T1 JOIN CAR_MAKERS AS T2 ON T1.Maker   =   T2.Id GROUP BY T2.id having count ( * )   > =  3
连接数据库../datasets/cosql_dataset/database/car_1/car_1.sqlite
执行第一个查询
执行第二个查询
执行出错: near "=": syntax error
eval_exec:False
exact_score:0
medium pred: SELECT  cm.FullName, COUNT(ml.ModelId) AS ModelCount FROM car_makers cm JOIN model_list ml ON cm.Id = ml.Maker GROUP BY cm.FullName HAVING ModelCount >= 3 ORDER BY ModelCount DESC
medium gold: SELECT Count ( * )  ,  T2.FullName ,  T2.id FROM MODEL_LIST AS T1 JOIN CAR_MAKERS AS T2 ON T1.Maker   =   T2.Id GROUP BY T2.id having count ( * )   > =  3

当前idx1
____________________
SELECT  Name FROM singer
SELECT name FROM singer
连接数据库../datasets/cosql_dataset/database/concert_singer/concert_singer.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
eval_err_num:4
____________________
SELECT  s.Name, COUNT(sc.concert_ID) AS NumberOfConcerts FROM singer s LEFT JOIN singer_in_concert sc ON s.Singer_ID = sc.Singer_ID GROUP BY s.Singer_ID
SELECT T2.name ,  count ( * )  FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id   =   T2.singer_id GROUP BY T2.singer_id
连接数据库../datasets/cosql_dataset/database/concert_singer/concert_singer.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT  s.Name, COUNT(sc.concert_ID) AS NumberOfConcerts FROM singer s LEFT JOIN singer_in_concert sc ON s.Singer_ID = sc.Singer_ID GROUP BY s.Singer_ID
medium gold: SELECT T2.name ,  count ( * )  FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id   =   T2.singer_id GROUP BY T2.singer_id

当前idx1
____________________
SELECT  COUNT(DISTINCT Template_ID) FROM Templates
SELECT count ( distinct template_id )  FROM Documents
连接数据库../datasets/cosql_dataset/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:False
easy pred: SELECT  COUNT(DISTINCT Template_ID) FROM Templates
easy gold: SELECT count ( distinct template_id )  FROM Documents

当前idx2
eval_err_num:5
____________________
SELECT  COUNT(Template_ID)  FROM (     SELECT Template_ID      FROM Documents      GROUP BY Template_ID      HAVING COUNT(Document_ID) > 1 )
SELECT count ( template_id )  FROM Documents GROUP BY template_id HAVING count ( * )   >  1
连接数据库../datasets/cosql_dataset/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
easy pred: SELECT  COUNT(Template_ID)  FROM (     SELECT Template_ID      FROM Documents      GROUP BY Template_ID      HAVING COUNT(Document_ID) > 1 )
easy gold: SELECT count ( template_id )  FROM Documents GROUP BY template_id HAVING count ( * )   >  1

当前idx3
____________________
SELECT  Template_ID, Document_ID, Document_Name, Document_Description  FROM Documents  WHERE Template_ID IN (     SELECT Template_ID      FROM Documents      GROUP BY Template_ID      HAVING COUNT(Document_ID) > 1 )
SELECT document_id FROM Documents GROUP BY template_id HAVING count ( * )   >  1
连接数据库../datasets/cosql_dataset/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
easy pred: SELECT  Template_ID, Document_ID, Document_Name, Document_Description  FROM Documents  WHERE Template_ID IN (     SELECT Template_ID      FROM Documents      GROUP BY Template_ID      HAVING COUNT(Document_ID) > 1 )
easy gold: SELECT document_id FROM Documents GROUP BY template_id HAVING count ( * )   >  1

当前idx1
eval_err_num:6
____________________
SELECT  s.first_name FROM Students s JOIN Addresses a ON s.permanent_address_id = a.address_id WHERE a.country = 'Haiti'
SELECT T1.first_name FROM Students AS T1 JOIN Addresses AS T2 ON T1.permanent_address_id   =   T2.address_id WHERE T2.country   =   'Haiti'
连接数据库../datasets/cosql_dataset/database/student_transcripts_tracking/student_transcripts_tracking.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT  s.first_name FROM Students s JOIN Addresses a ON s.permanent_address_id = a.address_id WHERE a.country = 'Haiti'
medium gold: SELECT T1.first_name FROM Students AS T1 JOIN Addresses AS T2 ON T1.permanent_address_id   =   T2.address_id WHERE T2.country   =   'Haiti'

当前idx2
____________________
SELECT  first_name FROM Students WHERE cell_mobile_number = '09700166582'
SELECT first_name FROM Students WHERE cell_mobile_number  =  '09700166582'
连接数据库../datasets/cosql_dataset/database/student_transcripts_tracking/student_transcripts_tracking.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx3
eval_err_num:7
____________________
SELECT  s.last_name, a.line_1, a.line_2, a.line_3, a.city, a.zip_postcode, a.state_province_county, a.country FROM Students s JOIN Addresses a ON s.current_address_id = a.address_id WHERE s.cell_mobile_number = '09700166582'
SELECT T1.last_name, * FROM Students as T1 join addresses as T2 on T1.current_address_id  =  T2.address_id WHERE T1.cell_mobile_number  =  '09700166582'
连接数据库../datasets/cosql_dataset/database/student_transcripts_tracking/student_transcripts_tracking.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT  s.last_name, a.line_1, a.line_2, a.line_3, a.city, a.zip_postcode, a.state_province_county, a.country FROM Students s JOIN Addresses a ON s.current_address_id = a.address_id WHERE s.cell_mobile_number = '09700166582'
medium gold: SELECT T1.last_name, * FROM Students as T1 join addresses as T2 on T1.current_address_id  =  T2.address_id WHERE T1.cell_mobile_number  =  '09700166582'

当前idx4
____________________
SELECT  email_address FROM Students WHERE cell_mobile_number = '09700166582'
SELECT email_address FROM Students where cell_mobile_number  =  '09700166582'
连接数据库../datasets/cosql_dataset/database/student_transcripts_tracking/student_transcripts_tracking.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx1
____________________
SELECT  Name FROM stadium WHERE Stadium_ID NOT IN (     SELECT Stadium_ID     FROM concert     WHERE Year = '2014' )
SELECT name FROM stadium EXCEPT SELECT T2.name FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id   =   T2.stadium_id WHERE T1.year   =   2014
连接数据库../datasets/cosql_dataset/database/concert_singer/concert_singer.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
hard pred: SELECT  Name FROM stadium WHERE Stadium_ID NOT IN (     SELECT Stadium_ID     FROM concert     WHERE Year = '2014' )
hard gold: SELECT name FROM stadium EXCEPT SELECT T2.name FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id   =   T2.stadium_id WHERE T1.year   =   2014

当前idx2
____________________
SELECT  Capacity FROM stadium WHERE Name = 'Balmoor'
select Capacity from stadium where name  =  'Balmoor'
连接数据库../datasets/cosql_dataset/database/concert_singer/concert_singer.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx3
____________________
SELECT  Theme FROM concert JOIN stadium ON concert.Stadium_ID = stadium.Stadium_ID WHERE stadium.Name = 'Balmoor'
select T2.Theme from stadium as T1 join concert as T2 on T1.Stadium_ID  =  T2.Stadium_ID where T1.Name  =  'Balmoor'
连接数据库../datasets/cosql_dataset/database/concert_singer/concert_singer.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx1
eval_err_num:8
____________________
SELECT  COUNT(DISTINCT Dogs.dog_id) AS FemaleDogsTreated FROM Dogs JOIN Treatments ON Dogs.dog_id = Treatments.dog_id WHERE Dogs.gender = 'Female'
SELECT count ( * )  FROM Dogs WHERE dog_id IN  (  SELECT dog_id FROM Treatments  ) 
连接数据库../datasets/cosql_dataset/database/dog_kennels/dog_kennels.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
hard pred: SELECT  COUNT(DISTINCT Dogs.dog_id) AS FemaleDogsTreated FROM Dogs JOIN Treatments ON Dogs.dog_id = Treatments.dog_id WHERE Dogs.gender = 'Female'
hard gold: SELECT count ( * )  FROM Dogs WHERE dog_id IN  (  SELECT dog_id FROM Treatments  ) 

当前idx2
____________________
SELECT  DISTINCT Dogs.age FROM Dogs JOIN Treatments ON Dogs.dog_id = Treatments.dog_id WHERE Dogs.gender = 'Female'
SELECT age FROM Dogs WHERE dog_id IN  (  SELECT dog_id FROM Treatments  ) 
连接数据库../datasets/cosql_dataset/database/dog_kennels/dog_kennels.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
hard pred: SELECT  DISTINCT Dogs.age FROM Dogs JOIN Treatments ON Dogs.dog_id = Treatments.dog_id WHERE Dogs.gender = 'Female'
hard gold: SELECT age FROM Dogs WHERE dog_id IN  (  SELECT dog_id FROM Treatments  ) 

当前idx3
eval_err_num:9
____________________
SELECT  MAX(weight) AS HighestWeight FROM Dogs WHERE age = '2'
SELECT weight FROM Dogs WHERE age = 2 ORDER BY weight DESC LIMIT 1
连接数据库../datasets/cosql_dataset/database/dog_kennels/dog_kennels.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
hard pred: SELECT  MAX(weight) AS HighestWeight FROM Dogs WHERE age = '2'
hard gold: SELECT weight FROM Dogs WHERE age = 2 ORDER BY weight DESC LIMIT 1

当前idx1
____________________
SELECT  COUNT(*) FROM teacher
SELECT COUNT ( * )  FROM teacher
连接数据库../datasets/cosql_dataset/database/course_teach/course_teach.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT  COUNT(*) FROM course
SELECT COUNT ( * )  FROM course_arrange
连接数据库../datasets/cosql_dataset/database/course_teach/course_teach.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:False
easy pred: SELECT  COUNT(*) FROM course
easy gold: SELECT COUNT ( * )  FROM course_arrange

当前idx3
eval_err_num:10
____________________
SELECT  t.Name, COUNT(ca.Course_ID) AS NumberOfCourses FROM teacher t JOIN course_arrange ca ON t.Teacher_ID = ca.Teacher_ID GROUP BY t.Teacher_ID, t.Name
SELECT T2.Name , COUNT ( * )  FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID  =  T2.Teacher_ID GROUP BY T2.Name
连接数据库../datasets/cosql_dataset/database/course_teach/course_teach.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT  t.Name, COUNT(ca.Course_ID) AS NumberOfCourses FROM teacher t JOIN course_arrange ca ON t.Teacher_ID = ca.Teacher_ID GROUP BY t.Teacher_ID, t.Name
medium gold: SELECT T2.Name , COUNT ( * )  FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID  =  T2.Teacher_ID GROUP BY T2.Name

当前idx4
____________________
SELECT  Name, Age FROM teacher
SELECT Name , age FROM teacher
连接数据库../datasets/cosql_dataset/database/course_teach/course_teach.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx1
____________________
SELECT  latin_commander FROM battle WHERE name = 'Battle of Serres'
SELECT latin_commander FROM battle WHERE name  =  "Battle of Serres"
连接数据库../datasets/cosql_dataset/database/battle_death/battle_death.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT  result FROM battle WHERE date = '1206-01-31'
SELECT result FROM battle WHERE date  =  "31 January 1206"
连接数据库../datasets/cosql_dataset/database/battle_death/battle_death.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:True
当前idx3
____________________
SELECT  bulgarian_commander FROM battle WHERE date LIKE '1205-06%'
SELECT bulgarian_commander FROM battle WHERE date  =  "June 1205"
连接数据库../datasets/cosql_dataset/database/battle_death/battle_death.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
easy pred: SELECT  bulgarian_commander FROM battle WHERE date LIKE '1205-06%'
easy gold: SELECT bulgarian_commander FROM battle WHERE date  =  "June 1205"

当前idx4
____________________
SELECT  name FROM battle WHERE latin_commander = 'Baldwin I'
SELECT name FROM battle WHERE latin_commander  =  "Baldwin I"
连接数据库../datasets/cosql_dataset/database/battle_death/battle_death.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx1
____________________
SELECT  COUNT(*) FROM TV_Channel
SELECT count ( * )  FROM TV_Channel
连接数据库../datasets/cosql_dataset/database/tvshow/tvshow.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT  Language FROM TV_Channel WHERE series_name = 'Sky Music'
SELECT language FROM TV_Channel where series_name = 'Sky Music'
连接数据库../datasets/cosql_dataset/database/tvshow/tvshow.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx3
____________________
SELECT  Title FROM Cartoon WHERE id = 2.0
SELECT title FROM Cartoon where id = 2.0
连接数据库../datasets/cosql_dataset/database/tvshow/tvshow.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx1
eval_err_num:11
____________________
SELECT  MAX(CAST(Horsepower AS INTEGER)) AS MaxHorsepower FROM cars_data WHERE Horsepower != 'NA'
SELECT Horsepower FROM CARS_DATA ORDER BY Horsepower DESC LIMIT 1
连接数据库../datasets/cosql_dataset/database/car_1/car_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT  MAX(CAST(Horsepower AS INTEGER)) AS MaxHorsepower FROM cars_data WHERE Horsepower != 'NA'
medium gold: SELECT Horsepower FROM CARS_DATA ORDER BY Horsepower DESC LIMIT 1

当前idx2
eval_err_num:12
____________________
SELECT  COUNT(*) AS TotalCars FROM cars_data
SELECT count ( * )  FROM CARS_DATA
连接数据库../datasets/cosql_dataset/database/car_1/car_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
easy pred: SELECT  COUNT(*) AS TotalCars FROM cars_data
easy gold: SELECT count ( * )  FROM CARS_DATA

当前idx3
eval_err_num:13
____________________
SELECT  COUNT(DISTINCT Cylinders) AS NumberOfCylinderTypes FROM cars_data
SELECT sum ( cylinders )  FROM CARS_DATA
连接数据库../datasets/cosql_dataset/database/car_1/car_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
easy pred: SELECT  COUNT(DISTINCT Cylinders) AS NumberOfCylinderTypes FROM cars_data
easy gold: SELECT sum ( cylinders )  FROM CARS_DATA

当前idx1
eval_err_num:14
____________________
SELECT  District, SUM(Number_products) AS Total_Products FROM shop GROUP BY District ORDER BY Total_Products DESC LIMIT 1
SELECT district FROM shop ORDER BY number_products DESC LIMIT 1
连接数据库../datasets/cosql_dataset/database/employee_hire_evaluation/employee_hire_evaluation.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT  District, SUM(Number_products) AS Total_Products FROM shop GROUP BY District ORDER BY Total_Products DESC LIMIT 1
medium gold: SELECT district FROM shop ORDER BY number_products DESC LIMIT 1

当前idx2
eval_err_num:15
____________________
SELECT  District, SUM(Number_products) AS Total_Products     FROM shop     GROUP BY District     ORDER BY Total_Products DESC     LIMIT 1 )  -- Then, find the shop in that district with the highest number of products , Top_Shop AS (     SELECT s.Name, s.Manager_name     FROM shop s     JOIN District_Products dp ON s.District = dp.District     ORDER BY s.Number_products DESC     LIMIT 1 )  -- Select the manager's name from the top shop SELECT Manager_name FROM Top_Shop
SELECT manager_name FROM shop ORDER BY number_products DESC LIMIT 1
连接数据库../datasets/cosql_dataset/database/employee_hire_evaluation/employee_hire_evaluation.sqlite
执行第一个查询
执行出错: near ")": syntax error
eval_exec:False
exact_score:0
medium pred: SELECT  District, SUM(Number_products) AS Total_Products     FROM shop     GROUP BY District     ORDER BY Total_Products DESC     LIMIT 1 )  -- Then, find the shop in that district with the highest number of products , Top_Shop AS (     SELECT s.Name, s.Manager_name     FROM shop s     JOIN District_Products dp ON s.District = dp.District     ORDER BY s.Number_products DESC     LIMIT 1 )  -- Select the manager's name from the top shop SELECT Manager_name FROM Top_Shop
medium gold: SELECT manager_name FROM shop ORDER BY number_products DESC LIMIT 1

当前idx3
eval_err_num:16
____________________
SELECT  District, SUM(Number_products) AS Total_Products     FROM shop     GROUP BY District     ORDER BY Total_Products DESC     LIMIT 1 )  -- Then, find the shop in that district with the highest number of products SELECT s.Number_products FROM shop s JOIN District_Products dp ON s.District = dp.District ORDER BY s.Number_products DESC LIMIT 1
SELECT number_products FROM shop ORDER BY number_products DESC LIMIT 1
连接数据库../datasets/cosql_dataset/database/employee_hire_evaluation/employee_hire_evaluation.sqlite
执行第一个查询
执行出错: near ")": syntax error
eval_exec:False
exact_score:0
medium pred: SELECT  District, SUM(Number_products) AS Total_Products     FROM shop     GROUP BY District     ORDER BY Total_Products DESC     LIMIT 1 )  -- Then, find the shop in that district with the highest number of products SELECT s.Number_products FROM shop s JOIN District_Products dp ON s.District = dp.District ORDER BY s.Number_products DESC LIMIT 1
medium gold: SELECT number_products FROM shop ORDER BY number_products DESC LIMIT 1

当前idx4
eval_err_num:17
____________________
SELECT  District, SUM(Number_products) AS Total_Products     FROM shop     GROUP BY District     ORDER BY Total_Products DESC     LIMIT 1 )  -- Then, find the location of the shop in that district with the highest number of products SELECT s.Location FROM shop s JOIN District_Products dp ON s.District = dp.District ORDER BY s.Number_products DESC LIMIT 1
SELECT location FROM shop ORDER BY number_products DESC LIMIT 1
连接数据库../datasets/cosql_dataset/database/employee_hire_evaluation/employee_hire_evaluation.sqlite
执行第一个查询
执行出错: near ")": syntax error
eval_exec:False
exact_score:0
medium pred: SELECT  District, SUM(Number_products) AS Total_Products     FROM shop     GROUP BY District     ORDER BY Total_Products DESC     LIMIT 1 )  -- Then, find the location of the shop in that district with the highest number of products SELECT s.Location FROM shop s JOIN District_Products dp ON s.District = dp.District ORDER BY s.Number_products DESC LIMIT 1
medium gold: SELECT location FROM shop ORDER BY number_products DESC LIMIT 1

当前idx>4
eval_err_num:18
____________________
SELECT  District, SUM(Number_products) AS Total_Products     FROM shop     GROUP BY District     ORDER BY Total_Products DESC     LIMIT 1 )  -- Then, find the shop ID in that district with the highest number of products SELECT s.Shop_ID FROM shop s JOIN District_Products dp ON s.District = dp.District ORDER BY s.Number_products DESC LIMIT 1
SELECT shop_ID FROM shop ORDER BY number_products DESC LIMIT 1
连接数据库../datasets/cosql_dataset/database/employee_hire_evaluation/employee_hire_evaluation.sqlite
执行第一个查询
执行出错: near ")": syntax error
eval_exec:False
exact_score:0
medium pred: SELECT  District, SUM(Number_products) AS Total_Products     FROM shop     GROUP BY District     ORDER BY Total_Products DESC     LIMIT 1 )  -- Then, find the shop ID in that district with the highest number of products SELECT s.Shop_ID FROM shop s JOIN District_Products dp ON s.District = dp.District ORDER BY s.Number_products DESC LIMIT 1
medium gold: SELECT shop_ID FROM shop ORDER BY number_products DESC LIMIT 1

当前idx1
eval_err_num:19
____________________
SELECT  AVG(Population) AS AveragePopulation FROM city
SELECT avg ( Population )  FROM city
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
easy pred: SELECT  AVG(Population) AS AveragePopulation FROM city
easy gold: SELECT avg ( Population )  FROM city

当前idx2
____________________
SELECT  DISTINCT District FROM city WHERE Population > (SELECT AVG(Population) FROM city)
SELECT District FROM city WHERE Population  >   ( SELECT avg ( Population )  FROM city ) 
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:True
当前idx3
eval_err_num:20
____________________
SELECT  District, COUNT(*) AS NumberOfCities FROM city WHERE Population > (SELECT AVG(Population) FROM city) GROUP BY District
SELECT count ( * )  ,  District FROM city WHERE Population  >   ( SELECT avg ( Population )  FROM city )  GROUP BY District
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
extra pred: SELECT  District, COUNT(*) AS NumberOfCities FROM city WHERE Population > (SELECT AVG(Population) FROM city) GROUP BY District
extra gold: SELECT count ( * )  ,  District FROM city WHERE Population  >   ( SELECT avg ( Population )  FROM city )  GROUP BY District

当前idx1
____________________
SELECT  Name  FROM country  WHERE GovernmentForm = 'US Territory'
SELECT Name FROM country WHERE GovernmentForm   =   "US Territory"
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT  Name, GNP, Population  FROM country  WHERE GovernmentForm = 'US Territory'
SELECT GNP, population FROM country WHERE GovernmentForm   =   "US Territory"
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT  Name, GNP, Population  FROM country  WHERE GovernmentForm = 'US Territory'
medium gold: SELECT GNP, population FROM country WHERE GovernmentForm   =   "US Territory"

当前idx3
eval_err_num:21
____________________
SELECT  AVG(GNP) AS AverageGNP, SUM(Population) AS TotalPopulation FROM country WHERE GovernmentForm = 'US Territory'
SELECT avg ( GNP )  ,  sum ( population )  FROM country WHERE GovernmentForm   =   "US Territory"
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT  AVG(GNP) AS AverageGNP, SUM(Population) AS TotalPopulation FROM country WHERE GovernmentForm = 'US Territory'
medium gold: SELECT avg ( GNP )  ,  sum ( population )  FROM country WHERE GovernmentForm   =   "US Territory"

当前idx1
eval_err_num:22
____________________
SELECT  SUM(SurfaceArea) AS TotalSurfaceArea FROM country WHERE Continent = 'Asia'
SELECT sum ( SurfaceArea )  FROM country WHERE Continent  =  "Asia"
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
easy pred: SELECT  SUM(SurfaceArea) AS TotalSurfaceArea FROM country WHERE Continent = 'Asia'
easy gold: SELECT sum ( SurfaceArea )  FROM country WHERE Continent  =  "Asia"

当前idx2
____________________
SELECT  LocalName FROM country
SELECT LocalName FROM country
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx3
____________________
SELECT  Code FROM country WHERE Name = 'Aruba'
SELECT Code FROM country WHERE Name  =  "Aruba"
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx1
____________________
SELECT  COUNT(*) FROM shop
SELECT count ( * )  FROM shop
连接数据库../datasets/cosql_dataset/database/employee_hire_evaluation/employee_hire_evaluation.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT  Name FROM shop
SELECT * FROM shop
连接数据库../datasets/cosql_dataset/database/employee_hire_evaluation/employee_hire_evaluation.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
easy pred: SELECT  Name FROM shop
easy gold: SELECT * FROM shop

当前idx3
eval_err_num:23
____________________
SELECT  shop.Name, COUNT(hiring.Employee_ID) AS Number_of_Employees FROM shop JOIN hiring ON shop.Shop_ID = hiring.Shop_ID GROUP BY shop.Shop_ID
SELECT count ( * )  FROM hiring AS t1 JOIN shop AS t2 ON t1.shop_id   =   t2.shop_id GROUP BY t2.name
连接数据库../datasets/cosql_dataset/database/employee_hire_evaluation/employee_hire_evaluation.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT  shop.Name, COUNT(hiring.Employee_ID) AS Number_of_Employees FROM shop JOIN hiring ON shop.Shop_ID = hiring.Shop_ID GROUP BY shop.Shop_ID
medium gold: SELECT count ( * )  FROM hiring AS t1 JOIN shop AS t2 ON t1.shop_id   =   t2.shop_id GROUP BY t2.name

当前idx1
____________________
SELECT  Name FROM singer
SELECT name from singer
连接数据库../datasets/cosql_dataset/database/concert_singer/concert_singer.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT  Song_release_year FROM singer WHERE Name = 'Joe Sharp' AND Song_Name = 'You'
SELECT song_release_year from singer where Name  =  "Joe Sharp" and Song_Name  =  "You"
连接数据库../datasets/cosql_dataset/database/concert_singer/concert_singer.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx3
____________________
SELECT  COUNT(*) FROM concert JOIN singer_in_concert ON concert.concert_ID = singer_in_concert.concert_ID JOIN singer ON singer_in_concert.Singer_ID = singer.Singer_ID WHERE singer.Name = 'Joe Sharp'
SELECT count ( * )  FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id   =   T2.singer_id where T2.name  =  "Joe Sharp" GROUP BY T2.singer_id
连接数据库../datasets/cosql_dataset/database/concert_singer/concert_singer.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
hard pred: SELECT  COUNT(*) FROM concert JOIN singer_in_concert ON concert.concert_ID = singer_in_concert.concert_ID JOIN singer ON singer_in_concert.Singer_ID = singer.Singer_ID WHERE singer.Name = 'Joe Sharp'
hard gold: SELECT count ( * )  FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id   =   T2.singer_id where T2.name  =  "Joe Sharp" GROUP BY T2.singer_id

当前idx4
____________________
SELECT  Country FROM singer WHERE Name = 'Joe Sharp'
SELECT country from singer where name  =  "Joe Sharp"
连接数据库../datasets/cosql_dataset/database/concert_singer/concert_singer.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx1
____________________
SELECT  Continent FROM continents
SELECT Continent FROM CONTINENTS
连接数据库../datasets/cosql_dataset/database/car_1/car_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
eval_err_num:24
____________________
SELECT  continents.ContId, continents.Continent, COUNT(countries.CountryId) AS NumberOfCountries FROM continents LEFT JOIN countries ON continents.ContId = countries.Continent GROUP BY continents.ContId, continents.Continent
SELECT T1.ContId ,  T1.Continent ,  count ( * )  FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId   =   T2.Continent GROUP BY T1.ContId
连接数据库../datasets/cosql_dataset/database/car_1/car_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT  continents.ContId, continents.Continent, COUNT(countries.CountryId) AS NumberOfCountries FROM continents LEFT JOIN countries ON continents.ContId = countries.Continent GROUP BY continents.ContId, continents.Continent
medium gold: SELECT T1.ContId ,  T1.Continent ,  count ( * )  FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId   =   T2.Continent GROUP BY T1.ContId

当前idx1
____________________
SELECT  DISTINCT car_names.Model FROM car_names JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE cars_data.Weight < 3500
SELECT DISTINCT T1.model FROM MODEL_LIST AS T1 JOIN CAR_NAMES AS T2 ON T1.Model   =   T2.Model JOIN CARS_DATA AS T3 ON T2.MakeId   =   T3.Id JOIN CAR_MAKERS AS T4 ON T1.Maker   =   T4.Id WHERE T3.weight  <  3500
连接数据库../datasets/cosql_dataset/database/car_1/car_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:False
extra pred: SELECT  DISTINCT car_names.Model FROM car_names JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE cars_data.Weight < 3500
extra gold: SELECT DISTINCT T1.model FROM MODEL_LIST AS T1 JOIN CAR_NAMES AS T2 ON T1.Model   =   T2.Model JOIN CARS_DATA AS T3 ON T2.MakeId   =   T3.Id JOIN CAR_MAKERS AS T4 ON T1.Maker   =   T4.Id WHERE T3.weight  <  3500

当前idx2
____________________
SELECT  car_names.Model, cars_data.Weight FROM car_names JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE car_names.Make = 'BMW'
SELECT DISTINCT T3.Weight FROM MODEL_LIST AS T1 JOIN CAR_NAMES AS T2 ON T1.Model   =   T2.Model JOIN CARS_DATA AS T3 ON T2.MakeId   =   T3.Id JOIN CAR_MAKERS AS T4 ON T1.Maker   =   T4.Id WHERE T1.Model = "bmw"
连接数据库../datasets/cosql_dataset/database/car_1/car_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
extra pred: SELECT  car_names.Model, cars_data.Weight FROM car_names JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE car_names.Make = 'BMW'
extra gold: SELECT DISTINCT T3.Weight FROM MODEL_LIST AS T1 JOIN CAR_NAMES AS T2 ON T1.Model   =   T2.Model JOIN CARS_DATA AS T3 ON T2.MakeId   =   T3.Id JOIN CAR_MAKERS AS T4 ON T1.Maker   =   T4.Id WHERE T1.Model = "bmw"

当前idx3
____________________
SELECT  Maker FROM car_makers WHERE Id = 2
SELECT Model FROM car_names WHERE MakeId = 2
连接数据库../datasets/cosql_dataset/database/car_1/car_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
easy pred: SELECT  Maker FROM car_makers WHERE Id = 2
easy gold: SELECT Model FROM car_names WHERE MakeId = 2

当前idx1
____________________
SELECT  COUNT(*) FROM country
SELECT count ( * )  from country
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT  COUNT(DISTINCT GovernmentForm) FROM country
SELECT count ( distinct GovernmentForm )  from country
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx3
____________________
SELECT  DISTINCT GovernmentForm FROM country
SELECT distinct GovernmentForm from country
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx4
____________________
SELECT  COUNT(*) FROM country WHERE GovernmentForm LIKE '%Republic%'
SELECT count ( * )  from country where GovernmentForm  =  "Republic"
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
easy pred: SELECT  COUNT(*) FROM country WHERE GovernmentForm LIKE '%Republic%'
easy gold: SELECT count ( * )  from country where GovernmentForm  =  "Republic"

当前idx>4
____________________
SELECT  Name FROM country WHERE GovernmentForm LIKE '%Republic%'
SELECT name from country where GovernmentForm  =  "Republic"
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
easy pred: SELECT  Name FROM country WHERE GovernmentForm LIKE '%Republic%'
easy gold: SELECT name from country where GovernmentForm  =  "Republic"

当前idx>4
____________________
SELECT  Language FROM countrylanguage WHERE CountryCode = (SELECT Code FROM country WHERE Name = 'Latvia')
SELECT T2.language from country as T1 join countrylanguage as T2 on T1.Code  =  T2.CountryCode where  T1.name  =  "Latvia"
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:0
medium pred: SELECT  Language FROM countrylanguage WHERE CountryCode = (SELECT Code FROM country WHERE Name = 'Latvia')
medium gold: SELECT T2.language from country as T1 join countrylanguage as T2 on T1.Code  =  T2.CountryCode where  T1.name  =  "Latvia"

当前idx1
____________________
SELECT  COUNT(*) FROM airlines
SELECT count ( * )  FROM AIRLINES
连接数据库../datasets/cosql_dataset/database/flight_2/flight_2.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT  Airline FROM airlines WHERE Country = 'United States of America'
SELECT Airline FROM AIRLINES WHERE Airline = "United Airlines"
连接数据库../datasets/cosql_dataset/database/flight_2/flight_2.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
easy pred: SELECT  Airline FROM airlines WHERE Country = 'United States of America'
easy gold: SELECT Airline FROM AIRLINES WHERE Airline = "United Airlines"

当前idx3
____________________
SELECT  Abbreviation FROM airlines WHERE Airline = 'US Airways'
SELECT Abbreviation FROM AIRLINES WHERE Airline = "US Airways"
连接数据库../datasets/cosql_dataset/database/flight_2/flight_2.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx1
____________________
SELECT  COUNT(*) FROM singer
SELECT count ( * )  from singer
连接数据库../datasets/cosql_dataset/database/singer/singer.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT  Citizenship FROM singer WHERE Name = 'Alice Walton'
SELECT citizenship from singer where name  =  "Alice Walton"
连接数据库../datasets/cosql_dataset/database/singer/singer.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx3
____________________
SELECT  Sales FROM song WHERE Song_ID = 3
SELECT Sales from song where song_id  =  3
连接数据库../datasets/cosql_dataset/database/singer/singer.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx1
____________________
SELECT  Country FROM airlines WHERE Airline = 'Delta'
SELECT country FROM AIRLINES where Airline  =  'Delta Airlines'
连接数据库../datasets/cosql_dataset/database/flight_2/flight_2.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:True
当前idx2
____________________
SELECT  DestAirport FROM flights WHERE FlightNo = 44
SELECT DestAirport FROM flights where FlightNo  =  44
连接数据库../datasets/cosql_dataset/database/flight_2/flight_2.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx3
eval_err_num:25
____________________
SELECT  Airline, COUNT(*) AS NumberOfFlights FROM flights GROUP BY Airline ORDER BY NumberOfFlights DESC LIMIT 1
SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid   =   T2.Airline GROUP BY T1.Airline ORDER BY count ( * )  DESC LIMIT 1
连接数据库../datasets/cosql_dataset/database/flight_2/flight_2.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
extra pred: SELECT  Airline, COUNT(*) AS NumberOfFlights FROM flights GROUP BY Airline ORDER BY NumberOfFlights DESC LIMIT 1
extra gold: SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid   =   T2.Airline GROUP BY T1.Airline ORDER BY count ( * )  DESC LIMIT 1

当前idx1
eval_err_num:26
____________________
SELECT  COUNT(DISTINCT course_id) AS NumberOfCourses FROM Courses
SELECT  count ( distinct course_id )  from courses
连接数据库../datasets/cosql_dataset/database/student_transcripts_tracking/student_transcripts_tracking.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
easy pred: SELECT  COUNT(DISTINCT course_id) AS NumberOfCourses FROM Courses
easy gold: SELECT  count ( distinct course_id )  from courses

当前idx2
eval_err_num:27
____________________
SELECT  c.course_name FROM Courses c JOIN Student_Enrolment_Courses sec ON c.course_id = sec.course_id GROUP BY c.course_id, c.course_name ORDER BY COUNT(sec.student_course_id) ASC LIMIT 1
SELECT  T1.course_name FROM Courses AS T1 JOIN Student_Enrolment_Courses AS T2 ON T1.course_id   =   T2.course_id GROUP BY T1.course_name ORDER BY count ( * )  LIMIT 1
连接数据库../datasets/cosql_dataset/database/student_transcripts_tracking/student_transcripts_tracking.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
extra pred: SELECT  c.course_name FROM Courses c JOIN Student_Enrolment_Courses sec ON c.course_id = sec.course_id GROUP BY c.course_id, c.course_name ORDER BY COUNT(sec.student_course_id) ASC LIMIT 1
extra gold: SELECT  T1.course_name FROM Courses AS T1 JOIN Student_Enrolment_Courses AS T2 ON T1.course_id   =   T2.course_id GROUP BY T1.course_name ORDER BY count ( * )  LIMIT 1

当前idx1
____________________
SELECT  COUNT(*) FROM concert
SELECT  count ( * )  FROM concert
连接数据库../datasets/cosql_dataset/database/concert_singer/concert_singer.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
eval_err_num:28
____________________
SELECT  s.Name, COUNT(c.concert_ID) AS Number_of_Concerts FROM stadium s JOIN concert c ON s.Stadium_ID = c.Stadium_ID GROUP BY s.Stadium_ID
SELECT T2.name , count ( * )  FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id GROUP BY T1.stadium_id
连接数据库../datasets/cosql_dataset/database/concert_singer/concert_singer.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT  s.Name, COUNT(c.concert_ID) AS Number_of_Concerts FROM stadium s JOIN concert c ON s.Stadium_ID = c.Stadium_ID GROUP BY s.Stadium_ID
medium gold: SELECT T2.name , count ( * )  FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id GROUP BY T1.stadium_id

当前idx3
eval_err_num:29
____________________
SELECT  Capacity FROM stadium WHERE Name = 'Stark''s Park'
SELECT capacity from stadium where name  =  "Stark s Park"
连接数据库../datasets/cosql_dataset/database/concert_singer/concert_singer.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
easy pred: SELECT  Capacity FROM stadium WHERE Name = 'Stark''s Park'
easy gold: SELECT capacity from stadium where name  =  "Stark s Park"

当前idx4
____________________
SELECT  concert_Name FROM concert
SELECT concert_name from concert
连接数据库../datasets/cosql_dataset/database/concert_singer/concert_singer.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx1
eval_err_num:30
____________________
SELECT  COUNT(*) AS NumberOfTreatments FROM Treatment_Types
select count ( * )  from  ( SELECT distinct treatment_type_code from treatments ) 
连接数据库../datasets/cosql_dataset/database/dog_kennels/dog_kennels.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
easy pred: SELECT  COUNT(*) AS NumberOfTreatments FROM Treatment_Types
easy gold: select count ( * )  from  ( SELECT distinct treatment_type_code from treatments ) 

当前idx2
eval_err_num:31
____________________
SELECT  treatment_type_description, MAX(cost_of_treatment) AS HighestCost FROM Treatments JOIN Treatment_Types ON Treatments.treatment_type_code = Treatment_Types.treatment_type_code
SELECT * FROM Treatments ORDER BY cost_of_treatment DESC LIMIT 1
连接数据库../datasets/cosql_dataset/database/dog_kennels/dog_kennels.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT  treatment_type_description, MAX(cost_of_treatment) AS HighestCost FROM Treatments JOIN Treatment_Types ON Treatments.treatment_type_code = Treatment_Types.treatment_type_code
medium gold: SELECT * FROM Treatments ORDER BY cost_of_treatment DESC LIMIT 1

当前idx3
____________________
SELECT  cost_of_treatment FROM Treatments ORDER BY date_of_treatment DESC LIMIT 1
SELECT cost_of_treatment FROM Treatments ORDER BY date_of_treatment DESC LIMIT 1
连接数据库../datasets/cosql_dataset/database/dog_kennels/dog_kennels.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx1
eval_err_num:32
____________________
SELECT  a.Airline, COUNT(f.FlightNo) AS NumberOfFlights FROM airlines a LEFT JOIN flights f ON a.uid = f.Airline GROUP BY a.Airline HAVING COUNT(f.FlightNo) < 200
SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid   =   T2.Airline GROUP BY T1.Airline HAVING count ( * )   <  200
连接数据库../datasets/cosql_dataset/database/flight_2/flight_2.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT  a.Airline, COUNT(f.FlightNo) AS NumberOfFlights FROM airlines a LEFT JOIN flights f ON a.uid = f.Airline GROUP BY a.Airline HAVING COUNT(f.FlightNo) < 200
medium gold: SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid   =   T2.Airline GROUP BY T1.Airline HAVING count ( * )   <  200

当前idx2
eval_err_num:33
____________________
SELECT  a.uid, a.Airline     FROM airlines a     LEFT JOIN flights f ON a.uid = f.Airline     GROUP BY a.uid, a.Airline     HAVING COUNT(f.FlightNo) < 200     LIMIT 3 )  -- Then, we join this result with the flights and airports tables to find the destination countries SELECT DISTINCT ft.Airline, ap.Country AS DestinationCountry FROM FewerThan200Flights ft JOIN flights f ON ft.uid = f.Airline JOIN airports ap ON f.DestAirport = ap.AirportCode ORDER BY ft.Airline
SELECT T1.Airline, T2.DestAirport FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid   =   T2.Airline GROUP BY T1.Airline HAVING count ( * )   <  200 limit 3
连接数据库../datasets/cosql_dataset/database/flight_2/flight_2.sqlite
执行第一个查询
执行出错: near ")": syntax error
eval_exec:False
exact_score:0
hard pred: SELECT  a.uid, a.Airline     FROM airlines a     LEFT JOIN flights f ON a.uid = f.Airline     GROUP BY a.uid, a.Airline     HAVING COUNT(f.FlightNo) < 200     LIMIT 3 )  -- Then, we join this result with the flights and airports tables to find the destination countries SELECT DISTINCT ft.Airline, ap.Country AS DestinationCountry FROM FewerThan200Flights ft JOIN flights f ON ft.uid = f.Airline JOIN airports ap ON f.DestAirport = ap.AirportCode ORDER BY ft.Airline
hard gold: SELECT T1.Airline, T2.DestAirport FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid   =   T2.Airline GROUP BY T1.Airline HAVING count ( * )   <  200 limit 3

当前idx1
eval_err_num:34
____________________
SELECT  Nationality, COUNT(*) AS Count FROM people GROUP BY Nationality HAVING COUNT(*) > 1
SELECT Nationality FROM people GROUP BY Nationality HAVING COUNT ( * )   >  1
连接数据库../datasets/cosql_dataset/database/poker_player/poker_player.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
easy pred: SELECT  Nationality, COUNT(*) AS Count FROM people GROUP BY Nationality HAVING COUNT(*) > 1
easy gold: SELECT Nationality FROM people GROUP BY Nationality HAVING COUNT ( * )   >  1

当前idx2
____________________
SELECT  People_ID FROM people WHERE Nationality = 'Russia'
SELECT People_ID FROM people WHERE Nationality  =  'Russia'
连接数据库../datasets/cosql_dataset/database/poker_player/poker_player.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx3
____________________
SELECT  People_ID, Name FROM people WHERE Nationality = 'Russia'
SELECT People_ID, name FROM people WHERE Nationality  =  'Russia'
连接数据库../datasets/cosql_dataset/database/poker_player/poker_player.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx1
eval_err_num:35
____________________
SELECT  AVG(loser_age) AS average_loser_age FROM matches
SELECT avg ( loser_age )  FROM matches
连接数据库../datasets/cosql_dataset/database/wta_1/wta_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
easy pred: SELECT  AVG(loser_age) AS average_loser_age FROM matches
easy gold: SELECT avg ( loser_age )  FROM matches

当前idx2
eval_err_num:36
____________________
SELECT  AVG(winner_age) AS average_winner_age FROM matches
SELECT avg ( winner_age )  FROM matches
连接数据库../datasets/cosql_dataset/database/wta_1/wta_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
easy pred: SELECT  AVG(winner_age) AS average_winner_age FROM matches
easy gold: SELECT avg ( winner_age )  FROM matches

当前idx3
eval_err_num:37
____________________
SELECT  AVG(minutes) AS average_match_duration FROM matches
SELECT avg ( minutes )  FROM matches
连接数据库../datasets/cosql_dataset/database/wta_1/wta_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
easy pred: SELECT  AVG(minutes) AS average_match_duration FROM matches
easy gold: SELECT avg ( minutes )  FROM matches

当前idx4
eval_err_num:38
____________________
SELECT  MAX(minutes) AS longest_match_duration FROM matches
SELECT max ( minutes )  FROM matches
连接数据库../datasets/cosql_dataset/database/wta_1/wta_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
easy pred: SELECT  MAX(minutes) AS longest_match_duration FROM matches
easy gold: SELECT max ( minutes )  FROM matches

当前idx>4
eval_err_num:39
____________________
SELECT  MIN(minutes) AS shortest_match_duration FROM matches
SELECT min ( minutes )  FROM matches
连接数据库../datasets/cosql_dataset/database/wta_1/wta_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
easy pred: SELECT  MIN(minutes) AS shortest_match_duration FROM matches
easy gold: SELECT min ( minutes )  FROM matches

当前idx1
eval_err_num:40
____________________
SELECT  COUNT(*) AS NumberOfFlights FROM flights JOIN airports ON flights.DestAirport = airports.AirportCode WHERE airports.City IN ('Aberdeen', 'Abilene')
SELECT count ( * )  FROM Flights AS T1 JOIN Airports AS T2 ON T1.DestAirport   =   T2.AirportCode WHERE T2.city  like  "%Aberdeen%" OR T2.city  like  "%Abilene%"
连接数据库../datasets/cosql_dataset/database/flight_2/flight_2.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
extra pred: SELECT  COUNT(*) AS NumberOfFlights FROM flights JOIN airports ON flights.DestAirport = airports.AirportCode WHERE airports.City IN ('Aberdeen', 'Abilene')
extra gold: SELECT count ( * )  FROM Flights AS T1 JOIN Airports AS T2 ON T1.DestAirport   =   T2.AirportCode WHERE T2.city  like  "%Aberdeen%" OR T2.city  like  "%Abilene%"

当前idx1
____________________
SELECT  Name FROM museum
SELECT name from museum
连接数据库../datasets/cosql_dataset/database/museum_visit/museum_visit.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx1
eval_err_num:41
____________________
SELECT  Title FROM Cartoon WHERE Directed_by IN ('Ben Jones', 'Brandon Vietti')
SELECT Title FROM Cartoon WHERE Directed_by  =  "Ben Jones" OR Directed_by  =  "Brandon Vietti"
连接数据库../datasets/cosql_dataset/database/tvshow/tvshow.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT  Title FROM Cartoon WHERE Directed_by IN ('Ben Jones', 'Brandon Vietti')
medium gold: SELECT Title FROM Cartoon WHERE Directed_by  =  "Ben Jones" OR Directed_by  =  "Brandon Vietti"

当前idx2
eval_err_num:42
____________________
SELECT  Title, Original_air_date FROM Cartoon WHERE Directed_by IN ('Ben Jones', 'Brandon Vietti')
SELECT Title, original_air_date FROM Cartoon WHERE Directed_by  =  "Ben Jones" OR Directed_by  =  "Brandon Vietti"
连接数据库../datasets/cosql_dataset/database/tvshow/tvshow.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
extra pred: SELECT  Title, Original_air_date FROM Cartoon WHERE Directed_by IN ('Ben Jones', 'Brandon Vietti')
extra gold: SELECT Title, original_air_date FROM Cartoon WHERE Directed_by  =  "Ben Jones" OR Directed_by  =  "Brandon Vietti"

当前idx3
eval_err_num:43
____________________
SELECT  Title, Written_by FROM Cartoon WHERE Directed_by IN ('Ben Jones', 'Brandon Vietti')
SELECT Title, written_by FROM Cartoon WHERE Directed_by  =  "Ben Jones" OR Directed_by  =  "Brandon Vietti"
连接数据库../datasets/cosql_dataset/database/tvshow/tvshow.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
extra pred: SELECT  Title, Written_by FROM Cartoon WHERE Directed_by IN ('Ben Jones', 'Brandon Vietti')
extra gold: SELECT Title, written_by FROM Cartoon WHERE Directed_by  =  "Ben Jones" OR Directed_by  =  "Brandon Vietti"

当前idx1
____________________
SELECT  * FROM Documents WHERE Document_Description LIKE '%w%'
SELECT * from Documents WHERE Document_Description LIKE "%w%"
连接数据库../datasets/cosql_dataset/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT  Document_Name FROM Documents WHERE Document_Description LIKE '%w%'
SELECT document_name from Documents WHERE Document_Description LIKE "%w%"
连接数据库../datasets/cosql_dataset/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx3
____________________
SELECT  Document_Name, Template_ID FROM Documents WHERE Document_Description LIKE '%w%'
SELECT document_name , template_id FROM Documents WHERE Document_Description LIKE "%w%"
连接数据库../datasets/cosql_dataset/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx1
eval_err_num:44
____________________
SELECT  AVG(loser_age) AS average_loser_age FROM matches
SELECT avg ( loser_age )   FROM matches
连接数据库../datasets/cosql_dataset/database/wta_1/wta_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
easy pred: SELECT  AVG(loser_age) AS average_loser_age FROM matches
easy gold: SELECT avg ( loser_age )   FROM matches

当前idx2
eval_err_num:45
____________________
SELECT  AVG(winner_age) AS average_winner_age FROM matches
SELECT avg ( winner_age )   FROM matches
连接数据库../datasets/cosql_dataset/database/wta_1/wta_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
easy pred: SELECT  AVG(winner_age) AS average_winner_age FROM matches
easy gold: SELECT avg ( winner_age )   FROM matches

当前idx3
eval_err_num:46
____________________
SELECT  COUNT(*) AS left_handed_winners FROM matches WHERE winner_hand = 'L'
SELECT count ( * )  from matches where winner_hand  =  "L"
连接数据库../datasets/cosql_dataset/database/wta_1/wta_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
easy pred: SELECT  COUNT(*) AS left_handed_winners FROM matches WHERE winner_hand = 'L'
easy gold: SELECT count ( * )  from matches where winner_hand  =  "L"

当前idx4
____________________
SELECT  winner_name, loser_name FROM matches ORDER BY minutes DESC LIMIT 1
SELECT winner_name, loser_name from matches where minutes  =   ( select max ( minutes )  from matches ) 
连接数据库../datasets/cosql_dataset/database/wta_1/wta_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:0
extra pred: SELECT  winner_name, loser_name FROM matches ORDER BY minutes DESC LIMIT 1
extra gold: SELECT winner_name, loser_name from matches where minutes  =   ( select max ( minutes )  from matches ) 

当前idx1
____________________
SELECT  name FROM Dogs
SELECT name FROM Dogs
连接数据库../datasets/cosql_dataset/database/dog_kennels/dog_kennels.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT  breed_name FROM Breeds WHERE breed_code = (     SELECT breed_code     FROM Dogs     GROUP BY breed_code     ORDER BY COUNT(*) ASC     LIMIT 1 )
SELECT name FROM Dogs WHERE breed_code   =    (  SELECT breed_code FROM Dogs GROUP BY breed_code ORDER BY count ( * )  ASC LIMIT 1  ) 
连接数据库../datasets/cosql_dataset/database/dog_kennels/dog_kennels.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
hard pred: SELECT  breed_name FROM Breeds WHERE breed_code = (     SELECT breed_code     FROM Dogs     GROUP BY breed_code     ORDER BY COUNT(*) ASC     LIMIT 1 )
hard gold: SELECT name FROM Dogs WHERE breed_code   =    (  SELECT breed_code FROM Dogs GROUP BY breed_code ORDER BY count ( * )  ASC LIMIT 1  ) 

当前idx3
____________________
SELECT  gender FROM Dogs WHERE breed_code = (     SELECT breed_code     FROM Dogs     GROUP BY breed_code     ORDER BY COUNT(*) ASC     LIMIT 1 )
SELECT name, gender FROM Dogs WHERE breed_code   =    (  SELECT breed_code FROM Dogs GROUP BY breed_code ORDER BY count ( * )  ASC LIMIT 1  ) 
连接数据库../datasets/cosql_dataset/database/dog_kennels/dog_kennels.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
extra pred: SELECT  gender FROM Dogs WHERE breed_code = (     SELECT breed_code     FROM Dogs     GROUP BY breed_code     ORDER BY COUNT(*) ASC     LIMIT 1 )
extra gold: SELECT name, gender FROM Dogs WHERE breed_code   =    (  SELECT breed_code FROM Dogs GROUP BY breed_code ORDER BY count ( * )  ASC LIMIT 1  ) 

当前idx4
____________________
SELECT  date_of_treatment FROM Treatments WHERE dog_id IN (     SELECT dog_id     FROM Dogs     WHERE breed_code = (         SELECT breed_code         FROM Dogs         GROUP BY breed_code         ORDER BY COUNT(*) ASC         LIMIT 1     ) )
SELECT T1.name ,  T2.date_of_treatment FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id   =   T2.dog_id WHERE T1.breed_code   =    (  SELECT breed_code FROM Dogs GROUP BY breed_code ORDER BY count ( * )  ASC LIMIT 1  ) 
连接数据库../datasets/cosql_dataset/database/dog_kennels/dog_kennels.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
extra pred: SELECT  date_of_treatment FROM Treatments WHERE dog_id IN (     SELECT dog_id     FROM Dogs     WHERE breed_code = (         SELECT breed_code         FROM Dogs         GROUP BY breed_code         ORDER BY COUNT(*) ASC         LIMIT 1     ) )
extra gold: SELECT T1.name ,  T2.date_of_treatment FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id   =   T2.dog_id WHERE T1.breed_code   =    (  SELECT breed_code FROM Dogs GROUP BY breed_code ORDER BY count ( * )  ASC LIMIT 1  ) 

当前idx1
eval_err_num:47
____________________
SELECT  COUNT(DISTINCT s.StuID) AS NumberOfStudentsWithCats FROM Student s JOIN Has_Pet hp ON s.StuID = hp.StuID JOIN Pets p ON hp.PetID = p.PetID WHERE p.PetType = 'cat'
SELECT count ( * )  FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat'
连接数据库../datasets/cosql_dataset/database/pets_1/pets_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
hard pred: SELECT  COUNT(DISTINCT s.StuID) AS NumberOfStudentsWithCats FROM Student s JOIN Has_Pet hp ON s.StuID = hp.StuID JOIN Pets p ON hp.PetID = p.PetID WHERE p.PetType = 'cat'
hard gold: SELECT count ( * )  FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat'

当前idx2
eval_err_num:48
____________________
SELECT  COUNT(DISTINCT s.StuID) AS NumberOfStudentsWithoutCats FROM Student s LEFT JOIN (     SELECT hp.StuID     FROM Has_Pet hp     JOIN Pets p ON hp.PetID = p.PetID     WHERE p.PetType = 'cat' ) AS StudentsWithCats ON s.StuID = StudentsWithCats.StuID WHERE StudentsWithCats.StuID IS NULL
select count ( * )  from  ( SELECT stuid FROM student EXCEPT SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid   =   T2.stuid JOIN pets AS T3 ON T3.petid   =   T2.petid WHERE T3.pettype   =   'cat' ) 
连接数据库../datasets/cosql_dataset/database/pets_1/pets_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
easy pred: SELECT  COUNT(DISTINCT s.StuID) AS NumberOfStudentsWithoutCats FROM Student s LEFT JOIN (     SELECT hp.StuID     FROM Has_Pet hp     JOIN Pets p ON hp.PetID = p.PetID     WHERE p.PetType = 'cat' ) AS StudentsWithCats ON s.StuID = StudentsWithCats.StuID WHERE StudentsWithCats.StuID IS NULL
easy gold: select count ( * )  from  ( SELECT stuid FROM student EXCEPT SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid   =   T2.stuid JOIN pets AS T3 ON T3.petid   =   T2.petid WHERE T3.pettype   =   'cat' ) 

当前idx3
eval_err_num:49
____________________
SELECT  s.StuID FROM Student s LEFT JOIN (     SELECT hp.StuID     FROM Has_Pet hp     JOIN Pets p ON hp.PetID = p.PetID     WHERE p.PetType = 'cat' ) AS StudentsWithCats ON s.StuID = StudentsWithCats.StuID WHERE StudentsWithCats.StuID IS NULL
SELECT stuid FROM student EXCEPT SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid   =   T2.stuid JOIN pets AS T3 ON T3.petid   =   T2.petid WHERE T3.pettype   =   'cat'
连接数据库../datasets/cosql_dataset/database/pets_1/pets_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
hard pred: SELECT  s.StuID FROM Student s LEFT JOIN (     SELECT hp.StuID     FROM Has_Pet hp     JOIN Pets p ON hp.PetID = p.PetID     WHERE p.PetType = 'cat' ) AS StudentsWithCats ON s.StuID = StudentsWithCats.StuID WHERE StudentsWithCats.StuID IS NULL
hard gold: SELECT stuid FROM student EXCEPT SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid   =   T2.stuid JOIN pets AS T3 ON T3.petid   =   T2.petid WHERE T3.pettype   =   'cat'

当前idx1
eval_err_num:50
____________________
SELECT  DISTINCT v.Name FROM visitor v JOIN visit vi ON v.ID = vi.visitor_ID JOIN museum m1 ON vi.Museum_ID = m1.Museum_ID AND m1.Open_Year < '2009' JOIN museum m2 ON vi.Museum_ID = m2.Museum_ID AND m2.Open_Year > '2011' WHERE EXISTS (     SELECT 1 FROM visit vi1     JOIN museum m3 ON vi1.Museum_ID = m3.Museum_ID AND m3.Open_Year < '2009'     WHERE vi1.visitor_ID = v.ID ) AND EXISTS (     SELECT 1 FROM visit vi2     JOIN museum m4 ON vi2.Museum_ID = m4.Museum_ID AND m4.Open_Year > '2011'     WHERE vi2.visitor_ID = v.ID )
SELECT t1.name FROM visitor AS t1 JOIN visit AS t2 ON t1.id   =   t2.visitor_id JOIN museum AS t3 ON t3.Museum_ID   =   t2.Museum_ID WHERE t3.open_year  <  2009 INTERSECT SELECT t1.name FROM visitor AS t1 JOIN visit AS t2 ON t1.id   =   t2.visitor_id JOIN museum AS t3 ON t3.Museum_ID   =   t2.Museum_ID WHERE t3.open_year  >  2011
连接数据库../datasets/cosql_dataset/database/museum_visit/museum_visit.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
extra pred: SELECT  DISTINCT v.Name FROM visitor v JOIN visit vi ON v.ID = vi.visitor_ID JOIN museum m1 ON vi.Museum_ID = m1.Museum_ID AND m1.Open_Year < '2009' JOIN museum m2 ON vi.Museum_ID = m2.Museum_ID AND m2.Open_Year > '2011' WHERE EXISTS (     SELECT 1 FROM visit vi1     JOIN museum m3 ON vi1.Museum_ID = m3.Museum_ID AND m3.Open_Year < '2009'     WHERE vi1.visitor_ID = v.ID ) AND EXISTS (     SELECT 1 FROM visit vi2     JOIN museum m4 ON vi2.Museum_ID = m4.Museum_ID AND m4.Open_Year > '2011'     WHERE vi2.visitor_ID = v.ID )
extra gold: SELECT t1.name FROM visitor AS t1 JOIN visit AS t2 ON t1.id   =   t2.visitor_id JOIN museum AS t3 ON t3.Museum_ID   =   t2.Museum_ID WHERE t3.open_year  <  2009 INTERSECT SELECT t1.name FROM visitor AS t1 JOIN visit AS t2 ON t1.id   =   t2.visitor_id JOIN museum AS t3 ON t3.Museum_ID   =   t2.Museum_ID WHERE t3.open_year  >  2011

当前idx2
eval_err_num:51
____________________
SELECT  m.Name FROM museum m JOIN visit vi ON m.Museum_ID = vi.Museum_ID JOIN visitor v ON vi.visitor_ID = v.ID WHERE m.Open_Year < '2009' AND v.ID IN (     SELECT v.ID     FROM visitor v     JOIN visit vi ON v.ID = vi.visitor_ID     JOIN museum m1 ON vi.Museum_ID = m1.Museum_ID AND m1.Open_Year < '2009'     JOIN museum m2 ON vi.Museum_ID = m2.Museum_ID AND m2.Open_Year > '2011'     WHERE EXISTS (         SELECT 1 FROM visit vi1         JOIN museum m3 ON vi1.Museum_ID = m3.Museum_ID AND m3.Open_Year < '2009'         WHERE vi1.visitor_ID = v.ID     ) AND EXISTS (         SELECT 1 FROM visit vi2         JOIN museum m4 ON vi2.Museum_ID = m4.Museum_ID AND m4.Open_Year > '2011'         WHERE vi2.visitor_ID = v.ID     ) )
SELECT t3.name FROM visitor AS t1 JOIN visit AS t2 ON t1.id   =   t2.visitor_id JOIN museum AS t3 ON t3.Museum_ID   =   t2.Museum_ID WHERE t3.open_year  <  2009 AND t1.name  =   ( SELECT t1.name FROM visitor AS t1 JOIN visit AS t2 ON t1.id   =   t2.visitor_id JOIN museum AS t3 ON t3.Museum_ID   =   t2.Museum_ID WHERE t3.open_year  <  2009 INTERSECT SELECT t1.name FROM visitor AS t1 JOIN visit AS t2 ON t1.id   =   t2.visitor_id JOIN museum AS t3 ON t3.Museum_ID   =   t2.Museum_ID WHERE t3.open_year  >  2011 ) 
连接数据库../datasets/cosql_dataset/database/museum_visit/museum_visit.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
extra pred: SELECT  m.Name FROM museum m JOIN visit vi ON m.Museum_ID = vi.Museum_ID JOIN visitor v ON vi.visitor_ID = v.ID WHERE m.Open_Year < '2009' AND v.ID IN (     SELECT v.ID     FROM visitor v     JOIN visit vi ON v.ID = vi.visitor_ID     JOIN museum m1 ON vi.Museum_ID = m1.Museum_ID AND m1.Open_Year < '2009'     JOIN museum m2 ON vi.Museum_ID = m2.Museum_ID AND m2.Open_Year > '2011'     WHERE EXISTS (         SELECT 1 FROM visit vi1         JOIN museum m3 ON vi1.Museum_ID = m3.Museum_ID AND m3.Open_Year < '2009'         WHERE vi1.visitor_ID = v.ID     ) AND EXISTS (         SELECT 1 FROM visit vi2         JOIN museum m4 ON vi2.Museum_ID = m4.Museum_ID AND m4.Open_Year > '2011'         WHERE vi2.visitor_ID = v.ID     ) )
extra gold: SELECT t3.name FROM visitor AS t1 JOIN visit AS t2 ON t1.id   =   t2.visitor_id JOIN museum AS t3 ON t3.Museum_ID   =   t2.Museum_ID WHERE t3.open_year  <  2009 AND t1.name  =   ( SELECT t1.name FROM visitor AS t1 JOIN visit AS t2 ON t1.id   =   t2.visitor_id JOIN museum AS t3 ON t3.Museum_ID   =   t2.Museum_ID WHERE t3.open_year  <  2009 INTERSECT SELECT t1.name FROM visitor AS t1 JOIN visit AS t2 ON t1.id   =   t2.visitor_id JOIN museum AS t3 ON t3.Museum_ID   =   t2.Museum_ID WHERE t3.open_year  >  2011 ) 

当前idx3
____________________
SELECT  Level_of_membership FROM visitor WHERE Name = 'Fernando Gago'
SELECT level_of_membership FROM visitor WHERE name  =  "Fernando Gago"
连接数据库../datasets/cosql_dataset/database/museum_visit/museum_visit.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx4
____________________
SELECT  Age FROM visitor WHERE Name = 'Fernando Gago'
SELECT age FROM visitor WHERE name  =  "Fernando Gago"
连接数据库../datasets/cosql_dataset/database/museum_visit/museum_visit.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx1
____________________
SELECT  DISTINCT airports.AirportName, airports.City, airports.Country FROM flights JOIN airlines ON flights.Airline = airlines.uid JOIN airports ON flights.SourceAirport = airports.AirportCode WHERE airlines.Airline = 'United Airlines'
SELECT T1.SourceAirport FROM FLIGHTS AS T1 JOIN AIRLINES AS T2 ON T2.uid   =   T1.Airline WHERE T2.Airline   =   "United Airlines"
连接数据库../datasets/cosql_dataset/database/flight_2/flight_2.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT  DISTINCT airports.AirportName, airports.City, airports.Country FROM flights JOIN airlines ON flights.Airline = airlines.uid JOIN airports ON flights.SourceAirport = airports.AirportCode WHERE airlines.Airline = 'United Airlines'
medium gold: SELECT T1.SourceAirport FROM FLIGHTS AS T1 JOIN AIRLINES AS T2 ON T2.uid   =   T1.Airline WHERE T2.Airline   =   "United Airlines"

当前idx2
____________________
SELECT  DISTINCT flights.FlightNo FROM flights JOIN airlines ON flights.Airline = airlines.uid WHERE airlines.Airline = 'United Airlines'
SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRLINES AS T2 ON T2.uid   =   T1.Airline WHERE T2.Airline   =   "United Airlines"
连接数据库../datasets/cosql_dataset/database/flight_2/flight_2.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx3
____________________
SELECT  airports.AirportName, airports.City, airports.Country FROM flights JOIN airports ON flights.DestAirport = airports.AirportCode WHERE flights.FlightNo = 28
SELECT DestAirport FROM flights WHERE FlightNo  =  28
连接数据库../datasets/cosql_dataset/database/flight_2/flight_2.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
easy pred: SELECT  airports.AirportName, airports.City, airports.Country FROM flights JOIN airports ON flights.DestAirport = airports.AirportCode WHERE flights.FlightNo = 28
easy gold: SELECT DestAirport FROM flights WHERE FlightNo  =  28

当前idx4
____________________
SELECT  airports.AirportName, airports.City, airports.Country FROM flights JOIN airports ON flights.DestAirport = airports.AirportCode WHERE flights.FlightNo = 29
SELECT DestAirport FROM flights WHERE FlightNo  =  29
连接数据库../datasets/cosql_dataset/database/flight_2/flight_2.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
easy pred: SELECT  airports.AirportName, airports.City, airports.Country FROM flights JOIN airports ON flights.DestAirport = airports.AirportCode WHERE flights.FlightNo = 29
easy gold: SELECT DestAirport FROM flights WHERE FlightNo  =  29

当前idx1
____________________
SELECT  first_name, last_name FROM players
SELECT first_name,  last_name FROM players
连接数据库../datasets/cosql_dataset/database/wta_1/wta_1.sqlite
执行第一个查询
执行出错: Could not decode to UTF-8 column 'last_name' with text 'Treyes Albarrac��N'
eval_exec:False
exact_score:True
当前idx2
____________________
SELECT  first_name, last_name FROM players
SELECT first_name ,  last_name FROM players WHERE hand   =   'L'
连接数据库../datasets/cosql_dataset/database/wta_1/wta_1.sqlite
执行第一个查询
执行出错: Could not decode to UTF-8 column 'last_name' with text 'Treyes Albarrac��N'
eval_exec:False
exact_score:0
medium pred: SELECT  first_name, last_name FROM players
medium gold: SELECT first_name ,  last_name FROM players WHERE hand   =   'L'

当前idx1
eval_err_num:52
____________________
SELECT  COUNT(*) AS NumberOfFlights FROM flights f JOIN airlines a ON f.Airline = a.uid JOIN airports ap ON f.DestAirport = ap.AirportCode WHERE a.Airline = 'United Airlines' AND ap.City = 'Aberdeen'
SELECT count ( * )  FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport   =   T2.AirportCode JOIN AIRLINES AS T3 ON T3.uid   =   T1.Airline WHERE T2.City   =   "Aberdeen" AND T3.Airline   =   "United Airlines"
连接数据库../datasets/cosql_dataset/database/flight_2/flight_2.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
hard pred: SELECT  COUNT(*) AS NumberOfFlights FROM flights f JOIN airlines a ON f.Airline = a.uid JOIN airports ap ON f.DestAirport = ap.AirportCode WHERE a.Airline = 'United Airlines' AND ap.City = 'Aberdeen'
hard gold: SELECT count ( * )  FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport   =   T2.AirportCode JOIN AIRLINES AS T3 ON T3.uid   =   T1.Airline WHERE T2.City   =   "Aberdeen" AND T3.Airline   =   "United Airlines"

当前idx2
eval_err_num:53
____________________
SELECT  DISTINCT ap.City FROM flights f JOIN airlines a ON f.Airline = a.uid JOIN airports ap ON f.DestAirport = ap.AirportCode WHERE a.Airline = 'United Airlines' AND ap.City != 'Aberdeen'
SELECT T2.city FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport   =   T2.AirportCode JOIN AIRLINES AS T3 ON T3.uid   =   T1.Airline where T2.city ! =   'Aberdeen' and T3.airline  =  "United Airlines"
连接数据库../datasets/cosql_dataset/database/flight_2/flight_2.sqlite
执行第一个查询
执行第二个查询
执行出错: unrecognized token: "!"
eval_exec:False
exact_score:0
hard pred: SELECT  DISTINCT ap.City FROM flights f JOIN airlines a ON f.Airline = a.uid JOIN airports ap ON f.DestAirport = ap.AirportCode WHERE a.Airline = 'United Airlines' AND ap.City != 'Aberdeen'
hard gold: SELECT T2.city FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport   =   T2.AirportCode JOIN AIRLINES AS T3 ON T3.uid   =   T1.Airline where T2.city ! =   'Aberdeen' and T3.airline  =  "United Airlines"

当前idx1
eval_err_num:54
____________________
SELECT  t.Name FROM teacher t JOIN course_arrange ca ON t.Teacher_ID = ca.Teacher_ID JOIN course c ON ca.Course_ID = c.Course_ID WHERE c.Course = 'math'
SELECT T3.Name FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID   =   T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID   =   T3.Teacher_ID WHERE T2.Course   =   "Math"
连接数据库../datasets/cosql_dataset/database/course_teach/course_teach.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
hard pred: SELECT  t.Name FROM teacher t JOIN course_arrange ca ON t.Teacher_ID = ca.Teacher_ID JOIN course c ON ca.Course_ID = c.Course_ID WHERE c.Course = 'math'
hard gold: SELECT T3.Name FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID   =   T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID   =   T3.Teacher_ID WHERE T2.Course   =   "Math"

当前idx2
eval_err_num:55
____________________
SELECT  DISTINCT c.Staring_Date FROM course c JOIN course_arrange ca ON c.Course_ID = ca.Course_ID WHERE ca.Grade IN (1, 3) AND ca.Teacher_ID IN (     SELECT ca.Teacher_ID     FROM course_arrange ca     JOIN course c ON ca.Course_ID = c.Course_ID     WHERE c.Course = 'math' )
SELECT T2.Staring_Date  FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID   =   T2.Course_ID where T2.Course  =  "Math"
连接数据库../datasets/cosql_dataset/database/course_teach/course_teach.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT  DISTINCT c.Staring_Date FROM course c JOIN course_arrange ca ON c.Course_ID = ca.Course_ID WHERE ca.Grade IN (1, 3) AND ca.Teacher_ID IN (     SELECT ca.Teacher_ID     FROM course_arrange ca     JOIN course c ON ca.Course_ID = c.Course_ID     WHERE c.Course = 'math' )
medium gold: SELECT T2.Staring_Date  FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID   =   T2.Course_ID where T2.Course  =  "Math"

当前idx1
eval_err_num:56
____________________
SELECT  p.Birth_Date FROM people p JOIN poker_player pp ON p.People_ID = pp.People_ID ORDER BY pp.Earnings ASC LIMIT 1
SELECT T1.Birth_Date FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID   =   T2.People_ID ORDER BY T2.Earnings ASC LIMIT 1
连接数据库../datasets/cosql_dataset/database/poker_player/poker_player.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
hard pred: SELECT  p.Birth_Date FROM people p JOIN poker_player pp ON p.People_ID = pp.People_ID ORDER BY pp.Earnings ASC LIMIT 1
hard gold: SELECT T1.Birth_Date FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID   =   T2.People_ID ORDER BY T2.Earnings ASC LIMIT 1

当前idx2
eval_err_num:57
____________________
SELECT  p.Name FROM people p JOIN poker_player pp ON p.People_ID = pp.People_ID ORDER BY pp.Earnings ASC LIMIT 1
SELECT name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID   =   T2.People_ID ORDER BY T2.Earnings ASC LIMIT 1
连接数据库../datasets/cosql_dataset/database/poker_player/poker_player.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
hard pred: SELECT  p.Name FROM people p JOIN poker_player pp ON p.People_ID = pp.People_ID ORDER BY pp.Earnings ASC LIMIT 1
hard gold: SELECT name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID   =   T2.People_ID ORDER BY T2.Earnings ASC LIMIT 1

当前idx3
eval_err_num:58
____________________
SELECT  p.Nationality FROM people p JOIN poker_player pp ON p.People_ID = pp.People_ID ORDER BY pp.Earnings ASC LIMIT 1
SELECT Nationality FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID   =   T2.People_ID ORDER BY T2.Earnings ASC LIMIT 1
连接数据库../datasets/cosql_dataset/database/poker_player/poker_player.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
hard pred: SELECT  p.Nationality FROM people p JOIN poker_player pp ON p.People_ID = pp.People_ID ORDER BY pp.Earnings ASC LIMIT 1
hard gold: SELECT Nationality FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID   =   T2.People_ID ORDER BY T2.Earnings ASC LIMIT 1

当前idx1
eval_err_num:59
____________________
SELECT  COUNT(*) AS Total_Poker_Players FROM poker_player
SELECT count ( * )  FROM poker_player
连接数据库../datasets/cosql_dataset/database/poker_player/poker_player.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
easy pred: SELECT  COUNT(*) AS Total_Poker_Players FROM poker_player
easy gold: SELECT count ( * )  FROM poker_player

当前idx2
eval_err_num:60
____________________
SELECT  COUNT(*) AS Players_Over_200cm FROM poker_player JOIN people ON poker_player.People_ID = people.People_ID WHERE people.Height > 200
SELECT count ( * )  FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID   =   T2.People_ID WHERE T1.Height  >  200
连接数据库../datasets/cosql_dataset/database/poker_player/poker_player.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT  COUNT(*) AS Players_Over_200cm FROM poker_player JOIN people ON poker_player.People_ID = people.People_ID WHERE people.Height > 200
medium gold: SELECT count ( * )  FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID   =   T2.People_ID WHERE T1.Height  >  200

当前idx3
eval_err_num:61
____________________
SELECT  AVG(poker_player.Earnings) AS Average_Earnings FROM poker_player JOIN people ON poker_player.People_ID = people.People_ID WHERE people.Height > 200
SELECT avg ( T2.Earnings )  FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID   =   T2.People_ID WHERE T1.Height  >  200
连接数据库../datasets/cosql_dataset/database/poker_player/poker_player.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT  AVG(poker_player.Earnings) AS Average_Earnings FROM poker_player JOIN people ON poker_player.People_ID = people.People_ID WHERE people.Height > 200
medium gold: SELECT avg ( T2.Earnings )  FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID   =   T2.People_ID WHERE T1.Height  >  200

当前idx1
eval_err_num:62
____________________
SELECT  DISTINCT s.StuID FROM Student s JOIN Has_Pet hp ON s.StuID = hp.StuID JOIN Pets p ON hp.PetID = p.PetID WHERE p.PetType = 'dog'
SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'dog'
连接数据库../datasets/cosql_dataset/database/pets_1/pets_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
hard pred: SELECT  DISTINCT s.StuID FROM Student s JOIN Has_Pet hp ON s.StuID = hp.StuID JOIN Pets p ON hp.PetID = p.PetID WHERE p.PetType = 'dog'
hard gold: SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'dog'

当前idx2
eval_err_num:63
____________________
SELECT  s.StuID FROM Student s JOIN Has_Pet hp ON s.StuID = hp.StuID JOIN Pets p ON hp.PetID = p.PetID WHERE p.PetType = 'dog'  INTERSECT  SELECT s.StuID FROM Student s JOIN Has_Pet hp ON s.StuID = hp.StuID JOIN Pets p ON hp.PetID = p.PetID WHERE p.PetType = 'cat'
SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'dog' intersect SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat'
连接数据库../datasets/cosql_dataset/database/pets_1/pets_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
extra pred: SELECT  s.StuID FROM Student s JOIN Has_Pet hp ON s.StuID = hp.StuID JOIN Pets p ON hp.PetID = p.PetID WHERE p.PetType = 'dog'  INTERSECT  SELECT s.StuID FROM Student s JOIN Has_Pet hp ON s.StuID = hp.StuID JOIN Pets p ON hp.PetID = p.PetID WHERE p.PetType = 'cat'
extra gold: SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'dog' intersect SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat'

当前idx3
eval_err_num:64
____________________
SELECT  s.Fname, s.Age FROM Student s JOIN Has_Pet hp ON s.StuID = hp.StuID JOIN Pets p ON hp.PetID = p.PetID WHERE p.PetType = 'dog'
SELECT T1.Fname, T1.age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'dog'
连接数据库../datasets/cosql_dataset/database/pets_1/pets_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
hard pred: SELECT  s.Fname, s.Age FROM Student s JOIN Has_Pet hp ON s.StuID = hp.StuID JOIN Pets p ON hp.PetID = p.PetID WHERE p.PetType = 'dog'
hard gold: SELECT T1.Fname, T1.age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'dog'

当前idx1
____________________
SELECT  COUNT(*) FROM country
SELECT count ( * )  from country
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT  CountryCode FROM city WHERE Name = 'Herat'
SELECT countrycode  from city where name  =  "Herat"
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx3
____________________
SELECT  Population FROM city WHERE Name = 'Qandahar'
SELECT population  from city where name  =  "Qandahar"
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx1
____________________
SELECT  id FROM TV_Channel WHERE Country IN (     SELECT Country     FROM TV_Channel     GROUP BY Country     HAVING COUNT(id) > 2 )
select id from tv_channel where country in  ( SELECT country FROM tv_channel GROUP BY country HAVING count ( * )   >  2 ) 
连接数据库../datasets/cosql_dataset/database/tvshow/tvshow.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:0
hard pred: SELECT  id FROM TV_Channel WHERE Country IN (     SELECT Country     FROM TV_Channel     GROUP BY Country     HAVING COUNT(id) > 2 )
hard gold: select id from tv_channel where country in  ( SELECT country FROM tv_channel GROUP BY country HAVING count ( * )   >  2 ) 

当前idx2
____________________
SELECT  id, Package_Option FROM TV_Channel WHERE Country IN (     SELECT Country     FROM TV_Channel     GROUP BY Country     HAVING COUNT(id) > 2 )
select package_option from tv_channel where country in  ( SELECT country FROM tv_channel GROUP BY country HAVING count ( * )   >  2 ) 
连接数据库../datasets/cosql_dataset/database/tvshow/tvshow.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
hard pred: SELECT  id, Package_Option FROM TV_Channel WHERE Country IN (     SELECT Country     FROM TV_Channel     GROUP BY Country     HAVING COUNT(id) > 2 )
hard gold: select package_option from tv_channel where country in  ( SELECT country FROM tv_channel GROUP BY country HAVING count ( * )   >  2 ) 

当前idx3
____________________
SELECT  series_name FROM TV_Channel ORDER BY series_name ASC
SELECT series_name FROM tv_channel order by series_name asc
连接数据库../datasets/cosql_dataset/database/tvshow/tvshow.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx1
eval_err_num:65
____________________
SELECT  COUNT(DISTINCT dog_id) AS NumberOfDogsTreated FROM Treatments
SELECT count ( * )  FROM Dogs WHERE dog_id IN  (  SELECT dog_id FROM Treatments  ) 
连接数据库../datasets/cosql_dataset/database/dog_kennels/dog_kennels.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
hard pred: SELECT  COUNT(DISTINCT dog_id) AS NumberOfDogsTreated FROM Treatments
hard gold: SELECT count ( * )  FROM Dogs WHERE dog_id IN  (  SELECT dog_id FROM Treatments  ) 

当前idx2
eval_err_num:66
____________________
SELECT  MIN(age) AS YoungestDogAge FROM Dogs WHERE dog_id IN (SELECT DISTINCT dog_id FROM Treatments)
SELECT min ( age )  FROM Dogs WHERE dog_id IN  (  SELECT dog_id FROM Treatments  ) 
连接数据库../datasets/cosql_dataset/database/dog_kennels/dog_kennels.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
hard pred: SELECT  MIN(age) AS YoungestDogAge FROM Dogs WHERE dog_id IN (SELECT DISTINCT dog_id FROM Treatments)
hard gold: SELECT min ( age )  FROM Dogs WHERE dog_id IN  (  SELECT dog_id FROM Treatments  ) 

当前idx3
eval_err_num:67
____________________
SELECT  MAX(age) AS OldestDogAge FROM Dogs WHERE dog_id IN (SELECT DISTINCT dog_id FROM Treatments)
SELECT max ( age )  FROM Dogs WHERE dog_id IN  (  SELECT dog_id FROM Treatments  ) 
连接数据库../datasets/cosql_dataset/database/dog_kennels/dog_kennels.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
hard pred: SELECT  MAX(age) AS OldestDogAge FROM Dogs WHERE dog_id IN (SELECT DISTINCT dog_id FROM Treatments)
hard gold: SELECT max ( age )  FROM Dogs WHERE dog_id IN  (  SELECT dog_id FROM Treatments  ) 

当前idx4
eval_err_num:68
____________________
SELECT  AVG(CAST(age AS INTEGER)) AS AverageAge FROM Dogs WHERE dog_id IN (SELECT DISTINCT dog_id FROM Treatments)
SELECT avg ( age )  FROM Dogs WHERE dog_id IN  (  SELECT dog_id FROM Treatments  ) 
连接数据库../datasets/cosql_dataset/database/dog_kennels/dog_kennels.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
hard pred: SELECT  AVG(CAST(age AS INTEGER)) AS AverageAge FROM Dogs WHERE dog_id IN (SELECT DISTINCT dog_id FROM Treatments)
hard gold: SELECT avg ( age )  FROM Dogs WHERE dog_id IN  (  SELECT dog_id FROM Treatments  ) 

当前idx1
eval_err_num:69
____________________
SELECT  DISTINCT c.Name FROM country c WHERE c.Code NOT IN (     SELECT cl.CountryCode     FROM countrylanguage cl     WHERE cl.Language = 'English' )
SELECT Name FROM country WHERE Name NOT IN  ( SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code   =   T2.CountryCode WHERE T2.Language   =   "English" ) 
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
hard pred: SELECT  DISTINCT c.Name FROM country c WHERE c.Code NOT IN (     SELECT cl.CountryCode     FROM countrylanguage cl     WHERE cl.Language = 'English' )
hard gold: SELECT Name FROM country WHERE Name NOT IN  ( SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code   =   T2.CountryCode WHERE T2.Language   =   "English" ) 

当前idx2
eval_err_num:70
____________________
SELECT  SUM(c.Population) AS TotalPopulation FROM country c WHERE c.Code NOT IN (     SELECT cl.CountryCode     FROM countrylanguage cl     WHERE cl.Language = 'English' )
SELECT Name,sum ( Population )  FROM country WHERE Name NOT IN  ( SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code   =   T2.CountryCode WHERE T2.Language   =   "English" )  group by Name
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
extra pred: SELECT  SUM(c.Population) AS TotalPopulation FROM country c WHERE c.Code NOT IN (     SELECT cl.CountryCode     FROM countrylanguage cl     WHERE cl.Language = 'English' )
extra gold: SELECT Name,sum ( Population )  FROM country WHERE Name NOT IN  ( SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code   =   T2.CountryCode WHERE T2.Language   =   "English" )  group by Name

当前idx1
____________________
SELECT  Weight FROM cars_data WHERE Id = 1
SELECT T2.Weight FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId   =   T2.Id WHERE T1.MakeID  =  1
连接数据库../datasets/cosql_dataset/database/car_1/car_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:False
medium pred: SELECT  Weight FROM cars_data WHERE Id = 1
medium gold: SELECT T2.Weight FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId   =   T2.Id WHERE T1.MakeID  =  1

当前idx2
____________________
SELECT  Year FROM cars_data JOIN car_names ON cars_data.Id = car_names.MakeId WHERE car_names.Model LIKE 'buick%'
SELECT T2.Year FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId   =   T2.Id WHERE T1.Model  =  "buick"
连接数据库../datasets/cosql_dataset/database/car_1/car_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:0
medium pred: SELECT  Year FROM cars_data JOIN car_names ON cars_data.Id = car_names.MakeId WHERE car_names.Model LIKE 'buick%'
medium gold: SELECT T2.Year FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId   =   T2.Id WHERE T1.Model  =  "buick"

当前idx3
____________________
SELECT  Horsepower FROM cars_data JOIN car_names ON cars_data.Id = car_names.MakeId WHERE car_names.Model LIKE 'plymouth%'
SELECT T2.Horsepower FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId   =   T2.Id WHERE T1.Model  =  "plymouth"
连接数据库../datasets/cosql_dataset/database/car_1/car_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:0
medium pred: SELECT  Horsepower FROM cars_data JOIN car_names ON cars_data.Id = car_names.MakeId WHERE car_names.Model LIKE 'plymouth%'
medium gold: SELECT T2.Horsepower FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId   =   T2.Id WHERE T1.Model  =  "plymouth"

当前idx4
eval_err_num:71
____________________
SELECT  car_names.Model, MAX(cars_data.Horsepower) AS MaxHorsepower FROM cars_data JOIN car_names ON cars_data.Id = car_names.MakeId WHERE cars_data.Cylinders = 4 GROUP BY car_names.Model ORDER BY MaxHorsepower DESC LIMIT 1
SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.Cylinders  =  4 ORDER BY T2.horsepower DESC LIMIT 1
连接数据库../datasets/cosql_dataset/database/car_1/car_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
extra pred: SELECT  car_names.Model, MAX(cars_data.Horsepower) AS MaxHorsepower FROM cars_data JOIN car_names ON cars_data.Id = car_names.MakeId WHERE cars_data.Cylinders = 4 GROUP BY car_names.Model ORDER BY MaxHorsepower DESC LIMIT 1
extra gold: SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.Cylinders  =  4 ORDER BY T2.horsepower DESC LIMIT 1

当前idx1
eval_err_num:72
____________________
SELECT  COUNT(DISTINCT cn.Model) AS NumberOfCars FROM cars_data cd JOIN car_names cn ON cd.Id = cn.MakeId WHERE cd.Year = 1974
select count ( * )  from cars_data where year = '1974'
连接数据库../datasets/cosql_dataset/database/car_1/car_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
easy pred: SELECT  COUNT(DISTINCT cn.Model) AS NumberOfCars FROM cars_data cd JOIN car_names cn ON cd.Id = cn.MakeId WHERE cd.Year = 1974
easy gold: select count ( * )  from cars_data where year = '1974'

当前idx2
eval_err_num:73
____________________
SELECT  cd.Id FROM cars_data cd WHERE cd.Year = 1974 AND cd.Cylinders = 8
select id  from cars_data where year = '1974' and Cylinders  =  '8'
连接数据库../datasets/cosql_dataset/database/car_1/car_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT  cd.Id FROM cars_data cd WHERE cd.Year = 1974 AND cd.Cylinders = 8
medium gold: select id  from cars_data where year = '1974' and Cylinders  =  '8'

当前idx1
____________________
SELECT  Name FROM shop
select name from shop
连接数据库../datasets/cosql_dataset/database/employee_hire_evaluation/employee_hire_evaluation.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
eval_err_num:74
____________________
SELECT  DISTINCT s.Name FROM shop s JOIN hiring h ON s.Shop_ID = h.Shop_ID
SELECT t2.name FROM hiring AS t1 JOIN shop AS t2 ON t1.shop_id   =   t2.shop_id GROUP BY t1.shop_id
连接数据库../datasets/cosql_dataset/database/employee_hire_evaluation/employee_hire_evaluation.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT  DISTINCT s.Name FROM shop s JOIN hiring h ON s.Shop_ID = h.Shop_ID
medium gold: SELECT t2.name FROM hiring AS t1 JOIN shop AS t2 ON t1.shop_id   =   t2.shop_id GROUP BY t1.shop_id

当前idx3
eval_err_num:75
____________________
SELECT  s.Name FROM shop s JOIN hiring h ON s.Shop_ID = h.Shop_ID GROUP BY s.Shop_ID ORDER BY COUNT(h.Employee_ID) DESC LIMIT 1
SELECT t2.name FROM hiring AS t1 JOIN shop AS t2 ON t1.shop_id   =   t2.shop_id GROUP BY t1.shop_id ORDER BY count ( * )  DESC LIMIT 1
连接数据库../datasets/cosql_dataset/database/employee_hire_evaluation/employee_hire_evaluation.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
extra pred: SELECT  s.Name FROM shop s JOIN hiring h ON s.Shop_ID = h.Shop_ID GROUP BY s.Shop_ID ORDER BY COUNT(h.Employee_ID) DESC LIMIT 1
extra gold: SELECT t2.name FROM hiring AS t1 JOIN shop AS t2 ON t1.shop_id   =   t2.shop_id GROUP BY t1.shop_id ORDER BY count ( * )  DESC LIMIT 1

当前idx1
____________________
SELECT  COUNT(*) FROM singer
select count ( distinct Singer_ID )  from Singer
连接数据库../datasets/cosql_dataset/database/singer/singer.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
easy pred: SELECT  COUNT(*) FROM singer
easy gold: select count ( distinct Singer_ID )  from Singer

当前idx2
____________________
SELECT  COUNT(DISTINCT Singer_ID)  FROM song  WHERE Sales > 300000
SELECT count ( DISTINCT T1.Name )  FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID WHERE T2.Sales > 300000
连接数据库../datasets/cosql_dataset/database/singer/singer.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT  COUNT(DISTINCT Singer_ID)  FROM song  WHERE Sales > 300000
medium gold: SELECT count ( DISTINCT T1.Name )  FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID WHERE T2.Sales > 300000

当前idx3
eval_err_num:76
____________________
SELECT  DISTINCT s.Name  FROM singer s  JOIN song sg ON s.Singer_ID = sg.Singer_ID  WHERE sg.Sales > 300000
SELECT DISTINCT T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID WHERE T2.Sales > 300000
连接数据库../datasets/cosql_dataset/database/singer/singer.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT  DISTINCT s.Name  FROM singer s  JOIN song sg ON s.Singer_ID = sg.Singer_ID  WHERE sg.Sales > 300000
medium gold: SELECT DISTINCT T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID WHERE T2.Sales > 300000

当前idx1
____________________
SELECT  contestant_name FROM CONTESTANTS
SELECT contestant_name FROM CONTESTANTS
连接数据库../datasets/cosql_dataset/database/voter_1/voter_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
eval_err_num:77
____________________
SELECT  COUNT(*) AS total_contestants FROM CONTESTANTS
SELECT COUNT ( contestant_name )  FROM CONTESTANTS
连接数据库../datasets/cosql_dataset/database/voter_1/voter_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
easy pred: SELECT  COUNT(*) AS total_contestants FROM CONTESTANTS
easy gold: SELECT COUNT ( contestant_name )  FROM CONTESTANTS

当前idx3
____________________
SELECT  contestant_name FROM CONTESTANTS WHERE contestant_number = 1
SELECT contestant_name FROM CONTESTANTS WHERE contestant_number  =  1
连接数据库../datasets/cosql_dataset/database/voter_1/voter_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx4
____________________
SELECT  contestant_name FROM CONTESTANTS WHERE contestant_number = 2
SELECT contestant_name FROM CONTESTANTS WHERE contestant_number  =  2
连接数据库../datasets/cosql_dataset/database/voter_1/voter_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx1
____________________
SELECT  AirportName FROM airports
SELECT airportname FROM airports
连接数据库../datasets/cosql_dataset/database/flight_2/flight_2.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT  COUNT(FlightNo) FROM flights
SELECT COUNT ( DISTINCT Flightno )  FROM flights
连接数据库../datasets/cosql_dataset/database/flight_2/flight_2.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:True
当前idx3
____________________
SELECT  COUNT(DISTINCT Country) FROM airports
SELECT COUNT ( DISTINCT country )  FROM airports
连接数据库../datasets/cosql_dataset/database/flight_2/flight_2.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx1
____________________
SELECT  COUNT(*) FROM Breeds
SELECT count ( * )  from Breeds
连接数据库../datasets/cosql_dataset/database/dog_kennels/dog_kennels.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
eval_err_num:78
____________________
SELECT  b.breed_name, s.size_description FROM Breeds b JOIN Dogs d ON b.breed_code = d.breed_code JOIN Sizes s ON d.size_code = s.size_code GROUP BY b.breed_name ORDER BY s.size_description DESC LIMIT 1
SELECT T1.breed_name FROM Breeds AS T1 JOIN Dogs AS T2 ON T1.breed_code   =   T2.breed_code GROUP BY T1.breed_name ORDER BY count ( * )  DESC LIMIT 1
连接数据库../datasets/cosql_dataset/database/dog_kennels/dog_kennels.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
extra pred: SELECT  b.breed_name, s.size_description FROM Breeds b JOIN Dogs d ON b.breed_code = d.breed_code JOIN Sizes s ON d.size_code = s.size_code GROUP BY b.breed_name ORDER BY s.size_description DESC LIMIT 1
extra gold: SELECT T1.breed_name FROM Breeds AS T1 JOIN Dogs AS T2 ON T1.breed_code   =   T2.breed_code GROUP BY T1.breed_name ORDER BY count ( * )  DESC LIMIT 1

当前idx3
eval_err_num:79
____________________
SELECT  s.size_description FROM Breeds b JOIN Dogs d ON b.breed_code = d.breed_code JOIN Sizes s ON d.size_code = s.size_code WHERE b.breed_name = 'Bulldog' LIMIT 1
SELECT T2.size_code FROM Breeds AS T1 JOIN Dogs AS T2 ON T1.breed_code   =   T2.breed_code where T1.breed_name = "Bulldog"
连接数据库../datasets/cosql_dataset/database/dog_kennels/dog_kennels.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT  s.size_description FROM Breeds b JOIN Dogs d ON b.breed_code = d.breed_code JOIN Sizes s ON d.size_code = s.size_code WHERE b.breed_name = 'Bulldog' LIMIT 1
medium gold: SELECT T2.size_code FROM Breeds AS T1 JOIN Dogs AS T2 ON T1.breed_code   =   T2.breed_code where T1.breed_name = "Bulldog"

当前idx4
eval_err_num:80
____________________
SELECT  b.breed_name, COUNT(d.dog_id) AS num_dogs FROM Breeds b JOIN Dogs d ON b.breed_code = d.breed_code GROUP BY b.breed_name ORDER BY num_dogs DESC LIMIT 1
SELECT T1.breed_name FROM Breeds AS T1 JOIN Dogs AS T2 ON T1.breed_code   =   T2.breed_code GROUP BY T1.breed_name ORDER BY count ( * )  DESC LIMIT 1
连接数据库../datasets/cosql_dataset/database/dog_kennels/dog_kennels.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
extra pred: SELECT  b.breed_name, COUNT(d.dog_id) AS num_dogs FROM Breeds b JOIN Dogs d ON b.breed_code = d.breed_code GROUP BY b.breed_name ORDER BY num_dogs DESC LIMIT 1
extra gold: SELECT T1.breed_name FROM Breeds AS T1 JOIN Dogs AS T2 ON T1.breed_code   =   T2.breed_code GROUP BY T1.breed_name ORDER BY count ( * )  DESC LIMIT 1

当前idx1
____________________
SELECT  Name  FROM conductor  ORDER BY Year_of_Work DESC  LIMIT 1
SELECT Name FROM conductor ORDER BY Year_of_Work DESC LIMIT 1
连接数据库../datasets/cosql_dataset/database/orchestra/orchestra.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT  Year_of_Work  FROM conductor  WHERE Name = 'Robert Craft'
SELECT Year_of_Work FROM conductor where name = 'Robert Craft'
连接数据库../datasets/cosql_dataset/database/orchestra/orchestra.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx3
____________________
SELECT  Name  FROM conductor  ORDER BY Year_of_Work ASC  LIMIT 1
SELECT Name FROM conductor ORDER BY Year_of_Work asc LIMIT 1
连接数据库../datasets/cosql_dataset/database/orchestra/orchestra.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx1
eval_err_num:81
____________________
SELECT  Professionals.professional_id,     Professionals.first_name,     Professionals.last_name,     COUNT(Treatments.treatment_id) AS treatment_count FROM      Professionals JOIN      Treatments ON Professionals.professional_id = Treatments.professional_id GROUP BY      Professionals.professional_id ORDER BY      treatment_count DESC LIMIT 1
SELECT * FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id   =   T2.professional_id GROUP BY T1.professional_id order by COUNT ( * )   desc limit 1
连接数据库../datasets/cosql_dataset/database/dog_kennels/dog_kennels.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
extra pred: SELECT  Professionals.professional_id,     Professionals.first_name,     Professionals.last_name,     COUNT(Treatments.treatment_id) AS treatment_count FROM      Professionals JOIN      Treatments ON Professionals.professional_id = Treatments.professional_id GROUP BY      Professionals.professional_id ORDER BY      treatment_count DESC LIMIT 1
extra gold: SELECT * FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id   =   T2.professional_id GROUP BY T1.professional_id order by COUNT ( * )   desc limit 1

当前idx2
eval_err_num:82
____________________
SELECT  Professionals.professional_id,     Professionals.first_name,     Professionals.last_name,     COUNT(Treatments.treatment_id) AS treatment_count FROM      Professionals LEFT JOIN      Treatments ON Professionals.professional_id = Treatments.professional_id GROUP BY      Professionals.professional_id ORDER BY      treatment_count ASC LIMIT 1
SELECT * FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id   =   T2.professional_id GROUP BY T1.professional_id order by COUNT ( * )   limit 1
连接数据库../datasets/cosql_dataset/database/dog_kennels/dog_kennels.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
extra pred: SELECT  Professionals.professional_id,     Professionals.first_name,     Professionals.last_name,     COUNT(Treatments.treatment_id) AS treatment_count FROM      Professionals LEFT JOIN      Treatments ON Professionals.professional_id = Treatments.professional_id GROUP BY      Professionals.professional_id ORDER BY      treatment_count ASC LIMIT 1
extra gold: SELECT * FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id   =   T2.professional_id GROUP BY T1.professional_id order by COUNT ( * )   limit 1

当前idx3
eval_err_num:83
____________________
SELECT  COUNT(*) AS professionals_with_at_most_3_treatments FROM (     SELECT Professionals.professional_id,         COUNT(Treatments.treatment_id) AS treatment_count     FROM          Professionals     LEFT JOIN          Treatments ON Professionals.professional_id = Treatments.professional_id     GROUP BY          Professionals.professional_id     HAVING          treatment_count <= 3 ) AS subquery
select count ( * )  from  ( SELECT * FROM Professionals AS T1 JOIN Treatments AS T2 group by T2.professional_id having count ( * )  < =  3 ) 
连接数据库../datasets/cosql_dataset/database/dog_kennels/dog_kennels.sqlite
执行第一个查询
执行第二个查询
执行出错: near "=": syntax error
eval_exec:False
exact_score:0
easy pred: SELECT  COUNT(*) AS professionals_with_at_most_3_treatments FROM (     SELECT Professionals.professional_id,         COUNT(Treatments.treatment_id) AS treatment_count     FROM          Professionals     LEFT JOIN          Treatments ON Professionals.professional_id = Treatments.professional_id     GROUP BY          Professionals.professional_id     HAVING          treatment_count <= 3 ) AS subquery
easy gold: select count ( * )  from  ( SELECT * FROM Professionals AS T1 JOIN Treatments AS T2 group by T2.professional_id having count ( * )  < =  3 ) 

当前idx1
eval_err_num:84
____________________
SELECT  c.Name FROM country c LEFT JOIN countrylanguage cl ON c.Code = cl.CountryCode WHERE cl.Language != 'English' OR cl.Language IS NULL GROUP BY c.Name
select name from country where code not in  ( SELECT CountryCode FROM countrylanguage WHERE LANGUAGE   =   "English" ) 
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
hard pred: SELECT  c.Name FROM country c LEFT JOIN countrylanguage cl ON c.Code = cl.CountryCode WHERE cl.Language != 'English' OR cl.Language IS NULL GROUP BY c.Name
hard gold: select name from country where code not in  ( SELECT CountryCode FROM countrylanguage WHERE LANGUAGE   =   "English" ) 

当前idx2
eval_err_num:85
____________________
SELECT  c.Name FROM country c LEFT JOIN countrylanguage cl ON c.Code = cl.CountryCode WHERE (cl.Language != 'English' OR cl.Language IS NULL) AND c.GovernmentForm NOT LIKE '%Republic%' GROUP BY c.Name
select name from country where code in  ( SELECT Code FROM country WHERE GovernmentForm ! =  "Republic" EXCEPT SELECT CountryCode FROM countrylanguage WHERE LANGUAGE   =   "English" ) 
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
执行出错: unrecognized token: "!"
eval_exec:False
exact_score:0
hard pred: SELECT  c.Name FROM country c LEFT JOIN countrylanguage cl ON c.Code = cl.CountryCode WHERE (cl.Language != 'English' OR cl.Language IS NULL) AND c.GovernmentForm NOT LIKE '%Republic%' GROUP BY c.Name
hard gold: select name from country where code in  ( SELECT Code FROM country WHERE GovernmentForm ! =  "Republic" EXCEPT SELECT CountryCode FROM countrylanguage WHERE LANGUAGE   =   "English" ) 

当前idx1
eval_err_num:86
____________________
SELECT  state, COUNT(*) AS total_votes FROM VOTES WHERE state IN ('NY', 'CA') GROUP BY state
SELECT count ( * )  FROM votes WHERE state   =   'NY' or  state   =   'CA'
连接数据库../datasets/cosql_dataset/database/voter_1/voter_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT  state, COUNT(*) AS total_votes FROM VOTES WHERE state IN ('NY', 'CA') GROUP BY state
medium gold: SELECT count ( * )  FROM votes WHERE state   =   'NY' or  state   =   'CA'

当前idx2
____________________
SELECT  DISTINCT contestant_number FROM CONTESTANTS
SELECT distinct contestant_number FROM votes
连接数据库../datasets/cosql_dataset/database/voter_1/voter_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:False
easy pred: SELECT  DISTINCT contestant_number FROM CONTESTANTS
easy gold: SELECT distinct contestant_number FROM votes

当前idx3
eval_err_num:87
____________________
SELECT  COUNT(vote_id) AS total_votes FROM VOTES WHERE contestant_number = 5
SELECT count ( * )  from votes where contestant_number  =  '5'
连接数据库../datasets/cosql_dataset/database/voter_1/voter_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
easy pred: SELECT  COUNT(vote_id) AS total_votes FROM VOTES WHERE contestant_number = 5
easy gold: SELECT count ( * )  from votes where contestant_number  =  '5'

当前idx1
____________________
SELECT  DISTINCT Nationality FROM people
SELECT distinct Nationality FROM people
连接数据库../datasets/cosql_dataset/database/poker_player/poker_player.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT  Nationality FROM people
SELECT Nationality FROM people
连接数据库../datasets/cosql_dataset/database/poker_player/poker_player.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx3
____________________
SELECT  COUNT(*) FROM people WHERE Nationality = 'Russia'
SELECT count ( * )  FROM people where Nationality  =  'Russia'
连接数据库../datasets/cosql_dataset/database/poker_player/poker_player.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx4
____________________
SELECT  COUNT(*) FROM people WHERE Nationality = 'Bulgaria'
SELECT count ( * )  FROM people where Nationality  =  'Bulgaria'
连接数据库../datasets/cosql_dataset/database/poker_player/poker_player.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx1
eval_err_num:88
____________________
SELECT  car_makers.Maker, COUNT(model_list.Model) AS NumberOfModels FROM model_list JOIN car_makers ON model_list.Maker = car_makers.Id GROUP BY car_makers.Maker HAVING COUNT(model_list.Model) > 3
SELECT * FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id   =   T2.Maker GROUP BY T1.Id HAVING count ( * )   >  3
连接数据库../datasets/cosql_dataset/database/car_1/car_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT  car_makers.Maker, COUNT(model_list.Model) AS NumberOfModels FROM model_list JOIN car_makers ON model_list.Maker = car_makers.Id GROUP BY car_makers.Maker HAVING COUNT(model_list.Model) > 3
medium gold: SELECT * FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id   =   T2.Maker GROUP BY T1.Id HAVING count ( * )   >  3

当前idx2
eval_err_num:89
____________________
SELECT  car_makers.Id, car_makers.Maker, COUNT(model_list.Model) AS NumberOfModels FROM model_list JOIN car_makers ON model_list.Maker = car_makers.Id GROUP BY car_makers.Id, car_makers.Maker HAVING COUNT(model_list.Model) > 3
SELECT T1.id FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id   =   T2.Maker GROUP BY T1.Id HAVING count ( * )   >  3
连接数据库../datasets/cosql_dataset/database/car_1/car_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT  car_makers.Id, car_makers.Maker, COUNT(model_list.Model) AS NumberOfModels FROM model_list JOIN car_makers ON model_list.Maker = car_makers.Id GROUP BY car_makers.Id, car_makers.Maker HAVING COUNT(model_list.Model) > 3
medium gold: SELECT T1.id FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id   =   T2.Maker GROUP BY T1.Id HAVING count ( * )   >  3

当前idx3
eval_err_num:90
____________________
SELECT  car_makers.Id, car_makers.FullName, COUNT(model_list.Model) AS NumberOfModels FROM model_list JOIN car_makers ON model_list.Maker = car_makers.Id GROUP BY car_makers.Id, car_makers.FullName HAVING COUNT(model_list.Model) > 3
SELECT T1.FullName ,  T1.Id FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id   =   T2.Maker GROUP BY T1.Id HAVING count ( * )   >  3
连接数据库../datasets/cosql_dataset/database/car_1/car_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT  car_makers.Id, car_makers.FullName, COUNT(model_list.Model) AS NumberOfModels FROM model_list JOIN car_makers ON model_list.Maker = car_makers.Id GROUP BY car_makers.Id, car_makers.FullName HAVING COUNT(model_list.Model) > 3
medium gold: SELECT T1.FullName ,  T1.Id FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id   =   T2.Maker GROUP BY T1.Id HAVING count ( * )   >  3

当前idx1
eval_err_num:91
____________________
SELECT  AVG(CAST(Horsepower AS INTEGER)) AS AverageHorsepower FROM cars_data WHERE Horsepower != 'NA'
SELECT avg ( Horsepower )  FROM cars_data
连接数据库../datasets/cosql_dataset/database/car_1/car_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
easy pred: SELECT  AVG(CAST(Horsepower AS INTEGER)) AS AverageHorsepower FROM cars_data WHERE Horsepower != 'NA'
easy gold: SELECT avg ( Horsepower )  FROM cars_data

当前idx2
eval_err_num:92
____________________
SELECT  Model, Make, MAX(CAST(Horsepower AS INTEGER)) AS MaxHorsepower FROM cars_data JOIN car_names ON cars_data.Id = car_names.MakeId WHERE Horsepower != 'NA'
SELECT Id FROM CARS_DATA ORDER BY Horsepower DESC LIMIT 1
连接数据库../datasets/cosql_dataset/database/car_1/car_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT  Model, Make, MAX(CAST(Horsepower AS INTEGER)) AS MaxHorsepower FROM cars_data JOIN car_names ON cars_data.Id = car_names.MakeId WHERE Horsepower != 'NA'
medium gold: SELECT Id FROM CARS_DATA ORDER BY Horsepower DESC LIMIT 1

当前idx3
____________________
SELECT  Accelerate FROM cars_data WHERE Id = 39
SELECT accelerate FROM CARS_DATA ORDER BY Horsepower DESC LIMIT 1
连接数据库../datasets/cosql_dataset/database/car_1/car_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:0
medium pred: SELECT  Accelerate FROM cars_data WHERE Id = 39
medium gold: SELECT accelerate FROM CARS_DATA ORDER BY Horsepower DESC LIMIT 1

当前idx4
____________________
SELECT  car_names.Make, car_names.Model FROM cars_data JOIN car_names ON cars_data.Id = car_names.MakeId WHERE Accelerate > 19.0
SELECT COUNT ( * )  FROM CARS_DATA WHERE Accelerate  >  19.0
连接数据库../datasets/cosql_dataset/database/car_1/car_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
easy pred: SELECT  car_names.Make, car_names.Model FROM cars_data JOIN car_names ON cars_data.Id = car_names.MakeId WHERE Accelerate > 19.0
easy gold: SELECT COUNT ( * )  FROM CARS_DATA WHERE Accelerate  >  19.0

当前idx1
____________________
SELECT  Year FROM concert WHERE concert_Name = 'Auditions'
SELECT year from concert where concert_name  =  "Auditions"
连接数据库../datasets/cosql_dataset/database/concert_singer/concert_singer.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT  Year FROM concert WHERE concert_Name = 'Super bootcamp'
SELECT year from concert where concert_name  =  "Super bootcamp"
连接数据库../datasets/cosql_dataset/database/concert_singer/concert_singer.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx3
____________________
SELECT  Year FROM concert WHERE concert_Name = 'Home Visits'
SELECT year from concert where concert_name  =  "Home Visits"
连接数据库../datasets/cosql_dataset/database/concert_singer/concert_singer.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx4
eval_err_num:93
____________________
SELECT  COUNT(*) FROM concert WHERE Year IN ('2014', '2015')
SELECT count ( * )  FROM concert WHERE YEAR   =   2014 OR YEAR   =   2015
连接数据库../datasets/cosql_dataset/database/concert_singer/concert_singer.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT  COUNT(*) FROM concert WHERE Year IN ('2014', '2015')
medium gold: SELECT count ( * )  FROM concert WHERE YEAR   =   2014 OR YEAR   =   2015

当前idx>4
____________________
SELECT  COUNT(*) FROM concert WHERE Year = '2014'
SELECT count ( * )  FROM concert WHERE YEAR   =   2014
连接数据库../datasets/cosql_dataset/database/concert_singer/concert_singer.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx>4
____________________
SELECT  COUNT(*) FROM concert WHERE Year = '2015'
SELECT count ( * )  FROM concert WHERE YEAR   =   2015
连接数据库../datasets/cosql_dataset/database/concert_singer/concert_singer.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx1
____________________
SELECT  DISTINCT tourney_name FROM matches
SELECT distinct tourney_name FROM matches
连接数据库../datasets/cosql_dataset/database/wta_1/wta_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx1
eval_err_num:94
____________________
SELECT  COUNT(*) AS NumberOfGraduates FROM Students WHERE date_left IS NOT NULL
SELECT count ( * )   from students
连接数据库../datasets/cosql_dataset/database/student_transcripts_tracking/student_transcripts_tracking.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
easy pred: SELECT  COUNT(*) AS NumberOfGraduates FROM Students WHERE date_left IS NOT NULL
easy gold: SELECT count ( * )   from students

当前idx2
eval_err_num:95
____________________
SELECT  first_name, middle_name, last_name FROM Students WHERE date_left IS NOT NULL ORDER BY date_left ASC LIMIT 1
SELECT first_name ,  middle_name ,  last_name FROM Students ORDER BY date_left ASC LIMIT 1
连接数据库../datasets/cosql_dataset/database/student_transcripts_tracking/student_transcripts_tracking.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT  first_name, middle_name, last_name FROM Students WHERE date_left IS NOT NULL ORDER BY date_left ASC LIMIT 1
medium gold: SELECT first_name ,  middle_name ,  last_name FROM Students ORDER BY date_left ASC LIMIT 1

当前idx1
____________________
SELECT  SourceAirport FROM flights WHERE FlightNo = 28
SELECT SourceAirport FROM Flights WHERE FlightNo = '28'
连接数据库../datasets/cosql_dataset/database/flight_2/flight_2.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT  City FROM airports WHERE AirportCode = 'APG'
select city from airports where airportcode = 'APG'
连接数据库../datasets/cosql_dataset/database/flight_2/flight_2.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx3
____________________
SELECT  AirportName FROM airports WHERE AirportCode NOT IN (     SELECT SourceAirport FROM flights     UNION     SELECT DestAirport FROM flights )
SELECT AirportName FROM Airports WHERE AirportCode NOT IN  ( SELECT SourceAirport FROM Flights UNION SELECT DestAirport FROM Flights ) 
连接数据库../datasets/cosql_dataset/database/flight_2/flight_2.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx1
eval_err_num:96
____________________
SELECT  MIN(transcript_date) AS first_transcript_date FROM Transcripts
SELECT * FROM Transcripts ORDER BY transcript_date ASC LIMIT 1
连接数据库../datasets/cosql_dataset/database/student_transcripts_tracking/student_transcripts_tracking.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT  MIN(transcript_date) AS first_transcript_date FROM Transcripts
medium gold: SELECT * FROM Transcripts ORDER BY transcript_date ASC LIMIT 1

当前idx1
eval_err_num:97
____________________
SELECT  winner_name, MIN(winner_age) AS youngest_age FROM matches GROUP BY winner_name ORDER BY youngest_age ASC LIMIT 3
SELECT DISTINCT winner_name  FROM matches ORDER BY winner_age LIMIT 3
连接数据库../datasets/cosql_dataset/database/wta_1/wta_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT  winner_name, MIN(winner_age) AS youngest_age FROM matches GROUP BY winner_name ORDER BY youngest_age ASC LIMIT 3
medium gold: SELECT DISTINCT winner_name  FROM matches ORDER BY winner_age LIMIT 3

当前idx2
eval_err_num:98
____________________
SELECT  m.winner_name,     m.winner_age,     r.ranking_points FROM      matches m JOIN      rankings r ON m.winner_id = r.player_id WHERE      m.winner_age IN (         SELECT              MIN(winner_age) AS youngest_age         FROM              matches         GROUP BY              winner_name         ORDER BY              youngest_age ASC         LIMIT 3     ) ORDER BY      m.winner_age ASC
SELECT loser_rank_points FROM matches ORDER BY winner_age LIMIT 3
连接数据库../datasets/cosql_dataset/database/wta_1/wta_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT  m.winner_name,     m.winner_age,     r.ranking_points FROM      matches m JOIN      rankings r ON m.winner_id = r.player_id WHERE      m.winner_age IN (         SELECT              MIN(winner_age) AS youngest_age         FROM              matches         GROUP BY              winner_name         ORDER BY              youngest_age ASC         LIMIT 3     ) ORDER BY      m.winner_age ASC
medium gold: SELECT loser_rank_points FROM matches ORDER BY winner_age LIMIT 3

当前idx3
eval_err_num:99
____________________
SELECT  DISTINCT winner_name, winner_age FROM matches WHERE winner_age IS NOT NULL ORDER BY winner_age ASC LIMIT 3
SELECT winner_age FROM matches ORDER BY winner_age LIMIT 3
连接数据库../datasets/cosql_dataset/database/wta_1/wta_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT  DISTINCT winner_name, winner_age FROM matches WHERE winner_age IS NOT NULL ORDER BY winner_age ASC LIMIT 3
medium gold: SELECT winner_age FROM matches ORDER BY winner_age LIMIT 3

当前idx1
eval_err_num:100
____________________
SELECT  COUNT(*) AS total_friends FROM Friend
SELECT count ( * )  FROM Friend
连接数据库../datasets/cosql_dataset/database/network_1/network_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
easy pred: SELECT  COUNT(*) AS total_friends FROM Friend
easy gold: SELECT count ( * )  FROM Friend

当前idx2
eval_err_num:101
____________________
SELECT  AVG(grade) AS average_grade FROM Highschooler
SELECT avg ( grade )  FROM Highschooler
连接数据库../datasets/cosql_dataset/database/network_1/network_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
easy pred: SELECT  AVG(grade) AS average_grade FROM Highschooler
easy gold: SELECT avg ( grade )  FROM Highschooler

当前idx3
____________________
SELECT  name FROM Highschooler
SELECT DISTINCT name  FROM Highschooler
连接数据库../datasets/cosql_dataset/database/network_1/network_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:True
当前idx1
eval_err_num:102
____________________
SELECT  COUNT(*) AS Total_Poker_Players FROM poker_player
select count ( * )  from poker_player
连接数据库../datasets/cosql_dataset/database/poker_player/poker_player.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
easy pred: SELECT  COUNT(*) AS Total_Poker_Players FROM poker_player
easy gold: select count ( * )  from poker_player

当前idx2
eval_err_num:103
____________________
SELECT  COUNT(*) AS Players_Earning_Over_300000 FROM poker_player WHERE Earnings > 300000
SELECT count ( * )  FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID   =   T2.People_ID WHERE T2.Earnings  >  300000
连接数据库../datasets/cosql_dataset/database/poker_player/poker_player.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT  COUNT(*) AS Players_Earning_Over_300000 FROM poker_player WHERE Earnings > 300000
medium gold: SELECT count ( * )  FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID   =   T2.People_ID WHERE T2.Earnings  >  300000

当前idx3
eval_err_num:104
____________________
SELECT  p.Name FROM poker_player pp JOIN people p ON pp.People_ID = p.People_ID WHERE pp.Earnings > 300000
SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID   =   T2.People_ID WHERE T2.Earnings  >  300000
连接数据库../datasets/cosql_dataset/database/poker_player/poker_player.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT  p.Name FROM poker_player pp JOIN people p ON pp.People_ID = p.People_ID WHERE pp.Earnings > 300000
medium gold: SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID   =   T2.People_ID WHERE T2.Earnings  >  300000

当前idx1
____________________
SELECT  COUNT(*) FROM museum
SELECT count ( * )  from museum
连接数据库../datasets/cosql_dataset/database/museum_visit/museum_visit.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT  Name, Num_of_Staff FROM museum
SELECT Num_of_Staff from museum
连接数据库../datasets/cosql_dataset/database/museum_visit/museum_visit.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
easy pred: SELECT  Name, Num_of_Staff FROM museum
easy gold: SELECT Num_of_Staff from museum

当前idx3
____________________
SELECT  Museum_ID, Name FROM museum WHERE Num_of_Staff = (SELECT MAX(Num_of_Staff) FROM museum)
SELECT Museum_ID, Name from museum order by Num_of_Staff desc limit 1
连接数据库../datasets/cosql_dataset/database/museum_visit/museum_visit.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:0
medium pred: SELECT  Museum_ID, Name FROM museum WHERE Num_of_Staff = (SELECT MAX(Num_of_Staff) FROM museum)
medium gold: SELECT Museum_ID, Name from museum order by Num_of_Staff desc limit 1

当前idx1
eval_err_num:105
____________________
SELECT  COUNT(*) AS total_students FROM Students
SELECT count ( * )  FROM Students
连接数据库../datasets/cosql_dataset/database/student_transcripts_tracking/student_transcripts_tracking.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
easy pred: SELECT  COUNT(*) AS total_students FROM Students
easy gold: SELECT count ( * )  FROM Students

当前idx2
____________________
SELECT  first_name, middle_name, last_name FROM Students LIMIT 15
SELECT first_name,middle_name,last_name  FROM Students
连接数据库../datasets/cosql_dataset/database/student_transcripts_tracking/student_transcripts_tracking.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:0
medium pred: SELECT  first_name, middle_name, last_name FROM Students LIMIT 15
medium gold: SELECT first_name,middle_name,last_name  FROM Students

当前idx3
____________________
SELECT  first_name, middle_name, last_name, date_first_registered FROM Students LIMIT 15
SELECT date_first_registered  FROM Students
连接数据库../datasets/cosql_dataset/database/student_transcripts_tracking/student_transcripts_tracking.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
easy pred: SELECT  first_name, middle_name, last_name, date_first_registered FROM Students LIMIT 15
easy gold: SELECT date_first_registered  FROM Students

当前idx1
____________________
SELECT  COUNT(*) FROM Student
SELECT count ( StuID )  FROM student
连接数据库../datasets/cosql_dataset/database/pets_1/pets_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
easy pred: SELECT  COUNT(*) FROM Student
easy gold: SELECT count ( StuID )  FROM student

当前idx2
____________________
SELECT  Age FROM Student WHERE LName = 'Smith'
SELECT Age  FROM student where LName = 'Smith'
连接数据库../datasets/cosql_dataset/database/pets_1/pets_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx3
____________________
SELECT  Student.Age, Has_Pet.PetID FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID WHERE Student.LName = 'Smith'
SELECT T2.petid ,age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid   =   T2.stuid WHERE T1.Lname   =   'Smith'
连接数据库../datasets/cosql_dataset/database/pets_1/pets_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx1
____________________
SELECT  DISTINCT StuID FROM Has_Pet
SELECT distinct T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid   =   T2.stuid
连接数据库../datasets/cosql_dataset/database/pets_1/pets_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:False
easy pred: SELECT  DISTINCT StuID FROM Has_Pet
easy gold: SELECT distinct T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid   =   T2.stuid

当前idx2
eval_err_num:106
____________________
SELECT  S.Fname, S.LName, S.Major, S.Age FROM Student S JOIN Has_Pet HP ON S.StuID = HP.StuID
SELECT distinct T1.Fname, T1.Lname, T1.major, T1.age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid   =   T2.stuid
连接数据库../datasets/cosql_dataset/database/pets_1/pets_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT  S.Fname, S.LName, S.Major, S.Age FROM Student S JOIN Has_Pet HP ON S.StuID = HP.StuID
medium gold: SELECT distinct T1.Fname, T1.Lname, T1.major, T1.age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid   =   T2.stuid

当前idx3
eval_err_num:107
____________________
SELECT  S.Fname, S.LName, S.Major, S.Age FROM Student S JOIN Has_Pet HP ON S.StuID = HP.StuID JOIN Pets P ON HP.PetID = P.PetID WHERE P.PetType != 'cat'
SELECT Fname, Lname, major, age FROM student WHERE stuid NOT IN  ( SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat' ) 
连接数据库../datasets/cosql_dataset/database/pets_1/pets_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
extra pred: SELECT  S.Fname, S.LName, S.Major, S.Age FROM Student S JOIN Has_Pet HP ON S.StuID = HP.StuID JOIN Pets P ON HP.PetID = P.PetID WHERE P.PetType != 'cat'
extra gold: SELECT Fname, Lname, major, age FROM student WHERE stuid NOT IN  ( SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat' ) 

当前idx1
____________________
SELECT  COUNT(*) FROM Dogs
SELECT count ( * )  FROM Dogs
连接数据库../datasets/cosql_dataset/database/dog_kennels/dog_kennels.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT  age FROM Dogs WHERE name = 'Kacey'
SELECT age FROM Dogs where name  =  "Kacey"
连接数据库../datasets/cosql_dataset/database/dog_kennels/dog_kennels.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx3
____________________
SELECT  name FROM Dogs WHERE weight = (SELECT MAX(weight) FROM Dogs)
SELECT name FROM Dogs order by weight desc limit 1
连接数据库../datasets/cosql_dataset/database/dog_kennels/dog_kennels.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:0
medium pred: SELECT  name FROM Dogs WHERE weight = (SELECT MAX(weight) FROM Dogs)
medium gold: SELECT name FROM Dogs order by weight desc limit 1

当前idx4
____________________
SELECT  DISTINCT size_code FROM Dogs WHERE breed_code = 'BUL'
SELECT size_code FROM Dogs where breed_code  =  "BUL"
连接数据库../datasets/cosql_dataset/database/dog_kennels/dog_kennels.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:True
当前idx1
____________________
SELECT  Name FROM country ORDER BY Population ASC LIMIT 3
SELECT Name FROM country ORDER BY Population ASC LIMIT 3
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT  Name FROM country ORDER BY SurfaceArea DESC LIMIT 1
SELECT Name FROM country ORDER BY surfacearea desc LIMIT 1
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx3
eval_err_num:108
____________________
SELECT  SUM(Population) AS TotalPopulation FROM country WHERE Continent = 'Antarctica'
SELECT population from country where name  =  "Antarctica"
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
easy pred: SELECT  SUM(Population) AS TotalPopulation FROM country WHERE Continent = 'Antarctica'
easy gold: SELECT population from country where name  =  "Antarctica"

当前idx1
eval_err_num:109
____________________
SELECT  AVG(friend_id) AS average_friend_id FROM Friend
SELECT AVG ( friend_id )  FROM friend
连接数据库../datasets/cosql_dataset/database/network_1/network_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
easy pred: SELECT  AVG(friend_id) AS average_friend_id FROM Friend
easy gold: SELECT AVG ( friend_id )  FROM friend

当前idx2
eval_err_num:110
____________________
SELECT  AVG(grade) AS average_grade FROM Highschooler
SELECT AVG ( grade )  FROM Highschooler
连接数据库../datasets/cosql_dataset/database/network_1/network_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
easy pred: SELECT  AVG(grade) AS average_grade FROM Highschooler
easy gold: SELECT AVG ( grade )  FROM Highschooler

当前idx3
eval_err_num:111
____________________
SELECT  MAX(grade) AS highest_grade FROM Highschooler
SELECT MAX ( grade )  FROM Highschooler
连接数据库../datasets/cosql_dataset/database/network_1/network_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
easy pred: SELECT  MAX(grade) AS highest_grade FROM Highschooler
easy gold: SELECT MAX ( grade )  FROM Highschooler

当前idx1
eval_err_num:112
____________________
SELECT COUNT(DISTINCT se.student_id) AS NumberOfStudents
FROM Student_Enrolment se
JOIN Degree_Programs dp ON se.degree_program_id = dp.degree_program_id
WHERE dp.degree_summary_name LIKE '%Bachelor%'
SELECT count ( * )  FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id   =   T2.student_id JOIN Degree_Programs AS T3 ON T2.degree_program_id   =   T3.degree_program_id WHERE T3.degree_summary_name   =   'Bachelor'
连接数据库../datasets/cosql_dataset/database/student_transcripts_tracking/student_transcripts_tracking.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
hard pred: SELECT COUNT(DISTINCT se.student_id) AS NumberOfStudents
FROM Student_Enrolment se
JOIN Degree_Programs dp ON se.degree_program_id = dp.degree_program_id
WHERE dp.degree_summary_name LIKE '%Bachelor%'
hard gold: SELECT count ( * )  FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id   =   T2.student_id JOIN Degree_Programs AS T3 ON T2.degree_program_id   =   T3.degree_program_id WHERE T3.degree_summary_name   =   'Bachelor'

当前idx2
eval_err_num:113
____________________
SELECT DISTINCT se.student_id
FROM Student_Enrolment se
JOIN Degree_Programs dp ON se.degree_program_id = dp.degree_program_id
WHERE dp.degree_summary_name LIKE '%Bachelor%'
SELECT t1.student_id FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id   =   T2.student_id JOIN Degree_Programs AS T3 ON T2.degree_program_id   =   T3.degree_program_id WHERE T3.degree_summary_name   =   'Bachelor'
连接数据库../datasets/cosql_dataset/database/student_transcripts_tracking/student_transcripts_tracking.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
hard pred: SELECT DISTINCT se.student_id
FROM Student_Enrolment se
JOIN Degree_Programs dp ON se.degree_program_id = dp.degree_program_id
WHERE dp.degree_summary_name LIKE '%Bachelor%'
hard gold: SELECT t1.student_id FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id   =   T2.student_id JOIN Degree_Programs AS T3 ON T2.degree_program_id   =   T3.degree_program_id WHERE T3.degree_summary_name   =   'Bachelor'

当前idx3
____________________
SELECT  * FROM Students WHERE student_id = 9
SELECT DISTINCT t1.first_name, t1.middle_name, t1.last_name FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id   =   T2.student_id JOIN Degree_Programs AS T3 ON T2.degree_program_id   =   T3.degree_program_id WHERE t1.student_id  =  9
连接数据库../datasets/cosql_dataset/database/student_transcripts_tracking/student_transcripts_tracking.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
hard pred: SELECT  * FROM Students WHERE student_id = 9
hard gold: SELECT DISTINCT t1.first_name, t1.middle_name, t1.last_name FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id   =   T2.student_id JOIN Degree_Programs AS T3 ON T2.degree_program_id   =   T3.degree_program_id WHERE t1.student_id  =  9

当前idx4
____________________
SELECT  * FROM Students WHERE student_id = 7
SELECT DISTINCT t1.first_name, t1.middle_name, t1.last_name FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id   =   T2.student_id JOIN Degree_Programs AS T3 ON T2.degree_program_id   =   T3.degree_program_id WHERE t1.student_id  =  7
连接数据库../datasets/cosql_dataset/database/student_transcripts_tracking/student_transcripts_tracking.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
hard pred: SELECT  * FROM Students WHERE student_id = 7
hard gold: SELECT DISTINCT t1.first_name, t1.middle_name, t1.last_name FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id   =   T2.student_id JOIN Degree_Programs AS T3 ON T2.degree_program_id   =   T3.degree_program_id WHERE t1.student_id  =  7

当前idx>4
eval_err_num:114
____________________
SELECT  DISTINCT dp.degree_summary_name FROM Degree_Programs dp JOIN Student_Enrolment se ON dp.degree_program_id = se.degree_program_id WHERE dp.degree_summary_name LIKE '%Bachelor%'
SELECT DISTINCT T1.first_name ,  T1.middle_name ,  T1.last_name, T3.degree_summary_name FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id   =   T2.student_id JOIN Degree_Programs AS T3 ON T2.degree_program_id   =   T3.degree_program_id WHERE T3.degree_summary_name   =   'Bachelor'
连接数据库../datasets/cosql_dataset/database/student_transcripts_tracking/student_transcripts_tracking.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
hard pred: SELECT  DISTINCT dp.degree_summary_name FROM Degree_Programs dp JOIN Student_Enrolment se ON dp.degree_program_id = se.degree_program_id WHERE dp.degree_summary_name LIKE '%Bachelor%'
hard gold: SELECT DISTINCT T1.first_name ,  T1.middle_name ,  T1.last_name, T3.degree_summary_name FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id   =   T2.student_id JOIN Degree_Programs AS T3 ON T2.degree_program_id   =   T3.degree_program_id WHERE T3.degree_summary_name   =   'Bachelor'

当前idx>4
____________________
SELECT  DISTINCT degree_summary_description FROM Degree_Programs
SELECT DISTINCT T3.degree_summary_description FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id   =   T2.student_id JOIN Degree_Programs AS T3 ON T2.degree_program_id   =   T3.degree_program_id
连接数据库../datasets/cosql_dataset/database/student_transcripts_tracking/student_transcripts_tracking.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:False
medium pred: SELECT  DISTINCT degree_summary_description FROM Degree_Programs
medium gold: SELECT DISTINCT T3.degree_summary_description FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id   =   T2.student_id JOIN Degree_Programs AS T3 ON T2.degree_program_id   =   T3.degree_program_id

当前idx>4
eval_err_num:115
____________________
SELECT DISTINCT se.student_id
FROM Student_Enrolment se
JOIN Degree_Programs dp ON se.degree_program_id = dp.degree_program_id
WHERE dp.degree_summary_name LIKE '%Bachelor%'
SELECT DISTINCT T1.student_ID FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id   =   T2.student_id JOIN Degree_Programs AS T3 ON T2.degree_program_id   =   T3.degree_program_id WHERE T3.degree_summary_name   =   'Bachelor'
连接数据库../datasets/cosql_dataset/database/student_transcripts_tracking/student_transcripts_tracking.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
hard pred: SELECT DISTINCT se.student_id
FROM Student_Enrolment se
JOIN Degree_Programs dp ON se.degree_program_id = dp.degree_program_id
WHERE dp.degree_summary_name LIKE '%Bachelor%'
hard gold: SELECT DISTINCT T1.student_ID FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id   =   T2.student_id JOIN Degree_Programs AS T3 ON T2.degree_program_id   =   T3.degree_program_id WHERE T3.degree_summary_name   =   'Bachelor'

当前idx>4
eval_err_num:116
____________________
SELECT  s.first_name, s.middle_name, s.last_name FROM Students s JOIN Student_Enrolment se ON s.student_id = se.student_id JOIN Degree_Programs dp ON se.degree_program_id = dp.degree_program_id WHERE dp.degree_summary_name LIKE '%Bachelor%'
SELECT DISTINCT T1.first_name ,  T1.middle_name ,  T1.last_name FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id   =   T2.student_id JOIN Degree_Programs AS T3 ON T2.degree_program_id   =   T3.degree_program_id WHERE T3.degree_summary_name   =   'Bachelor'
连接数据库../datasets/cosql_dataset/database/student_transcripts_tracking/student_transcripts_tracking.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
hard pred: SELECT  s.first_name, s.middle_name, s.last_name FROM Students s JOIN Student_Enrolment se ON s.student_id = se.student_id JOIN Degree_Programs dp ON se.degree_program_id = dp.degree_program_id WHERE dp.degree_summary_name LIKE '%Bachelor%'
hard gold: SELECT DISTINCT T1.first_name ,  T1.middle_name ,  T1.last_name FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id   =   T2.student_id JOIN Degree_Programs AS T3 ON T2.degree_program_id   =   T3.degree_program_id WHERE T3.degree_summary_name   =   'Bachelor'

当前idx1
eval_err_num:117
____________________
SELECT  COUNT(DISTINCT Model) AS NumberOfModels FROM car_names WHERE Make = 'Chevrolet'
SELECT count ( DISTINCT Make )  FROM CAR_NAMES WHERE Model  =  'chevrolet'
连接数据库../datasets/cosql_dataset/database/car_1/car_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
easy pred: SELECT  COUNT(DISTINCT Model) AS NumberOfModels FROM car_names WHERE Make = 'Chevrolet'
easy gold: SELECT count ( DISTINCT Make )  FROM CAR_NAMES WHERE Model  =  'chevrolet'

当前idx2
eval_err_num:118
____________________
SELECT  COUNT(*) AS TotalModels FROM model_list
SELECT count ( DISTINCT Model )  FROM CAR_NAMES
连接数据库../datasets/cosql_dataset/database/car_1/car_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
easy pred: SELECT  COUNT(*) AS TotalModels FROM model_list
easy gold: SELECT count ( DISTINCT Model )  FROM CAR_NAMES

当前idx3
eval_err_num:119
____________________
SELECT  Model, COUNT(Maker) AS NumberOfMakes FROM model_list GROUP BY Model ORDER BY NumberOfMakes DESC LIMIT 1
SELECT Model FROM CAR_NAMES GROUP BY Model ORDER BY count ( DISTINCT Make )  DESC LIMIT 1
连接数据库../datasets/cosql_dataset/database/car_1/car_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
hard pred: SELECT  Model, COUNT(Maker) AS NumberOfMakes FROM model_list GROUP BY Model ORDER BY NumberOfMakes DESC LIMIT 1
hard gold: SELECT Model FROM CAR_NAMES GROUP BY Model ORDER BY count ( DISTINCT Make )  DESC LIMIT 1

当前idx1
eval_err_num:120
____________________
SELECT  t.Name, ca.Course_ID FROM teacher t JOIN course_arrange ca ON t.Teacher_ID = ca.Teacher_ID
SELECT T2.Name, T1.course_id FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID   =   T2.Teacher_ID
连接数据库../datasets/cosql_dataset/database/course_teach/course_teach.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT  t.Name, ca.Course_ID FROM teacher t JOIN course_arrange ca ON t.Teacher_ID = ca.Teacher_ID
medium gold: SELECT T2.Name, T1.course_id FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID   =   T2.Teacher_ID

当前idx2
eval_err_num:121
____________________
SELECT  Teacher_ID, COUNT(Course_ID) AS NumberOfCourses FROM course_arrange GROUP BY Teacher_ID
SELECT T2.Name ,  COUNT ( * )  FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID   =   T2.Teacher_ID GROUP BY T2.Name
连接数据库../datasets/cosql_dataset/database/course_teach/course_teach.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT  Teacher_ID, COUNT(Course_ID) AS NumberOfCourses FROM course_arrange GROUP BY Teacher_ID
medium gold: SELECT T2.Name ,  COUNT ( * )  FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID   =   T2.Teacher_ID GROUP BY T2.Name

当前idx3
____________________
SELECT  Name FROM teacher WHERE Age < 30
SELECT name from teacher where age < 30
连接数据库../datasets/cosql_dataset/database/course_teach/course_teach.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx1
____________________
SELECT  Date  FROM performance  WHERE Type = 'audition'
SELECT date FROM performance WHERE TYPE LIKE "%audition%"
连接数据库../datasets/cosql_dataset/database/orchestra/orchestra.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT  Date  FROM performance  WHERE Type = 'audition'
medium gold: SELECT date FROM performance WHERE TYPE LIKE "%audition%"

当前idx1
____________________
SELECT  birth_date FROM players WHERE player_id = 200002
SELECT birth_date FROM players where player_id = 200002
连接数据库../datasets/cosql_dataset/database/wta_1/wta_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT  first_name FROM players WHERE player_id = 200001
SELECT first_name FROM players where player_id = 200001
连接数据库../datasets/cosql_dataset/database/wta_1/wta_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx3
eval_err_num:122
____________________
SELECT  country_code, COUNT(player_id) AS player_count FROM players GROUP BY country_code HAVING player_count > 50
SELECT country_code FROM players GROUP BY country_code HAVING count ( * )  > 50
连接数据库../datasets/cosql_dataset/database/wta_1/wta_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
easy pred: SELECT  country_code, COUNT(player_id) AS player_count FROM players GROUP BY country_code HAVING player_count > 50
easy gold: SELECT country_code FROM players GROUP BY country_code HAVING count ( * )  > 50

当前idx1
____________________
SELECT  c.Region FROM city AS ci JOIN country AS c ON ci.CountryCode = c.Code WHERE ci.Name = 'Kabul'
SELECT Region FROM country AS T1 JOIN city AS T2 ON T1.Code   =   T2.CountryCode WHERE T2.Name   =   "Kabul"
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT  c.Region FROM city AS ci JOIN country AS c ON ci.CountryCode = c.Code WHERE ci.Name = 'Herat'
SELECT Region FROM country AS T1 JOIN city AS T2 ON T1.Code   =   T2.CountryCode WHERE T2.Name   =   "Herat"
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx3
____________________
SELECT  c.Region FROM city AS ci JOIN country AS c ON ci.CountryCode = c.Code WHERE ci.Name = 'Quandahar'
SELECT Region FROM country AS T1 JOIN city AS T2 ON T1.Code   =   T2.CountryCode WHERE T2.Name   =   "Qandahar"
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:True
当前idx1
eval_err_num:123
____________________
SELECT  year, COUNT(*) AS num_matches FROM matches GROUP BY year ORDER BY num_matches DESC LIMIT 1
SELECT YEAR FROM matches GROUP BY YEAR ORDER BY count ( * )  DESC LIMIT 1
连接数据库../datasets/cosql_dataset/database/wta_1/wta_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
hard pred: SELECT  year, COUNT(*) AS num_matches FROM matches GROUP BY year ORDER BY num_matches DESC LIMIT 1
hard gold: SELECT YEAR FROM matches GROUP BY YEAR ORDER BY count ( * )  DESC LIMIT 1

当前idx2
eval_err_num:124
____________________
SELECT  year, COUNT(*) AS num_matches FROM matches GROUP BY year ORDER BY num_matches ASC LIMIT 1
SELECT YEAR FROM matches GROUP BY YEAR ORDER BY count ( * )  LIMIT 1
连接数据库../datasets/cosql_dataset/database/wta_1/wta_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
hard pred: SELECT  year, COUNT(*) AS num_matches FROM matches GROUP BY year ORDER BY num_matches ASC LIMIT 1
hard gold: SELECT YEAR FROM matches GROUP BY YEAR ORDER BY count ( * )  LIMIT 1

当前idx3
eval_err_num:125
____________________
SELECT  year, COUNT(*) AS num_matches FROM matches GROUP BY year ORDER BY num_matches ASC LIMIT 1
SELECT YEAR, count ( * )  FROM matches GROUP BY YEAR ORDER BY count ( * )  LIMIT 1
连接数据库../datasets/cosql_dataset/database/wta_1/wta_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
hard pred: SELECT  year, COUNT(*) AS num_matches FROM matches GROUP BY year ORDER BY num_matches ASC LIMIT 1
hard gold: SELECT YEAR, count ( * )  FROM matches GROUP BY YEAR ORDER BY count ( * )  LIMIT 1

当前idx4
eval_err_num:126
____________________
SELECT  COUNT(*) AS num_matches FROM matches WHERE year = 2016
SELECT year, count ( * )  from matches where year  =  2016
连接数据库../datasets/cosql_dataset/database/wta_1/wta_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT  COUNT(*) AS num_matches FROM matches WHERE year = 2016
medium gold: SELECT year, count ( * )  from matches where year  =  2016

当前idx>4
eval_err_num:127
____________________
SELECT  COUNT(*) AS num_matches_on_hard FROM matches WHERE year = 2016 AND surface = 'Hard'
SELECT count ( * )  from matches where surface  =  "Hard"
连接数据库../datasets/cosql_dataset/database/wta_1/wta_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
easy pred: SELECT  COUNT(*) AS num_matches_on_hard FROM matches WHERE year = 2016 AND surface = 'Hard'
easy gold: SELECT count ( * )  from matches where surface  =  "Hard"

当前idx1
eval_err_num:128
____________________
SELECT  cm.FullName, COUNT(ml.ModelId) AS NumberOfModels FROM car_makers cm JOIN model_list ml ON cm.Id = ml.Maker GROUP BY cm.FullName
SELECT  Id  FROM CAR_MAKERS
连接数据库../datasets/cosql_dataset/database/car_1/car_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
easy pred: SELECT  cm.FullName, COUNT(ml.ModelId) AS NumberOfModels FROM car_makers cm JOIN model_list ml ON cm.Id = ml.Maker GROUP BY cm.FullName
easy gold: SELECT  Id  FROM CAR_MAKERS

当前idx2
eval_err_num:129
____________________
SELECT  cm.FullName, COUNT(ml.ModelId) AS NumberOfModels, c.CountryId FROM car_makers cm JOIN model_list ml ON cm.Id = ml.Maker JOIN countries c ON cm.Country = c.CountryName GROUP BY cm.FullName, c.CountryId
SELECT  Country  FROM CAR_MAKERS
连接数据库../datasets/cosql_dataset/database/car_1/car_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
easy pred: SELECT  cm.FullName, COUNT(ml.ModelId) AS NumberOfModels, c.CountryId FROM car_makers cm JOIN model_list ml ON cm.Id = ml.Maker JOIN countries c ON cm.Country = c.CountryName GROUP BY cm.FullName, c.CountryId
easy gold: SELECT  Country  FROM CAR_MAKERS

当前idx1
eval_err_num:130
____________________
SELECT  AVG(Percentage) AS AveragePercentage FROM countrylanguage
select avg ( percentage )  from countrylanguage
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
easy pred: SELECT  AVG(Percentage) AS AveragePercentage FROM countrylanguage
easy gold: select avg ( percentage )  from countrylanguage

当前idx2
eval_err_num:131
____________________
SELECT  CountryCode, (Population * Percentage / 100) AS DutchSpeakingPopulation FROM countrylanguage JOIN country ON country.Code = countrylanguage.CountryCode WHERE Language = 'Dutch' ORDER BY DutchSpeakingPopulation DESC LIMIT 1
select countrycode from countrylanguage where language  =  "Dutch" order by percentage desc limit 1
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
hard pred: SELECT  CountryCode, (Population * Percentage / 100) AS DutchSpeakingPopulation FROM countrylanguage JOIN country ON country.Code = countrylanguage.CountryCode WHERE Language = 'Dutch' ORDER BY DutchSpeakingPopulation DESC LIMIT 1
hard gold: select countrycode from countrylanguage where language  =  "Dutch" order by percentage desc limit 1

当前idx3
eval_err_num:132
____________________
SELECT  AVG(Percentage) AS AvgPerc     FROM countrylanguage )  -- Calculate the difference from the average for each language SELECT      countrylanguage.Language,      countrylanguage.Percentage,     (countrylanguage.Percentage - (SELECT AvgPerc FROM AveragePercentage)) AS DifferenceFromAverage FROM countrylanguage
select avg ( percentage )  from countrylanguage where language  =  "Papiamento"
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行出错: near ")": syntax error
eval_exec:False
exact_score:0
easy pred: SELECT  AVG(Percentage) AS AvgPerc     FROM countrylanguage )  -- Calculate the difference from the average for each language SELECT      countrylanguage.Language,      countrylanguage.Percentage,     (countrylanguage.Percentage - (SELECT AvgPerc FROM AveragePercentage)) AS DifferenceFromAverage FROM countrylanguage
easy gold: select avg ( percentage )  from countrylanguage where language  =  "Papiamento"

当前idx1
____________________
SELECT  Level_of_membership FROM visitor WHERE Name = 'Gonzalo Higuaín'
SELECT Level_of_membership FROM visitor WHERE name  =   "Gonzalo Higuaín "
连接数据库../datasets/cosql_dataset/database/museum_visit/museum_visit.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:True
当前idx2
____________________
SELECT  Name FROM visitor WHERE Level_of_membership = 5
SELECT name FROM visitor WHERE Level_of_membership =  5
连接数据库../datasets/cosql_dataset/database/museum_visit/museum_visit.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx3
____________________
SELECT  COUNT(*) FROM visitor WHERE Level_of_membership > 5
SELECT count ( * )  FROM visitor WHERE Level_of_membership>5
连接数据库../datasets/cosql_dataset/database/museum_visit/museum_visit.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx4
____________________
SELECT  Age FROM visitor WHERE Level_of_membership = 8
SELECT age FROM visitor WHERE Level_of_membership   = 8
连接数据库../datasets/cosql_dataset/database/museum_visit/museum_visit.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx>4
____________________
SELECT  COUNT(*) FROM visitor WHERE Level_of_membership > 4
SELECT count ( * )  FROM visitor WHERE Level_of_membership > 4
连接数据库../datasets/cosql_dataset/database/museum_visit/museum_visit.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx>4
____________________
SELECT  Name, Age FROM visitor ORDER BY Age DESC, Level_of_membership
SELECT name ,  Level_of_membership FROM visitor WHERE Level_of_membership  >  4 ORDER BY age DESC
连接数据库../datasets/cosql_dataset/database/museum_visit/museum_visit.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT  Name, Age FROM visitor ORDER BY Age DESC, Level_of_membership
medium gold: SELECT name ,  Level_of_membership FROM visitor WHERE Level_of_membership  >  4 ORDER BY age DESC

当前idx1
eval_err_num:133
____________________
SELECT  CountryCode, COUNT(Language) AS NumberOfLanguages FROM countrylanguage GROUP BY CountryCode ORDER BY NumberOfLanguages DESC LIMIT 1
SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code   =   T2.CountryCode GROUP BY T1.Name ORDER BY COUNT ( * )  DESC LIMIT 1
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
extra pred: SELECT  CountryCode, COUNT(Language) AS NumberOfLanguages FROM countrylanguage GROUP BY CountryCode ORDER BY NumberOfLanguages DESC LIMIT 1
extra gold: SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code   =   T2.CountryCode GROUP BY T1.Name ORDER BY COUNT ( * )  DESC LIMIT 1

当前idx2
eval_err_num:134
____________________
SELECT  COUNT(Language) AS NumberOfLanguages FROM countrylanguage WHERE CountryCode = 'CAN'
SELECT count ( * )  FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code   =   T2.CountryCode where T1.name  =  "Canada"
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT  COUNT(Language) AS NumberOfLanguages FROM countrylanguage WHERE CountryCode = 'CAN'
medium gold: SELECT count ( * )  FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code   =   T2.CountryCode where T1.name  =  "Canada"

当前idx3
____________________
SELECT  Language FROM countrylanguage WHERE CountryCode = 'CAN'
SELECT T2.language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code   =   T2.CountryCode where T1.name  =  "Canada"
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:0
medium pred: SELECT  Language FROM countrylanguage WHERE CountryCode = 'CAN'
medium gold: SELECT T2.language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code   =   T2.CountryCode where T1.name  =  "Canada"

当前idx4
eval_err_num:135
____________________
SELECT  COUNT(DISTINCT CountryCode) AS NumberOfCountries FROM countrylanguage WHERE Language = 'Chinese'
SELECT count ( distinct CountryCode )  FROM countrylanguage WHERE Language  =  "Chinese"
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
easy pred: SELECT  COUNT(DISTINCT CountryCode) AS NumberOfCountries FROM countrylanguage WHERE Language = 'Chinese'
easy gold: SELECT count ( distinct CountryCode )  FROM countrylanguage WHERE Language  =  "Chinese"

当前idx>4
____________________
SELECT  Name FROM country WHERE Continent = 'North America'
SELECT NAME FROM country WHERE Continent  =  "North America"
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx>4
eval_err_num:136
____________________
SELECT  c.Name AS CountryName, cl.Language FROM country AS c JOIN countrylanguage AS cl ON c.Code = cl.CountryCode WHERE c.Continent = 'North America' AND cl.IsOfficial = 'T'
SELECT LANGUAGE FROM countrylanguage WHERE countrycode in  ( SELECT Code FROM country WHERE Continent  =  "North America" )  and IsOfficial  =  "T"
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
extra pred: SELECT  c.Name AS CountryName, cl.Language FROM country AS c JOIN countrylanguage AS cl ON c.Code = cl.CountryCode WHERE c.Continent = 'North America' AND cl.IsOfficial = 'T'
extra gold: SELECT LANGUAGE FROM countrylanguage WHERE countrycode in  ( SELECT Code FROM country WHERE Continent  =  "North America" )  and IsOfficial  =  "T"

当前idx>4
____________________
SELECT  LifeExpectancy FROM country WHERE Name = 'Canada'
SELECT LifeExpectancy FROM country WHERE name  =  "Canada"
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx1
eval_err_num:137
____________________
SELECT  COUNT(DISTINCT StuID) AS NumberOfStudents FROM (     SELECT StuID, COUNT(PetID) AS PetCount     FROM Has_Pet     GROUP BY StuID     HAVING PetCount > 1 ) AS StudentsWithMultiplePets
SELECT count ( * )  FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid   =   T2.stuid GROUP BY T1.stuid HAVING count ( * )   >  1
连接数据库../datasets/cosql_dataset/database/pets_1/pets_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT  COUNT(DISTINCT StuID) AS NumberOfStudents FROM (     SELECT StuID, COUNT(PetID) AS PetCount     FROM Has_Pet     GROUP BY StuID     HAVING PetCount > 1 ) AS StudentsWithMultiplePets
medium gold: SELECT count ( * )  FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid   =   T2.stuid GROUP BY T1.stuid HAVING count ( * )   >  1

当前idx2
eval_err_num:138
____________________
SELECT  S.Fname, S.LName FROM Student S JOIN (     SELECT StuID     FROM Has_Pet     GROUP BY StuID     HAVING COUNT(PetID) > 1 ) AS MultiplePets ON S.StuID = MultiplePets.StuID
SELECT T1.lname, T1.fname  FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid   =   T2.stuid GROUP BY T1.stuid HAVING count ( * )   >  1
连接数据库../datasets/cosql_dataset/database/pets_1/pets_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT  S.Fname, S.LName FROM Student S JOIN (     SELECT StuID     FROM Has_Pet     GROUP BY StuID     HAVING COUNT(PetID) > 1 ) AS MultiplePets ON S.StuID = MultiplePets.StuID
medium gold: SELECT T1.lname, T1.fname  FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid   =   T2.stuid GROUP BY T1.stuid HAVING count ( * )   >  1

当前idx3
____________________
SELECT  Sex FROM Student WHERE Fname = 'Kim' AND LName = 'Tracy'
SELECT T1.lname, T1.fname, T1.sex  FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid   =   T2.stuid GROUP BY T1.stuid HAVING count ( * )   >  1
连接数据库../datasets/cosql_dataset/database/pets_1/pets_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT  Sex FROM Student WHERE Fname = 'Kim' AND LName = 'Tracy'
medium gold: SELECT T1.lname, T1.fname, T1.sex  FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid   =   T2.stuid GROUP BY T1.stuid HAVING count ( * )   >  1

当前idx1
eval_err_num:139
____________________
SELECT  COUNT(DISTINCT Region) AS NumberOfRegions FROM country WHERE Continent = 'Asia'
select count ( * )  from  ( SELECT region FROM country WHERE Continent   =   "Asia" group by region ) 
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
easy pred: SELECT  COUNT(DISTINCT Region) AS NumberOfRegions FROM country WHERE Continent = 'Asia'
easy gold: select count ( * )  from  ( SELECT region FROM country WHERE Continent   =   "Asia" group by region ) 

当前idx2
eval_err_num:140
____________________
SELECT  COUNT(DISTINCT Region) AS NumberOfRegions FROM country WHERE Continent = 'Europe'
select count ( * )  from  ( SELECT region FROM country WHERE Continent   =   "Europe" group by region ) 
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
easy pred: SELECT  COUNT(DISTINCT Region) AS NumberOfRegions FROM country WHERE Continent = 'Europe'
easy gold: select count ( * )  from  ( SELECT region FROM country WHERE Continent   =   "Europe" group by region ) 

当前idx3
eval_err_num:141
____________________
SELECT  SUM(SurfaceArea) AS TotalSurfaceArea FROM country WHERE Continent = 'Europe'
SELECT sum ( SurfaceArea )  FROM country WHERE Continent   =   "Asia" OR Continent   =   "Europe"
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT  SUM(SurfaceArea) AS TotalSurfaceArea FROM country WHERE Continent = 'Europe'
medium gold: SELECT sum ( SurfaceArea )  FROM country WHERE Continent   =   "Asia" OR Continent   =   "Europe"

当前idx1
eval_err_num:142
____________________
SELECT  COUNT(DISTINCT Templates.Template_ID) AS NumberOfTemplates FROM Templates JOIN Ref_Template_Types ON Templates.Template_Type_Code = Ref_Template_Types.Template_Type_Code WHERE Ref_Template_Types.Template_Type_Description = 'Presentation'
SELECT count ( * )  FROM Ref_template_types AS T1 JOIN Templates AS T2 ON T1.template_type_code   =  T2.template_type_code WHERE T1.template_type_description   =   "Presentation"
连接数据库../datasets/cosql_dataset/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT  COUNT(DISTINCT Templates.Template_ID) AS NumberOfTemplates FROM Templates JOIN Ref_Template_Types ON Templates.Template_Type_Code = Ref_Template_Types.Template_Type_Code WHERE Ref_Template_Types.Template_Type_Description = 'Presentation'
medium gold: SELECT count ( * )  FROM Ref_template_types AS T1 JOIN Templates AS T2 ON T1.template_type_code   =  T2.template_type_code WHERE T1.template_type_description   =   "Presentation"

当前idx2
____________________
SELECT  DISTINCT Templates.Template_ID FROM Templates JOIN Ref_Template_Types ON Templates.Template_Type_Code = Ref_Template_Types.Template_Type_Code WHERE Ref_Template_Types.Template_Type_Description = 'Presentation'
SELECT T2.template_id FROM Ref_template_types AS T1 JOIN Templates AS T2 ON T1.template_type_code   =  T2.template_type_code WHERE T1.template_type_description   =   "Presentation"
连接数据库../datasets/cosql_dataset/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx3
eval_err_num:143
____________________
SELECT  Template_ID, Template_Type_Code FROM Templates WHERE Template_ID IN (1, 2, 3)
SELECT T2.template_id, T2.Template_Type_Code FROM Ref_template_types AS T1 JOIN Templates AS T2 ON T1.template_type_code   =  T2.template_type_code WHERE T1.template_type_description   =   "Presentation"
连接数据库../datasets/cosql_dataset/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT  Template_ID, Template_Type_Code FROM Templates WHERE Template_ID IN (1, 2, 3)
medium gold: SELECT T2.template_id, T2.Template_Type_Code FROM Ref_template_types AS T1 JOIN Templates AS T2 ON T1.template_type_code   =  T2.template_type_code WHERE T1.template_type_description   =   "Presentation"

当前idx1
eval_err_num:144
____________________
SELECT  MAX(count) AS max_times_in_transcripts FROM (     SELECT student_course_id, COUNT(transcript_id) AS count     FROM Transcript_Contents     GROUP BY student_course_id ) AS counts
SELECT count ( * )   FROM Transcript_Contents GROUP BY student_course_id ORDER BY count ( * )  DESC LIMIT 1
连接数据库../datasets/cosql_dataset/database/student_transcripts_tracking/student_transcripts_tracking.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
hard pred: SELECT  MAX(count) AS max_times_in_transcripts FROM (     SELECT student_course_id, COUNT(transcript_id) AS count     FROM Transcript_Contents     GROUP BY student_course_id ) AS counts
hard gold: SELECT count ( * )   FROM Transcript_Contents GROUP BY student_course_id ORDER BY count ( * )  DESC LIMIT 1

当前idx2
eval_err_num:145
____________________
SELECT  student_course_id, COUNT(DISTINCT transcript_id) AS transcript_count     FROM Transcript_Contents     GROUP BY student_course_id ), MaxCount AS (     SELECT MAX(transcript_count) AS max_count     FROM EnrollmentCounts ) -- Now, select the course enrollment IDs that match the maximum count SELECT student_course_id FROM EnrollmentCounts JOIN MaxCount ON EnrollmentCounts.transcript_count = MaxCount.max_count
SELECT student_course_id FROM Transcript_Contents GROUP BY student_course_id ORDER BY count ( * )  DESC LIMIT 1
连接数据库../datasets/cosql_dataset/database/student_transcripts_tracking/student_transcripts_tracking.sqlite
执行第一个查询
执行出错: near ")": syntax error
eval_exec:False
exact_score:0
hard pred: SELECT  student_course_id, COUNT(DISTINCT transcript_id) AS transcript_count     FROM Transcript_Contents     GROUP BY student_course_id ), MaxCount AS (     SELECT MAX(transcript_count) AS max_count     FROM EnrollmentCounts ) -- Now, select the course enrollment IDs that match the maximum count SELECT student_course_id FROM EnrollmentCounts JOIN MaxCount ON EnrollmentCounts.transcript_count = MaxCount.max_count
hard gold: SELECT student_course_id FROM Transcript_Contents GROUP BY student_course_id ORDER BY count ( * )  DESC LIMIT 1

当前idx3
eval_err_num:146
____________________
SELECT  MIN(count) AS min_times_in_transcripts FROM (     SELECT student_course_id, COUNT(transcript_id) AS count     FROM Transcript_Contents     GROUP BY student_course_id ) AS counts
SELECT count ( * )  FROM Transcript_Contents GROUP BY student_course_id ORDER BY count ( * )  LIMIT 1
连接数据库../datasets/cosql_dataset/database/student_transcripts_tracking/student_transcripts_tracking.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
hard pred: SELECT  MIN(count) AS min_times_in_transcripts FROM (     SELECT student_course_id, COUNT(transcript_id) AS count     FROM Transcript_Contents     GROUP BY student_course_id ) AS counts
hard gold: SELECT count ( * )  FROM Transcript_Contents GROUP BY student_course_id ORDER BY count ( * )  LIMIT 1

当前idx4
eval_err_num:147
____________________
SELECT  student_course_id, COUNT(DISTINCT transcript_id) AS transcript_count     FROM Transcript_Contents     GROUP BY student_course_id ), -- Find the minimum count of appearances MinCount AS (     SELECT MIN(transcript_count) AS min_count     FROM EnrollmentCounts ) -- Now, select the course enrollment IDs that match the minimum count SELECT student_course_id FROM EnrollmentCounts JOIN MinCount ON EnrollmentCounts.transcript_count = MinCount.min_count
SELECT  student_course_id FROM Transcript_Contents GROUP BY student_course_id ORDER BY count ( * )  LIMIT 1
连接数据库../datasets/cosql_dataset/database/student_transcripts_tracking/student_transcripts_tracking.sqlite
执行第一个查询
执行出错: near ")": syntax error
eval_exec:False
exact_score:0
hard pred: SELECT  student_course_id, COUNT(DISTINCT transcript_id) AS transcript_count     FROM Transcript_Contents     GROUP BY student_course_id ), -- Find the minimum count of appearances MinCount AS (     SELECT MIN(transcript_count) AS min_count     FROM EnrollmentCounts ) -- Now, select the course enrollment IDs that match the minimum count SELECT student_course_id FROM EnrollmentCounts JOIN MinCount ON EnrollmentCounts.transcript_count = MinCount.min_count
hard gold: SELECT  student_course_id FROM Transcript_Contents GROUP BY student_course_id ORDER BY count ( * )  LIMIT 1

当前idx>4
eval_err_num:148
____________________
SELECT  AVG(student_course_id) AS average_student_course_id FROM Student_Enrolment_Courses
SELECT avg ( student_course_id )  FROM Transcript_Contents
连接数据库../datasets/cosql_dataset/database/student_transcripts_tracking/student_transcripts_tracking.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
easy pred: SELECT  AVG(student_course_id) AS average_student_course_id FROM Student_Enrolment_Courses
easy gold: SELECT avg ( student_course_id )  FROM Transcript_Contents

当前idx1
____________________
SELECT  property_name FROM Properties WHERE room_count > 1
SELECT property_name FROM Properties WHERE room_count  >  1
连接数据库../datasets/cosql_dataset/database/real_estate_properties/real_estate_properties.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
eval_err_num:149
____________________
SELECT  property_name FROM Properties WHERE room_count > 1 AND (property_type_code = 'HSE' OR property_type_code = 'APT')
SELECT property_name FROM Properties WHERE property_type_code   =   "House" UNION SELECT property_name FROM Properties WHERE property_type_code   =   "Apartment" AND room_count  >  1
连接数据库../datasets/cosql_dataset/database/real_estate_properties/real_estate_properties.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
hard pred: SELECT  property_name FROM Properties WHERE room_count > 1 AND (property_type_code = 'HSE' OR property_type_code = 'APT')
hard gold: SELECT property_name FROM Properties WHERE property_type_code   =   "House" UNION SELECT property_name FROM Properties WHERE property_type_code   =   "Apartment" AND room_count  >  1

当前idx3
eval_err_num:150
____________________
SELECT  property_name, room_count FROM Properties WHERE room_count > 1 AND (property_type_code = 'HSE' OR property_type_code = 'APT')
SELECT property_name, room_count FROM Properties WHERE property_type_code   =   "House" UNION SELECT property_name, room_count FROM Properties WHERE property_type_code   =   "Apartment" AND room_count  >  1
连接数据库../datasets/cosql_dataset/database/real_estate_properties/real_estate_properties.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
extra pred: SELECT  property_name, room_count FROM Properties WHERE room_count > 1 AND (property_type_code = 'HSE' OR property_type_code = 'APT')
extra gold: SELECT property_name, room_count FROM Properties WHERE property_type_code   =   "House" UNION SELECT property_name, room_count FROM Properties WHERE property_type_code   =   "Apartment" AND room_count  >  1

当前idx4
eval_err_num:151
____________________
SELECT  AVG(agreed_selling_price) AS average_selling_price FROM Properties WHERE room_count > 1 AND property_type_code = 'HSE'
SELECT avg ( agreed_selling_price )  FROM Properties WHERE property_type_code   =   "House" AND room_count  >  1
连接数据库../datasets/cosql_dataset/database/real_estate_properties/real_estate_properties.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT  AVG(agreed_selling_price) AS average_selling_price FROM Properties WHERE room_count > 1 AND property_type_code = 'HSE'
medium gold: SELECT avg ( agreed_selling_price )  FROM Properties WHERE property_type_code   =   "House" AND room_count  >  1

当前idx1
____________________
SELECT  COUNT(*) FROM airports
SELECT count ( * )  from airports
连接数据库../datasets/cosql_dataset/database/flight_2/flight_2.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT  COUNT(DISTINCT SourceAirport) FROM flights
SELECT count ( distinct sourceairport )  from flights
连接数据库../datasets/cosql_dataset/database/flight_2/flight_2.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx3
____________________
SELECT  COUNT(DISTINCT DestAirport) FROM flights WHERE DestAirport = 'ASY'
SELECT count ( * )  from flights where destairport like "%ASY%"
连接数据库../datasets/cosql_dataset/database/flight_2/flight_2.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT  COUNT(DISTINCT DestAirport) FROM flights WHERE DestAirport = 'ASY'
medium gold: SELECT count ( * )  from flights where destairport like "%ASY%"

当前idx4
eval_err_num:152
____________________
SELECT  COUNT(*) FROM flights WHERE DestAirport = 'ASY' AND SourceAirport IN ('APG', 'ABR')
SELECT count ( * )  from flights where destairport like "%ASY%" and sourceairport like "%APG%" UNION SELECT count ( * )  from flights where destairport like "%ASY%" and sourceairport like "%ABR%"
连接数据库../datasets/cosql_dataset/database/flight_2/flight_2.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
extra pred: SELECT  COUNT(*) FROM flights WHERE DestAirport = 'ASY' AND SourceAirport IN ('APG', 'ABR')
extra gold: SELECT count ( * )  from flights where destairport like "%ASY%" and sourceairport like "%APG%" UNION SELECT count ( * )  from flights where destairport like "%ASY%" and sourceairport like "%ABR%"

当前idx1
eval_err_num:153
____________________
SELECT  COUNT(*) AS NumberOfCarMakers FROM car_makers WHERE Country = 'Germany'
SELECT count ( * )  FROM CAR_MAKERS AS T1 JOIN COUNTRIES AS T2 ON T1.Country   =   T2.CountryId WHERE T2.CountryName   =   'germany'
连接数据库../datasets/cosql_dataset/database/car_1/car_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT  COUNT(*) AS NumberOfCarMakers FROM car_makers WHERE Country = 'Germany'
medium gold: SELECT count ( * )  FROM CAR_MAKERS AS T1 JOIN COUNTRIES AS T2 ON T1.Country   =   T2.CountryId WHERE T2.CountryName   =   'germany'

当前idx2
____________________
SELECT  Maker, FullName FROM car_makers WHERE Country = 'Germany'
SELECt T1.maker FROM CAR_MAKERS AS T1 JOIN COUNTRIES AS T2 ON T1.Country   =   T2.CountryId WHERE T2.CountryName   =   'germany'
连接数据库../datasets/cosql_dataset/database/car_1/car_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT  Maker, FullName FROM car_makers WHERE Country = 'Germany'
medium gold: SELECt T1.maker FROM CAR_MAKERS AS T1 JOIN COUNTRIES AS T2 ON T1.Country   =   T2.CountryId WHERE T2.CountryName   =   'germany'

当前idx3
eval_err_num:154
____________________
SELECT  COUNT(*) AS NumberOfCarMakers FROM car_makers WHERE Country = 'USA'
SELECt count ( T1.maker )  FROM CAR_MAKERS AS T1 JOIN COUNTRIES AS T2 ON T1.Country   =   T2.CountryId WHERE T2.CountryName   =   'usa'
连接数据库../datasets/cosql_dataset/database/car_1/car_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT  COUNT(*) AS NumberOfCarMakers FROM car_makers WHERE Country = 'USA'
medium gold: SELECt count ( T1.maker )  FROM CAR_MAKERS AS T1 JOIN COUNTRIES AS T2 ON T1.Country   =   T2.CountryId WHERE T2.CountryName   =   'usa'

当前idx4
____________________
SELECT  Maker, FullName FROM car_makers WHERE Country = 'USA'
SELECt T1.maker FROM CAR_MAKERS AS T1 JOIN COUNTRIES AS T2 ON T1.Country   =   T2.CountryId WHERE T2.CountryName   =   'usa'
连接数据库../datasets/cosql_dataset/database/car_1/car_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT  Maker, FullName FROM car_makers WHERE Country = 'USA'
medium gold: SELECt T1.maker FROM CAR_MAKERS AS T1 JOIN COUNTRIES AS T2 ON T1.Country   =   T2.CountryId WHERE T2.CountryName   =   'usa'

当前idx1
____________________
SELECT  first_name, last_name, state FROM Owners
SELECT first_name ,  last_name, state FROM Owners
连接数据库../datasets/cosql_dataset/database/dog_kennels/dog_kennels.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT  first_name, last_name, email_address FROM Owners
SELECT first_name ,  last_name, email_address FROM Owners
连接数据库../datasets/cosql_dataset/database/dog_kennels/dog_kennels.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx3
____________________
SELECT  first_name, last_name, email_address FROM Owners WHERE state LIKE '%North%'
SELECT first_name ,  last_name ,  email_address FROM Owners WHERE state LIKE '%North%'
连接数据库../datasets/cosql_dataset/database/dog_kennels/dog_kennels.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx1
eval_err_num:155
____________________
SELECT  City, COUNT(*) AS Num_Employees FROM employee WHERE Age < 30 GROUP BY City HAVING COUNT(*) > 1
SELECT city FROM employee WHERE age  <  30 GROUP BY city HAVING count ( * )   >  1
连接数据库../datasets/cosql_dataset/database/employee_hire_evaluation/employee_hire_evaluation.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT  City, COUNT(*) AS Num_Employees FROM employee WHERE Age < 30 GROUP BY City HAVING COUNT(*) > 1
medium gold: SELECT city FROM employee WHERE age  <  30 GROUP BY city HAVING count ( * )   >  1

当前idx2
eval_err_num:156
____________________
SELECT  City, COUNT(*) AS Num_Employees FROM employee WHERE Age > 30 GROUP BY City HAVING COUNT(*) > 1
SELECT city FROM employee WHERE age  >  30 GROUP BY city HAVING count ( * )   >  1
连接数据库../datasets/cosql_dataset/database/employee_hire_evaluation/employee_hire_evaluation.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT  City, COUNT(*) AS Num_Employees FROM employee WHERE Age > 30 GROUP BY City HAVING COUNT(*) > 1
medium gold: SELECT city FROM employee WHERE age  >  30 GROUP BY city HAVING count ( * )   >  1

当前idx3
____________________
SELECT  Name, Age FROM employee WHERE Age > 30
SELECT Name, Age FROM employee WHERE age  >  30
连接数据库../datasets/cosql_dataset/database/employee_hire_evaluation/employee_hire_evaluation.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx4
____________________
SELECT  Name, Age FROM employee WHERE Age < 30
SELECT Name, Age FROM employee WHERE age  <  30
连接数据库../datasets/cosql_dataset/database/employee_hire_evaluation/employee_hire_evaluation.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx>4
____________________
SELECT  City FROM employee WHERE Age < 29 GROUP BY City
SELECT City FROM employee WHERE age  <  29
连接数据库../datasets/cosql_dataset/database/employee_hire_evaluation/employee_hire_evaluation.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:0
easy pred: SELECT  City FROM employee WHERE Age < 29 GROUP BY City
easy gold: SELECT City FROM employee WHERE age  <  29

当前idx1
eval_err_num:157
____________________
SELECT  COUNT(DISTINCT owner_id) AS NumberOfOwners FROM Owners
SELECT count ( * )  FROM Owners
连接数据库../datasets/cosql_dataset/database/dog_kennels/dog_kennels.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
easy pred: SELECT  COUNT(DISTINCT owner_id) AS NumberOfOwners FROM Owners
easy gold: SELECT count ( * )  FROM Owners

当前idx2
eval_err_num:158
____________________
SELECT  MIN(age) AS YoungestDogAge FROM Dogs
SELECT age FROM Dogs ORDER BY age ASC LIMIT 1
连接数据库../datasets/cosql_dataset/database/dog_kennels/dog_kennels.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT  MIN(age) AS YoungestDogAge FROM Dogs
medium gold: SELECT age FROM Dogs ORDER BY age ASC LIMIT 1

当前idx3
____________________
SELECT  name FROM Dogs WHERE age = '1'
SELECT name FROM Dogs ORDER BY age ASC LIMIT 1
连接数据库../datasets/cosql_dataset/database/dog_kennels/dog_kennels.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:0
medium pred: SELECT  name FROM Dogs WHERE age = '1'
medium gold: SELECT name FROM Dogs ORDER BY age ASC LIMIT 1

当前idx4
____________________
SELECT  Owners.first_name, Owners.last_name FROM Owners JOIN Dogs ON Owners.owner_id = Dogs.owner_id WHERE Dogs.name = 'Evangeline'
SELECT T1.first_name, T1.last_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id   =   T2.owner_id WHERE T2.name  =  "Evangeline"
连接数据库../datasets/cosql_dataset/database/dog_kennels/dog_kennels.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx1
eval_err_num:159
____________________
SELECT  Singer_ID FROM singer s WHERE NOT EXISTS (     SELECT 1     FROM song     WHERE song.Singer_ID = s.Singer_ID )
SELECT Name FROM singer WHERE Singer_ID NOT IN  ( SELECT Singer_ID FROM song ) 
连接数据库../datasets/cosql_dataset/database/singer/singer.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
hard pred: SELECT  Singer_ID FROM singer s WHERE NOT EXISTS (     SELECT 1     FROM song     WHERE song.Singer_ID = s.Singer_ID )
hard gold: SELECT Name FROM singer WHERE Singer_ID NOT IN  ( SELECT Singer_ID FROM song ) 

当前idx1
eval_err_num:160
____________________
SELECT  Name  FROM singer  WHERE Birth_Year IN (1948, 1949)
SELECT Name FROM singer WHERE Birth_Year   =   1948 OR Birth_Year   =   1949
连接数据库../datasets/cosql_dataset/database/singer/singer.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT  Name  FROM singer  WHERE Birth_Year IN (1948, 1949)
medium gold: SELECT Name FROM singer WHERE Birth_Year   =   1948 OR Birth_Year   =   1949

当前idx2
eval_err_num:161
____________________
SELECT  Name, Citizenship  FROM singer  WHERE Birth_Year IN (1948, 1949)
SELECT Citizenship FROM singer WHERE Birth_Year   =   1948 OR Birth_Year   =   1949
连接数据库../datasets/cosql_dataset/database/singer/singer.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT  Name, Citizenship  FROM singer  WHERE Birth_Year IN (1948, 1949)
medium gold: SELECT Citizenship FROM singer WHERE Birth_Year   =   1948 OR Birth_Year   =   1949

当前idx3
eval_err_num:162
____________________
SELECT  Name, MAX(Net_Worth_Millions) AS Highest_Net_Worth FROM singer WHERE Birth_Year IN (1948, 1949)
SELECT name FROM singer WHERE Birth_Year   =   1948 OR Birth_Year   =   1949 order by Net_Worth_Millions desc limit 1
连接数据库../datasets/cosql_dataset/database/singer/singer.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
extra pred: SELECT  Name, MAX(Net_Worth_Millions) AS Highest_Net_Worth FROM singer WHERE Birth_Year IN (1948, 1949)
extra gold: SELECT name FROM singer WHERE Birth_Year   =   1948 OR Birth_Year   =   1949 order by Net_Worth_Millions desc limit 1

当前idx4
eval_err_num:163
____________________
SELECT  Name, Net_Worth_Millions FROM singer WHERE Birth_Year IN (1948, 1949) ORDER BY Net_Worth_Millions DESC LIMIT 1
SELECT name,Net_Worth_Millions FROM singer WHERE Birth_Year   =   1948 OR Birth_Year   =   1949 order by Net_Worth_Millions desc limit 1
连接数据库../datasets/cosql_dataset/database/singer/singer.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
extra pred: SELECT  Name, Net_Worth_Millions FROM singer WHERE Birth_Year IN (1948, 1949) ORDER BY Net_Worth_Millions DESC LIMIT 1
extra gold: SELECT name,Net_Worth_Millions FROM singer WHERE Birth_Year   =   1948 OR Birth_Year   =   1949 order by Net_Worth_Millions desc limit 1

当前idx>4
eval_err_num:164
____________________
SELECT  MIN(Net_Worth_Millions) AS Lowest_Net_Worth FROM singer WHERE Birth_Year IN (1948, 1949)
SELECT name FROM singer WHERE Birth_Year   =   1948 OR Birth_Year   =   1949 order by Net_Worth_Millions limit 1
连接数据库../datasets/cosql_dataset/database/singer/singer.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
extra pred: SELECT  MIN(Net_Worth_Millions) AS Lowest_Net_Worth FROM singer WHERE Birth_Year IN (1948, 1949)
extra gold: SELECT name FROM singer WHERE Birth_Year   =   1948 OR Birth_Year   =   1949 order by Net_Worth_Millions limit 1

当前idx1
eval_err_num:165
____________________
SELECT  COUNT(DISTINCT b.id) FROM battle b WHERE b.id NOT IN (     SELECT DISTINCT s.lost_in_battle     FROM ship s     WHERE s.tonnage = '225' )
SELECT count ( * )  FROM battle WHERE id NOT IN  (  SELECT lost_in_battle FROM ship WHERE tonnage   =   '225'  ) 
连接数据库../datasets/cosql_dataset/database/battle_death/battle_death.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
extra pred: SELECT  COUNT(DISTINCT b.id) FROM battle b WHERE b.id NOT IN (     SELECT DISTINCT s.lost_in_battle     FROM ship s     WHERE s.tonnage = '225' )
extra gold: SELECT count ( * )  FROM battle WHERE id NOT IN  (  SELECT lost_in_battle FROM ship WHERE tonnage   =   '225'  ) 

当前idx2
eval_err_num:166
____________________
SELECT  COUNT(DISTINCT b.id) FROM battle b WHERE b.id IN (     SELECT DISTINCT s.lost_in_battle     FROM ship s     WHERE s.tonnage = '225' )
SELECT count ( * )  FROM battle WHERE id IN  (  SELECT lost_in_battle FROM ship WHERE tonnage   =   '225'  ) 
连接数据库../datasets/cosql_dataset/database/battle_death/battle_death.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
hard pred: SELECT  COUNT(DISTINCT b.id) FROM battle b WHERE b.id IN (     SELECT DISTINCT s.lost_in_battle     FROM ship s     WHERE s.tonnage = '225' )
hard gold: SELECT count ( * )  FROM battle WHERE id IN  (  SELECT lost_in_battle FROM ship WHERE tonnage   =   '225'  ) 

当前idx3
____________________
SELECT  COUNT(*) FROM ship WHERE tonnage = '225'
SELECT count ( * )  FROM ship WHERE tonnage   =   '225'
连接数据库../datasets/cosql_dataset/database/battle_death/battle_death.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx4
eval_err_num:167
____________________
SELECT  b.result FROM battle b JOIN ship s ON b.id = s.lost_in_battle WHERE s.tonnage = '225'
SELECT result FROM battle WHERE id IN  (  SELECT lost_in_battle FROM ship WHERE tonnage   =   '225'  ) 
连接数据库../datasets/cosql_dataset/database/battle_death/battle_death.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
hard pred: SELECT  b.result FROM battle b JOIN ship s ON b.id = s.lost_in_battle WHERE s.tonnage = '225'
hard gold: SELECT result FROM battle WHERE id IN  (  SELECT lost_in_battle FROM ship WHERE tonnage   =   '225'  ) 

当前idx1
____________________
SELECT  FullName FROM car_makers WHERE Maker = 'amc'
SELECT Fullname FROM car_makers WHERE maker  =  "amc"
连接数据库../datasets/cosql_dataset/database/car_1/car_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
eval_err_num:168
____________________
SELECT  CountryName FROM countries WHERE CountryId IN (1, 2, 3)
SELECT countryname FROM countries WHERE countryid = 1 or countryid = 2 or countryid = 3 ) 
连接数据库../datasets/cosql_dataset/database/car_1/car_1.sqlite
执行第一个查询
执行第二个查询
执行出错: near ")": syntax error
eval_exec:False
exact_score:0
hard pred: SELECT  CountryName FROM countries WHERE CountryId IN (1, 2, 3)
hard gold: SELECT countryname FROM countries WHERE countryid = 1 or countryid = 2 or countryid = 3 ) 

当前idx3
____________________
SELECT  ModelId FROM model_list WHERE Maker = (SELECT Id FROM car_makers WHERE Maker = 'amc')
SELECT modelid FROM model_list WHERE model  =  "amc"
连接数据库../datasets/cosql_dataset/database/car_1/car_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:0
easy pred: SELECT  ModelId FROM model_list WHERE Maker = (SELECT Id FROM car_makers WHERE Maker = 'amc')
easy gold: SELECT modelid FROM model_list WHERE model  =  "amc"

当前idx4
eval_err_num:169
____________________
SELECT  DISTINCT c.CountryId, c.CountryName FROM countries c JOIN car_makers cm ON c.CountryId = cm.Country LEFT JOIN model_list ml ON cm.Id = ml.Maker WHERE cm.Maker IN (SELECT Maker FROM model_list WHERE Model = 'fiat')    OR c.CountryId IN (        SELECT Country        FROM car_makers        GROUP BY Country        HAVING COUNT(Id) > 3    )
SELECT T1.countryId ,  T1.CountryName FROM Countries AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId   =   T2.Country GROUP BY T1.countryId HAVING count ( * )   >  3 UNION SELECT T1.countryId ,  T1.CountryName FROM Countries AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId   =   T2.Country JOIN MODEL_LIST AS T3 ON T2.Id   =   T3.Maker WHERE T3.Model   =   'fiat'
连接数据库../datasets/cosql_dataset/database/car_1/car_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
extra pred: SELECT  DISTINCT c.CountryId, c.CountryName FROM countries c JOIN car_makers cm ON c.CountryId = cm.Country LEFT JOIN model_list ml ON cm.Id = ml.Maker WHERE cm.Maker IN (SELECT Maker FROM model_list WHERE Model = 'fiat')    OR c.CountryId IN (        SELECT Country        FROM car_makers        GROUP BY Country        HAVING COUNT(Id) > 3    )
extra gold: SELECT T1.countryId ,  T1.CountryName FROM Countries AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId   =   T2.Country GROUP BY T1.countryId HAVING count ( * )   >  3 UNION SELECT T1.countryId ,  T1.CountryName FROM Countries AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId   =   T2.Country JOIN MODEL_LIST AS T3 ON T2.Id   =   T3.Maker WHERE T3.Model   =   'fiat'

当前idx1
____________________
SELECT  Money_Rank FROM poker_player ORDER BY Earnings DESC LIMIT 1
SELECT Money_Rank FROM poker_player ORDER BY Earnings DESC LIMIT 1
连接数据库../datasets/cosql_dataset/database/poker_player/poker_player.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT  People_ID FROM poker_player ORDER BY Earnings DESC LIMIT 1
SELECT People_ID FROM poker_player ORDER BY Earnings DESC LIMIT 1
连接数据库../datasets/cosql_dataset/database/poker_player/poker_player.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx3
____________________
SELECT  Best_Finish FROM poker_player WHERE Earnings = (SELECT MAX(Earnings) FROM poker_player)
SELECT Best_Finish FROM poker_player ORDER BY Earnings DESC LIMIT 1
连接数据库../datasets/cosql_dataset/database/poker_player/poker_player.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:0
medium pred: SELECT  Best_Finish FROM poker_player WHERE Earnings = (SELECT MAX(Earnings) FROM poker_player)
medium gold: SELECT Best_Finish FROM poker_player ORDER BY Earnings DESC LIMIT 1

当前idx4
eval_err_num:170
____________________
SELECT  MAX(Earnings) AS Highest_Earning FROM poker_player
SELECT Earnings FROM poker_player order by Earnings desc limit 1
连接数据库../datasets/cosql_dataset/database/poker_player/poker_player.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT  MAX(Earnings) AS Highest_Earning FROM poker_player
medium gold: SELECT Earnings FROM poker_player order by Earnings desc limit 1

当前idx1
____________________
SELECT  COUNT(*) FROM orchestra
SELECT COUNT ( DISTINCT Orchestra )  FROM orchestra
连接数据库../datasets/cosql_dataset/database/orchestra/orchestra.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
easy pred: SELECT  COUNT(*) FROM orchestra
easy gold: SELECT COUNT ( DISTINCT Orchestra )  FROM orchestra

当前idx2
eval_err_num:171
____________________
SELECT  COUNT(*)  FROM orchestra  LEFT JOIN performance ON orchestra.Orchestra_ID = performance.Orchestra_ID WHERE performance.Performance_ID IS NULL
SELECT COUNT ( Orchestra )  FROM orchestra WHERE Orchestra_ID NOT IN  ( SELECT Orchestra_ID FROM performance ) 
连接数据库../datasets/cosql_dataset/database/orchestra/orchestra.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
extra pred: SELECT  COUNT(*)  FROM orchestra  LEFT JOIN performance ON orchestra.Orchestra_ID = performance.Orchestra_ID WHERE performance.Performance_ID IS NULL
extra gold: SELECT COUNT ( Orchestra )  FROM orchestra WHERE Orchestra_ID NOT IN  ( SELECT Orchestra_ID FROM performance ) 

当前idx3
eval_err_num:172
____________________
SELECT  orchestra.Orchestra_ID, orchestra.Orchestra FROM orchestra  LEFT JOIN performance ON orchestra.Orchestra_ID = performance.Orchestra_ID WHERE performance.Performance_ID IS NULL
SELECT Orchestra_ID, Orchestra FROM orchestra WHERE Orchestra_ID NOT IN  ( SELECT Orchestra_ID FROM performance ) 
连接数据库../datasets/cosql_dataset/database/orchestra/orchestra.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
extra pred: SELECT  orchestra.Orchestra_ID, orchestra.Orchestra FROM orchestra  LEFT JOIN performance ON orchestra.Orchestra_ID = performance.Orchestra_ID WHERE performance.Performance_ID IS NULL
extra gold: SELECT Orchestra_ID, Orchestra FROM orchestra WHERE Orchestra_ID NOT IN  ( SELECT Orchestra_ID FROM performance ) 

当前idx1
eval_err_num:173
____________________
SELECT  DISTINCT s.Name, s.Location FROM stadium s JOIN concert c ON s.Stadium_ID = c.Stadium_ID WHERE c.Year IN ('2014', '2015') GROUP BY s.Stadium_ID HAVING COUNT(DISTINCT c.Year) = 2
SELECT T2.name ,  T2.location FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id   =   T2.stadium_id WHERE T1.Year   =   2014 INTERSECT SELECT T2.name ,  T2.location FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id   =   T2.stadium_id WHERE T1.Year   =   2015
连接数据库../datasets/cosql_dataset/database/concert_singer/concert_singer.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
extra pred: SELECT  DISTINCT s.Name, s.Location FROM stadium s JOIN concert c ON s.Stadium_ID = c.Stadium_ID WHERE c.Year IN ('2014', '2015') GROUP BY s.Stadium_ID HAVING COUNT(DISTINCT c.Year) = 2
extra gold: SELECT T2.name ,  T2.location FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id   =   T2.stadium_id WHERE T1.Year   =   2014 INTERSECT SELECT T2.name ,  T2.location FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id   =   T2.stadium_id WHERE T1.Year   =   2015

当前idx2
____________________
SELECT  Year FROM concert WHERE concert_Name = 'Super bootcamp'
SELECT year from concert where concert_name like "%Super bootcamp%"
连接数据库../datasets/cosql_dataset/database/concert_singer/concert_singer.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:0
medium pred: SELECT  Year FROM concert WHERE concert_Name = 'Super bootcamp'
medium gold: SELECT year from concert where concert_name like "%Super bootcamp%"

当前idx3
____________________
SELECT  Year FROM concert WHERE concert_Name = 'Auditions'
SELECT year from concert where concert_name like "%Auditions%"
连接数据库../datasets/cosql_dataset/database/concert_singer/concert_singer.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:0
medium pred: SELECT  Year FROM concert WHERE concert_Name = 'Auditions'
medium gold: SELECT year from concert where concert_name like "%Auditions%"

当前idx4
eval_err_num:174
____________________
SELECT  s.Name, s.Location FROM stadium s JOIN concert c ON s.Stadium_ID = c.Stadium_ID WHERE c.concert_Name = 'Auditions'
SELECT T1.name from stadium as T1 join  concert as T2 on T1.stadium_id  =  T2.stadium_id where T2.concert_name like "%Auditions%"
连接数据库../datasets/cosql_dataset/database/concert_singer/concert_singer.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
hard pred: SELECT  s.Name, s.Location FROM stadium s JOIN concert c ON s.Stadium_ID = c.Stadium_ID WHERE c.concert_Name = 'Auditions'
hard gold: SELECT T1.name from stadium as T1 join  concert as T2 on T1.stadium_id  =  T2.stadium_id where T2.concert_name like "%Auditions%"

当前idx>4
eval_err_num:175
____________________
SELECT  DISTINCT s.Name, s.Location FROM stadium s JOIN concert c ON s.Stadium_ID = c.Stadium_ID WHERE c.Year IN ('2014', '2015')
SELECT T2.name , T2.location FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.Year  =  2014 or T1.Year  =  2015
连接数据库../datasets/cosql_dataset/database/concert_singer/concert_singer.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
hard pred: SELECT  DISTINCT s.Name, s.Location FROM stadium s JOIN concert c ON s.Stadium_ID = c.Stadium_ID WHERE c.Year IN ('2014', '2015')
hard gold: SELECT T2.name , T2.location FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.Year  =  2014 or T1.Year  =  2015

当前idx1
eval_err_num:176
____________________
SELECT  COUNT(*) AS FlightsInUSA    FROM flights    JOIN airlines ON flights.Airline = airlines.uid    JOIN airports AS source ON flights.SourceAirport = source.AirportCode    JOIN airports AS dest ON flights.DestAirport = dest.AirportCode    WHERE airlines.Airline = 'United Airlines' AND source.Country = 'USA' AND dest.Country = 'USA'
SELECT count ( * )  FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T2.Airline   =   T1.uid WHERE T1.Airline   =   "United Airlines"
连接数据库../datasets/cosql_dataset/database/flight_2/flight_2.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT  COUNT(*) AS FlightsInUSA    FROM flights    JOIN airlines ON flights.Airline = airlines.uid    JOIN airports AS source ON flights.SourceAirport = source.AirportCode    JOIN airports AS dest ON flights.DestAirport = dest.AirportCode    WHERE airlines.Airline = 'United Airlines' AND source.Country = 'USA' AND dest.Country = 'USA'
medium gold: SELECT count ( * )  FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T2.Airline   =   T1.uid WHERE T1.Airline   =   "United Airlines"

当前idx2
eval_err_num:177
____________________
SELECT  COUNT(DISTINCT DestAirport) AS UniqueDestinationAirports    FROM flights    JOIN airlines ON flights.Airline = airlines.uid    JOIN airports AS source ON flights.SourceAirport = source.AirportCode    JOIN airports AS dest ON flights.DestAirport = dest.AirportCode    WHERE airlines.Airline = 'United Airlines' AND source.Country = 'USA' AND dest.Country = 'USA'
SELECT count ( distinct T2.DestAirport )  FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T2.Airline   =   T1.uid WHERE T1.Airline   =   "United Airlines"
连接数据库../datasets/cosql_dataset/database/flight_2/flight_2.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT  COUNT(DISTINCT DestAirport) AS UniqueDestinationAirports    FROM flights    JOIN airlines ON flights.Airline = airlines.uid    JOIN airports AS source ON flights.SourceAirport = source.AirportCode    JOIN airports AS dest ON flights.DestAirport = dest.AirportCode    WHERE airlines.Airline = 'United Airlines' AND source.Country = 'USA' AND dest.Country = 'USA'
medium gold: SELECT count ( distinct T2.DestAirport )  FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T2.Airline   =   T1.uid WHERE T1.Airline   =   "United Airlines"

当前idx3
eval_err_num:178
____________________
SELECT  COUNT(*) AS FlightsToASY    FROM flights    JOIN airlines ON flights.Airline = airlines.uid    JOIN airports AS source ON flights.SourceAirport = source.AirportCode    JOIN airports AS dest ON flights.DestAirport = dest.AirportCode    WHERE airlines.Airline = 'United Airlines' AND source.Country = 'USA' AND dest.AirportCode = 'ASY'
SELECT count ( * )  FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T2.Airline   =   T1.uid WHERE T1.Airline   =   "United Airlines" AND T2.DestAirport   =   "ASY"
连接数据库../datasets/cosql_dataset/database/flight_2/flight_2.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT  COUNT(*) AS FlightsToASY    FROM flights    JOIN airlines ON flights.Airline = airlines.uid    JOIN airports AS source ON flights.SourceAirport = source.AirportCode    JOIN airports AS dest ON flights.DestAirport = dest.AirportCode    WHERE airlines.Airline = 'United Airlines' AND source.Country = 'USA' AND dest.AirportCode = 'ASY'
medium gold: SELECT count ( * )  FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T2.Airline   =   T1.uid WHERE T1.Airline   =   "United Airlines" AND T2.DestAirport   =   "ASY"

当前idx1
____________________
SELECT  DISTINCT degree_program_id FROM Student_Enrolment
SELECT degree_program_id from Student_Enrolment
连接数据库../datasets/cosql_dataset/database/student_transcripts_tracking/student_transcripts_tracking.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:True
当前idx2
____________________
SELECT  DISTINCT semester_id FROM Student_Enrolment
SELECT semester_id from Student_Enrolment
连接数据库../datasets/cosql_dataset/database/student_transcripts_tracking/student_transcripts_tracking.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:True
当前idx3
____________________
SELECT  DISTINCT semester_name FROM Semesters
SELECT semester_name from semesters
连接数据库../datasets/cosql_dataset/database/student_transcripts_tracking/student_transcripts_tracking.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:True
当前idx4
eval_err_num:179
____________________
SELECT  Semesters.semester_id, Semesters.semester_name, COUNT(Student_Enrolment.student_id) AS student_count FROM Student_Enrolment JOIN Semesters ON Student_Enrolment.semester_id = Semesters.semester_id GROUP BY Semesters.semester_id, Semesters.semester_name ORDER BY student_count DESC LIMIT 1
SELECT T1.semester_name ,  T1.semester_id FROM Semesters AS T1 JOIN Student_Enrolment AS T2 ON T1.semester_id   =   T2.semester_id GROUP BY T1.semester_id ORDER BY count ( * )  DESC LIMIT 1
连接数据库../datasets/cosql_dataset/database/student_transcripts_tracking/student_transcripts_tracking.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
extra pred: SELECT  Semesters.semester_id, Semesters.semester_name, COUNT(Student_Enrolment.student_id) AS student_count FROM Student_Enrolment JOIN Semesters ON Student_Enrolment.semester_id = Semesters.semester_id GROUP BY Semesters.semester_id, Semesters.semester_name ORDER BY student_count DESC LIMIT 1
extra gold: SELECT T1.semester_name ,  T1.semester_id FROM Semesters AS T1 JOIN Student_Enrolment AS T2 ON T1.semester_id   =   T2.semester_id GROUP BY T1.semester_id ORDER BY count ( * )  DESC LIMIT 1

当前idx1
eval_err_num:180
____________________
SELECT  GovernmentForm, AVG(LifeExpectancy) AS AverageLifeExpectancy FROM country GROUP BY GovernmentForm
SELECT GovernmentForm, avg ( LifeExpectancy )  FROM country GROUP BY GovernmentForm
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT  GovernmentForm, AVG(LifeExpectancy) AS AverageLifeExpectancy FROM country GROUP BY GovernmentForm
medium gold: SELECT GovernmentForm, avg ( LifeExpectancy )  FROM country GROUP BY GovernmentForm

当前idx2
eval_err_num:181
____________________
SELECT  GovernmentForm, AVG(LifeExpectancy) AS AverageLifeExpectancy FROM country GROUP BY GovernmentForm HAVING AVG(LifeExpectancy) > 72
SELECT GovernmentForm FROM country GROUP BY GovernmentForm HAVING avg ( LifeExpectancy )   >  72
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
easy pred: SELECT  GovernmentForm, AVG(LifeExpectancy) AS AverageLifeExpectancy FROM country GROUP BY GovernmentForm HAVING AVG(LifeExpectancy) > 72
easy gold: SELECT GovernmentForm FROM country GROUP BY GovernmentForm HAVING avg ( LifeExpectancy )   >  72

当前idx3
eval_err_num:182
____________________
SELECT  GovernmentForm, SUM(Population) AS TotalPopulation FROM country GROUP BY GovernmentForm HAVING AVG(LifeExpectancy) > 72
SELECT sum ( Population )  ,  GovernmentForm FROM country GROUP BY GovernmentForm HAVING avg ( LifeExpectancy )   >  72
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT  GovernmentForm, SUM(Population) AS TotalPopulation FROM country GROUP BY GovernmentForm HAVING AVG(LifeExpectancy) > 72
medium gold: SELECT sum ( Population )  ,  GovernmentForm FROM country GROUP BY GovernmentForm HAVING avg ( LifeExpectancy )   >  72

当前idx1
____________________
SELECT  id  FROM TV_Channel WHERE id NOT IN (     SELECT Channel      FROM Cartoon      WHERE Directed_by = 'Ben Jones' )
SELECT id FROM TV_Channel EXCEPT SELECT channel FROM cartoon WHERE directed_by   =   'Ben Jones'
连接数据库../datasets/cosql_dataset/database/tvshow/tvshow.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:0
hard pred: SELECT  id  FROM TV_Channel WHERE id NOT IN (     SELECT Channel      FROM Cartoon      WHERE Directed_by = 'Ben Jones' )
hard gold: SELECT id FROM TV_Channel EXCEPT SELECT channel FROM cartoon WHERE directed_by   =   'Ben Jones'

当前idx2
____________________
SELECT  DISTINCT Channel  FROM Cartoon  WHERE Directed_by = 'Ben Jones'
SELECT id FROM TV_Channel where id in  ( SELECT channel FROM cartoon WHERE directed_by   =   'Ben Jones' ) 
连接数据库../datasets/cosql_dataset/database/tvshow/tvshow.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:0
hard pred: SELECT  DISTINCT Channel  FROM Cartoon  WHERE Directed_by = 'Ben Jones'
hard gold: SELECT id FROM TV_Channel where id in  ( SELECT channel FROM cartoon WHERE directed_by   =   'Ben Jones' ) 

当前idx3
____________________
SELECT  Channel, Title  FROM Cartoon
SELECT Title FROM Cartoon where directed_by   =   'Ben Jones'
连接数据库../datasets/cosql_dataset/database/tvshow/tvshow.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
easy pred: SELECT  Channel, Title  FROM Cartoon
easy gold: SELECT Title FROM Cartoon where directed_by   =   'Ben Jones'

当前idx1
____________________
SELECT  Document_ID FROM Documents
SELECT document_id FROM Paragraphs
连接数据库../datasets/cosql_dataset/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:False
easy pred: SELECT  Document_ID FROM Documents
easy gold: SELECT document_id FROM Paragraphs

当前idx2
eval_err_num:183
____________________
SELECT  Document_ID, COUNT(Paragraph_ID) AS NumberOfParagraphs FROM Paragraphs GROUP BY Document_ID
SELECT document_id ,  count ( * )  FROM Paragraphs GROUP BY document_id
连接数据库../datasets/cosql_dataset/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT  Document_ID, COUNT(Paragraph_ID) AS NumberOfParagraphs FROM Paragraphs GROUP BY Document_ID
medium gold: SELECT document_id ,  count ( * )  FROM Paragraphs GROUP BY document_id

当前idx3
eval_err_num:184
____________________
SELECT  Document_ID, COUNT(Paragraph_ID) AS NumberOfParagraphs FROM Paragraphs GROUP BY Document_ID ORDER BY Document_ID
SELECT document_id ,  count ( * )  FROM Paragraphs GROUP BY document_id ORDER BY document_id
连接数据库../datasets/cosql_dataset/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT  Document_ID, COUNT(Paragraph_ID) AS NumberOfParagraphs FROM Paragraphs GROUP BY Document_ID ORDER BY Document_ID
medium gold: SELECT document_id ,  count ( * )  FROM Paragraphs GROUP BY document_id ORDER BY document_id

当前idx1
____________________
SELECT  owner_id, zip_code FROM Owners
SELECT  
owner_id,zip_code from Owners
连接数据库../datasets/cosql_dataset/database/dog_kennels/dog_kennels.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT  Owners.owner_id, Dogs.dog_id, Treatments.cost_of_treatment FROM Owners JOIN Dogs ON Owners.owner_id = Dogs.owner_id JOIN Treatments ON Dogs.dog_id = Treatments.dog_id
SELECT T1.owner_id , T2.dog_id ,T3.cost_of_treatment  FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id JOIN Treatments AS T3 ON T2.dog_id  =  T3.dog_id
连接数据库../datasets/cosql_dataset/database/dog_kennels/dog_kennels.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx3
eval_err_num:185
____________________
SELECT  Owners.owner_id, Owners.first_name, SUM(Treatments.cost_of_treatment) AS total_cost FROM Owners JOIN Dogs ON Owners.owner_id = Dogs.owner_id JOIN Treatments ON Dogs.dog_id = Treatments.dog_id GROUP BY Owners.owner_id, Owners.first_name ORDER BY total_cost DESC LIMIT 1
SELECT  T1.first_name,T1.owner_id  FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id JOIN Treatments AS T3 ON T2.dog_id  =  T3.dog_id GROUP BY T1.owner_id ORDER BY sum ( T3.cost_of_treatment )  DESC LIMIT 1
连接数据库../datasets/cosql_dataset/database/dog_kennels/dog_kennels.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
extra pred: SELECT  Owners.owner_id, Owners.first_name, SUM(Treatments.cost_of_treatment) AS total_cost FROM Owners JOIN Dogs ON Owners.owner_id = Dogs.owner_id JOIN Treatments ON Dogs.dog_id = Treatments.dog_id GROUP BY Owners.owner_id, Owners.first_name ORDER BY total_cost DESC LIMIT 1
extra gold: SELECT  T1.first_name,T1.owner_id  FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id JOIN Treatments AS T3 ON T2.dog_id  =  T3.dog_id GROUP BY T1.owner_id ORDER BY sum ( T3.cost_of_treatment )  DESC LIMIT 1

当前idx4
____________________
SELECT  last_name FROM Owners WHERE first_name = 'Jaclyn'
SELECT last_name  from Owners where first_name = "Jaclyn"
连接数据库../datasets/cosql_dataset/database/dog_kennels/dog_kennels.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx>4
eval_err_num:186
____________________
SELECT  Owners.owner_id, Owners.zip_code, SUM(Treatments.cost_of_treatment) AS total_cost FROM Owners JOIN Dogs ON Owners.owner_id = Dogs.owner_id JOIN Treatments ON Dogs.dog_id = Treatments.dog_id WHERE Owners.first_name = 'Jaclyn' AND Owners.last_name = 'Stoltenberg' GROUP BY Owners.owner_id, Owners.zip_code ORDER BY total_cost DESC LIMIT 1
SELECT T1.owner_id , T1.zip_code FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id JOIN Treatments AS T3 ON T2.dog_id  =  T3.dog_id GROUP BY T1.owner_id ORDER BY sum ( T3.cost_of_treatment )  DESC LIMIT 1
连接数据库../datasets/cosql_dataset/database/dog_kennels/dog_kennels.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
extra pred: SELECT  Owners.owner_id, Owners.zip_code, SUM(Treatments.cost_of_treatment) AS total_cost FROM Owners JOIN Dogs ON Owners.owner_id = Dogs.owner_id JOIN Treatments ON Dogs.dog_id = Treatments.dog_id WHERE Owners.first_name = 'Jaclyn' AND Owners.last_name = 'Stoltenberg' GROUP BY Owners.owner_id, Owners.zip_code ORDER BY total_cost DESC LIMIT 1
extra gold: SELECT T1.owner_id , T1.zip_code FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id JOIN Treatments AS T3 ON T2.dog_id  =  T3.dog_id GROUP BY T1.owner_id ORDER BY sum ( T3.cost_of_treatment )  DESC LIMIT 1

当前idx1
____________________
SELECT  FlightNo FROM flights
SELECT FlightNo FROM Flights
连接数据库../datasets/cosql_dataset/database/flight_2/flight_2.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT  FlightNo, DestAirport FROM flights
SELECT FlightNo,DestAirport FROM Flights
连接数据库../datasets/cosql_dataset/database/flight_2/flight_2.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx3
eval_err_num:187
____________________
SELECT  COUNT(*) FROM flights  WHERE DestAirport IN (SELECT AirportCode FROM airports WHERE City IN ('Aberdeen', 'Abilene'))
SELECT count ( * )  FROM Flights AS T1 JOIN Airports AS T2 ON T1.DestAirport   =   T2.AirportCode WHERE T2.city   =   "Aberdeen" OR T2.city   =   "Abilene"
连接数据库../datasets/cosql_dataset/database/flight_2/flight_2.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
hard pred: SELECT  COUNT(*) FROM flights  WHERE DestAirport IN (SELECT AirportCode FROM airports WHERE City IN ('Aberdeen', 'Abilene'))
hard gold: SELECT count ( * )  FROM Flights AS T1 JOIN Airports AS T2 ON T1.DestAirport   =   T2.AirportCode WHERE T2.city   =   "Aberdeen" OR T2.city   =   "Abilene"

当前idx4
eval_err_num:188
____________________
SELECT  City, COUNT(*) AS FlightCount FROM airports JOIN flights ON airports.AirportCode = flights.DestAirport GROUP BY City ORDER BY FlightCount DESC LIMIT 1
SELECT DESTAIRPORT FROM Flights GROUP BY DESTAIRPORT order by count ( * )  desc limit 1
连接数据库../datasets/cosql_dataset/database/flight_2/flight_2.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
hard pred: SELECT  City, COUNT(*) AS FlightCount FROM airports JOIN flights ON airports.AirportCode = flights.DestAirport GROUP BY City ORDER BY FlightCount DESC LIMIT 1
hard gold: SELECT DESTAIRPORT FROM Flights GROUP BY DESTAIRPORT order by count ( * )  desc limit 1

当前idx1
eval_err_num:189
____________________
SELECT  COUNT(*) AS NumberOfFlights FROM flights JOIN airports ON flights.DestAirport = airports.AirportCode WHERE airports.City = 'Aberdeen'
SELECT count ( * )  FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport   =   T2.AirportCode WHERE T2.City   =   "Aberdeen"
连接数据库../datasets/cosql_dataset/database/flight_2/flight_2.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT  COUNT(*) AS NumberOfFlights FROM flights JOIN airports ON flights.DestAirport = airports.AirportCode WHERE airports.City = 'Aberdeen'
medium gold: SELECT count ( * )  FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport   =   T2.AirportCode WHERE T2.City   =   "Aberdeen"

当前idx2
eval_err_num:190
____________________
SELECT  COUNT(*) AS NumberOfFlights FROM flights JOIN airports ON flights.SourceAirport = airports.AirportCode WHERE airports.City = 'Aberdeen'
SELECT count ( * )  FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.sourceAirport   =   T2.AirportCode WHERE T2.City   =   "Aberdeen"
连接数据库../datasets/cosql_dataset/database/flight_2/flight_2.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT  COUNT(*) AS NumberOfFlights FROM flights JOIN airports ON flights.SourceAirport = airports.AirportCode WHERE airports.City = 'Aberdeen'
medium gold: SELECT count ( * )  FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.sourceAirport   =   T2.AirportCode WHERE T2.City   =   "Aberdeen"

当前idx1
eval_err_num:191
____________________
SELECT  A.Name FROM country A WHERE A.Continent = 'Africa' AND A.Population < (     SELECT MIN(B.Population)     FROM country B     WHERE B.Continent = 'Asia' )
SELECT Name FROM country WHERE Continent   =   "Africa"  AND population  <   ( SELECT max ( population )  FROM country WHERE Continent   =   "Asia" ) 
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
extra pred: SELECT  A.Name FROM country A WHERE A.Continent = 'Africa' AND A.Population < (     SELECT MIN(B.Population)     FROM country B     WHERE B.Continent = 'Asia' )
extra gold: SELECT Name FROM country WHERE Continent   =   "Africa"  AND population  <   ( SELECT max ( population )  FROM country WHERE Continent   =   "Asia" ) 

当前idx2
____________________
SELECT  Continent FROM country WHERE Name = 'Aruba'
SELECT continent FROM country WHERE name  =  "Aruba"
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx3
____________________
SELECT  LocalName FROM country WHERE Name = 'Angola'
SELECT localname FROM country WHERE name  =  "Angola"
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx4
____________________
SELECT  SurfaceArea FROM country WHERE Name = 'Afghanistan'
SELECT SurfaceArea FROM country WHERE name  =  "Afghanistan"
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx>4
____________________
SELECT  Code FROM country WHERE Name = 'Aruba'
SELECT Code FROM country WHERE name  =  "Aruba"
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx1
eval_err_num:192
____________________
SELECT  DISTINCT first_name, last_name FROM (     SELECT first_name, last_name FROM Owners     UNION     SELECT first_name, last_name FROM Professionals ) WHERE (first_name, last_name) NOT IN (     SELECT name AS first_name, '' AS last_name FROM Dogs ) ORDER BY first_name, last_name
SELECT first_name FROM Professionals UNION SELECT first_name FROM Owners EXCEPT SELECT name FROM Dogs
连接数据库../datasets/cosql_dataset/database/dog_kennels/dog_kennels.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
hard pred: SELECT  DISTINCT first_name, last_name FROM (     SELECT first_name, last_name FROM Owners     UNION     SELECT first_name, last_name FROM Professionals ) WHERE (first_name, last_name) NOT IN (     SELECT name AS first_name, '' AS last_name FROM Dogs ) ORDER BY first_name, last_name
hard gold: SELECT first_name FROM Professionals UNION SELECT first_name FROM Owners EXCEPT SELECT name FROM Dogs

当前idx2
____________________
SELECT  email_address FROM Professionals WHERE first_name = 'Taryn'
SELECT email_address FROM Professionals WHERE First_Name  =  "Taryn"
连接数据库../datasets/cosql_dataset/database/dog_kennels/dog_kennels.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx3
____________________
SELECT  state FROM Owners WHERE first_name = 'Jayson' UNION SELECT state FROM Professionals WHERE first_name = 'Jayson'
SELECT state FROM Professionals WHERE First_Name  =  "Jayson"
连接数据库../datasets/cosql_dataset/database/dog_kennels/dog_kennels.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
easy pred: SELECT  state FROM Owners WHERE first_name = 'Jayson' UNION SELECT state FROM Professionals WHERE first_name = 'Jayson'
easy gold: SELECT state FROM Professionals WHERE First_Name  =  "Jayson"

当前idx1
eval_err_num:193
____________________
SELECT  DISTINCT cm.Maker FROM car_makers cm JOIN model_list ml ON cm.Id = ml.Maker JOIN car_names cn ON ml.Model = cn.Model JOIN cars_data cd ON cn.MakeId = cd.Id WHERE cd.Year = 1970
SELECT DISTINCT T1.Maker FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id   =   T2.Maker JOIN CAR_NAMES AS T3 ON T2.model   =   T3.model JOIN CARS_DATA AS T4 ON T3.MakeId   =   T4.id WHERE T4.year   =   '1970'
连接数据库../datasets/cosql_dataset/database/car_1/car_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
extra pred: SELECT  DISTINCT cm.Maker FROM car_makers cm JOIN model_list ml ON cm.Id = ml.Maker JOIN car_names cn ON ml.Model = cn.Model JOIN cars_data cd ON cn.MakeId = cd.Id WHERE cd.Year = 1970
extra gold: SELECT DISTINCT T1.Maker FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id   =   T2.Maker JOIN CAR_NAMES AS T3 ON T2.model   =   T3.model JOIN CARS_DATA AS T4 ON T3.MakeId   =   T4.id WHERE T4.year   =   '1970'

当前idx2
eval_err_num:194
____________________
SELECT  cn.Model, cn.Make FROM car_names cn JOIN cars_data cd ON cn.MakeId = cd.Id WHERE cd.Year = 1970
SELECT T3.model, T3.make FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id   =   T2.Maker JOIN CAR_NAMES AS T3 ON T2.model   =   T3.model JOIN CARS_DATA AS T4 ON T3.MakeId   =   T4.id WHERE T4.year   =   '1970'
连接数据库../datasets/cosql_dataset/database/car_1/car_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
extra pred: SELECT  cn.Model, cn.Make FROM car_names cn JOIN cars_data cd ON cn.MakeId = cd.Id WHERE cd.Year = 1970
extra gold: SELECT T3.model, T3.make FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id   =   T2.Maker JOIN CAR_NAMES AS T3 ON T2.model   =   T3.model JOIN CARS_DATA AS T4 ON T3.MakeId   =   T4.id WHERE T4.year   =   '1970'

当前idx3
eval_err_num:195
____________________
SELECT  cm.FullName FROM car_makers cm JOIN model_list ml ON cm.Id = ml.Maker JOIN car_names cn ON ml.Model = cn.Model JOIN cars_data cd ON cn.MakeId = cd.Id WHERE cd.Year = 1970 ORDER BY cd.Weight DESC LIMIT 1
SELECT T1.Fullname FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker JOIN CAR_NAMES AS T3 ON T2.model  =  T3.model JOIN CARS_DATA AS T4 ON T3.MakeId  =  T4.id WHERE T4.year  =  '1970' ORDER BY T4.weight DESC limit 1
连接数据库../datasets/cosql_dataset/database/car_1/car_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
extra pred: SELECT  cm.FullName FROM car_makers cm JOIN model_list ml ON cm.Id = ml.Maker JOIN car_names cn ON ml.Model = cn.Model JOIN cars_data cd ON cn.MakeId = cd.Id WHERE cd.Year = 1970 ORDER BY cd.Weight DESC LIMIT 1
extra gold: SELECT T1.Fullname FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker JOIN CAR_NAMES AS T3 ON T2.model  =  T3.model JOIN CARS_DATA AS T4 ON T3.MakeId  =  T4.id WHERE T4.year  =  '1970' ORDER BY T4.weight DESC limit 1

当前idx1
____________________
SELECT  Title FROM Cartoon WHERE Directed_by = 'Ben Jones'
SELECT channel, id FROM cartoon
连接数据库../datasets/cosql_dataset/database/tvshow/tvshow.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT  Title FROM Cartoon WHERE Directed_by = 'Ben Jones'
medium gold: SELECT channel, id FROM cartoon

当前idx2
____________________
SELECT  * FROM TV_Channel WHERE Language != 'Italian'
SELECT series_name FROM TV_Channel EXCEPT SELECT series_name FROM TV_channel WHERE language  =  'Italian'
连接数据库../datasets/cosql_dataset/database/tvshow/tvshow.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
hard pred: SELECT  * FROM TV_Channel WHERE Language != 'Italian'
hard gold: SELECT series_name FROM TV_Channel EXCEPT SELECT series_name FROM TV_channel WHERE language  =  'Italian'

当前idx3
____________________
SELECT  id FROM TV_Channel WHERE id NOT IN (SELECT Channel FROM Cartoon WHERE Directed_by = 'Ben Jones')
SELECT id FROM TV_Channel EXCEPT SELECT channel FROM cartoon WHERE directed_by  =  'Ben Jones'
连接数据库../datasets/cosql_dataset/database/tvshow/tvshow.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:0
hard pred: SELECT  id FROM TV_Channel WHERE id NOT IN (SELECT Channel FROM Cartoon WHERE Directed_by = 'Ben Jones')
hard gold: SELECT id FROM TV_Channel EXCEPT SELECT channel FROM cartoon WHERE directed_by  =  'Ben Jones'

当前idx1
eval_err_num:196
____________________
SELECT  AVG(Number_products) AS Average_Products FROM shop
select avg ( Number_products )  from shop
连接数据库../datasets/cosql_dataset/database/employee_hire_evaluation/employee_hire_evaluation.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
easy pred: SELECT  AVG(Number_products) AS Average_Products FROM shop
easy gold: select avg ( Number_products )  from shop

当前idx2
____________________
SELECT  Name FROM shop WHERE Number_products > 6685
select Name from shop where Number_products > 6685
连接数据库../datasets/cosql_dataset/database/employee_hire_evaluation/employee_hire_evaluation.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx3
eval_err_num:197
____________________
SELECT  COUNT(*) AS Total_Stores FROM shop
select count ( * )  from shop
连接数据库../datasets/cosql_dataset/database/employee_hire_evaluation/employee_hire_evaluation.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
easy pred: SELECT  COUNT(*) AS Total_Stores FROM shop
easy gold: select count ( * )  from shop

当前idx1
____________________
SELECT  COUNT(*) FROM flights
SELECT count ( * )  FROM flights
连接数据库../datasets/cosql_dataset/database/flight_2/flight_2.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
eval_err_num:198
____________________
SELECT  City, COUNT(*) AS DepartingFlights FROM flights JOIN airports ON flights.SourceAirport = airports.AirportCode GROUP BY City ORDER BY DepartingFlights ASC LIMIT 1
SELECT T1.City FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode   =   T2.SourceAirport GROUP BY T1.City ORDER BY count ( * )  ASC LIMIT 1
连接数据库../datasets/cosql_dataset/database/flight_2/flight_2.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
extra pred: SELECT  City, COUNT(*) AS DepartingFlights FROM flights JOIN airports ON flights.SourceAirport = airports.AirportCode GROUP BY City ORDER BY DepartingFlights ASC LIMIT 1
extra gold: SELECT T1.City FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode   =   T2.SourceAirport GROUP BY T1.City ORDER BY count ( * )  ASC LIMIT 1

当前idx3
____________________
SELECT  FlightNo FROM flights JOIN airlines ON flights.Airline = airlines.uid WHERE airlines.Abbreviation = 'APG'
SELECT FlightNo FROM flights WHERE SourceAirport = "APG"
连接数据库../datasets/cosql_dataset/database/flight_2/flight_2.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:0
easy pred: SELECT  FlightNo FROM flights JOIN airlines ON flights.Airline = airlines.uid WHERE airlines.Abbreviation = 'APG'
easy gold: SELECT FlightNo FROM flights WHERE SourceAirport = "APG"

当前idx4
____________________
SELECT  AirportName FROM airports WHERE AirportCode = 'DYS'
SELECT AirportName FROM airports WHERE AirportCode = "DYS"
连接数据库../datasets/cosql_dataset/database/flight_2/flight_2.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx>4
____________________
SELECT  City FROM airports WHERE AirportCode = 'ABR'
SELECT CITY FROM airports WHERE AirportCode = "ABR"
连接数据库../datasets/cosql_dataset/database/flight_2/flight_2.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx1
eval_err_num:199
____________________
SELECT  DISTINCT country.Name FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE (countrylanguage.Language = 'English' OR countrylanguage.Language = 'Dutch')   AND countrylanguage.IsOfficial = 'T'
SELECT * FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code   =   T2.CountryCode WHERE T2.Language   =   "English" AND IsOfficial   =   "T" UNION SELECT * FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code   =   T2.CountryCode WHERE T2.Language   =   "Dutch" AND IsOfficial   =   "T"
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
extra pred: SELECT  DISTINCT country.Name FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE (countrylanguage.Language = 'English' OR countrylanguage.Language = 'Dutch')   AND countrylanguage.IsOfficial = 'T'
extra gold: SELECT * FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code   =   T2.CountryCode WHERE T2.Language   =   "English" AND IsOfficial   =   "T" UNION SELECT * FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code   =   T2.CountryCode WHERE T2.Language   =   "Dutch" AND IsOfficial   =   "T"

当前idx2
____________________
SELECT  Language FROM countrylanguage WHERE CountryCode = (SELECT Code FROM country WHERE Name = 'Belgium')   AND IsOfficial = 'T'
SELECT T2.language FROM country as T1 join countrylanguage as T2 on T1.code  =  T2.countrycode where T1.name  =  "Belgium" and T2.isofficial  =  "T"
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:0
medium pred: SELECT  Language FROM countrylanguage WHERE CountryCode = (SELECT Code FROM country WHERE Name = 'Belgium')   AND IsOfficial = 'T'
medium gold: SELECT T2.language FROM country as T1 join countrylanguage as T2 on T1.code  =  T2.countrycode where T1.name  =  "Belgium" and T2.isofficial  =  "T"

当前idx3
____________________
SELECT  country.Name FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.Language = 'Arabic'
SELECT T1.name FROM country as T1 join countrylanguage as T2 on T1.code  =  T2.countrycode where T2.language  =  "Arabic"
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx4
____________________
SELECT  Language FROM countrylanguage WHERE CountryCode = (SELECT Code FROM country WHERE Name = 'Egypt')
SELECT T2.language FROM country as T1 join countrylanguage as T2 on T1.code  =  T2.countrycode where T1.name  =  "Egypt"
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:0
medium pred: SELECT  Language FROM countrylanguage WHERE CountryCode = (SELECT Code FROM country WHERE Name = 'Egypt')
medium gold: SELECT T2.language FROM country as T1 join countrylanguage as T2 on T1.code  =  T2.countrycode where T1.name  =  "Egypt"

当前idx>4
eval_err_num:200
____________________
SELECT  COUNT(DISTINCT CountryCode) AS NumberOfCountries FROM countrylanguage WHERE Language = 'Arabic' AND IsOfficial = 'T'
SELECT count ( T1.name )  FROM country as T1 join countrylanguage as T2 on T1.code  =  T2.countrycode where T2.Language  =  "Arabic" and T2.isOfficial  =  "T"
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT  COUNT(DISTINCT CountryCode) AS NumberOfCountries FROM countrylanguage WHERE Language = 'Arabic' AND IsOfficial = 'T'
medium gold: SELECT count ( T1.name )  FROM country as T1 join countrylanguage as T2 on T1.code  =  T2.countrycode where T2.Language  =  "Arabic" and T2.isOfficial  =  "T"

当前idx>4
____________________
SELECT  country.Name FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.Language = 'Arabic' AND countrylanguage.IsOfficial = 'T'
SELECT T1.name FROM country as T1 join countrylanguage as T2 on T1.code  =  T2.countrycode where T2.Language  =  "Arabic" and T2.isOfficial  =  "T"
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx1
____________________
SELECT  Name, Population FROM country WHERE Continent = 'Africa'
SELECT name,population FROM country WHERE Continent   =   "Africa"
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT  Name, Population FROM country WHERE Continent = 'Asia'
SELECT name,population FROM country WHERE Continent   =   "Asia"
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx3
eval_err_num:201
____________________
SELECT  c_asia.Name FROM country AS c_asia JOIN (     SELECT MAX(Population) AS MaxPopulation     FROM country     WHERE Continent = 'Africa' ) AS c_africa ON c_asia.Population > c_africa.MaxPopulation WHERE c_asia.Continent = 'Asia'
SELECT Name FROM country WHERE Continent   =   "Asia"  AND population  >   ( SELECT min ( population )  FROM country WHERE Continent   =   "Africa" ) 
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
extra pred: SELECT  c_asia.Name FROM country AS c_asia JOIN (     SELECT MAX(Population) AS MaxPopulation     FROM country     WHERE Continent = 'Africa' ) AS c_africa ON c_asia.Population > c_africa.MaxPopulation WHERE c_asia.Continent = 'Asia'
extra gold: SELECT Name FROM country WHERE Continent   =   "Asia"  AND population  >   ( SELECT min ( population )  FROM country WHERE Continent   =   "Africa" ) 

当前idx4
eval_err_num:202
____________________
SELECT  c_asia.Name, c_asia.Population FROM country AS c_asia JOIN (     SELECT MAX(Population) AS MaxPopulation     FROM country     WHERE Continent = 'Africa' ) AS c_africa ON c_asia.Population > c_africa.MaxPopulation WHERE c_asia.Continent = 'Asia'
SELECT Name,population FROM country WHERE Continent   =   "Asia"  AND population  >   ( SELECT min ( population )  FROM country WHERE Continent   =   "Africa" ) 
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
extra pred: SELECT  c_asia.Name, c_asia.Population FROM country AS c_asia JOIN (     SELECT MAX(Population) AS MaxPopulation     FROM country     WHERE Continent = 'Africa' ) AS c_africa ON c_asia.Population > c_africa.MaxPopulation WHERE c_asia.Continent = 'Asia'
extra gold: SELECT Name,population FROM country WHERE Continent   =   "Asia"  AND population  >   ( SELECT min ( population )  FROM country WHERE Continent   =   "Africa" ) 

当前idx>4
eval_err_num:203
____________________
SELECT  c_asia.Name, c_asia.GovernmentForm FROM country AS c_asia JOIN (     SELECT MAX(Population) AS MaxPopulation     FROM country     WHERE Continent = 'Africa' ) AS c_africa ON c_asia.Population > c_africa.MaxPopulation WHERE c_asia.Continent = 'Asia'
SELECT Name,GovernmentForm FROM country WHERE Continent   =   "Asia"  AND population  >   ( SELECT min ( population )  FROM country WHERE Continent   =   "Africa" ) 
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
extra pred: SELECT  c_asia.Name, c_asia.GovernmentForm FROM country AS c_asia JOIN (     SELECT MAX(Population) AS MaxPopulation     FROM country     WHERE Continent = 'Africa' ) AS c_africa ON c_asia.Population > c_africa.MaxPopulation WHERE c_asia.Continent = 'Asia'
extra gold: SELECT Name,GovernmentForm FROM country WHERE Continent   =   "Asia"  AND population  >   ( SELECT min ( population )  FROM country WHERE Continent   =   "Africa" ) 

当前idx1
____________________
SELECT  Name  FROM country  WHERE Continent = 'Asia'  ORDER BY LifeExpectancy ASC  LIMIT 1
SELECT Name FROM country WHERE Continent   =   "Asia" ORDER BY LifeExpectancy LIMIT 1
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT  Name  FROM country  WHERE Continent = 'Africa'  ORDER BY LifeExpectancy ASC  LIMIT 1
SELECT Name FROM country WHERE Continent   =   "Africa" ORDER BY LifeExpectancy LIMIT 1
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx3
____________________
SELECT  GNP  FROM country  WHERE Name = 'Afghanistan'
SELECT GNP FROM country WHERE name = "Afghanistan"
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx4
____________________
SELECT  Population  FROM country  WHERE Name = 'Afghanistan'
SELECT Population FROM country WHERE name = "Afghanistan"
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx1
____________________
SELECT  Earnings FROM poker_player WHERE Best_Finish = 1
SELECT Earnings FROM poker_player
连接数据库../datasets/cosql_dataset/database/poker_player/poker_player.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
easy pred: SELECT  Earnings FROM poker_player WHERE Best_Finish = 1
easy gold: SELECT Earnings FROM poker_player

当前idx2
____________________
SELECT  Poker_Player_ID, Earnings FROM poker_player ORDER BY Earnings DESC
SELECT Earnings FROM poker_player order by Earnings desc
连接数据库../datasets/cosql_dataset/database/poker_player/poker_player.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
easy pred: SELECT  Poker_Player_ID, Earnings FROM poker_player ORDER BY Earnings DESC
easy gold: SELECT Earnings FROM poker_player order by Earnings desc

当前idx3
____________________
SELECT  Final_Table_Made FROM poker_player WHERE Earnings = (SELECT MIN(Earnings) FROM poker_player)
SELECT Final_Table_Made FROM poker_player order by Earnings asc limit 1
连接数据库../datasets/cosql_dataset/database/poker_player/poker_player.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:0
medium pred: SELECT  Final_Table_Made FROM poker_player WHERE Earnings = (SELECT MIN(Earnings) FROM poker_player)
medium gold: SELECT Final_Table_Made FROM poker_player order by Earnings asc limit 1

当前idx4
____________________
SELECT  Final_Table_Made FROM poker_player WHERE Earnings = (SELECT MAX(Earnings) FROM poker_player)
SELECT Final_Table_Made FROM poker_player order by Earnings desc limit 1
连接数据库../datasets/cosql_dataset/database/poker_player/poker_player.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:0
medium pred: SELECT  Final_Table_Made FROM poker_player WHERE Earnings = (SELECT MAX(Earnings) FROM poker_player)
medium gold: SELECT Final_Table_Made FROM poker_player order by Earnings desc limit 1

当前idx1
____________________
SELECT  Templates.Template_ID, Documents.Document_ID FROM Templates JOIN Documents ON Templates.Template_ID = Documents.Template_ID
SELECT template_id FROM Documents
连接数据库../datasets/cosql_dataset/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
easy pred: SELECT  Templates.Template_ID, Documents.Document_ID FROM Templates JOIN Documents ON Templates.Template_ID = Documents.Template_ID
easy gold: SELECT template_id FROM Documents

当前idx2
____________________
SELECT  Templates.Template_ID, Documents.Document_ID FROM Templates JOIN Documents ON Templates.Template_ID = Documents.Template_ID
SELECT template_id ,Document_ID FROM Documents
连接数据库../datasets/cosql_dataset/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:False
medium pred: SELECT  Templates.Template_ID, Documents.Document_ID FROM Templates JOIN Documents ON Templates.Template_ID = Documents.Template_ID
medium gold: SELECT template_id ,Document_ID FROM Documents

当前idx3
eval_err_num:204
____________________
SELECT clause. Here's the corrected SQL query:
SELECT template_id FROM Templates EXCEPT SELECT template_id FROM Documents
连接数据库../datasets/cosql_dataset/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite
执行第一个查询
执行出错: unrecognized token: "'s the corrected SQL query:"
eval_exec:False
exact_score:0
hard pred: SELECT clause. Here's the corrected SQL query:
hard gold: SELECT template_id FROM Templates EXCEPT SELECT template_id FROM Documents

当前idx4
eval_err_num:205
____________________
SELECT  Templates.Template_ID, Templates.Template_Type_Code FROM Templates LEFT JOIN Documents ON Templates.Template_ID = Documents.Template_ID WHERE Documents.Document_ID IS NULL
SELECT T1.template_id ,T1.Template_Type_Code FROM Templates as T1 join Documents as T2 on T1.Template_ID = T2.Template_ID
连接数据库../datasets/cosql_dataset/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT  Templates.Template_ID, Templates.Template_Type_Code FROM Templates LEFT JOIN Documents ON Templates.Template_ID = Documents.Template_ID WHERE Documents.Document_ID IS NULL
medium gold: SELECT T1.template_id ,T1.Template_Type_Code FROM Templates as T1 join Documents as T2 on T1.Template_ID = T2.Template_ID

当前idx1
eval_err_num:206
____________________
SELECT  COUNT(DISTINCT dog_id) AS NumberOfDogsTreated FROM Treatments
SELECT count ( * )  FROM Dogs WHERE dog_id IN  (  SELECT dog_id FROM Treatments  ) 
连接数据库../datasets/cosql_dataset/database/dog_kennels/dog_kennels.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
hard pred: SELECT  COUNT(DISTINCT dog_id) AS NumberOfDogsTreated FROM Treatments
hard gold: SELECT count ( * )  FROM Dogs WHERE dog_id IN  (  SELECT dog_id FROM Treatments  ) 

当前idx2
eval_err_num:207
____________________
SELECT  MIN(age) AS YoungestAge FROM Dogs WHERE dog_id IN (SELECT DISTINCT dog_id FROM Treatments)
SELECT min ( age )  FROM Dogs WHERE dog_id IN  (  SELECT dog_id FROM Treatments  ) 
连接数据库../datasets/cosql_dataset/database/dog_kennels/dog_kennels.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
hard pred: SELECT  MIN(age) AS YoungestAge FROM Dogs WHERE dog_id IN (SELECT DISTINCT dog_id FROM Treatments)
hard gold: SELECT min ( age )  FROM Dogs WHERE dog_id IN  (  SELECT dog_id FROM Treatments  ) 

当前idx3
eval_err_num:208
____________________
SELECT  MAX(age) AS OldestAge FROM Dogs WHERE dog_id IN (SELECT DISTINCT dog_id FROM Treatments)
SELECT max ( age )  FROM Dogs WHERE dog_id IN  (  SELECT dog_id FROM Treatments  ) 
连接数据库../datasets/cosql_dataset/database/dog_kennels/dog_kennels.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
hard pred: SELECT  MAX(age) AS OldestAge FROM Dogs WHERE dog_id IN (SELECT DISTINCT dog_id FROM Treatments)
hard gold: SELECT max ( age )  FROM Dogs WHERE dog_id IN  (  SELECT dog_id FROM Treatments  ) 

当前idx4
eval_err_num:209
____________________
SELECT  AVG(age) AS AverageAge FROM Dogs WHERE dog_id IN (SELECT DISTINCT dog_id FROM Treatments)
SELECT avg ( age )  FROM Dogs WHERE dog_id IN  (  SELECT dog_id FROM Treatments  ) 
连接数据库../datasets/cosql_dataset/database/dog_kennels/dog_kennels.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
hard pred: SELECT  AVG(age) AS AverageAge FROM Dogs WHERE dog_id IN (SELECT DISTINCT dog_id FROM Treatments)
hard gold: SELECT avg ( age )  FROM Dogs WHERE dog_id IN  (  SELECT dog_id FROM Treatments  ) 

当前idx1
____________________
SELECT  COUNT(DISTINCT semester_name) FROM Semesters
SELECT distinct semester_name FROM Semesters
连接数据库../datasets/cosql_dataset/database/student_transcripts_tracking/student_transcripts_tracking.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
easy pred: SELECT  COUNT(DISTINCT semester_name) FROM Semesters
easy gold: SELECT distinct semester_name FROM Semesters

当前idx2
eval_err_num:210
____________________
SELECT  DISTINCT s.semester_name FROM Semesters s LEFT JOIN Student_Enrolment se ON s.semester_id = se.semester_id WHERE se.student_enrolment_id IS NULL
SELECT semester_name FROM Semesters WHERE semester_id NOT IN (  SELECT semester_id FROM Student_Enrolment  ) 
连接数据库../datasets/cosql_dataset/database/student_transcripts_tracking/student_transcripts_tracking.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
hard pred: SELECT  DISTINCT s.semester_name FROM Semesters s LEFT JOIN Student_Enrolment se ON s.semester_id = se.semester_id WHERE se.student_enrolment_id IS NULL
hard gold: SELECT semester_name FROM Semesters WHERE semester_id NOT IN (  SELECT semester_id FROM Student_Enrolment  ) 

当前idx3
eval_err_num:211
____________________
SELECT  DISTINCT s.semester_id, s.semester_name, s.semester_description FROM Semesters s LEFT JOIN Student_Enrolment se ON s.semester_id = se.semester_id WHERE se.student_enrolment_id IS NULL
SELECT semester_id,semester_name,semester_description FROM Semesters WHERE semester_id NOT IN (  SELECT semester_id FROM Student_Enrolment  ) 
连接数据库../datasets/cosql_dataset/database/student_transcripts_tracking/student_transcripts_tracking.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
extra pred: SELECT  DISTINCT s.semester_id, s.semester_name, s.semester_description FROM Semesters s LEFT JOIN Student_Enrolment se ON s.semester_id = se.semester_id WHERE se.student_enrolment_id IS NULL
extra gold: SELECT semester_id,semester_name,semester_description FROM Semesters WHERE semester_id NOT IN (  SELECT semester_id FROM Student_Enrolment  ) 

当前idx1
eval_err_num:212
____________________
SELECT  COUNT(*) AS FemaleStudentsCount FROM Student WHERE Sex = 'Female'
SELECT count ( * ) FROM student WHERE Sex = "F"
连接数据库../datasets/cosql_dataset/database/pets_1/pets_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
easy pred: SELECT  COUNT(*) AS FemaleStudentsCount FROM Student WHERE Sex = 'Female'
easy gold: SELECT count ( * ) FROM student WHERE Sex = "F"

当前idx2
eval_err_num:213
____________________
SELECT  Fname || ' ' || LName AS FullName FROM Student WHERE Age = (SELECT MIN(Age) FROM Student)
SELECT LName,Fname  FROM student order  by  Age  limit 1
连接数据库../datasets/cosql_dataset/database/pets_1/pets_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT  Fname || ' ' || LName AS FullName FROM Student WHERE Age = (SELECT MIN(Age) FROM Student)
medium gold: SELECT LName,Fname  FROM student order  by  Age  limit 1

当前idx3
eval_err_num:214
____________________
SELECT  AVG(Age) AS AverageAge FROM Student WHERE StuID NOT IN (SELECT StuID FROM Has_Pet)
SELECT avg ( age )  FROM student WHERE stuid NOT IN  ( SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid ) 
连接数据库../datasets/cosql_dataset/database/pets_1/pets_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
extra pred: SELECT  AVG(Age) AS AverageAge FROM Student WHERE StuID NOT IN (SELECT StuID FROM Has_Pet)
extra gold: SELECT avg ( age )  FROM student WHERE stuid NOT IN  ( SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid ) 

当前idx4
____________________
SELECT  city_code FROM Student WHERE StuID = 1003
SELECT city_code  FROM student WHERE 
StuID = 1003
连接数据库../datasets/cosql_dataset/database/pets_1/pets_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx1
____________________
SELECT  DISTINCT TV_Channel.Country FROM Cartoon JOIN TV_Channel ON Cartoon.Channel = TV_Channel.id WHERE Cartoon.Written_by = 'Todd Casey'
SELECT T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id  =  T2.Channel WHERE T2.written_by   =   'Todd Casey'
连接数据库../datasets/cosql_dataset/database/tvshow/tvshow.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT  Title FROM Cartoon WHERE Written_by = 'Todd Casey'
SELECT title FROM cartoon  WHERE written_by   =   'Todd Casey'
连接数据库../datasets/cosql_dataset/database/tvshow/tvshow.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx3
____________________
SELECT  Directed_by FROM Cartoon WHERE Title = 'Enter the Outsiders'
SELECT directed_by FROM cartoon WHERE title  =  "Enter the Outsiders!"
连接数据库../datasets/cosql_dataset/database/tvshow/tvshow.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:True
当前idx1
eval_err_num:215
____________________
SELECT  COUNT(DISTINCT Language) AS TotalLanguages FROM countrylanguage
SELECT count ( distinct language )  from countrylanguage
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
easy pred: SELECT  COUNT(DISTINCT Language) AS TotalLanguages FROM countrylanguage
easy gold: SELECT count ( distinct language )  from countrylanguage

当前idx2
____________________
SELECT  Population FROM country WHERE Name = 'Aruba'
SELECT population from country where name  =  "Aruba"
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx3
____________________
SELECT  GNPOld FROM country WHERE Name = 'Afghanistan'
SELECT GNPOLD from country where name  =  "Afghanistan"
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx1
eval_err_num:216
____________________
SELECT  country_code, COUNT(player_id) AS player_count FROM players GROUP BY country_code HAVING player_count > 50
SELECT country_code FROM players GROUP BY country_code HAVING count ( * )   >  50
连接数据库../datasets/cosql_dataset/database/wta_1/wta_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
easy pred: SELECT  country_code, COUNT(player_id) AS player_count FROM players GROUP BY country_code HAVING player_count > 50
easy gold: SELECT country_code FROM players GROUP BY country_code HAVING count ( * )   >  50

当前idx2
eval_err_num:217
____________________
SELECT  country_code, COUNT(player_id) AS player_count FROM players GROUP BY country_code HAVING player_count < 40
SELECT country_code FROM players GROUP BY country_code HAVING count ( * )   <  40
连接数据库../datasets/cosql_dataset/database/wta_1/wta_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
easy pred: SELECT  country_code, COUNT(player_id) AS player_count FROM players GROUP BY country_code HAVING player_count < 40
easy gold: SELECT country_code FROM players GROUP BY country_code HAVING count ( * )   <  40

当前idx3
____________________
SELECT  first_name, last_name FROM players WHERE country_code = 'AHO'
SELECT first_name,last_name FROM players where country_code = 'AHO'
连接数据库../datasets/cosql_dataset/database/wta_1/wta_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx4
____________________
SELECT  player_id, first_name, last_name FROM players WHERE country_code = 'AHO'
SELECT player_id FROM players where country_code = 'AHO'
连接数据库../datasets/cosql_dataset/database/wta_1/wta_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
easy pred: SELECT  player_id, first_name, last_name FROM players WHERE country_code = 'AHO'
easy gold: SELECT player_id FROM players where country_code = 'AHO'

当前idx>4
____________________
SELECT  hand FROM players WHERE player_id = 206449
SELECT hand FROM players where player_id = 206449
连接数据库../datasets/cosql_dataset/database/wta_1/wta_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx>4
eval_err_num:218
____________________
SELECT  COUNT(*) AS same_hand_count FROM players WHERE hand = (SELECT hand FROM players WHERE player_id = 206449)   AND player_id != 206449
SELECT count ( * )  FROM players where hand = 'U'
连接数据库../datasets/cosql_dataset/database/wta_1/wta_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
easy pred: SELECT  COUNT(*) AS same_hand_count FROM players WHERE hand = (SELECT hand FROM players WHERE player_id = 206449)   AND player_id != 206449
easy gold: SELECT count ( * )  FROM players where hand = 'U'

当前idx1
____________________
SELECT  name FROM battle WHERE id NOT IN (     SELECT lost_in_battle     FROM ship     WHERE location = 'English Channel' )
SELECT name FROM battle EXCEPT SELECT T1.name FROM battle AS T1 JOIN ship AS T2 ON T1.id   =   T2.lost_in_battle WHERE T2.location   =   'English Channel'
连接数据库../datasets/cosql_dataset/database/battle_death/battle_death.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
hard pred: SELECT  name FROM battle WHERE id NOT IN (     SELECT lost_in_battle     FROM ship     WHERE location = 'English Channel' )
hard gold: SELECT name FROM battle EXCEPT SELECT T1.name FROM battle AS T1 JOIN ship AS T2 ON T1.id   =   T2.lost_in_battle WHERE T2.location   =   'English Channel'

当前idx2
____________________
SELECT  name, result FROM battle WHERE id NOT IN (     SELECT lost_in_battle     FROM ship     WHERE location = 'English Channel' )
SELECT RESULT  FROM battle where name not in  ( SELECT T1.name FROM battle AS T1 JOIN ship AS T2 ON T1.id   =   T2.lost_in_battle WHERE T2.location   =   'English Channel' ) 
连接数据库../datasets/cosql_dataset/database/battle_death/battle_death.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
hard pred: SELECT  name, result FROM battle WHERE id NOT IN (     SELECT lost_in_battle     FROM ship     WHERE location = 'English Channel' )
hard gold: SELECT RESULT  FROM battle where name not in  ( SELECT T1.name FROM battle AS T1 JOIN ship AS T2 ON T1.id   =   T2.lost_in_battle WHERE T2.location   =   'English Channel' ) 

当前idx3
____________________
SELECT  name, bulgarian_commander FROM battle WHERE id NOT IN (     SELECT lost_in_battle     FROM ship     WHERE location = 'English Channel' )
SELECT bulgarian_commander FROM battle where name not in  ( SELECT T1.name FROM battle AS T1 JOIN ship AS T2 ON T1.id   =   T2.lost_in_battle WHERE T2.location   =   'English Channel' ) 
连接数据库../datasets/cosql_dataset/database/battle_death/battle_death.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
hard pred: SELECT  name, bulgarian_commander FROM battle WHERE id NOT IN (     SELECT lost_in_battle     FROM ship     WHERE location = 'English Channel' )
hard gold: SELECT bulgarian_commander FROM battle where name not in  ( SELECT T1.name FROM battle AS T1 JOIN ship AS T2 ON T1.id   =   T2.lost_in_battle WHERE T2.location   =   'English Channel' ) 

当前idx4
____________________
SELECT  name, date FROM battle WHERE id NOT IN (     SELECT lost_in_battle     FROM ship     WHERE location = 'English Channel' )
SELECT date FROM battle where name not in  ( SELECT T1.name FROM battle AS T1 JOIN ship AS T2 ON T1.id   =   T2.lost_in_battle WHERE T2.location   =   'English Channel' ) 
连接数据库../datasets/cosql_dataset/database/battle_death/battle_death.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
hard pred: SELECT  name, date FROM battle WHERE id NOT IN (     SELECT lost_in_battle     FROM ship     WHERE location = 'English Channel' )
hard gold: SELECT date FROM battle where name not in  ( SELECT T1.name FROM battle AS T1 JOIN ship AS T2 ON T1.id   =   T2.lost_in_battle WHERE T2.location   =   'English Channel' ) 

当前idx>4
____________________
SELECT  name, latin_commander FROM battle WHERE id NOT IN (     SELECT lost_in_battle     FROM ship     WHERE location = 'English Channel' )
SELECT  latin_commander  FROM battle where name not in  ( SELECT T1.name FROM battle AS T1 JOIN ship AS T2 ON T1.id   =   T2.lost_in_battle WHERE T2.location   =   'English Channel' ) 
连接数据库../datasets/cosql_dataset/database/battle_death/battle_death.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
hard pred: SELECT  name, latin_commander FROM battle WHERE id NOT IN (     SELECT lost_in_battle     FROM ship     WHERE location = 'English Channel' )
hard gold: SELECT  latin_commander  FROM battle where name not in  ( SELECT T1.name FROM battle AS T1 JOIN ship AS T2 ON T1.id   =   T2.lost_in_battle WHERE T2.location   =   'English Channel' ) 

当前idx1
____________________
SELECT  COUNT(*) FROM shop
SELECT COUNT ( * )  FROM shop
连接数据库../datasets/cosql_dataset/database/employee_hire_evaluation/employee_hire_evaluation.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT  MAX(Number_products) FROM shop
SELECT MAX ( Number_products )  FROM shop
连接数据库../datasets/cosql_dataset/database/employee_hire_evaluation/employee_hire_evaluation.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx3
____________________
SELECT  MIN(Number_products) FROM shop
SELECT MIN ( Number_products )  FROM shop
连接数据库../datasets/cosql_dataset/database/employee_hire_evaluation/employee_hire_evaluation.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx1
eval_err_num:219
____________________
SELECT  Breeds.breed_name, COUNT(Dogs.dog_id) AS number_of_dogs FROM Breeds JOIN Dogs ON Breeds.breed_code = Dogs.breed_code GROUP BY Breeds.breed_name ORDER BY number_of_dogs DESC LIMIT 1
SELECT T1.breed_name FROM Breeds AS T1 JOIN Dogs AS T2 ON T1.breed_code   =   T2.breed_code GROUP BY T1.breed_name ORDER BY count ( * )  DESC LIMIT 1
连接数据库../datasets/cosql_dataset/database/dog_kennels/dog_kennels.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
extra pred: SELECT  Breeds.breed_name, COUNT(Dogs.dog_id) AS number_of_dogs FROM Breeds JOIN Dogs ON Breeds.breed_code = Dogs.breed_code GROUP BY Breeds.breed_name ORDER BY number_of_dogs DESC LIMIT 1
extra gold: SELECT T1.breed_name FROM Breeds AS T1 JOIN Dogs AS T2 ON T1.breed_code   =   T2.breed_code GROUP BY T1.breed_name ORDER BY count ( * )  DESC LIMIT 1

当前idx2
eval_err_num:220
____________________
SELECT  COUNT(Dogs.dog_id) AS bulldog_count FROM Dogs JOIN Breeds ON Dogs.breed_code = Breeds.breed_code WHERE Breeds.breed_name = 'Bulldog'
SELECT count ( * )  FROM Breeds AS T1 JOIN Dogs AS T2 ON T1.breed_code   =   T2.breed_code where T1.breed_name  =  "Bulldog"
连接数据库../datasets/cosql_dataset/database/dog_kennels/dog_kennels.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT  COUNT(Dogs.dog_id) AS bulldog_count FROM Dogs JOIN Breeds ON Dogs.breed_code = Breeds.breed_code WHERE Breeds.breed_name = 'Bulldog'
medium gold: SELECT count ( * )  FROM Breeds AS T1 JOIN Dogs AS T2 ON T1.breed_code   =   T2.breed_code where T1.breed_name  =  "Bulldog"

当前idx1
eval_err_num:221
____________________
SELECT  S.Fname, S.LName FROM Student S JOIN Has_Pet HP ON S.StuID = HP.StuID JOIN Pets P ON HP.PetID = P.PetID WHERE P.PetType = 'cat'
SELECT T1.Fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid   =   T2.stuid JOIN pets AS T3 ON T3.petid   =   T2.petid WHERE T3.pettype   =   'dog'
连接数据库../datasets/cosql_dataset/database/pets_1/pets_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
hard pred: SELECT  S.Fname, S.LName FROM Student S JOIN Has_Pet HP ON S.StuID = HP.StuID JOIN Pets P ON HP.PetID = P.PetID WHERE P.PetType = 'cat'
hard gold: SELECT T1.Fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid   =   T2.stuid JOIN pets AS T3 ON T3.petid   =   T2.petid WHERE T3.pettype   =   'dog'

当前idx2
eval_err_num:222
____________________
SELECT  COUNT(DISTINCT S.StuID) FROM Student S JOIN Has_Pet HP ON S.StuID = HP.StuID
SELECT count ( T2.StuId )  FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid   =   T2.stuid JOIN pets AS T3 ON T3.petid   =   T2.petid
连接数据库../datasets/cosql_dataset/database/pets_1/pets_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT  COUNT(DISTINCT S.StuID) FROM Student S JOIN Has_Pet HP ON S.StuID = HP.StuID
medium gold: SELECT count ( T2.StuId )  FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid   =   T2.stuid JOIN pets AS T3 ON T3.petid   =   T2.petid

当前idx3
eval_err_num:223
____________________
SELECT  P.pet_age FROM Pets P JOIN Has_Pet HP ON P.PetID = HP.PetID JOIN Student S ON HP.StuID = S.StuID WHERE S.Fname = 'Linda'
SELECT T3.pet_age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid   =   T2.stuid JOIN pets AS T3 ON T3.petid   =   T2.petid WHERE T1.Fname  =  "Linda"
连接数据库../datasets/cosql_dataset/database/pets_1/pets_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
hard pred: SELECT  P.pet_age FROM Pets P JOIN Has_Pet HP ON P.PetID = HP.PetID JOIN Student S ON HP.StuID = S.StuID WHERE S.Fname = 'Linda'
hard gold: SELECT T3.pet_age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid   =   T2.stuid JOIN pets AS T3 ON T3.petid   =   T2.petid WHERE T1.Fname  =  "Linda"

当前idx1
____________________
SELECT  Name FROM visitor WHERE Level_of_membership > 4
SELECT name FROM visitor WHERE Level_of_membership  >  4
连接数据库../datasets/cosql_dataset/database/museum_visit/museum_visit.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT  Name, Age FROM visitor WHERE Level_of_membership > 4
SELECT name, age FROM visitor WHERE Level_of_membership  >  4
连接数据库../datasets/cosql_dataset/database/museum_visit/museum_visit.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx3
____________________
SELECT  Name, Age FROM visitor WHERE Level_of_membership > 4 ORDER BY Age DESC
SELECT name ,  age FROM visitor WHERE Level_of_membership  >  4 ORDER BY age DESC
连接数据库../datasets/cosql_dataset/database/museum_visit/museum_visit.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx4
____________________
SELECT  ID, Name, Age FROM visitor WHERE Level_of_membership > 4 ORDER BY Age DESC
SELECT id FROM visitor WHERE Level_of_membership  >  4 ORDER BY age DESC
连接数据库../datasets/cosql_dataset/database/museum_visit/museum_visit.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT  ID, Name, Age FROM visitor WHERE Level_of_membership > 4 ORDER BY Age DESC
medium gold: SELECT id FROM visitor WHERE Level_of_membership  >  4 ORDER BY age DESC

当前idx1
eval_err_num:224
____________________
SELECT  s.first_name, s.middle_name, s.last_name FROM Students s JOIN Student_Enrolment se ON s.student_id = se.student_id JOIN Semesters sm ON se.semester_id = sm.semester_id GROUP BY s.student_id, sm.semester_id HAVING COUNT(DISTINCT se.degree_program_id) = 2
SELECT T1.first_name ,  T1.middle_name ,  T1.last_name ,  T1.student_id FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id   =   T2.student_id GROUP BY T1.student_id HAVING count ( * )    =   2
连接数据库../datasets/cosql_dataset/database/student_transcripts_tracking/student_transcripts_tracking.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT  s.first_name, s.middle_name, s.last_name FROM Students s JOIN Student_Enrolment se ON s.student_id = se.student_id JOIN Semesters sm ON se.semester_id = sm.semester_id GROUP BY s.student_id, sm.semester_id HAVING COUNT(DISTINCT se.degree_program_id) = 2
medium gold: SELECT T1.first_name ,  T1.middle_name ,  T1.last_name ,  T1.student_id FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id   =   T2.student_id GROUP BY T1.student_id HAVING count ( * )    =   2

当前idx2
eval_err_num:225
____________________
SELECT  s.student_id, s.first_name, s.middle_name, s.last_name FROM Students s JOIN Student_Enrolment se ON s.student_id = se.student_id JOIN Semesters sm ON se.semester_id = sm.semester_id GROUP BY s.student_id, sm.semester_id HAVING COUNT(DISTINCT se.degree_program_id) = 2
SELECT T1.student_id FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id   =   T2.student_id GROUP BY T1.student_id HAVING count ( * )    =   2
连接数据库../datasets/cosql_dataset/database/student_transcripts_tracking/student_transcripts_tracking.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT  s.student_id, s.first_name, s.middle_name, s.last_name FROM Students s JOIN Student_Enrolment se ON s.student_id = se.student_id JOIN Semesters sm ON se.semester_id = sm.semester_id GROUP BY s.student_id, sm.semester_id HAVING COUNT(DISTINCT se.degree_program_id) = 2
medium gold: SELECT T1.student_id FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id   =   T2.student_id GROUP BY T1.student_id HAVING count ( * )    =   2

当前idx3
____________________
SELECT  email_address FROM Students WHERE student_id = 4
SELECT email_address FROM Students where student_id  =  4
连接数据库../datasets/cosql_dataset/database/student_transcripts_tracking/student_transcripts_tracking.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx4
____________________
SELECT  date_first_registered FROM Students WHERE first_name = 'Timothy' AND middle_name = 'Anna' AND last_name = 'Ward'
SELECT date_first_registered FROM Students where first_name  =  'Timmothy' and middle_name  =  'Anna' and last_name  =  'Ward'
连接数据库../datasets/cosql_dataset/database/student_transcripts_tracking/student_transcripts_tracking.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:True
当前idx1
eval_err_num:226
____________________
SELECT  COUNT(DISTINCT owner_id) AS NumberOfOwnersInVirginia FROM Owners WHERE state = 'Virginia'
SELECT count ( * )  FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id   =   T2.owner_id WHERE T1.state   =   'Virginia'
连接数据库../datasets/cosql_dataset/database/dog_kennels/dog_kennels.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT  COUNT(DISTINCT owner_id) AS NumberOfOwnersInVirginia FROM Owners WHERE state = 'Virginia'
medium gold: SELECT count ( * )  FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id   =   T2.owner_id WHERE T1.state   =   'Virginia'

当前idx2
____________________
SELECT  first_name, last_name FROM Owners WHERE state = 'Virginia'
SELECT T1.first_name, T1.last_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id   =   T2.owner_id WHERE T1.state   =   'Virginia'
连接数据库../datasets/cosql_dataset/database/dog_kennels/dog_kennels.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:False
medium pred: SELECT  first_name, last_name FROM Owners WHERE state = 'Virginia'
medium gold: SELECT T1.first_name, T1.last_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id   =   T2.owner_id WHERE T1.state   =   'Virginia'

当前idx3
eval_err_num:227
____________________
SELECT  Owners.first_name, Owners.last_name, Dogs.name AS DogName FROM Owners JOIN Dogs ON Owners.owner_id = Dogs.owner_id WHERE Owners.state = 'Virginia'
SELECT T2.name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id   =   T2.owner_id WHERE T1.state   =   'Virginia'
连接数据库../datasets/cosql_dataset/database/dog_kennels/dog_kennels.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT  Owners.first_name, Owners.last_name, Dogs.name AS DogName FROM Owners JOIN Dogs ON Owners.owner_id = Dogs.owner_id WHERE Owners.state = 'Virginia'
medium gold: SELECT T2.name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id   =   T2.owner_id WHERE T1.state   =   'Virginia'

当前idx4
____________________
SELECT  Breeds.breed_name FROM Dogs JOIN Breeds ON Dogs.breed_code = Breeds.breed_code WHERE Dogs.name = 'Bessie'
SELECT T2.breed_code FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id   =   T2.owner_id WHERE T2.name  =  "Bessie"
连接数据库../datasets/cosql_dataset/database/dog_kennels/dog_kennels.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT  Breeds.breed_name FROM Dogs JOIN Breeds ON Dogs.breed_code = Breeds.breed_code WHERE Dogs.name = 'Bessie'
medium gold: SELECT T2.breed_code FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id   =   T2.owner_id WHERE T2.name  =  "Bessie"

当前idx>4
____________________
SELECT  Sizes.size_description FROM Dogs JOIN Sizes ON Dogs.size_code = Sizes.size_code WHERE Dogs.name = 'Bessie'
SELECT T2.size_code FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id   =   T2.owner_id WHERE T2.name  =  "Bessie"
连接数据库../datasets/cosql_dataset/database/dog_kennels/dog_kennels.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT  Sizes.size_description FROM Dogs JOIN Sizes ON Dogs.size_code = Sizes.size_code WHERE Dogs.name = 'Bessie'
medium gold: SELECT T2.size_code FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id   =   T2.owner_id WHERE T2.name  =  "Bessie"

当前idx1
____________________
SELECT  COUNT(DISTINCT Record_Company) FROM orchestra
SELECT count ( Record_Company )  FROM orchestra
连接数据库../datasets/cosql_dataset/database/orchestra/orchestra.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:True
当前idx2
____________________
SELECT  COUNT(*) FROM orchestra
SELECT count ( Orchestra_ID )  FROM orchestra
连接数据库../datasets/cosql_dataset/database/orchestra/orchestra.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
easy pred: SELECT  COUNT(*) FROM orchestra
easy gold: SELECT count ( Orchestra_ID )  FROM orchestra

当前idx3
____________________
SELECT  Orchestra, Year_of_Founded FROM orchestra ORDER BY Year_of_Founded ASC
select orchestra from orchestra order by Year_of_Founded
连接数据库../datasets/cosql_dataset/database/orchestra/orchestra.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
easy pred: SELECT  Orchestra, Year_of_Founded FROM orchestra ORDER BY Year_of_Founded ASC
easy gold: select orchestra from orchestra order by Year_of_Founded

当前idx4
____________________
SELECT  Year_of_Founded FROM orchestra WHERE Orchestra = 'Royal Danish Orchestra'
select year_of_founded  from orchestra where orchestra = 'Royal Danish Orchestra'
连接数据库../datasets/cosql_dataset/database/orchestra/orchestra.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx>4
eval_err_num:228
____________________
SELECT  Record_Company, COUNT(*) AS NumberOfOrchestras  FROM orchestra  GROUP BY Record_Company  ORDER BY NumberOfOrchestras DESC  LIMIT 1
SELECT Record_Company FROM orchestra GROUP BY Record_Company ORDER BY COUNT ( * )  DESC LIMIT 1
连接数据库../datasets/cosql_dataset/database/orchestra/orchestra.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
hard pred: SELECT  Record_Company, COUNT(*) AS NumberOfOrchestras  FROM orchestra  GROUP BY Record_Company  ORDER BY NumberOfOrchestras DESC  LIMIT 1
hard gold: SELECT Record_Company FROM orchestra GROUP BY Record_Company ORDER BY COUNT ( * )  DESC LIMIT 1

当前idx1
eval_err_num:229
____________________
SELECT  COUNT(*) AS NumberOfFlights FROM flights JOIN airlines ON flights.Airline = airlines.uid WHERE airlines.Airline = 'United Airlines' AND flights.DestAirport = 'ASY'
SELECT count ( * )  FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T2.Airline   =   T1.uid WHERE T1.Airline   =   "United Airlines" AND T2.DestAirport   =   "ASY"
连接数据库../datasets/cosql_dataset/database/flight_2/flight_2.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT  COUNT(*) AS NumberOfFlights FROM flights JOIN airlines ON flights.Airline = airlines.uid WHERE airlines.Airline = 'United Airlines' AND flights.DestAirport = 'ASY'
medium gold: SELECT count ( * )  FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T2.Airline   =   T1.uid WHERE T1.Airline   =   "United Airlines" AND T2.DestAirport   =   "ASY"

当前idx2
____________________
SELECT  uid FROM airlines WHERE Airline = 'United Airlines'
select uid from airlines where airline  =  "United Airlines"
连接数据库../datasets/cosql_dataset/database/flight_2/flight_2.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx3
eval_err_num:230
____________________
SELECT  COUNT(*) AS NumberOfFlights FROM flights WHERE Airline = 1 AND DestAirport = 'ASY'
SELECT count ( * )  FROM FLIGHTS WHERE airline  =  1 and DestAirport   =   " ASY"
连接数据库../datasets/cosql_dataset/database/flight_2/flight_2.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT  COUNT(*) AS NumberOfFlights FROM flights WHERE Airline = 1 AND DestAirport = 'ASY'
medium gold: SELECT count ( * )  FROM FLIGHTS WHERE airline  =  1 and DestAirport   =   " ASY"

当前idx1
eval_err_num:231
____________________
SELECT  COUNT(*) AS VolvoCarCount FROM car_names WHERE Make = 'Volvo'
SELECT count ( * )  FROM CAR_names where model  =  "volvo"
连接数据库../datasets/cosql_dataset/database/car_1/car_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
easy pred: SELECT  COUNT(*) AS VolvoCarCount FROM car_names WHERE Make = 'Volvo'
easy gold: SELECT count ( * )  FROM CAR_names where model  =  "volvo"

当前idx2
eval_err_num:232
____________________
SELECT  Id FROM cars_data WHERE MakeId IN (     SELECT MakeId     FROM car_names     WHERE Make = 'Volvo' ) ORDER BY Accelerate ASC LIMIT 1
SELECT T1.id FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T2.Model  =  'volvo' ORDER BY T1.accelerate ASC LIMIT 1
连接数据库../datasets/cosql_dataset/database/car_1/car_1.sqlite
执行第一个查询
执行出错: no such column: MakeId
eval_exec:False
exact_score:0
extra pred: SELECT  Id FROM cars_data WHERE MakeId IN (     SELECT MakeId     FROM car_names     WHERE Make = 'Volvo' ) ORDER BY Accelerate ASC LIMIT 1
extra gold: SELECT T1.id FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T2.Model  =  'volvo' ORDER BY T1.accelerate ASC LIMIT 1

当前idx3
____________________
SELECT  Cylinders FROM cars_data WHERE Id = (     SELECT cars_data.Id     FROM cars_data     JOIN car_names ON cars_data.Id = car_names.MakeId     WHERE car_names.Make = 'Volvo'     ORDER BY cars_data.Accelerate ASC     LIMIT 1 )
SELECT T1.cylinders FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T2.Model  =  'volvo' ORDER BY T1.accelerate ASC LIMIT 1
连接数据库../datasets/cosql_dataset/database/car_1/car_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
extra pred: SELECT  Cylinders FROM cars_data WHERE Id = (     SELECT cars_data.Id     FROM cars_data     JOIN car_names ON cars_data.Id = car_names.MakeId     WHERE car_names.Make = 'Volvo'     ORDER BY cars_data.Accelerate ASC     LIMIT 1 )
extra gold: SELECT T1.cylinders FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T2.Model  =  'volvo' ORDER BY T1.accelerate ASC LIMIT 1

当前idx1
____________________
SELECT  COUNT(*) FROM Highschooler
SELECT count ( * )  FROM Highschooler
连接数据库../datasets/cosql_dataset/database/network_1/network_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT  COUNT(*) FROM Friend
SELECT count ( * )  FROM Friend
连接数据库../datasets/cosql_dataset/database/network_1/network_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx3
eval_err_num:233
____________________
SELECT  DISTINCT H.name FROM Highschooler H JOIN Friend F ON H.ID = F.student_id
SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id   =   T2.id
连接数据库../datasets/cosql_dataset/database/network_1/network_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
easy pred: SELECT  DISTINCT H.name FROM Highschooler H JOIN Friend F ON H.ID = F.student_id
easy gold: SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id   =   T2.id

当前idx1
eval_err_num:234
____________________
SELECT DISTINCT se.semester_id
FROM Semesters se
JOIN Student_Enrolment sen ON se.semester_id = sen.semester_id
JOIN Degree_Programs dp ON sen.degree_program_id = dp.degree_program_id
WHERE dp.degree_summary_name LIKE '%Bachelor%'
SELECT DISTINCT T2.semester_id FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id   =   T2.degree_program_id WHERE degree_summary_name   =   'Master'
连接数据库../datasets/cosql_dataset/database/student_transcripts_tracking/student_transcripts_tracking.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT DISTINCT se.semester_id
FROM Semesters se
JOIN Student_Enrolment sen ON se.semester_id = sen.semester_id
JOIN Degree_Programs dp ON sen.degree_program_id = dp.degree_program_id
WHERE dp.degree_summary_name LIKE '%Bachelor%'
medium gold: SELECT DISTINCT T2.semester_id FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id   =   T2.degree_program_id WHERE degree_summary_name   =   'Master'

当前idx2
eval_err_num:235
____________________
SELECT  dp.degree_summary_description FROM Degree_Programs dp JOIN Student_Enrolment sen ON dp.degree_program_id = sen.degree_program_id WHERE sen.student_id = 14
SELECT T1.degree_summary_description FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id WHERE T2.student_id  =  14
连接数据库../datasets/cosql_dataset/database/student_transcripts_tracking/student_transcripts_tracking.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT  dp.degree_summary_description FROM Degree_Programs dp JOIN Student_Enrolment sen ON dp.degree_program_id = sen.degree_program_id WHERE sen.student_id = 14
medium gold: SELECT T1.degree_summary_description FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id WHERE T2.student_id  =  14

当前idx1
eval_err_num:236
____________________
SELECT cn.Model, cd.MPG
FROM cars_data cd
JOIN car_names cn ON cd.Id = cn.MakeId
WHERE cd.MPG = (SELECT MAX(MPG) FROM cars_data WHERE MPG != 'NA')
SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId   =   T2.Id ORDER BY T2.mpg DESC LIMIT 1
连接数据库../datasets/cosql_dataset/database/car_1/car_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
hard pred: SELECT cn.Model, cd.MPG
FROM cars_data cd
JOIN car_names cn ON cd.Id = cn.MakeId
WHERE cd.MPG = (SELECT MAX(MPG) FROM cars_data WHERE MPG != 'NA')
hard gold: SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId   =   T2.Id ORDER BY T2.mpg DESC LIMIT 1

当前idx2
eval_err_num:237
____________________
SELECT  cn.Model, cd.Horsepower FROM cars_data cd JOIN car_names cn ON cd.Id = cn.MakeId WHERE cd.Horsepower = (SELECT MAX(Horsepower) FROM cars_data WHERE Horsepower != 'NA')
SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId   =   T2.Id ORDER BY T2.horsepower DESC LIMIT 1
连接数据库../datasets/cosql_dataset/database/car_1/car_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
hard pred: SELECT  cn.Model, cd.Horsepower FROM cars_data cd JOIN car_names cn ON cd.Id = cn.MakeId WHERE cd.Horsepower = (SELECT MAX(Horsepower) FROM cars_data WHERE Horsepower != 'NA')
hard gold: SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId   =   T2.Id ORDER BY T2.horsepower DESC LIMIT 1

当前idx1
____________________
SELECT  Age FROM employee WHERE Name = 'George Chuter'
SELECT Age from employee where Name = 'George Chuter'
连接数据库../datasets/cosql_dataset/database/employee_hire_evaluation/employee_hire_evaluation.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT  Age FROM employee WHERE Name = 'Lee Mears'
SELECT Age from employee where Name = 'Lee Mears'
连接数据库../datasets/cosql_dataset/database/employee_hire_evaluation/employee_hire_evaluation.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx3
____________________
SELECT  Name FROM employee WHERE Employee_ID = (SELECT Employee_ID FROM evaluation ORDER BY Bonus DESC LIMIT 1)
SELECT t1.name FROM employee AS t1 JOIN evaluation AS t2 ON t1.Employee_ID  =  t2.Employee_ID ORDER BY t2.bonus DESC LIMIT 1
连接数据库../datasets/cosql_dataset/database/employee_hire_evaluation/employee_hire_evaluation.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:0
hard pred: SELECT  Name FROM employee WHERE Employee_ID = (SELECT Employee_ID FROM evaluation ORDER BY Bonus DESC LIMIT 1)
hard gold: SELECT t1.name FROM employee AS t1 JOIN evaluation AS t2 ON t1.Employee_ID  =  t2.Employee_ID ORDER BY t2.bonus DESC LIMIT 1

当前idx1
eval_err_num:238
____________________
SELECT  p.Name FROM people p LEFT JOIN poker_player pp ON p.People_ID = pp.People_ID WHERE pp.Poker_Player_ID IS NULL
SELECT Name FROM people WHERE People_ID NOT IN  ( SELECT People_ID FROM poker_player ) 
连接数据库../datasets/cosql_dataset/database/poker_player/poker_player.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
hard pred: SELECT  p.Name FROM people p LEFT JOIN poker_player pp ON p.People_ID = pp.People_ID WHERE pp.Poker_Player_ID IS NULL
hard gold: SELECT Name FROM people WHERE People_ID NOT IN  ( SELECT People_ID FROM poker_player ) 

当前idx2
eval_err_num:239
____________________
SELECT  p.Name FROM people p JOIN poker_player pp ON p.People_ID = pp.People_ID
SELECT Name FROM people WHERE People_ID IN  ( SELECT People_ID FROM poker_player ) 
连接数据库../datasets/cosql_dataset/database/poker_player/poker_player.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
hard pred: SELECT  p.Name FROM people p JOIN poker_player pp ON p.People_ID = pp.People_ID
hard gold: SELECT Name FROM people WHERE People_ID IN  ( SELECT People_ID FROM poker_player ) 

当前idx1
____________________
SELECT  COUNT(*) FROM players
SELECT count ( * )  FROM players
连接数据库../datasets/cosql_dataset/database/wta_1/wta_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT  first_name FROM players
SELECT first_name FROM players
连接数据库../datasets/cosql_dataset/database/wta_1/wta_1.sqlite
执行第一个查询
执行出错: Could not decode to UTF-8 column 'first_name' with text 'Selin G��Lseren'
eval_exec:False
exact_score:True
当前idx3
____________________
SELECT  country_code FROM players WHERE first_name = 'Mirjana'
SELECT country_code FROM players  where first_name  =  "Mirjana"
连接数据库../datasets/cosql_dataset/database/wta_1/wta_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx4
____________________
SELECT  birth_date FROM players WHERE first_name = 'Justine'
SELECT birth_date FROM players  where first_name  =  "Mirjana"
连接数据库../datasets/cosql_dataset/database/wta_1/wta_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:True
当前idx1
eval_err_num:240
____________________
SELECT  ml.Model FROM model_list ml JOIN car_makers cm ON ml.Maker = cm.Id WHERE cm.Maker = 'General Motors'
SELECT DISTINCT T2.Model FROM CAR_NAMES AS T1 JOIN MODEL_LIST AS T2 ON T1.Model   =   T2.Model JOIN CAR_MAKERS AS T3 ON T2.Maker   =   T3.Id JOIN CARS_DATA AS T4 ON T1.MakeId   =   T4.Id WHERE T3.FullName   =   'General Motors'
连接数据库../datasets/cosql_dataset/database/car_1/car_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
extra pred: SELECT  ml.Model FROM model_list ml JOIN car_makers cm ON ml.Maker = cm.Id WHERE cm.Maker = 'General Motors'
extra gold: SELECT DISTINCT T2.Model FROM CAR_NAMES AS T1 JOIN MODEL_LIST AS T2 ON T1.Model   =   T2.Model JOIN CAR_MAKERS AS T3 ON T2.Maker   =   T3.Id JOIN CARS_DATA AS T4 ON T1.MakeId   =   T4.Id WHERE T3.FullName   =   'General Motors'

当前idx2
eval_err_num:241
____________________
SELECT  cn.Model FROM cars_data cd JOIN car_names cn ON cd.Id = cn.MakeId WHERE cd.Weight > 3500
SELECT DISTINCT T2.Model FROM CAR_NAMES AS T1 JOIN MODEL_LIST AS T2 ON T1.Model   =   T2.Model JOIN CAR_MAKERS AS T3 ON T2.Maker   =   T3.Id JOIN CARS_DATA AS T4 ON T1.MakeId   =   T4.Id WHERE T4.weight  >  3500
连接数据库../datasets/cosql_dataset/database/car_1/car_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
extra pred: SELECT  cn.Model FROM cars_data cd JOIN car_names cn ON cd.Id = cn.MakeId WHERE cd.Weight > 3500
extra gold: SELECT DISTINCT T2.Model FROM CAR_NAMES AS T1 JOIN MODEL_LIST AS T2 ON T1.Model   =   T2.Model JOIN CAR_MAKERS AS T3 ON T2.Maker   =   T3.Id JOIN CARS_DATA AS T4 ON T1.MakeId   =   T4.Id WHERE T4.weight  >  3500

当前idx3
eval_err_num:242
____________________
SELECT  ml.Model FROM model_list ml JOIN car_makers cm ON ml.Maker = cm.Id WHERE cm.Maker = 'General Motors'  UNION  SELECT cn.Model FROM cars_data cd JOIN car_names cn ON cd.Id = cn.MakeId WHERE cd.Weight > 3500
SELECT DISTINCT T2.Model FROM CAR_NAMES AS T1 JOIN MODEL_LIST AS T2 ON T1.Model   =   T2.Model JOIN CAR_MAKERS AS T3 ON T2.Maker   =   T3.Id JOIN CARS_DATA AS T4 ON T1.MakeId   =   T4.Id WHERE T3.FullName   =   'General Motors' or T4.weight  < =   3500
连接数据库../datasets/cosql_dataset/database/car_1/car_1.sqlite
执行第一个查询
执行第二个查询
执行出错: near "=": syntax error
eval_exec:False
exact_score:0
extra pred: SELECT  ml.Model FROM model_list ml JOIN car_makers cm ON ml.Maker = cm.Id WHERE cm.Maker = 'General Motors'  UNION  SELECT cn.Model FROM cars_data cd JOIN car_names cn ON cd.Id = cn.MakeId WHERE cd.Weight > 3500
extra gold: SELECT DISTINCT T2.Model FROM CAR_NAMES AS T1 JOIN MODEL_LIST AS T2 ON T1.Model   =   T2.Model JOIN CAR_MAKERS AS T3 ON T2.Maker   =   T3.Id JOIN CARS_DATA AS T4 ON T1.MakeId   =   T4.Id WHERE T3.FullName   =   'General Motors' or T4.weight  < =   3500

当前idx4
eval_err_num:243
____________________
SELECT  cn.Model FROM cars_data cd JOIN car_names cn ON cd.Id = cn.MakeId WHERE cd.Weight > 3500  EXCEPT  SELECT ml.Model FROM model_list ml JOIN car_makers cm ON ml.Maker = cm.Id WHERE cm.Maker = 'General Motors'  UNION  SELECT ml.Model FROM model_list ml JOIN car_makers cm ON ml.Maker = cm.Id WHERE cm.Maker = 'General Motors'  EXCEPT  SELECT cn.Model FROM cars_data cd JOIN car_names cn ON cd.Id = cn.MakeId WHERE cd.Weight > 3500
SELECT DISTINCT T2.Model FROM CAR_NAMES AS T1 JOIN MODEL_LIST AS T2 ON T1.Model   =   T2.Model JOIN CAR_MAKERS AS T3 ON T2.Maker   =   T3.Id JOIN CARS_DATA AS T4 ON T1.MakeId   =   T4.Id WHERE T3.FullName   =   'General Motors' Or T4.weight  < =   3500 except SELECT DISTINCT T2.Model FROM CAR_NAMES AS T1 JOIN MODEL_LIST AS T2 ON T1.Model   =   T2.Model JOIN CAR_MAKERS AS T3 ON T2.Maker   =   T3.Id JOIN CARS_DATA AS T4 ON T1.MakeId   =   T4.Id WHERE T3.FullName   =   'General Motors' and T4.weight  < =   3500
连接数据库../datasets/cosql_dataset/database/car_1/car_1.sqlite
执行第一个查询
执行第二个查询
执行出错: near "=": syntax error
eval_exec:False
exact_score:0
extra pred: SELECT  cn.Model FROM cars_data cd JOIN car_names cn ON cd.Id = cn.MakeId WHERE cd.Weight > 3500  EXCEPT  SELECT ml.Model FROM model_list ml JOIN car_makers cm ON ml.Maker = cm.Id WHERE cm.Maker = 'General Motors'  UNION  SELECT ml.Model FROM model_list ml JOIN car_makers cm ON ml.Maker = cm.Id WHERE cm.Maker = 'General Motors'  EXCEPT  SELECT cn.Model FROM cars_data cd JOIN car_names cn ON cd.Id = cn.MakeId WHERE cd.Weight > 3500
extra gold: SELECT DISTINCT T2.Model FROM CAR_NAMES AS T1 JOIN MODEL_LIST AS T2 ON T1.Model   =   T2.Model JOIN CAR_MAKERS AS T3 ON T2.Maker   =   T3.Id JOIN CARS_DATA AS T4 ON T1.MakeId   =   T4.Id WHERE T3.FullName   =   'General Motors' Or T4.weight  < =   3500 except SELECT DISTINCT T2.Model FROM CAR_NAMES AS T1 JOIN MODEL_LIST AS T2 ON T1.Model   =   T2.Model JOIN CAR_MAKERS AS T3 ON T2.Maker   =   T3.Id JOIN CARS_DATA AS T4 ON T1.MakeId   =   T4.Id WHERE T3.FullName   =   'General Motors' and T4.weight  < =   3500

当前idx1
____________________
SELECT  Height FROM people WHERE Name = 'Aleksey Ostapenko'
SELECT height FROM people where name  =  "Aleksey Ostapenko"
连接数据库../datasets/cosql_dataset/database/poker_player/poker_player.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT  Name FROM people WHERE Birth_Date = '1982-08-16'
SELECT name FROM people where birth_date  =  "August 16, 1982"
连接数据库../datasets/cosql_dataset/database/poker_player/poker_player.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:True
当前idx3
____________________
SELECT  People_ID FROM people WHERE Nationality = 'Russia'
SELECT people_id FROM people where nationality  =  "Russia"
连接数据库../datasets/cosql_dataset/database/poker_player/poker_player.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx4
____________________
SELECT  Nationality FROM people GROUP BY Nationality HAVING COUNT(People_ID) >= 2
SELECT Nationality FROM people GROUP BY Nationality HAVING COUNT ( * )    > =    2
连接数据库../datasets/cosql_dataset/database/poker_player/poker_player.sqlite
执行第一个查询
执行第二个查询
执行出错: near "=": syntax error
eval_exec:False
exact_score:0
easy pred: SELECT  Nationality FROM people GROUP BY Nationality HAVING COUNT(People_ID) >= 2
easy gold: SELECT Nationality FROM people GROUP BY Nationality HAVING COUNT ( * )    > =    2

当前idx1
____________________
SELECT  Population FROM country WHERE Name = 'Afghanistan'
SELECT Population FROM country where Name   =   "Afghanistan"
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT  Population FROM country WHERE Name = 'Aruba'
SELECT Population FROM country where Name   =   "Aruba"
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx3
____________________
SELECT  Language FROM countrylanguage WHERE CountryCode = (SELECT Code FROM country WHERE Name = 'Aruba')
SELECT T2.language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code   =   T2.CountryCode WHERE T1.Name   =   "Aruba"
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:0
medium pred: SELECT  Language FROM countrylanguage WHERE CountryCode = (SELECT Code FROM country WHERE Name = 'Aruba')
medium gold: SELECT T2.language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code   =   T2.CountryCode WHERE T1.Name   =   "Aruba"

当前idx4
____________________
SELECT  Language FROM countrylanguage WHERE CountryCode = (SELECT Code FROM country WHERE Name = 'Aruba') AND IsOfficial = 'T'
SELECT T2.language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code   =   T2.CountryCode WHERE T1.Name   =   "Aruba" and T2.IsOfficial = 'T'
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:0
medium pred: SELECT  Language FROM countrylanguage WHERE CountryCode = (SELECT Code FROM country WHERE Name = 'Aruba') AND IsOfficial = 'T'
medium gold: SELECT T2.language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code   =   T2.CountryCode WHERE T1.Name   =   "Aruba" and T2.IsOfficial = 'T'

当前idx>4
____________________
SELECT  Language FROM countrylanguage WHERE CountryCode = (SELECT Code FROM country WHERE Name = 'Afghanistan') AND IsOfficial = 'T'
SELECT T2.language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code   =   T2.CountryCode WHERE T1.Name   =   "Afghanistan" and T2.IsOfficial = 'T'
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:0
medium pred: SELECT  Language FROM countrylanguage WHERE CountryCode = (SELECT Code FROM country WHERE Name = 'Afghanistan') AND IsOfficial = 'T'
medium gold: SELECT T2.language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code   =   T2.CountryCode WHERE T1.Name   =   "Afghanistan" and T2.IsOfficial = 'T'

当前idx>4
____________________
SELECT  COUNT(*) FROM countrylanguage WHERE Language = 'Dari' AND CountryCode != (SELECT Code FROM country WHERE Name = 'Afghanistan')
SELECT count ( * )  FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code   =   T2.CountryCode WHERE T2.language = 'Dari' and T1.name ! =  'Afghanistan'
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
执行出错: unrecognized token: "!"
eval_exec:False
exact_score:0
medium pred: SELECT  COUNT(*) FROM countrylanguage WHERE Language = 'Dari' AND CountryCode != (SELECT Code FROM country WHERE Name = 'Afghanistan')
medium gold: SELECT count ( * )  FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code   =   T2.CountryCode WHERE T2.language = 'Dari' and T1.name ! =  'Afghanistan'

当前idx1
eval_err_num:244
____________________
SELECT  Dogs.name AS Dog_Name,     Treatments.cost_of_treatment AS Treatment_Cost FROM      Dogs JOIN      Treatments ON Dogs.dog_id = Treatments.dog_id
SELECT name,cost_of_treatment  FROM Dogs join Treatments
连接数据库../datasets/cosql_dataset/database/dog_kennels/dog_kennels.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT  Dogs.name AS Dog_Name,     Treatments.cost_of_treatment AS Treatment_Cost FROM      Dogs JOIN      Treatments ON Dogs.dog_id = Treatments.dog_id
medium gold: SELECT name,cost_of_treatment  FROM Dogs join Treatments

当前idx2
eval_err_num:245
____________________
SELECT  Dogs.name AS Dog_Name,     Treatments.cost_of_treatment AS Treatment_Cost FROM      Dogs JOIN      Treatments ON Dogs.dog_id = Treatments.dog_id WHERE      Treatments.cost_of_treatment < 1000 ORDER BY      Treatments.cost_of_treatment DESC
SELECT name FROM Dogs WHERE dog_id NOT IN (  SELECT dog_id FROM Treatments GROUP BY dog_id HAVING sum ( cost_of_treatment )   <  1000  ) 
连接数据库../datasets/cosql_dataset/database/dog_kennels/dog_kennels.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
hard pred: SELECT  Dogs.name AS Dog_Name,     Treatments.cost_of_treatment AS Treatment_Cost FROM      Dogs JOIN      Treatments ON Dogs.dog_id = Treatments.dog_id WHERE      Treatments.cost_of_treatment < 1000 ORDER BY      Treatments.cost_of_treatment DESC
hard gold: SELECT name FROM Dogs WHERE dog_id NOT IN (  SELECT dog_id FROM Treatments GROUP BY dog_id HAVING sum ( cost_of_treatment )   <  1000  ) 

当前idx1
____________________
SELECT  Age FROM visitor WHERE Name = 'Gonzalo Higuaín'
SELECT age FROM visitor where name  =  "Gonzalo Higuaín"
连接数据库../datasets/cosql_dataset/database/museum_visit/museum_visit.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT  SUM(Num_of_Ticket) FROM visit WHERE visitor_ID = 5
SELECT num_of_ticket FROM visitor AS t1 JOIN visit AS t2 ON t1.id   =   t2.visitor_id where visitor_id  =  5
连接数据库../datasets/cosql_dataset/database/museum_visit/museum_visit.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT  SUM(Num_of_Ticket) FROM visit WHERE visitor_ID = 5
medium gold: SELECT num_of_ticket FROM visitor AS t1 JOIN visit AS t2 ON t1.id   =   t2.visitor_id where visitor_id  =  5

当前idx3
____________________
SELECT  SUM(Total_spent) FROM visit JOIN visitor ON visit.visitor_ID = visitor.ID WHERE visitor.Name = 'Arjen Robben'
SELECT Total_spent FROM visitor AS t1 JOIN visit AS t2 ON t1.id   =   t2.visitor_id where name  =  "Arjen Robben"
连接数据库../datasets/cosql_dataset/database/museum_visit/museum_visit.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT  SUM(Total_spent) FROM visit JOIN visitor ON visit.visitor_ID = visitor.ID WHERE visitor.Name = 'Arjen Robben'
medium gold: SELECT Total_spent FROM visitor AS t1 JOIN visit AS t2 ON t1.id   =   t2.visitor_id where name  =  "Arjen Robben"

当前idx4
____________________
SELECT  visitor.Name, visitor.Age FROM visitor JOIN visit ON visitor.ID = visit.visitor_ID ORDER BY visit.Num_of_Ticket DESC LIMIT 1
SELECT t1.name ,  t1.age FROM visitor AS t1 JOIN visit AS t2 ON t1.id   =   t2.visitor_id ORDER BY t2.num_of_ticket DESC LIMIT 1
连接数据库../datasets/cosql_dataset/database/museum_visit/museum_visit.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx1
eval_err_num:246
____________________
SELECT  DISTINCT c.Region FROM country c JOIN countrylanguage cl ON c.Code = cl.CountryCode WHERE cl.Language = 'English'
SELECT DISTINCT T1.Region FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code   =   T2.CountryCode WHERE T2.Language   =   "English"
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT  DISTINCT c.Region FROM country c JOIN countrylanguage cl ON c.Code = cl.CountryCode WHERE cl.Language = 'English'
medium gold: SELECT DISTINCT T1.Region FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code   =   T2.CountryCode WHERE T2.Language   =   "English"

当前idx2
eval_err_num:247
____________________
SELECT  DISTINCT c.Region FROM country c JOIN countrylanguage cl ON c.Code = cl.CountryCode WHERE cl.Language = 'Dutch'
SELECT DISTINCT T1.Region FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code   =   T2.CountryCode WHERE T2.Language   =   "Dutch"
  0%|          | 0/176 [00:00<?, ?it/s]  5%|▌         | 9/176 [00:00<00:01, 86.95it/s] 10%|█         | 18/176 [00:00<00:01, 86.74it/s] 16%|█▌        | 28/176 [00:00<00:01, 86.09it/s] 22%|██▏       | 38/176 [00:00<00:01, 78.43it/s] 27%|██▋       | 48/176 [00:00<00:01, 83.97it/s] 34%|███▎      | 59/176 [00:00<00:01, 89.87it/s] 39%|███▉      | 69/176 [00:03<00:09, 10.98it/s] 44%|████▍     | 77/176 [00:03<00:06, 14.29it/s] 48%|████▊     | 84/176 [00:03<00:05, 17.84it/s] 52%|█████▏    | 92/176 [00:03<00:03, 22.79it/s] 57%|█████▋    | 101/176 [00:03<00:02, 29.68it/s] 62%|██████▎   | 110/176 [00:03<00:01, 36.99it/s] 68%|██████▊   | 119/176 [00:03<00:01, 43.57it/s] 73%|███████▎  | 128/176 [00:04<00:00, 50.81it/s] 77%|███████▋  | 136/176 [00:04<00:00, 47.51it/s] 82%|████████▏ | 145/176 [00:04<00:00, 54.06it/s] 86%|████████▋ | 1连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT  DISTINCT c.Region FROM country c JOIN countrylanguage cl ON c.Code = cl.CountryCode WHERE cl.Language = 'Dutch'
medium gold: SELECT DISTINCT T1.Region FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code   =   T2.CountryCode WHERE T2.Language   =   "Dutch"

当前idx3
eval_err_num:248
____________________
SELECT  c.Region, AVG(c.LifeExpectancy) AS AverageLifeExpectancy FROM country c JOIN countrylanguage cl ON c.Code = cl.CountryCode WHERE cl.Language = 'Dutch' GROUP BY c.Region
SELECT DISTINCT T1.LifeExpectancy FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code   =   T2.CountryCode WHERE T2.Language   =   "Dutch"
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT  c.Region, AVG(c.LifeExpectancy) AS AverageLifeExpectancy FROM country c JOIN countrylanguage cl ON c.Code = cl.CountryCode WHERE cl.Language = 'Dutch' GROUP BY c.Region
medium gold: SELECT DISTINCT T1.LifeExpectancy FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code   =   T2.CountryCode WHERE T2.Language   =   "Dutch"

当前idx1
eval_err_num:249
____________________
SELECT  winner_name, MIN(winner_age) AS youngest_age FROM matches GROUP BY winner_name ORDER BY youngest_age ASC LIMIT 3
SELECT winner_name  FROM matches ORDER BY winner_age LIMIT 3
连接数据库../datasets/cosql_dataset/database/wta_1/wta_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT  winner_name, MIN(winner_age) AS youngest_age FROM matches GROUP BY winner_name ORDER BY youngest_age ASC LIMIT 3
medium gold: SELECT winner_name  FROM matches ORDER BY winner_age LIMIT 3

当前idx2
eval_err_num:250
____________________
SELECT  m.winner_name,     r.ranking AS winner_rank FROM      (SELECT winner_id, winner_name, MIN(winner_age) AS youngest_age      FROM matches      GROUP BY winner_id, winner_name      ORDER BY youngest_age ASC      LIMIT 3) AS m JOIN      rankings AS r ON m.winner_id = r.player_id ORDER BY      m.youngest_age
SELECT DISTINCT winner_name,  winner_rank FROM matches ORDER BY winner_age LIMIT 3
连接数据库../datasets/cosql_dataset/database/wta_1/wta_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT  m.winner_name,     r.ranking AS winner_rank FROM      (SELECT winner_id, winner_name, MIN(winner_age) AS youngest_age      FROM matches      GROUP BY winner_id, winner_name      ORDER BY youngest_age ASC      LIMIT 3) AS m JOIN      rankings AS r ON m.winner_id = r.player_id ORDER BY      m.youngest_age
medium gold: SELECT DISTINCT winner_name,  winner_rank FROM matches ORDER BY winner_age LIMIT 3

当前idx3
eval_err_num:251
____________________
SELECT  m.winner_name,     m.loser_name FROM      matches m JOIN      (SELECT winner_id, MIN(winner_age) AS youngest_age      FROM matches      GROUP BY winner_id      ORDER BY youngest_age ASC      LIMIT 3) AS yw ON m.winner_id = yw.winner_id
SELECT loser_name FROM matches ORDER BY winner_age LIMIT 3
连接数据库../datasets/cosql_dataset/database/wta_1/wta_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT  m.winner_name,     m.loser_name FROM      matches m JOIN      (SELECT winner_id, MIN(winner_age) AS youngest_age      FROM matches      GROUP BY winner_id      ORDER BY youngest_age ASC      LIMIT 3) AS yw ON m.winner_id = yw.winner_id
medium gold: SELECT loser_name FROM matches ORDER BY winner_age LIMIT 3

当前idx1
____________________
SELECT  first_name, last_name FROM Professionals
SELECT first_name, last_name FROM professionals
连接数据库../datasets/cosql_dataset/database/dog_kennels/dog_kennels.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT  first_name, last_name FROM Professionals WHERE city LIKE '%West%'
SELECT first_name, last_name FROM professionals  WHERE city LIKE '%West%'
连接数据库../datasets/cosql_dataset/database/dog_kennels/dog_kennels.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx3
____________________
SELECT  role_code, street, city, state FROM Professionals WHERE first_name = 'Taryn'
SELECT role_code , street , city , state FROM professionals WHERE first_name  =  "Taryn"
连接数据库../datasets/cosql_dataset/database/dog_kennels/dog_kennels.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx4
____________________
SELECT  first_name, last_name, state FROM Professionals
SELECT first_name,state FROM professionals
连接数据库../datasets/cosql_dataset/database/dog_kennels/dog_kennels.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT  first_name, last_name, state FROM Professionals
medium gold: SELECT first_name,state FROM professionals

当前idx>4
____________________
SELECT  first_name, last_name FROM Professionals WHERE state = 'Indiana'
SELECT first_name FROM professionals WHERE state  =  "Indiana"
连接数据库../datasets/cosql_dataset/database/dog_kennels/dog_kennels.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
easy pred: SELECT  first_name, last_name FROM Professionals WHERE state = 'Indiana'
easy gold: SELECT first_name FROM professionals WHERE state  =  "Indiana"

当前idx1
____________________
SELECT  COUNT(*) FROM death
SELECT count ( * )  FROM death
连接数据库../datasets/cosql_dataset/database/battle_death/battle_death.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT  * FROM death ORDER BY killed DESC LIMIT 1
SELECT * FROM death where killed  =   ( select max ( killed )  from death ) 
连接数据库../datasets/cosql_dataset/database/battle_death/battle_death.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:0
hard pred: SELECT  * FROM death ORDER BY killed DESC LIMIT 1
hard gold: SELECT * FROM death where killed  =   ( select max ( killed )  from death ) 

当前idx3
____________________
SELECT  * FROM death WHERE killed = (SELECT MAX(killed) FROM death)
SELECT * FROM death where note like "%East%"
连接数据库../datasets/cosql_dataset/database/battle_death/battle_death.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT  * FROM death WHERE killed = (SELECT MAX(killed) FROM death)
medium gold: SELECT * FROM death where note like "%East%"

当前idx1
eval_err_num:252
____________________
SELECT  d.id, d.note, d.killed, d.injured FROM death d JOIN ship s ON d.caused_by_ship_id = s.id WHERE s.tonnage = 't'
SELECT T1.killed FROM death AS T1 JOIN ship AS t2 ON T1.caused_by_ship_id  =  T2.id WHERE T2.tonnage  =  't'
连接数据库../datasets/cosql_dataset/database/battle_death/battle_death.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT  d.id, d.note, d.killed, d.injured FROM death d JOIN ship s ON d.caused_by_ship_id = s.id WHERE s.tonnage = 't'
medium gold: SELECT T1.killed FROM death AS T1 JOIN ship AS t2 ON T1.caused_by_ship_id  =  T2.id WHERE T2.tonnage  =  't'

当前idx2
eval_err_num:253
____________________
SELECT  d.id, d.note, d.injured FROM death d JOIN ship s ON d.caused_by_ship_id = s.id WHERE s.tonnage = 't' AND d.injured > 0
SELECT T1.injured FROM death AS T1 JOIN ship AS t2 ON T1.caused_by_ship_id  =  T2.id WHERE T2.tonnage  =  't'
连接数据库../datasets/cosql_dataset/database/battle_death/battle_death.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT  d.id, d.note, d.injured FROM death d JOIN ship s ON d.caused_by_ship_id = s.id WHERE s.tonnage = 't' AND d.injured > 0
medium gold: SELECT T1.injured FROM death AS T1 JOIN ship AS t2 ON T1.caused_by_ship_id  =  T2.id WHERE T2.tonnage  =  't'

当前idx3
eval_err_num:254
____________________
SELECT  SUM(d.killed) AS total_deaths, SUM(d.injured) AS total_injuries FROM death d JOIN ship s ON d.caused_by_ship_id = s.id WHERE s.tonnage = 't'
SELECT COUNT ( T1.id )  FROM death AS T1 JOIN ship AS t2 ON T1.caused_by_ship_id  =  T2.id WHERE T2.tonnage  =  't'
连接数据库../datasets/cosql_dataset/database/battle_death/battle_death.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT  SUM(d.killed) AS total_deaths, SUM(d.injured) AS total_injuries FROM death d JOIN ship s ON d.caused_by_ship_id = s.id WHERE s.tonnage = 't'
medium gold: SELECT COUNT ( T1.id )  FROM death AS T1 JOIN ship AS t2 ON T1.caused_by_ship_id  =  T2.id WHERE T2.tonnage  =  't'

当前idx1
eval_err_num:255
____________________
SELECT  continents.Continent,     COUNT(DISTINCT car_makers.Maker) AS NumberOfCarMakers FROM      continents JOIN      countries ON continents.ContId = countries.Continent JOIN      car_makers ON countries.CountryName = car_makers.Country GROUP BY      continents.Continent
SELECT T1.Continent ,  count ( * )  FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId   =   T2.continent JOIN car_makers AS T3 ON T2.CountryId   =   T3.Country GROUP BY T1.Continent
连接数据库../datasets/cosql_dataset/database/car_1/car_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
hard pred: SELECT  continents.Continent,     COUNT(DISTINCT car_makers.Maker) AS NumberOfCarMakers FROM      continents JOIN      countries ON continents.ContId = countries.Continent JOIN      car_makers ON countries.CountryName = car_makers.Country GROUP BY      continents.Continent
hard gold: SELECT T1.Continent ,  count ( * )  FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId   =   T2.continent JOIN car_makers AS T3 ON T2.CountryId   =   T3.Country GROUP BY T1.Continent

当前idx2
eval_err_num:256
____________________
SELECT  COUNT(DISTINCT Maker) AS NumberOfCarMakers FROM      car_makers WHERE      Country = 'USA'
seLECT count ( * )  FROM car_makers as T1 join countries as T2 on T2.CountryId   =   T1.Country where T2.countryname  =  "usa"
连接数据库../datasets/cosql_dataset/database/car_1/car_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT  COUNT(DISTINCT Maker) AS NumberOfCarMakers FROM      car_makers WHERE      Country = 'USA'
medium gold: seLECT count ( * )  FROM car_makers as T1 join countries as T2 on T2.CountryId   =   T1.Country where T2.countryname  =  "usa"

当前idx3
eval_err_num:257
____________________
SELECT  COUNT(DISTINCT Maker) AS NumberOfCarMakers FROM      car_makers WHERE      Country = 'Germany'
seLECT count ( * )  FROM car_makers as T1 join countries as T2 on T2.CountryId   =   T1.Country where T2.countryname  =  "germany"
连接数据库../datasets/cosql_dataset/database/car_1/car_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT  COUNT(DISTINCT Maker) AS NumberOfCarMakers FROM      car_makers WHERE      Country = 'Germany'
medium gold: seLECT count ( * )  FROM car_makers as T1 join countries as T2 on T2.CountryId   =   T1.Country where T2.countryname  =  "germany"

当前idx4
eval_err_num:258
____________________
SELECT  COUNT(DISTINCT Maker) AS NumberOfCarMakers FROM      car_makers WHERE      Country = 'France'
seLECT count ( * )  FROM car_makers as T1 join countries as T2 on T2.CountryId   =   T1.Country where T2.countryname  =  "france"
连接数据库../datasets/cosql_dataset/database/car_1/car_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT  COUNT(DISTINCT Maker) AS NumberOfCarMakers FROM      car_makers WHERE      Country = 'France'
medium gold: seLECT count ( * )  FROM car_makers as T1 join countries as T2 on T2.CountryId   =   T1.Country where T2.countryname  =  "france"

当前idx1
eval_err_num:259
____________________
SELECT  COUNT(*) AS TotalCountries FROM country
SELECT count ( * )  FROM country
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
easy pred: SELECT  COUNT(*) AS TotalCountries FROM country
easy gold: SELECT count ( * )  FROM country

当前idx2
eval_err_num:260
____________________
SELECT  COUNT(*) AS TotalCities FROM city
SELECT count ( * )  FROM city
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
easy pred: SELECT  COUNT(*) AS TotalCities FROM city
easy gold: SELECT count ( * )  FROM city

当前idx3
____________________
SELECT  region FROM country  JOIN city ON country.Code = city.CountryCode  WHERE city.Name = 'Kabul'
SELECT Region FROM country AS T1 JOIN city AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Name  =  "Kabul"
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx4
eval_err_num:261
____________________
SELECT  COUNT(city.ID) AS CitiesInRegion FROM city JOIN country ON city.CountryCode = country.Code WHERE country.Region = (     SELECT region FROM country      JOIN city ON country.Code = city.CountryCode      WHERE city.Name = 'Kabul' )
SELECT count ( T2.name )  FROM country AS T1 JOIN city AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.region  =  "Southern and Central Asia"
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT  COUNT(city.ID) AS CitiesInRegion FROM city JOIN country ON city.CountryCode = country.Code WHERE country.Region = (     SELECT region FROM country      JOIN city ON country.Code = city.CountryCode      WHERE city.Name = 'Kabul' )
medium gold: SELECT count ( T2.name )  FROM country AS T1 JOIN city AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.region  =  "Southern and Central Asia"

当前idx1
eval_err_num:262
____________________
SELECT  COUNT(DISTINCT Documents.Document_ID) AS NumberOfDocuments FROM Documents JOIN Templates ON Documents.Template_ID = Templates.Template_ID WHERE Templates.Template_Type_Code = 'BK'
SELECT count ( * )  FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id   =   T2.template_id WHERE T1.template_type_code   =   "BK"
连接数据库../datasets/cosql_dataset/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT  COUNT(DISTINCT Documents.Document_ID) AS NumberOfDocuments FROM Documents JOIN Templates ON Documents.Template_ID = Templates.Template_ID WHERE Templates.Template_Type_Code = 'BK'
medium gold: SELECT count ( * )  FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id   =   T2.template_id WHERE T1.template_type_code   =   "BK"

当前idx2
____________________
SELECT  Documents.Document_Name FROM Documents JOIN Templates ON Documents.Template_ID = Templates.Template_ID WHERE Templates.Template_Type_Code = 'BK'
SELECT T2.document_name FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id   =   T2.template_id WHERE T1.template_type_code   =   "BK"
连接数据库../datasets/cosql_dataset/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx3
eval_err_num:263
____________________
SELECT  COUNT(DISTINCT Documents.Document_ID) AS NumberOfDocuments FROM Documents JOIN Templates ON Documents.Template_ID = Templates.Template_ID WHERE Templates.Template_Type_Code != 'BK'
Select count ( * )  from documents where document_name not in 
 ( SELECT T2.document_name FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id   =   T2.template_id WHERE T1.template_type_code   =   "BK" ) 
连接数据库../datasets/cosql_dataset/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
extra pred: SELECT  COUNT(DISTINCT Documents.Document_ID) AS NumberOfDocuments FROM Documents JOIN Templates ON Documents.Template_ID = Templates.Template_ID WHERE Templates.Template_Type_Code != 'BK'
extra gold: Select count ( * )  from documents where document_name not in 
 ( SELECT T2.document_name FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id   =   T2.template_id WHERE T1.template_type_code   =   "BK" ) 

当前idx1
eval_err_num:264
____________________
SELECT  DISTINCT c.Code FROM country c WHERE c.Code NOT IN (     SELECT cl.CountryCode     FROM countrylanguage cl     WHERE cl.Language = 'English' )
SELECT CountryCode FROM countrylanguage WHERE LANGUAGE  ! =   "English"
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
执行出错: unrecognized token: "!"
eval_exec:False
exact_score:0
easy pred: SELECT  DISTINCT c.Code FROM country c WHERE c.Code NOT IN (     SELECT cl.CountryCode     FROM countrylanguage cl     WHERE cl.Language = 'English' )
easy gold: SELECT CountryCode FROM countrylanguage WHERE LANGUAGE  ! =   "English"

当前idx2
eval_err_num:265
____________________
SELECT  DISTINCT c.Code FROM country c WHERE c.Code NOT IN (     SELECT cl.CountryCode     FROM countrylanguage cl     WHERE cl.Language = 'English' ) AND c.GovernmentForm NOT LIKE '%Republic%'
SELECT Code FROM country WHERE GovernmentForm ! =  "Republic" EXCEPT SELECT CountryCode FROM countrylanguage WHERE LANGUAGE   =   "English"
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
执行出错: unrecognized token: "!"
eval_exec:False
exact_score:0
hard pred: SELECT  DISTINCT c.Code FROM country c WHERE c.Code NOT IN (     SELECT cl.CountryCode     FROM countrylanguage cl     WHERE cl.Language = 'English' ) AND c.GovernmentForm NOT LIKE '%Republic%'
hard gold: SELECT Code FROM country WHERE GovernmentForm ! =  "Republic" EXCEPT SELECT CountryCode FROM countrylanguage WHERE LANGUAGE   =   "English"

当前idx3
eval_err_num:266
____________________
SELECT  c.Code, cl.Language FROM country c JOIN countrylanguage cl ON c.Code = cl.CountryCode WHERE c.Code NOT IN (     SELECT cl.CountryCode     FROM countrylanguage cl     WHERE cl.Language = 'English' ) AND c.GovernmentForm NOT LIKE '%Republic%'
select countrycode, language from countrylanguage where countrycode in  ( SELECT Code FROM country WHERE GovernmentForm ! =  "Republic" EXCEPT SELECT CountryCode FROM countrylanguage WHERE LANGUAGE   =   "English" ) 
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
执行出错: unrecognized token: "!"
eval_exec:False
exact_score:0
extra pred: SELECT  c.Code, cl.Language FROM country c JOIN countrylanguage cl ON c.Code = cl.CountryCode WHERE c.Code NOT IN (     SELECT cl.CountryCode     FROM countrylanguage cl     WHERE cl.Language = 'English' ) AND c.GovernmentForm NOT LIKE '%Republic%'
extra gold: select countrycode, language from countrylanguage where countrycode in  ( SELECT Code FROM country WHERE GovernmentForm ! =  "Republic" EXCEPT SELECT CountryCode FROM countrylanguage WHERE LANGUAGE   =   "English" ) 

当前idx4
eval_err_num:267
____________________
SELECT  c.Code, cl.Language FROM country c JOIN countrylanguage cl ON c.Code = cl.CountryCode WHERE c.Code NOT IN (     SELECT cl.CountryCode     FROM countrylanguage cl     WHERE cl.Language = 'English' ) AND c.GovernmentForm NOT LIKE '%Republic%' AND c.Continent = 'North America'
select code from country where continent  =  "North America" and code in  ( SELECT Code FROM country WHERE GovernmentForm ! =  "Republic" EXCEPT SELECT CountryCode FROM countrylanguage WHERE LANGUAGE   =   "English" ) 
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
执行出错: unrecognized token: "!"
eval_exec:False
exact_score:0
extra pred: SELECT  c.Code, cl.Language FROM country c JOIN countrylanguage cl ON c.Code = cl.CountryCode WHERE c.Code NOT IN (     SELECT cl.CountryCode     FROM countrylanguage cl     WHERE cl.Language = 'English' ) AND c.GovernmentForm NOT LIKE '%Republic%' AND c.Continent = 'North America'
extra gold: select code from country where continent  =  "North America" and code in  ( SELECT Code FROM country WHERE GovernmentForm ! =  "Republic" EXCEPT SELECT CountryCode FROM countrylanguage WHERE LANGUAGE   =   "English" ) 

当前idx1
____________________
SELECT  * FROM Professionals WHERE state = 'Indiana'
SELECT * FROM Professionals WHERE state   =   'Indiana'
连接数据库../datasets/cosql_dataset/database/dog_kennels/dog_kennels.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT  cell_number FROM Professionals WHERE first_name = 'Taryn'
SELECT cell_number FROM Professionals WHERE first_name  =  "Taryn"
连接数据库../datasets/cosql_dataset/database/dog_kennels/dog_kennels.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx1
____________________
SELECT  COUNT(*) FROM Templates
SELECT count ( * )  FROM Templates
连接数据库../datasets/cosql_dataset/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT  Date_Effective_From FROM Templates WHERE Template_ID = 1
SELECT Date_Effective_From, Date_Effective_To FROM Templates where Template_ID = 1
连接数据库../datasets/cosql_dataset/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT  Date_Effective_From FROM Templates WHERE Template_ID = 1
medium gold: SELECT Date_Effective_From, Date_Effective_To FROM Templates where Template_ID = 1

当前idx3
____________________
SELECT  Template_Type_Code FROM Templates WHERE Template_ID = 4
SELECT Template_Type_Code  FROM Templates where Template_ID = 4
连接数据库../datasets/cosql_dataset/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx4
____________________
SELECT  Version_Number FROM Templates WHERE Template_ID = 0
SELECT Version_Number  FROM Templates where Template_ID = 0
连接数据库../datasets/cosql_dataset/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx1
____________________
SELECT  DISTINCT Country FROM singer WHERE Age > 40
SELECT country FROM singer WHERE age  >  40
连接数据库../datasets/cosql_dataset/database/concert_singer/concert_singer.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:True
当前idx2
____________________
SELECT  DISTINCT Country FROM singer WHERE Age < 30
SELECT DISTINCT ( country )  FROM singer WHERE age  < 30
连接数据库../datasets/cosql_dataset/database/concert_singer/concert_singer.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx3
____________________
SELECT  DISTINCT Country FROM singer WHERE Age > 40 OR Age < 30
SELECT country FROM singer WHERE age  >  40 INTERSECT SELECT country FROM singer WHERE age  <  30
连接数据库../datasets/cosql_dataset/database/concert_singer/concert_singer.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
hard pred: SELECT  DISTINCT Country FROM singer WHERE Age > 40 OR Age < 30
hard gold: SELECT country FROM singer WHERE age  >  40 INTERSECT SELECT country FROM singer WHERE age  <  30

当前idx1
eval_err_num:268
____________________
SELECT  cd.Accelerate FROM cars_data cd JOIN car_names cn ON cd.Id = cn.MakeId WHERE cn.Make = 'AMC' AND cn.Model = 'Hornet Sportabout (SW)'
SELECT T1.Accelerate FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id   =   T2.MakeId WHERE T2.Make   =   'amc hornet sportabout  ( sw ) '
连接数据库../datasets/cosql_dataset/database/car_1/car_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT  cd.Accelerate FROM cars_data cd JOIN car_names cn ON cd.Id = cn.MakeId WHERE cn.Make = 'AMC' AND cn.Model = 'Hornet Sportabout (SW)'
medium gold: SELECT T1.Accelerate FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id   =   T2.MakeId WHERE T2.Make   =   'amc hornet sportabout  ( sw ) '

当前idx2
eval_err_num:269
____________________
SELECT  cn.Model, MAX(cd.Year) AS MostRecentYear FROM cars_data cd JOIN car_names cn ON cd.Id = cn.MakeId GROUP BY cn.Model ORDER BY MostRecentYear DESC LIMIT 1
SELECT T2.Model FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id   =   T2.MakeId order by T1.Year desc limit 1
连接数据库../datasets/cosql_dataset/database/car_1/car_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
hard pred: SELECT  cn.Model, MAX(cd.Year) AS MostRecentYear FROM cars_data cd JOIN car_names cn ON cd.Id = cn.MakeId GROUP BY cn.Model ORDER BY MostRecentYear DESC LIMIT 1
hard gold: SELECT T2.Model FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id   =   T2.MakeId order by T1.Year desc limit 1

当前idx1
____________________
SELECT  Template_ID FROM Templates
SELECT template_id FROM Templates
连接数据库../datasets/cosql_dataset/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT  Template_ID FROM Templates WHERE Template_ID NOT IN (SELECT DISTINCT Template_ID FROM Documents)
SELECT template_id FROM Templates EXCEPT SELECT template_id FROM Documents
连接数据库../datasets/cosql_dataset/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:0
hard pred: SELECT  Template_ID FROM Templates WHERE Template_ID NOT IN (SELECT DISTINCT Template_ID FROM Documents)
hard gold: SELECT template_id FROM Templates EXCEPT SELECT template_id FROM Documents

当前idx3
eval_err_num:270
____________________
SELECT  Template_ID FROM Templates WHERE Template_ID NOT IN (SELECT DISTINCT Template_ID FROM Documents) AND (Date_Effective_To IS NULL OR Date_Effective_To > CURRENT_DATE)
SELECT Date_effective_to FROM Templates WHERE template_id IN  (  SELECT template_id FROM Templates EXCEPT SELECT template_id FROM Documents ) 
连接数据库../datasets/cosql_dataset/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
hard pred: SELECT  Template_ID FROM Templates WHERE Template_ID NOT IN (SELECT DISTINCT Template_ID FROM Documents) AND (Date_Effective_To IS NULL OR Date_Effective_To > CURRENT_DATE)
hard gold: SELECT Date_effective_to FROM Templates WHERE template_id IN  (  SELECT template_id FROM Templates EXCEPT SELECT template_id FROM Documents ) 

当前idx4
____________________
SELECT  COUNT(*) FROM Templates WHERE Template_ID NOT IN (SELECT DISTINCT Template_ID FROM Documents)
SELECT count ( * )  FROM Templates WHERE template_id in  ( SELECT template_id FROM Templates EXCEPT SELECT template_id FROM Documents ) 
连接数据库../datasets/cosql_dataset/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:0
hard pred: SELECT  COUNT(*) FROM Templates WHERE Template_ID NOT IN (SELECT DISTINCT Template_ID FROM Documents)
hard gold: SELECT count ( * )  FROM Templates WHERE template_id in  ( SELECT template_id FROM Templates EXCEPT SELECT template_id FROM Documents ) 

当前idx>4
____________________
SELECT  Template_ID FROM Templates WHERE Template_ID NOT IN (SELECT DISTINCT Template_ID FROM Documents)
SELECT template_id FROM Templates EXCEPT SELECT template_id FROM Documents
连接数据库../datasets/cosql_dataset/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:0
hard pred: SELECT  Template_ID FROM Templates WHERE Template_ID NOT IN (SELECT DISTINCT Template_ID FROM Documents)
hard gold: SELECT template_id FROM Templates EXCEPT SELECT template_id FROM Documents

当前idx1
eval_err_num:271
____________________
SELECT  c.concert_Name AS Concert_Name,     c.Theme AS Theme,     COUNT(sic.Singer_ID) AS Number_of_Singers FROM      concert c LEFT JOIN      singer_in_concert sic ON c.concert_ID = sic.concert_ID GROUP BY      c.concert_ID, c.concert_Name, c.Theme
SELECT T2.concert_name , T2.theme , count ( * )  FROM singer_in_concert AS T1 JOIN concert AS T2 ON T1.concert_id  =  T2.concert_id GROUP BY T2.concert_id
连接数据库../datasets/cosql_dataset/database/concert_singer/concert_singer.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT  c.concert_Name AS Concert_Name,     c.Theme AS Theme,     COUNT(sic.Singer_ID) AS Number_of_Singers FROM      concert c LEFT JOIN      singer_in_concert sic ON c.concert_ID = sic.concert_ID GROUP BY      c.concert_ID, c.concert_Name, c.Theme
medium gold: SELECT T2.concert_name , T2.theme , count ( * )  FROM singer_in_concert AS T1 JOIN concert AS T2 ON T1.concert_id  =  T2.concert_id GROUP BY T2.concert_id

当前idx2
____________________
SELECT  Year FROM concert WHERE concert_Name = 'Super Bootcamp'
SELECT Year FROM concert WHERE concert_Name  =  "Super bootcamp"
连接数据库../datasets/cosql_dataset/database/concert_singer/concert_singer.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:True
当前idx3
____________________
SELECT  Stadium_ID FROM concert WHERE concert_Name = 'Super Bootcamp'
SELECT Stadium_ID FROM concert WHERE concert_Name  =  "Super bootcamp"
连接数据库../datasets/cosql_dataset/database/concert_singer/concert_singer.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:True
当前idx1
eval_err_num:272
____________________
SELECT  SUM(Population) AS TotalPopulation FROM country WHERE Continent = 'Asia'
SELECT sum ( Population )  FROM country where Continent  =  'Asia'
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
easy pred: SELECT  SUM(Population) AS TotalPopulation FROM country WHERE Continent = 'Asia'
easy gold: SELECT sum ( Population )  FROM country where Continent  =  'Asia'

当前idx2
____________________
SELECT  Language FROM countrylanguage WHERE Percentage = 9.5
SELECT Language FROM countrylanguage where Percentage  =  9.5
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx3
____________________
SELECT  LifeExpectancy FROM country WHERE Name = 'Angola'
SELECT LifeExpectancy FROM country where LocalName  =  'Angola'
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:0
easy pred: SELECT  LifeExpectancy FROM country WHERE Name = 'Angola'
easy gold: SELECT LifeExpectancy FROM country where LocalName  =  'Angola'

当前idx4
____________________
SELECT  GNP FROM country WHERE Name = 'Aruba'
SELECT GNP FROM country where LocalName  =  'Angola'
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
easy pred: SELECT  GNP FROM country WHERE Name = 'Aruba'
easy gold: SELECT GNP FROM country where LocalName  =  'Angola'

当前idx>4
____________________
SELECT  GNPOld FROM country WHERE Name = 'Afghanistan'
SELECT GNPOld FROM country where Name  =  'Afghanistan'
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx1
____________________
SELECT  Name FROM singer WHERE Song_release_year > (SELECT AVG(Song_release_year) FROM singer)
SELECT song_name FROM singer WHERE song_release_year  >   ( SELECT avg ( song_release_year )  FROM singer ) 
连接数据库../datasets/cosql_dataset/database/concert_singer/concert_singer.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
hard pred: SELECT  Name FROM singer WHERE Song_release_year > (SELECT AVG(Song_release_year) FROM singer)
hard gold: SELECT song_name FROM singer WHERE song_release_year  >   ( SELECT avg ( song_release_year )  FROM singer ) 

当前idx2
eval_err_num:273
____________________
SELECT  AVG(Song_release_year) AS Average_Release_Year FROM singer
SELECT avg ( song_release_year )  FROM singer
连接数据库../datasets/cosql_dataset/database/concert_singer/concert_singer.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
easy pred: SELECT  AVG(Song_release_year) AS Average_Release_Year FROM singer
easy gold: SELECT avg ( song_release_year )  FROM singer

当前idx3
____________________
SELECT  Song_Name FROM singer ORDER BY Song_release_year ASC
SELECT song_name from singer order by song_release_year
连接数据库../datasets/cosql_dataset/database/concert_singer/concert_singer.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx4
____________________
SELECT  Song_Name FROM singer WHERE Age > (SELECT AVG(Age) FROM singer)
SELECT song_name FROM singer WHERE age  >   ( SELECT avg ( age )  FROM singer ) 
连接数据库../datasets/cosql_dataset/database/concert_singer/concert_singer.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx1
eval_err_num:274
____________________
SELECT  c.Name AS Conductor_Name,     o.Orchestra AS Orchestra_Name FROM      conductor c JOIN      orchestra o ON c.Conductor_ID = o.Conductor_ID
SELECT T2.Orchestra FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID   =   T2.Conductor_ID
连接数据库../datasets/cosql_dataset/database/orchestra/orchestra.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
easy pred: SELECT  c.Name AS Conductor_Name,     o.Orchestra AS Orchestra_Name FROM      conductor c JOIN      orchestra o ON c.Conductor_ID = o.Conductor_ID
easy gold: SELECT T2.Orchestra FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID   =   T2.Conductor_ID

当前idx2
____________________
SELECT  Name FROM conductor
SELECT Name FROM conductor
连接数据库../datasets/cosql_dataset/database/orchestra/orchestra.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx3
____________________
SELECT  Age FROM conductor WHERE Name = 'Colin Davis'
SELECT Age FROM conductor WHERE Name  =  "Colin Davis"
连接数据库../datasets/cosql_dataset/database/orchestra/orchestra.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx1
____________________
SELECT  COUNT(*) FROM Students
SELECT count ( * )  FROM Students
连接数据库../datasets/cosql_dataset/database/student_transcripts_tracking/student_transcripts_tracking.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT  first_name FROM Students WHERE student_id = 3
SELECT first_name FROM Students where student_id = 3
连接数据库../datasets/cosql_dataset/database/student_transcripts_tracking/student_transcripts_tracking.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx3
____________________
SELECT  email_address FROM Students WHERE student_id = 2
SELECT email_address FROM Students where student_id = 2
连接数据库../datasets/cosql_dataset/database/student_transcripts_tracking/student_transcripts_tracking.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx4
____________________
SELECT  COUNT(*) FROM Student_Enrolment
SELECT count ( * )  FROM Student_Enrolment
连接数据库../datasets/cosql_dataset/database/student_transcripts_tracking/student_transcripts_tracking.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx1
eval_err_num:275
____________________
SELECT  DISTINCT T.Template_ID, T.Template_Details FROM Templates T JOIN Documents D ON T.Template_ID = D.Template_ID
SELECT * FROM Templates AS T1 JOIN Documents AS T2 ON T1.Template_ID   =   T2.template_ID
连接数据库../datasets/cosql_dataset/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
easy pred: SELECT  DISTINCT T.Template_ID, T.Template_Details FROM Templates T JOIN Documents D ON T.Template_ID = D.Template_ID
easy gold: SELECT * FROM Templates AS T1 JOIN Documents AS T2 ON T1.Template_ID   =   T2.template_ID

当前idx2
eval_err_num:276
____________________
SELECT  DISTINCT TT.Template_Type_Description FROM Templates T JOIN Documents D ON T.Template_ID = D.Template_ID JOIN Ref_Template_Types TT ON T.Template_Type_Code = TT.Template_Type_Code
SELECT T1.template_type_description FROM Ref_template_types AS T1 JOIN Templates AS T2 ON T1.template_type_code  =  T2.template_type_code JOIN Documents AS T3 ON T2.Template_ID  =  T3.template_ID
连接数据库../datasets/cosql_dataset/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT  DISTINCT TT.Template_Type_Description FROM Templates T JOIN Documents D ON T.Template_ID = D.Template_ID JOIN Ref_Template_Types TT ON T.Template_Type_Code = TT.Template_Type_Code
medium gold: SELECT T1.template_type_description FROM Ref_template_types AS T1 JOIN Templates AS T2 ON T1.template_type_code  =  T2.template_type_code JOIN Documents AS T3 ON T2.Template_ID  =  T3.template_ID

当前idx3
eval_err_num:277
____________________
SELECT  DISTINCT TT.Template_Type_Description FROM Templates T JOIN Documents D ON T.Template_ID = D.Template_ID JOIN Ref_Template_Types TT ON T.Template_Type_Code = TT.Template_Type_Code
SELECT DISTINCT T1.template_type_description FROM Ref_template_types AS T1 JOIN Templates AS T2 ON T1.template_type_code  =  T2.template_type_code JOIN Documents AS T3 ON T2.Template_ID  =  T3.template_ID
连接数据库../datasets/cosql_dataset/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT  DISTINCT TT.Template_Type_Description FROM Templates T JOIN Documents D ON T.Template_ID = D.Template_ID JOIN Ref_Template_Types TT ON T.Template_Type_Code = TT.Template_Type_Code
medium gold: SELECT DISTINCT T1.template_type_description FROM Ref_template_types AS T1 JOIN Templates AS T2 ON T1.template_type_code  =  T2.template_type_code JOIN Documents AS T3 ON T2.Template_ID  =  T3.template_ID

当前idx1
____________________
SELECT  Population FROM country WHERE Name = 'Russian Federation'
SELECT Population FROM country ORDER BY SurfaceArea DESC LIMIT 1
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:0
medium pred: SELECT  Population FROM country WHERE Name = 'Russian Federation'
medium gold: SELECT Population FROM country ORDER BY SurfaceArea DESC LIMIT 1

当前idx2
____________________
SELECT  HeadOfState FROM country WHERE Name = 'Russian Federation'
SELECT HeadOfState FROM country ORDER BY SurfaceArea DESC LIMIT 1
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:0
medium pred: SELECT  HeadOfState FROM country WHERE Name = 'Russian Federation'
medium gold: SELECT HeadOfState FROM country ORDER BY SurfaceArea DESC LIMIT 1

当前idx3
____________________
SELECT  Continent FROM country WHERE Name = 'Russian Federation'
SELECT Continent FROM country ORDER BY SurfaceArea DESC LIMIT 1
连接数据库../datasets/cosql_dataset/database/world_1/world_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:0
medium pred: SELECT  Continent FROM country WHERE Name = 'Russian Federation'
medium gold: SELECT Continent FROM country ORDER BY SurfaceArea DESC LIMIT 1

当前idx1
eval_err_num:278
____________________
SELECT  p.Name FROM poker_player pp JOIN people p ON pp.People_ID = p.People_ID WHERE pp.Earnings > 300000
SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID   =   T2.People_ID WHERE T2.Earnings  >  300000
连接数据库../datasets/cosql_dataset/database/poker_player/poker_player.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT  p.Name FROM poker_player pp JOIN people p ON pp.People_ID = p.People_ID WHERE pp.Earnings > 300000
medium gold: SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID   =   T2.People_ID WHERE T2.Earnings  >  300000

当前idx2
____________________
SELECT  COUNT(*) FROM poker_player
SELECT count ( Poker_Player_ID )  from poker_player
连接数据库../datasets/cosql_dataset/database/poker_player/poker_player.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
easy pred: SELECT  COUNT(*) FROM poker_player
easy gold: SELECT count ( Poker_Player_ID )  from poker_player

当前idx1
eval_err_num:279
____________________
SELECT  COUNT(DISTINCT s.student_id) AS NumberOfStudents FROM Students s JOIN Addresses a ON s.current_address_id = a.address_id WHERE a.state_province_county = 'North Carolina'
SELECT count ( * )  FROM Students AS T1 JOIN Addresses AS T2 ON T1.current_address_id   =   T2.address_id WHERE T2.state_province_county   =   'NorthCarolina'
连接数据库../datasets/cosql_dataset/database/student_transcripts_tracking/student_transcripts_tracking.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT  COUNT(DISTINCT s.student_id) AS NumberOfStudents FROM Students s JOIN Addresses a ON s.current_address_id = a.address_id WHERE a.state_province_county = 'North Carolina'
medium gold: SELECT count ( * )  FROM Students AS T1 JOIN Addresses AS T2 ON T1.current_address_id   =   T2.address_id WHERE T2.state_province_county   =   'NorthCarolina'

当前idx2
eval_err_num:280
____________________
SELECT  s.first_name, s.last_name FROM Students s JOIN Addresses a ON s.current_address_id = a.address_id WHERE a.state_province_county = 'North Carolina'
SELECT T1.first_name,T1.last_name FROM Students AS T1 JOIN Addresses AS T2 ON T1.current_address_id   =   T2.address_id WHERE T2.state_province_county   =   'NorthCarolina'
连接数据库../datasets/cosql_dataset/database/student_transcripts_tracking/student_transcripts_tracking.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
medium pred: SELECT  s.first_name, s.last_name FROM Students s JOIN Addresses a ON s.current_address_id = a.address_id WHERE a.state_province_county = 'North Carolina'
medium gold: SELECT T1.first_name,T1.last_name FROM Students AS T1 JOIN Addresses AS T2 ON T1.current_address_id   =   T2.address_id WHERE T2.state_province_county   =   'NorthCarolina'

当前idx3
eval_err_num:281
____________________
SELECT  s.first_name, s.last_name FROM Students s JOIN Addresses a ON s.current_address_id = a.address_id LEFT JOIN Student_Enrolment se ON s.student_id = se.student_id WHERE a.state_province_county = 'North Carolina' AND se.degree_program_id IS NULL
SELECT T1.first_name, T1.last_name FROM Students AS T1 JOIN Addresses AS T2 ON T1.current_address_id   =   T2.address_id WHERE T2.state_province_county   =   'NorthCarolina' EXCEPT SELECT T3.first_name, T3.last_name FROM Students AS T3 JOIN Student_Enrolment AS T4 ON T3.student_id   =   T4.student_id
连接数据库../datasets/cosql_dataset/database/student_transcripts_tracking/student_transcripts_tracking.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
extra pred: SELECT  s.first_name, s.last_name FROM Students s JOIN Addresses a ON s.current_address_id = a.address_id LEFT JOIN Student_Enrolment se ON s.student_id = se.student_id WHERE a.state_province_county = 'North Carolina' AND se.degree_program_id IS NULL
extra gold: SELECT T1.first_name, T1.last_name FROM Students AS T1 JOIN Addresses AS T2 ON T1.current_address_id   =   T2.address_id WHERE T2.state_province_county   =   'NorthCarolina' EXCEPT SELECT T3.first_name, T3.last_name FROM Students AS T3 JOIN Student_Enrolment AS T4 ON T3.student_id   =   T4.student_id

当前idx1
____________________
SELECT  area_code FROM AREA_CODE_STATE
select area_code from AREA_CODE_STATE
连接数据库../datasets/cosql_dataset/database/voter_1/voter_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
eval_err_num:282
____________________
SELECT  DISTINCT V.phone_number / 10000000 AS area_code FROM VOTES V JOIN CONTESTANTS C ON V.contestant_number = C.contestant_number WHERE C.contestant_name = 'Tabatha Gehling'
SELECT T3.area_code FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number JOIN area_code_state AS T3 ON T2.state  =  T3.state WHERE T1.contestant_name  =  'Tabatha Gehling'
连接数据库../datasets/cosql_dataset/database/voter_1/voter_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
hard pred: SELECT  DISTINCT V.phone_number / 10000000 AS area_code FROM VOTES V JOIN CONTESTANTS C ON V.contestant_number = C.contestant_number WHERE C.contestant_name = 'Tabatha Gehling'
hard gold: SELECT T3.area_code FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number JOIN area_code_state AS T3 ON T2.state  =  T3.state WHERE T1.contestant_name  =  'Tabatha Gehling'

当前idx3
eval_err_num:283
____________________
SELECT  DISTINCT V.phone_number / 10000000 AS area_code FROM VOTES V JOIN CONTESTANTS C ON V.contestant_number = C.contestant_number WHERE C.contestant_name = 'Kelly Clauss'
SELECT T3.area_code FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number JOIN area_code_state AS T3 ON T2.state  =  T3.state WHERE T1.contestant_name  =  'Kelly Clauss'
连接数据库../datasets/cosql_dataset/database/voter_1/voter_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
hard pred: SELECT  DISTINCT V.phone_number / 10000000 AS area_code FROM VOTES V JOIN CONTESTANTS C ON V.contestant_number = C.contestant_number WHERE C.contestant_name = 'Kelly Clauss'
hard gold: SELECT T3.area_code FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number JOIN area_code_state AS T3 ON T2.state  =  T3.state WHERE T1.contestant_name  =  'Kelly Clauss'

当前idx4
eval_err_num:284
____________________
SELECT  DISTINCT V1.area_code FROM (     SELECT phone_number / 10000000 AS area_code     FROM VOTES V     JOIN CONTESTANTS C ON V.contestant_number = C.contestant_number     WHERE C.contestant_name = 'Kelly Clauss' ) V1 JOIN (     SELECT phone_number / 10000000 AS area_code     FROM VOTES V     JOIN CONTESTANTS C ON V.contestant_number = C.contestant_number     WHERE C.contestant_name = 'Tabatha Gehling' ) V2 ON V1.area_code = V2.area_code
SELECT T3.area_code FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number JOIN area_code_state AS T3 ON T2.state  =  T3.state WHERE T1.contestant_name  =  'Tabatha Gehling' INTERSECT SELECT T3.area_code FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number JOIN area_code_state AS T3 ON T2.state  =  T3.state WHERE T1.contestant_name  =  'Kelly Clauss'
连接数据库../datasets/cosql_dataset/database/voter_1/voter_1.sqlite
执行第一个查询
执行第二个查询
eval_exec:False
exact_score:0
extra pred: SELECT  DISTINCT V1.area_code FROM (     SELECT phone_number / 10000000 AS area_code     FROM VOTES V     JOIN CONTESTANTS C ON V.contestant_number = C.contestant_number     WHERE C.contestant_name = 'Kelly Clauss' ) V1 JOIN (     SELECT phone_number / 10000000 AS area_code     FROM VOTES V     JOIN CONTESTANTS C ON V.contestant_number = C.contestant_number     WHERE C.contestant_name = 'Tabatha Gehling' ) V2 ON V1.area_code = V2.area_code
52/176 [00:04<00:00, 41.48it/s] 91%|█████████▏| 161/176 [00:04<00:00, 49.29it/s] 97%|█████████▋| 171/176 [00:04<00:00, 58.44it/s]100%|██████████| 176/176 [00:04<00:00, 35.87it/s]
extra gold: SELECT T3.area_code FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number JOIN area_code_state AS T3 ON T2.state  =  T3.state WHERE T1.contestant_name  =  'Tabatha Gehling' INTERSECT SELECT T3.area_code FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number JOIN area_code_state AS T3 ON T2.state  =  T3.state WHERE T1.contestant_name  =  'Kelly Clauss'

当前idx1
____________________
SELECT  COUNT(*) FROM shop
SELECT count ( * )  FROM shop
连接数据库../datasets/cosql_dataset/database/employee_hire_evaluation/employee_hire_evaluation.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
____________________
SELECT  Name FROM shop
SELECT name FROM shop
连接数据库../datasets/cosql_dataset/database/employee_hire_evaluation/employee_hire_evaluation.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx3
____________________
SELECT  Location FROM shop WHERE Name = 'FC Haka'
SELECT location FROM shop where name  =  "FC Haka"
连接数据库../datasets/cosql_dataset/database/employee_hire_evaluation/employee_hire_evaluation.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx4
____________________
SELECT  Number_products FROM shop WHERE Name = 'HJK'
SELECT Number_products FROM shop where name  =  "HJK"
连接数据库../datasets/cosql_dataset/database/employee_hire_evaluation/employee_hire_evaluation.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx1
____________________
SELECT  department_id, department_name FROM Departments
select department_id,department_name from Departments
连接数据库../datasets/cosql_dataset/database/student_transcripts_tracking/student_transcripts_tracking.sqlite
执行第一个查询
执行第二个查询
eval_exec:True
exact_score:True
当前idx2
eval_err_num:285
____________________
To provide you with the degree summary names associated with a specific department, I would need to know the department ID or department name you are interested in. Could you please provide that information?
select T2.degree_summary_name from Departments as T1 JOIN Degree_Programs as T2 on T1.department_id  =  T2.department_id where T1.department_name  =  'statistics'
连接数据库../datasets/cosql_dataset/database/student_transcripts_tracking/student_transcripts_tracking.sqlite
执行第一个查询
执行出错: near "To": syntax error
eval_exec:False
exact_score:0
medium pred: To provide you with the degree summary names associated with a specific department, I would need to know the department ID or department name you are interested in. Could you please provide that information?
medium gold: select T2.degree_summary_name from Departments as T1 JOIN Degree_Programs as T2 on T1.department_id  =  T2.department_id where T1.department_name  =  'statistics'

138
250
67
194
14
94
1
61
220
599
17
176
                     easy                 medium               hard                 extra                all                  joint_all           
count                250                  194                  94                   61                   599                  176                 
=====================   EXECUTION ACCURACY     =====================
execution            0.552                0.345                0.149                0.016                0.367                0.097               

====================== EXACT MATCHING ACCURACY =====================
exact match          0.600                0.232                0.064                0.000                0.336                0.108               


                     turn 1               turn 2               turn 3               turn 4               turn >4             
count                176                  170                  148                  69                   36                  
=====================   TRUN EXECUTION ACCURACY     =====================
execution            0.358                0.347                0.385                0.391                0.389               

====================== TRUN EXACT MATCHING ACCURACY =====================
exact match          0.364                0.329                0.311                0.362                0.278               
符合条件对话总数：176
